import { jsx as a, jsxs as x, Fragment as te } from "react/jsx-runtime";
import * as h from "react";
import ne, { useRef as Ct, useEffect as ze, forwardRef as ah, useImperativeHandle as rh, useMemo as nt, useState as D, Fragment as Ea, useReducer as VI, useCallback as bn, createContext as Wx, useContext as Xx, useId as Fu, Component as KI, Children as $u, isValidElement as Es, lazy as Be, memo as ih, cloneElement as Sl, createElement as HI, Suspense as zI } from "react";
import { useTranslation as H, initReactI18next as qI, Trans as as } from "react-i18next";
import * as sh from "react-dom";
import { generatePath as Jo, useMatch as Do, useParams as na, Link as Ae, useLocation as ds, matchPath as Ud, useHref as oh, useNavigate as Xe, NavLink as GI, useMatches as WI, Outlet as XI, Form as YI } from "react-router-dom";
function JI(e, t) {
  for (var n = 0; n < t.length; n++) {
    const r = t[n];
    if (typeof r != "string" && !Array.isArray(r)) {
      for (const i in r)
        if (i !== "default" && !(i in e)) {
          const s = Object.getOwnPropertyDescriptor(r, i);
          s && Object.defineProperty(e, i, s.get ? s : {
            enumerable: !0,
            get: () => r[i]
          });
        }
    }
  }
  return Object.freeze(Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }));
}
function ZI(e) {
  var t = [];
  if (e.length === 0)
    return "";
  if (typeof e[0] != "string")
    throw new TypeError("Url must be a string. Received " + e[0]);
  if (e[0].match(/^[^/:]+:\/*$/) && e.length > 1) {
    var n = e.shift();
    e[0] = n + e[0];
  }
  e[0].match(/^file:\/\/\//) ? e[0] = e[0].replace(/^([^/:]+):\/*/, "$1:///") : e[0] = e[0].replace(/^([^/:]+):\/*/, "$1://");
  for (var r = 0; r < e.length; r++) {
    var i = e[r];
    if (typeof i != "string")
      throw new TypeError("Url must be a string. Received " + i);
    i !== "" && (r > 0 && (i = i.replace(/^[\/]+/, "")), r < e.length - 1 ? i = i.replace(/[\/]+$/, "") : i = i.replace(/[\/]+$/, "/"), t.push(i));
  }
  var s = t.join("/");
  s = s.replace(/\/(\?|&|#[^!])/g, "$1");
  var o = s.split("?");
  return s = o.shift() + (o.length > 0 ? "?" : "") + o.join("&"), s;
}
function QI() {
  var e;
  return typeof arguments[0] == "object" ? e = arguments[0] : e = [].slice.call(arguments), ZI(e);
}
function Yx(e) {
  return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(t) {
    return /%[0-9A-Fa-f]/.test(t) || (t = encodeURI(t).replace(/%5B/g, "[").replace(/%5D/g, "]")), t;
  }).join("");
}
function Co(e) {
  return encodeURIComponent(e).replace(/[!'()*]/g, function(t) {
    return "%" + t.charCodeAt(0).toString(16).toUpperCase();
  });
}
function wl(e, t, n) {
  return t = e === "+" || e === "#" ? Yx(t) : Co(t), n ? Co(n) + "=" + t : t;
}
function lo(e) {
  return e != null;
}
function Fp(e) {
  return e === ";" || e === "&" || e === "?";
}
function eE(e, t, n, r) {
  var i = e[n], s = [];
  if (lo(i) && i !== "")
    if (typeof i == "string" || typeof i == "number" || typeof i == "boolean")
      i = i.toString(), r && r !== "*" && (i = i.substring(0, parseInt(r, 10))), s.push(wl(t, i, Fp(t) ? n : null));
    else if (r === "*")
      Array.isArray(i) ? i.filter(lo).forEach(function(l) {
        s.push(wl(t, l, Fp(t) ? n : null));
      }) : Object.keys(i).forEach(function(l) {
        lo(i[l]) && s.push(wl(t, i[l], l));
      });
    else {
      var o = [];
      Array.isArray(i) ? i.filter(lo).forEach(function(l) {
        o.push(wl(t, l));
      }) : Object.keys(i).forEach(function(l) {
        lo(i[l]) && (o.push(Co(l)), o.push(wl(t, i[l].toString())));
      }), Fp(t) ? s.push(Co(n) + "=" + o.join(",")) : o.length !== 0 && s.push(o.join(","));
    }
  else
    t === ";" ? lo(i) && s.push(Co(n)) : i === "" && (t === "&" || t === "?") ? s.push(Co(n) + "=") : i === "" && s.push("");
  return s;
}
function tE(e) {
  var t = ["+", "#", ".", "/", ";", "?", "&"];
  return {
    expand: function(n) {
      return e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function(r, i, s) {
        if (i) {
          var o = null, l = [];
          if (t.indexOf(i.charAt(0)) !== -1 && (o = i.charAt(0), i = i.substr(1)), i.split(/,/g).forEach(function(d) {
            var u = /([^:\*]*)(?::(\d+)|(\*))?/.exec(d);
            l.push.apply(l, eE(n, o, u[1], u[2] || u[3]));
          }), o && o !== "+") {
            var c = ",";
            return o === "?" ? c = "&" : o !== "#" && (c = o), (l.length !== 0 ? o : "") + l.join(c);
          } else
            return l.join(",");
        } else
          return Yx(s);
      });
    }
  };
}
const nE = ["error", "errorMessage"];
class Zo extends Error {
  response;
  responseData;
  constructor(t, n) {
    super(t), this.response = n.response, this.responseData = n.responseData;
  }
}
async function Ai(e, t) {
  const n = await fetch(e, t);
  if (!n.ok) {
    const r = await Jx(n), i = aE(r);
    throw new Zo(i, {
      response: n,
      responseData: r
    });
  }
  return n;
}
async function Jx(e) {
  if (!e.body)
    return "";
  const t = await e.text();
  try {
    return JSON.parse(t);
  } catch {
    return t;
  }
}
function aE(e) {
  if (typeof e != "object" || e === null)
    return "Unable to determine error message.";
  for (const t of nE) {
    const n = e[t];
    if (typeof n == "string")
      return n;
  }
  return "Network response was not OK.";
}
function Zx(e) {
  const t = new URLSearchParams();
  for (const [n, r] of Object.entries(e))
    r != null && (typeof r == "string" && r.length === 0 || Array.isArray(r) && r.length === 0 || (Array.isArray(r) ? r.forEach((i) => t.append(n, i.toString())) : t.append(n, r.toString())));
  return t.toString();
}
const rE = "/", cd = (e, t) => Object.fromEntries(Object.entries(e).filter(([n]) => t.includes(n))), iE = (e, t) => Object.fromEntries(Object.entries(e).filter(([n]) => !t.includes(n)));
class sE {
  #e;
  #n;
  #t;
  #r;
  constructor({ client: t, path: n = "/", getUrlParams: r = () => ({}), getBaseUrl: i = () => t.baseUrl }) {
    this.#e = t, this.#t = r, this.#r = i, this.#n = n;
  }
  request({ method: t, path: n = "", urlParamKeys: r = [], queryParamKeys: i = [], catchNotFound: s = !1, keyTransform: o, payloadKey: l, returnResourceIdInLocationHeader: c, ignoredKeys: d, headers: u }) {
    return async (p = {}, m) => {
      const f = this.#t?.() ?? {}, g = i.length > 0 ? cd(p, i) : void 0, b = [...Object.keys(f), ...r], v = { ...f, ...cd(p, b) };
      if (!(p instanceof FormData)) {
        const y = d ? [...b, ...i].filter((C) => !d.includes(C)) : [...b, ...i];
        p = iE(p, y);
      }
      return o && (this.#a(p, o), this.#a(g, o)), this.#i({
        method: t,
        path: n,
        payload: p,
        urlParams: v,
        queryParams: g,
        // catchNotFound precedence: global > local > default
        catchNotFound: s,
        ...this.#e.getGlobalRequestArgOptions() ?? m ?? {},
        payloadKey: l,
        returnResourceIdInLocationHeader: c,
        headers: u
      });
    };
  }
  updateRequest({ method: t, path: n = "", urlParamKeys: r = [], queryParamKeys: i = [], catchNotFound: s = !1, keyTransform: o, payloadKey: l, returnResourceIdInLocationHeader: c, headers: d }) {
    return async (u = {}, p = {}) => {
      const m = this.#t?.() ?? {}, f = i ? cd(u, i) : void 0, g = [...Object.keys(m), ...r], b = {
        ...m,
        ...cd(u, g)
      };
      return o && this.#a(f, o), this.#i({
        method: t,
        path: n,
        payload: p,
        urlParams: b,
        queryParams: f,
        catchNotFound: s,
        payloadKey: l,
        returnResourceIdInLocationHeader: c,
        headers: d
      });
    };
  }
  async #i({ method: t, path: n, payload: r, urlParams: i, queryParams: s, catchNotFound: o, payloadKey: l, returnResourceIdInLocationHeader: c, headers: d }) {
    const u = QI(this.#n, n), m = tE(u).expand(i), f = new URL(`${this.#r?.() ?? ""}${m}`), g = { ...this.#e.getRequestOptions() }, b = new Headers([
      ...new Headers(g.headers).entries(),
      ["authorization", `Bearer ${await this.#e.getAccessToken()}`],
      ["accept", "application/json, text/plain, */*"],
      ...new Headers(d).entries()
    ]), v = {};
    t === "GET" ? Object.assign(v, r) : b.get("content-type") === "text/plain" || r instanceof FormData ? g.body = r : g.body = l && typeof r[l] == "string" ? r[l] : JSON.stringify(l ? r[l] : r), !b.has("content-type") && !(r instanceof FormData) && b.set("content-type", "application/json"), s && Object.assign(v, s), f.search = Zx(v);
    try {
      const y = await Ai(f, {
        ...g,
        headers: b,
        method: t
      });
      if (c) {
        const C = y.headers.get("location");
        if (typeof C != "string")
          throw new Error(`location header is not found in request: ${y.url}`);
        const S = C.split(rE).pop();
        if (!S)
          throw new Error(`resourceId is not found in Location header from request: ${y.url}`);
        const { field: P } = c;
        return { [P]: S };
      }
      return Object.entries(d || []).find(([C, S]) => C.toLowerCase() === "accept" && S === "application/octet-stream") ? await y.arrayBuffer() : await Jx(y);
    } catch (y) {
      if (y instanceof Zo && y.response.status === 404 && o)
        return null;
      throw y;
    }
  }
  #a(t, n) {
    t && Object.keys(n).some((r) => {
      if (typeof t[r] > "u")
        return !1;
      const i = n[r];
      t[i] = t[r], delete t[r];
    });
  }
}
class la {
  #e;
  constructor(t, n = {}) {
    this.#e = new sE({
      client: t,
      ...n
    });
  }
  makeRequest = (t) => this.#e.request(t);
  // update request will take three types: query, payload and response
  makeUpdateRequest = (t) => this.#e.updateRequest(t);
}
class oE extends la {
  findOne = this.makeRequest({
    method: "GET",
    path: "/users/{id}",
    urlParamKeys: ["id"],
    catchNotFound: !0
  });
  del = this.makeRequest({
    method: "DELETE",
    path: "/users/{id}",
    urlParamKeys: ["id"]
  });
  delAll = this.makeRequest({
    method: "DELETE",
    path: "/users"
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/attack-detection/brute-force",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
}
class lE extends la {
  /**
   * Authentication Management
   * https://www.keycloak.org/docs-api/8.0/rest-api/index.html#_authentication_management_resource
   */
  //   Register a new required action
  registerRequiredAction = this.makeRequest({
    method: "POST",
    path: "/register-required-action"
  });
  // Get required actions. Returns a list of required actions.
  getRequiredActions = this.makeRequest({
    method: "GET",
    path: "/required-actions"
  });
  // Get required action for alias
  getRequiredActionForAlias = this.makeRequest({
    method: "GET",
    path: "/required-actions/{alias}",
    urlParamKeys: ["alias"],
    catchNotFound: !0
  });
  getClientAuthenticatorProviders = this.makeRequest({
    method: "GET",
    path: "/client-authenticator-providers"
  });
  getAuthenticatorProviders = this.makeRequest({
    method: "GET",
    path: "/authenticator-providers"
  });
  getFormActionProviders = this.makeRequest({
    method: "GET",
    path: "/form-action-providers"
  });
  // Update required action
  updateRequiredAction = this.makeUpdateRequest({
    method: "PUT",
    path: "/required-actions/{alias}",
    urlParamKeys: ["alias"]
  });
  // Delete required action
  deleteRequiredAction = this.makeRequest({
    method: "DELETE",
    path: "/required-actions/{alias}",
    urlParamKeys: ["alias"]
  });
  // Lower required action’s priority
  lowerRequiredActionPriority = this.makeRequest({
    method: "POST",
    path: "/required-actions/{alias}/lower-priority",
    urlParamKeys: ["alias"]
  });
  // Raise required action’s priority
  raiseRequiredActionPriority = this.makeRequest({
    method: "POST",
    path: "/required-actions/{alias}/raise-priority",
    urlParamKeys: ["alias"]
  });
  // Get unregistered required actions Returns a list of unregistered required actions.
  getUnregisteredRequiredActions = this.makeRequest({
    method: "GET",
    path: "/unregistered-required-actions"
  });
  getFlows = this.makeRequest({
    method: "GET",
    path: "/flows"
  });
  getFlow = this.makeRequest({
    method: "GET",
    path: "/flows/{flowId}",
    urlParamKeys: ["flowId"]
  });
  getFormProviders = this.makeRequest({
    method: "GET",
    path: "/form-providers"
  });
  createFlow = this.makeRequest({
    method: "POST",
    path: "/flows",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  copyFlow = this.makeRequest({
    method: "POST",
    path: "/flows/{flow}/copy",
    urlParamKeys: ["flow"]
  });
  deleteFlow = this.makeRequest({
    method: "DELETE",
    path: "/flows/{flowId}",
    urlParamKeys: ["flowId"]
  });
  updateFlow = this.makeUpdateRequest({
    method: "PUT",
    path: "/flows/{flowId}",
    urlParamKeys: ["flowId"]
  });
  getExecutions = this.makeRequest({
    method: "GET",
    path: "/flows/{flow}/executions",
    urlParamKeys: ["flow"]
  });
  addExecution = this.makeUpdateRequest({
    method: "POST",
    path: "/flows/{flow}/executions",
    urlParamKeys: ["flow"]
  });
  addExecutionToFlow = this.makeRequest({
    method: "POST",
    path: "/flows/{flow}/executions/execution",
    urlParamKeys: ["flow"],
    returnResourceIdInLocationHeader: { field: "id" }
  });
  addFlowToFlow = this.makeRequest({
    method: "POST",
    path: "/flows/{flow}/executions/flow",
    urlParamKeys: ["flow"],
    returnResourceIdInLocationHeader: { field: "id" }
  });
  updateExecution = this.makeUpdateRequest({
    method: "PUT",
    path: "/flows/{flow}/executions",
    urlParamKeys: ["flow"]
  });
  delExecution = this.makeRequest({
    method: "DELETE",
    path: "/executions/{id}",
    urlParamKeys: ["id"]
  });
  lowerPriorityExecution = this.makeRequest({
    method: "POST",
    path: "/executions/{id}/lower-priority",
    urlParamKeys: ["id"]
  });
  raisePriorityExecution = this.makeRequest({
    method: "POST",
    path: "/executions/{id}/raise-priority",
    urlParamKeys: ["id"]
  });
  // Get required actions provider's configuration description
  getRequiredActionConfigDescription = this.makeRequest({
    method: "GET",
    path: "/required-actions/{alias}/config-description",
    urlParamKeys: ["alias"]
  });
  // Get the configuration of the RequiredAction provider in the current Realm.
  getRequiredActionConfig = this.makeRequest({
    method: "GET",
    path: "/required-actions/{alias}/config",
    urlParamKeys: ["alias"]
  });
  // Remove the configuration from the RequiredAction provider in the current Realm.
  removeRequiredActionConfig = this.makeRequest({
    method: "DELETE",
    path: "/required-actions/{alias}/config",
    urlParamKeys: ["alias"]
  });
  // Update the configuration from the RequiredAction provider in the current Realm.
  updateRequiredActionConfig = this.makeUpdateRequest({
    method: "PUT",
    path: "/required-actions/{alias}/config",
    urlParamKeys: ["alias"]
  });
  getConfigDescription = this.makeRequest({
    method: "GET",
    path: "config-description/{providerId}",
    urlParamKeys: ["providerId"]
  });
  createConfig = this.makeRequest({
    method: "POST",
    path: "/executions/{id}/config",
    urlParamKeys: ["id"],
    returnResourceIdInLocationHeader: { field: "id" }
  });
  updateConfig = this.makeRequest({
    method: "PUT",
    path: "/config/{id}",
    urlParamKeys: ["id"]
  });
  getConfig = this.makeRequest({
    method: "GET",
    path: "/config/{id}",
    urlParamKeys: ["id"]
  });
  delConfig = this.makeRequest({
    method: "DELETE",
    path: "/config/{id}",
    urlParamKeys: ["id"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/authentication",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
}
class cE extends la {
  clearUserCache = this.makeRequest({
    method: "POST",
    path: "/clear-user-cache"
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
}
class dE extends la {
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/client-policies",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
  /* Client Profiles */
  listProfiles = this.makeRequest({
    method: "GET",
    path: "/profiles",
    queryParamKeys: ["include-global-profiles"],
    keyTransform: {
      includeGlobalProfiles: "include-global-profiles"
    }
  });
  createProfiles = this.makeRequest({
    method: "PUT",
    path: "/profiles"
  });
  /* Client Policies */
  listPolicies = this.makeRequest({
    method: "GET",
    path: "/policies",
    queryParamKeys: ["include-global-policies"],
    keyTransform: {
      includeGlobalPolicies: "include-global-policies"
    }
  });
  updatePolicy = this.makeRequest({
    method: "PUT",
    path: "/policies"
  });
}
class uE extends la {
  find = this.makeRequest({
    method: "GET"
  });
  create = this.makeRequest({
    method: "POST",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  /**
   * Single client
   */
  findOne = this.makeRequest({
    method: "GET",
    path: "/{id}",
    urlParamKeys: ["id"],
    catchNotFound: !0
  });
  update = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  del = this.makeRequest({
    method: "DELETE",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  /**
   * Client roles
   */
  createRole = this.makeRequest({
    method: "POST",
    path: "/{id}/roles",
    urlParamKeys: ["id"],
    returnResourceIdInLocationHeader: { field: "roleName" }
  });
  listRoles = this.makeRequest({
    method: "GET",
    path: "/{id}/roles",
    urlParamKeys: ["id"]
  });
  findRole = this.makeRequest({
    method: "GET",
    path: "/{id}/roles/{roleName}",
    urlParamKeys: ["id", "roleName"],
    catchNotFound: !0
  });
  updateRole = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/roles/{roleName}",
    urlParamKeys: ["id", "roleName"]
  });
  delRole = this.makeRequest({
    method: "DELETE",
    path: "/{id}/roles/{roleName}",
    urlParamKeys: ["id", "roleName"]
  });
  findUsersWithRole = this.makeRequest({
    method: "GET",
    path: "/{id}/roles/{roleName}/users",
    urlParamKeys: ["id", "roleName"]
  });
  /**
   * Service account user
   */
  getServiceAccountUser = this.makeRequest({
    method: "GET",
    path: "/{id}/service-account-user",
    urlParamKeys: ["id"]
  });
  /**
   * Client secret
   */
  generateNewClientSecret = this.makeRequest({
    method: "POST",
    path: "/{id}/client-secret",
    urlParamKeys: ["id"]
  });
  invalidateSecret = this.makeRequest({
    method: "DELETE",
    path: "/{id}/client-secret/rotated",
    urlParamKeys: ["id"]
  });
  generateRegistrationAccessToken = this.makeRequest({
    method: "POST",
    path: "/{id}/registration-access-token",
    urlParamKeys: ["id"]
  });
  getClientSecret = this.makeRequest({
    method: "GET",
    path: "/{id}/client-secret",
    urlParamKeys: ["id"]
  });
  /**
   * Client Scopes
   */
  listDefaultClientScopes = this.makeRequest({
    method: "GET",
    path: "/{id}/default-client-scopes",
    urlParamKeys: ["id"]
  });
  addDefaultClientScope = this.makeRequest({
    method: "PUT",
    path: "/{id}/default-client-scopes/{clientScopeId}",
    urlParamKeys: ["id", "clientScopeId"]
  });
  delDefaultClientScope = this.makeRequest({
    method: "DELETE",
    path: "/{id}/default-client-scopes/{clientScopeId}",
    urlParamKeys: ["id", "clientScopeId"]
  });
  listOptionalClientScopes = this.makeRequest({
    method: "GET",
    path: "/{id}/optional-client-scopes",
    urlParamKeys: ["id"]
  });
  addOptionalClientScope = this.makeRequest({
    method: "PUT",
    path: "/{id}/optional-client-scopes/{clientScopeId}",
    urlParamKeys: ["id", "clientScopeId"]
  });
  delOptionalClientScope = this.makeRequest({
    method: "DELETE",
    path: "/{id}/optional-client-scopes/{clientScopeId}",
    urlParamKeys: ["id", "clientScopeId"]
  });
  /**
   * Protocol Mappers
   */
  addMultipleProtocolMappers = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/protocol-mappers/add-models",
    urlParamKeys: ["id"]
  });
  addProtocolMapper = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/protocol-mappers/models",
    urlParamKeys: ["id"]
  });
  listProtocolMappers = this.makeRequest({
    method: "GET",
    path: "/{id}/protocol-mappers/models",
    urlParamKeys: ["id"]
  });
  findProtocolMapperById = this.makeRequest({
    method: "GET",
    path: "/{id}/protocol-mappers/models/{mapperId}",
    urlParamKeys: ["id", "mapperId"],
    catchNotFound: !0
  });
  findProtocolMappersByProtocol = this.makeRequest({
    method: "GET",
    path: "/{id}/protocol-mappers/protocol/{protocol}",
    urlParamKeys: ["id", "protocol"],
    catchNotFound: !0
  });
  updateProtocolMapper = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/protocol-mappers/models/{mapperId}",
    urlParamKeys: ["id", "mapperId"]
  });
  delProtocolMapper = this.makeRequest({
    method: "DELETE",
    path: "/{id}/protocol-mappers/models/{mapperId}",
    urlParamKeys: ["id", "mapperId"]
  });
  /**
   * Scope Mappings
   */
  listScopeMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/scope-mappings",
    urlParamKeys: ["id"]
  });
  addClientScopeMappings = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/scope-mappings/clients/{client}",
    urlParamKeys: ["id", "client"]
  });
  listClientScopeMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/scope-mappings/clients/{client}",
    urlParamKeys: ["id", "client"]
  });
  listAvailableClientScopeMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/scope-mappings/clients/{client}/available",
    urlParamKeys: ["id", "client"]
  });
  listCompositeClientScopeMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/scope-mappings/clients/{client}/composite",
    urlParamKeys: ["id", "client"]
  });
  delClientScopeMappings = this.makeUpdateRequest({
    method: "DELETE",
    path: "/{id}/scope-mappings/clients/{client}",
    urlParamKeys: ["id", "client"]
  });
  evaluatePermission = this.makeRequest({
    method: "GET",
    path: "/{id}/evaluate-scopes/scope-mappings/{roleContainer}/{type}",
    urlParamKeys: ["id", "roleContainer", "type"],
    queryParamKeys: ["scope"]
  });
  evaluateListProtocolMapper = this.makeRequest({
    method: "GET",
    path: "/{id}/evaluate-scopes/protocol-mappers",
    urlParamKeys: ["id"],
    queryParamKeys: ["scope"]
  });
  evaluateGenerateAccessToken = this.makeRequest({
    method: "GET",
    path: "/{id}/evaluate-scopes/generate-example-access-token",
    urlParamKeys: ["id"],
    queryParamKeys: ["scope", "userId"]
  });
  evaluateGenerateUserInfo = this.makeRequest({
    method: "GET",
    path: "/{id}/evaluate-scopes/generate-example-userinfo",
    urlParamKeys: ["id"],
    queryParamKeys: ["scope", "userId"]
  });
  evaluateGenerateIdToken = this.makeRequest({
    method: "GET",
    path: "/{id}/evaluate-scopes/generate-example-id-token",
    urlParamKeys: ["id"],
    queryParamKeys: ["scope", "userId"]
  });
  addRealmScopeMappings = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/scope-mappings/realm",
    urlParamKeys: ["id", "client"]
  });
  listRealmScopeMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/scope-mappings/realm",
    urlParamKeys: ["id"]
  });
  listAvailableRealmScopeMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/scope-mappings/realm/available",
    urlParamKeys: ["id"]
  });
  listCompositeRealmScopeMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/scope-mappings/realm/composite",
    urlParamKeys: ["id"]
  });
  delRealmScopeMappings = this.makeUpdateRequest({
    method: "DELETE",
    path: "/{id}/scope-mappings/realm",
    urlParamKeys: ["id"]
  });
  /**
   * Sessions
   */
  listSessions = this.makeRequest({
    method: "GET",
    path: "/{id}/user-sessions",
    urlParamKeys: ["id"]
  });
  listOfflineSessions = this.makeRequest({
    method: "GET",
    path: "/{id}/offline-sessions",
    urlParamKeys: ["id"]
  });
  getSessionCount = this.makeRequest({
    method: "GET",
    path: "/{id}/session-count",
    urlParamKeys: ["id"]
  });
  /**
   * Resource
   */
  getResourceServer = this.makeRequest({
    method: "GET",
    path: "{id}/authz/resource-server",
    urlParamKeys: ["id"]
  });
  updateResourceServer = this.makeUpdateRequest({
    method: "PUT",
    path: "{id}/authz/resource-server",
    urlParamKeys: ["id"]
  });
  listResources = this.makeRequest({
    method: "GET",
    path: "{id}/authz/resource-server/resource",
    urlParamKeys: ["id"]
  });
  createResource = this.makeUpdateRequest({
    method: "POST",
    path: "{id}/authz/resource-server/resource",
    urlParamKeys: ["id"]
  });
  getResource = this.makeRequest({
    method: "GET",
    path: "{id}/authz/resource-server/resource/{resourceId}",
    urlParamKeys: ["id", "resourceId"]
  });
  updateResource = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/authz/resource-server/resource/{resourceId}",
    urlParamKeys: ["id", "resourceId"]
  });
  delResource = this.makeRequest({
    method: "DELETE",
    path: "/{id}/authz/resource-server/resource/{resourceId}",
    urlParamKeys: ["id", "resourceId"]
  });
  importResource = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/authz/resource-server/import",
    urlParamKeys: ["id"]
  });
  exportResource = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/settings",
    urlParamKeys: ["id"]
  });
  evaluateResource = this.makeUpdateRequest({
    method: "POST",
    path: "{id}/authz/resource-server/policy/evaluate",
    urlParamKeys: ["id"]
  });
  /**
   * Policy
   */
  listPolicies = this.makeRequest({
    method: "GET",
    path: "{id}/authz/resource-server/policy",
    urlParamKeys: ["id"]
  });
  findPolicyByName = this.makeRequest({
    method: "GET",
    path: "{id}/authz/resource-server/policy/search",
    urlParamKeys: ["id"]
  });
  updatePolicy = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/authz/resource-server/policy/{type}/{policyId}",
    urlParamKeys: ["id", "type", "policyId"]
  });
  createPolicy = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/authz/resource-server/policy/{type}",
    urlParamKeys: ["id", "type"]
  });
  findOnePolicy = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/policy/{type}/{policyId}",
    urlParamKeys: ["id", "type", "policyId"],
    catchNotFound: !0
  });
  listDependentPolicies = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/policy/{policyId}/dependentPolicies",
    urlParamKeys: ["id", "policyId"]
  });
  delPolicy = this.makeRequest({
    method: "DELETE",
    path: "{id}/authz/resource-server/policy/{policyId}",
    urlParamKeys: ["id", "policyId"]
  });
  listPolicyProviders = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/policy/providers",
    urlParamKeys: ["id"]
  });
  async createOrUpdatePolicy(t) {
    const n = await this.findPolicyByName({
      id: t.id,
      name: t.policyName
    });
    return n ? (await this.updatePolicy({
      id: t.id,
      policyId: n.id,
      type: t.policy.type
    }, t.policy), this.findPolicyByName({
      id: t.id,
      name: t.policyName
    })) : this.createPolicy({ id: t.id, type: t.policy.type }, t.policy);
  }
  /**
   * Scopes
   */
  listAllScopes = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/scope",
    urlParamKeys: ["id"]
  });
  listAllResourcesByScope = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/scope/{scopeId}/resources",
    urlParamKeys: ["id", "scopeId"]
  });
  listAllPermissionsByScope = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/scope/{scopeId}/permissions",
    urlParamKeys: ["id", "scopeId"]
  });
  listPermissionsByResource = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/resource/{resourceId}/permissions",
    urlParamKeys: ["id", "resourceId"]
  });
  listScopesByResource = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/resource/{resourceName}/scopes",
    urlParamKeys: ["id", "resourceName"]
  });
  createAuthorizationScope = this.makeUpdateRequest({
    method: "POST",
    path: "{id}/authz/resource-server/scope",
    urlParamKeys: ["id"]
  });
  updateAuthorizationScope = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/authz/resource-server/scope/{scopeId}",
    urlParamKeys: ["id", "scopeId"]
  });
  getAuthorizationScope = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/scope/{scopeId}",
    urlParamKeys: ["id", "scopeId"]
  });
  delAuthorizationScope = this.makeRequest({
    method: "DELETE",
    path: "/{id}/authz/resource-server/scope/{scopeId}",
    urlParamKeys: ["id", "scopeId"]
  });
  /**
   * Permissions
   */
  findPermissions = this.makeRequest({
    method: "GET",
    path: "{id}/authz/resource-server/permission",
    urlParamKeys: ["id"]
  });
  createPermission = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/authz/resource-server/permission/{type}",
    urlParamKeys: ["id", "type"]
  });
  updatePermission = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/authz/resource-server/permission/{type}/{permissionId}",
    urlParamKeys: ["id", "type", "permissionId"]
  });
  delPermission = this.makeRequest({
    method: "DELETE",
    path: "/{id}/authz/resource-server/permission/{type}/{permissionId}",
    urlParamKeys: ["id", "type", "permissionId"]
  });
  findOnePermission = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/permission/{type}/{permissionId}",
    urlParamKeys: ["id", "type", "permissionId"]
  });
  getAssociatedScopes = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/policy/{permissionId}/scopes",
    urlParamKeys: ["id", "permissionId"]
  });
  getAssociatedResources = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/policy/{permissionId}/resources",
    urlParamKeys: ["id", "permissionId"]
  });
  getAssociatedPolicies = this.makeRequest({
    method: "GET",
    path: "/{id}/authz/resource-server/policy/{permissionId}/associatedPolicies",
    urlParamKeys: ["id", "permissionId"]
  });
  getOfflineSessionCount = this.makeRequest({
    method: "GET",
    path: "/{id}/offline-session-count",
    urlParamKeys: ["id"]
  });
  getInstallationProviders = this.makeRequest({
    method: "GET",
    path: "/{id}/installation/providers/{providerId}",
    urlParamKeys: ["id", "providerId"]
  });
  pushRevocation = this.makeRequest({
    method: "POST",
    path: "/{id}/push-revocation",
    urlParamKeys: ["id"]
  });
  addClusterNode = this.makeRequest({
    method: "POST",
    path: "/{id}/nodes",
    urlParamKeys: ["id"]
  });
  deleteClusterNode = this.makeRequest({
    method: "DELETE",
    path: "/{id}/nodes/{node}",
    urlParamKeys: ["id", "node"]
  });
  testNodesAvailable = this.makeRequest({
    method: "GET",
    path: "/{id}/test-nodes-available",
    urlParamKeys: ["id"]
  });
  getKeyInfo = this.makeRequest({
    method: "GET",
    path: "/{id}/certificates/{attr}",
    urlParamKeys: ["id", "attr"]
  });
  generateKey = this.makeRequest({
    method: "POST",
    path: "/{id}/certificates/{attr}/generate",
    urlParamKeys: ["id", "attr"]
  });
  downloadKey = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/certificates/{attr}/download",
    urlParamKeys: ["id", "attr"],
    headers: {
      accept: "application/octet-stream"
    }
  });
  generateAndDownloadKey = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/certificates/{attr}/generate-and-download",
    urlParamKeys: ["id", "attr"],
    headers: {
      accept: "application/octet-stream"
    }
  });
  uploadKey = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/certificates/{attr}/upload",
    urlParamKeys: ["id", "attr"]
  });
  uploadCertificate = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/certificates/{attr}/upload-certificate",
    urlParamKeys: ["id", "attr"]
  });
  updateFineGrainPermission = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/management/permissions",
    urlParamKeys: ["id"]
  });
  listFineGrainPermissions = this.makeRequest({
    method: "GET",
    path: "/{id}/management/permissions",
    urlParamKeys: ["id"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/clients",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
  /**
   * Find single protocol mapper by name.
   */
  async findProtocolMapperByName(t) {
    return (await this.listProtocolMappers({
      id: t.id,
      ...t.realm ? { realm: t.realm } : {}
    })).find((r) => r.name === t.name);
  }
}
let pE = class extends la {
  find = this.makeRequest({
    method: "GET",
    path: "/client-scopes"
  });
  create = this.makeRequest({
    method: "POST",
    path: "/client-scopes",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  /**
   * Client-Scopes by id
   */
  findOne = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}",
    urlParamKeys: ["id"],
    catchNotFound: !0
  });
  update = this.makeUpdateRequest({
    method: "PUT",
    path: "/client-scopes/{id}",
    urlParamKeys: ["id"]
  });
  del = this.makeRequest({
    method: "DELETE",
    path: "/client-scopes/{id}",
    urlParamKeys: ["id"]
  });
  /**
   * Default Client-Scopes
   */
  listDefaultClientScopes = this.makeRequest({
    method: "GET",
    path: "/default-default-client-scopes"
  });
  addDefaultClientScope = this.makeRequest({
    method: "PUT",
    path: "/default-default-client-scopes/{id}",
    urlParamKeys: ["id"]
  });
  delDefaultClientScope = this.makeRequest({
    method: "DELETE",
    path: "/default-default-client-scopes/{id}",
    urlParamKeys: ["id"]
  });
  /**
   * Default Optional Client-Scopes
   */
  listDefaultOptionalClientScopes = this.makeRequest({
    method: "GET",
    path: "/default-optional-client-scopes"
  });
  addDefaultOptionalClientScope = this.makeRequest({
    method: "PUT",
    path: "/default-optional-client-scopes/{id}",
    urlParamKeys: ["id"]
  });
  delDefaultOptionalClientScope = this.makeRequest({
    method: "DELETE",
    path: "/default-optional-client-scopes/{id}",
    urlParamKeys: ["id"]
  });
  /**
   * Protocol Mappers
   */
  addMultipleProtocolMappers = this.makeUpdateRequest({
    method: "POST",
    path: "/client-scopes/{id}/protocol-mappers/add-models",
    urlParamKeys: ["id"]
  });
  addProtocolMapper = this.makeUpdateRequest({
    method: "POST",
    path: "/client-scopes/{id}/protocol-mappers/models",
    urlParamKeys: ["id"]
  });
  listProtocolMappers = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/protocol-mappers/models",
    urlParamKeys: ["id"]
  });
  findProtocolMapper = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/protocol-mappers/models/{mapperId}",
    urlParamKeys: ["id", "mapperId"],
    catchNotFound: !0
  });
  findProtocolMappersByProtocol = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/protocol-mappers/protocol/{protocol}",
    urlParamKeys: ["id", "protocol"],
    catchNotFound: !0
  });
  updateProtocolMapper = this.makeUpdateRequest({
    method: "PUT",
    path: "/client-scopes/{id}/protocol-mappers/models/{mapperId}",
    urlParamKeys: ["id", "mapperId"]
  });
  delProtocolMapper = this.makeRequest({
    method: "DELETE",
    path: "/client-scopes/{id}/protocol-mappers/models/{mapperId}",
    urlParamKeys: ["id", "mapperId"]
  });
  /**
   * Scope Mappings
   */
  listScopeMappings = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/scope-mappings",
    urlParamKeys: ["id"]
  });
  addClientScopeMappings = this.makeUpdateRequest({
    method: "POST",
    path: "/client-scopes/{id}/scope-mappings/clients/{client}",
    urlParamKeys: ["id", "client"]
  });
  listClientScopeMappings = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/scope-mappings/clients/{client}",
    urlParamKeys: ["id", "client"]
  });
  listAvailableClientScopeMappings = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/scope-mappings/clients/{client}/available",
    urlParamKeys: ["id", "client"]
  });
  listCompositeClientScopeMappings = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/scope-mappings/clients/{client}/composite",
    urlParamKeys: ["id", "client"]
  });
  delClientScopeMappings = this.makeUpdateRequest({
    method: "DELETE",
    path: "/client-scopes/{id}/scope-mappings/clients/{client}",
    urlParamKeys: ["id", "client"]
  });
  addRealmScopeMappings = this.makeUpdateRequest({
    method: "POST",
    path: "/client-scopes/{id}/scope-mappings/realm",
    urlParamKeys: ["id"]
  });
  listRealmScopeMappings = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/scope-mappings/realm",
    urlParamKeys: ["id"]
  });
  listAvailableRealmScopeMappings = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/scope-mappings/realm/available",
    urlParamKeys: ["id"]
  });
  listCompositeRealmScopeMappings = this.makeRequest({
    method: "GET",
    path: "/client-scopes/{id}/scope-mappings/realm/composite",
    urlParamKeys: ["id"]
  });
  delRealmScopeMappings = this.makeUpdateRequest({
    method: "DELETE",
    path: "/client-scopes/{id}/scope-mappings/realm",
    urlParamKeys: ["id"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
  /**
   * Find client scope by name.
   */
  async findOneByName(t) {
    return (await this.find({
      ...t.realm ? { realm: t.realm } : {}
    })).find((r) => r.name === t.name);
  }
  /**
   * Delete client scope by name.
   */
  async delByName(t) {
    const n = await this.findOneByName(t);
    if (!n)
      throw new Error("Scope not found.");
    await this.del({
      ...t.realm ? { realm: t.realm } : {},
      id: n.id
    });
  }
  /**
   * Find single protocol mapper by name.
   */
  async findProtocolMapperByName(t) {
    return (await this.listProtocolMappers({
      id: t.id,
      ...t.realm ? { realm: t.realm } : {}
    })).find((r) => r.name === t.name);
  }
};
class mE extends la {
  /**
   * components
   * https://www.keycloak.org/docs-api/11.0/rest-api/#_component_resource
   */
  find = this.makeRequest({
    method: "GET"
  });
  create = this.makeRequest({
    method: "POST",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  findOne = this.makeRequest({
    method: "GET",
    path: "/{id}",
    urlParamKeys: ["id"],
    catchNotFound: !0
  });
  update = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  del = this.makeRequest({
    method: "DELETE",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  listSubComponents = this.makeRequest({
    method: "GET",
    path: "/{id}/sub-component-types",
    urlParamKeys: ["id"],
    queryParamKeys: ["type"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/components",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
}
class fE extends la {
  find = this.makeRequest({
    method: "GET",
    queryParamKeys: [
      "search",
      "q",
      "exact",
      "briefRepresentation",
      "populateHierarchy",
      "first",
      "max"
    ]
  });
  create = this.makeRequest({
    method: "POST",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  updateRoot = this.makeRequest({
    method: "POST"
  });
  /**
   * Single user
   */
  findOne = this.makeRequest({
    method: "GET",
    path: "/{id}",
    urlParamKeys: ["id"],
    catchNotFound: !0
  });
  update = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  del = this.makeRequest({
    method: "DELETE",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  count = this.makeRequest({
    method: "GET",
    path: "/count"
  });
  /**
   * Creates a child group on the specified parent group. If the group already exists, then an error is returned.
   */
  createChildGroup = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/children",
    urlParamKeys: ["id"],
    returnResourceIdInLocationHeader: { field: "id" }
  });
  /**
   * Updates a child group on the specified parent group. If the group doesn’t exist, then an error is returned.
   * Can be used to move a group from one parent to another.
   */
  updateChildGroup = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/children",
    urlParamKeys: ["id"]
  });
  /**
   * Finds all subgroups on the specified parent group matching the provided parameters.
   */
  listSubGroups = this.makeRequest({
    method: "GET",
    path: "/{parentId}/children",
    urlParamKeys: ["parentId"],
    queryParamKeys: ["search", "first", "max", "briefRepresentation"],
    catchNotFound: !0
  });
  /**
   * Members
   */
  listMembers = this.makeRequest({
    method: "GET",
    path: "/{id}/members",
    urlParamKeys: ["id"],
    catchNotFound: !0
  });
  /**
   * Role mappings
   * https://www.keycloak.org/docs-api/11.0/rest-api/#_role_mapper_resource
   */
  listRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings",
    urlParamKeys: ["id"]
  });
  addRealmRoleMappings = this.makeRequest({
    method: "POST",
    path: "/{id}/role-mappings/realm",
    urlParamKeys: ["id"],
    payloadKey: "roles"
  });
  listRealmRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/realm",
    urlParamKeys: ["id"]
  });
  delRealmRoleMappings = this.makeRequest({
    method: "DELETE",
    path: "/{id}/role-mappings/realm",
    urlParamKeys: ["id"],
    payloadKey: "roles"
  });
  listAvailableRealmRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/realm/available",
    urlParamKeys: ["id"]
  });
  // Get effective realm-level role mappings This will recurse all composite roles to get the result.
  listCompositeRealmRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/realm/composite",
    urlParamKeys: ["id"]
  });
  /**
   * Client role mappings
   * https://www.keycloak.org/docs-api/11.0/rest-api/#_client_role_mappings_resource
   */
  listClientRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/clients/{clientUniqueId}",
    urlParamKeys: ["id", "clientUniqueId"]
  });
  addClientRoleMappings = this.makeRequest({
    method: "POST",
    path: "/{id}/role-mappings/clients/{clientUniqueId}",
    urlParamKeys: ["id", "clientUniqueId"],
    payloadKey: "roles"
  });
  delClientRoleMappings = this.makeRequest({
    method: "DELETE",
    path: "/{id}/role-mappings/clients/{clientUniqueId}",
    urlParamKeys: ["id", "clientUniqueId"],
    payloadKey: "roles"
  });
  listAvailableClientRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/clients/{clientUniqueId}/available",
    urlParamKeys: ["id", "clientUniqueId"]
  });
  listCompositeClientRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/clients/{clientUniqueId}/composite",
    urlParamKeys: ["id", "clientUniqueId"]
  });
  /**
   * Authorization permissions
   */
  updatePermission = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/management/permissions",
    urlParamKeys: ["id"]
  });
  listPermissions = this.makeRequest({
    method: "GET",
    path: "/{id}/management/permissions",
    urlParamKeys: ["id"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/groups",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
}
let hE = class extends la {
  /**
   * Identity provider
   * https://www.keycloak.org/docs-api/11.0/rest-api/#_identity_providers_resource
   */
  find = this.makeRequest({
    method: "GET",
    path: "/instances"
  });
  create = this.makeRequest({
    method: "POST",
    path: "/instances",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  findOne = this.makeRequest({
    method: "GET",
    path: "/instances/{alias}",
    urlParamKeys: ["alias"],
    catchNotFound: !0
  });
  update = this.makeUpdateRequest({
    method: "PUT",
    path: "/instances/{alias}",
    urlParamKeys: ["alias"]
  });
  del = this.makeRequest({
    method: "DELETE",
    path: "/instances/{alias}",
    urlParamKeys: ["alias"]
  });
  findFactory = this.makeRequest({
    method: "GET",
    path: "/providers/{providerId}",
    urlParamKeys: ["providerId"]
  });
  findMappers = this.makeRequest({
    method: "GET",
    path: "/instances/{alias}/mappers",
    urlParamKeys: ["alias"]
  });
  findOneMapper = this.makeRequest({
    method: "GET",
    path: "/instances/{alias}/mappers/{id}",
    urlParamKeys: ["alias", "id"],
    catchNotFound: !0
  });
  createMapper = this.makeRequest({
    method: "POST",
    path: "/instances/{alias}/mappers",
    urlParamKeys: ["alias"],
    payloadKey: "identityProviderMapper",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  updateMapper = this.makeUpdateRequest({
    method: "PUT",
    path: "/instances/{alias}/mappers/{id}",
    urlParamKeys: ["alias", "id"]
  });
  delMapper = this.makeRequest({
    method: "DELETE",
    path: "/instances/{alias}/mappers/{id}",
    urlParamKeys: ["alias", "id"]
  });
  findMapperTypes = this.makeRequest({
    method: "GET",
    path: "/instances/{alias}/mapper-types",
    urlParamKeys: ["alias"]
  });
  importFromUrl = this.makeRequest({
    method: "POST",
    path: "/import-config"
  });
  updatePermission = this.makeUpdateRequest({
    method: "PUT",
    path: "/instances/{alias}/management/permissions",
    urlParamKeys: ["alias"]
  });
  listPermissions = this.makeRequest({
    method: "GET",
    path: "/instances/{alias}/management/permissions",
    urlParamKeys: ["alias"]
  });
  reloadKeys = this.makeRequest({
    method: "GET",
    path: "/instances/{alias}/reload-keys",
    urlParamKeys: ["alias"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/identity-provider",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
};
class gE extends la {
  /**
   * Realm
   * https://www.keycloak.org/docs-api/11.0/rest-api/#_realms_admin_resource
   */
  find = this.makeRequest({
    method: "GET"
  });
  create = this.makeRequest({
    method: "POST",
    returnResourceIdInLocationHeader: { field: "realmName" }
  });
  findOne = this.makeRequest({
    method: "GET",
    path: "/{realm}",
    urlParamKeys: ["realm"],
    catchNotFound: !0
  });
  update = this.makeUpdateRequest({
    method: "PUT",
    path: "/{realm}",
    urlParamKeys: ["realm"]
  });
  del = this.makeRequest({
    method: "DELETE",
    path: "/{realm}",
    urlParamKeys: ["realm"]
  });
  partialImport = this.makeRequest({
    method: "POST",
    path: "/{realm}/partialImport",
    urlParamKeys: ["realm"],
    payloadKey: "rep"
  });
  export = this.makeRequest({
    method: "POST",
    path: "/{realm}/partial-export",
    urlParamKeys: ["realm"],
    queryParamKeys: ["exportClients", "exportGroupsAndRoles"]
  });
  getDefaultGroups = this.makeRequest({
    method: "GET",
    path: "/{realm}/default-groups",
    urlParamKeys: ["realm"]
  });
  addDefaultGroup = this.makeRequest({
    method: "PUT",
    path: "/{realm}/default-groups/{id}",
    urlParamKeys: ["realm", "id"]
  });
  removeDefaultGroup = this.makeRequest({
    method: "DELETE",
    path: "/{realm}/default-groups/{id}",
    urlParamKeys: ["realm", "id"]
  });
  getGroupByPath = this.makeRequest({
    method: "GET",
    path: "/{realm}/group-by-path/{path}",
    urlParamKeys: ["realm", "path"]
  });
  /**
   * Get events Returns all events, or filters them based on URL query parameters listed here
   */
  findEvents = this.makeRequest({
    method: "GET",
    path: "/{realm}/events",
    urlParamKeys: ["realm"],
    queryParamKeys: [
      "client",
      "dateFrom",
      "dateTo",
      "first",
      "ipAddress",
      "max",
      "type",
      "user"
    ]
  });
  getConfigEvents = this.makeRequest({
    method: "GET",
    path: "/{realm}/events/config",
    urlParamKeys: ["realm"]
  });
  updateConfigEvents = this.makeUpdateRequest({
    method: "PUT",
    path: "/{realm}/events/config",
    urlParamKeys: ["realm"]
  });
  clearEvents = this.makeRequest({
    method: "DELETE",
    path: "/{realm}/events",
    urlParamKeys: ["realm"]
  });
  clearAdminEvents = this.makeRequest({
    method: "DELETE",
    path: "/{realm}/admin-events",
    urlParamKeys: ["realm"]
  });
  getClientRegistrationPolicyProviders = this.makeRequest({
    method: "GET",
    path: "/{realm}/client-registration-policy/providers",
    urlParamKeys: ["realm"]
  });
  getClientsInitialAccess = this.makeRequest({
    method: "GET",
    path: "/{realm}/clients-initial-access",
    urlParamKeys: ["realm"]
  });
  createClientsInitialAccess = this.makeUpdateRequest({
    method: "POST",
    path: "/{realm}/clients-initial-access",
    urlParamKeys: ["realm"]
  });
  delClientsInitialAccess = this.makeRequest({
    method: "DELETE",
    path: "/{realm}/clients-initial-access/{id}",
    urlParamKeys: ["realm", "id"]
  });
  /**
   * Remove a specific user session.
   */
  removeSession = this.makeRequest({
    method: "DELETE",
    path: "/{realm}/sessions/{sessionId}",
    urlParamKeys: ["realm", "sessionId"],
    catchNotFound: !0
  });
  /**
   * Get admin events Returns all admin events, or filters events based on URL query parameters listed here
   */
  findAdminEvents = this.makeRequest({
    method: "GET",
    path: "/{realm}/admin-events",
    urlParamKeys: ["realm"],
    queryParamKeys: [
      "authClient",
      "authIpAddress",
      "authRealm",
      "authUser",
      "dateFrom",
      "dateTo",
      "max",
      "first",
      "operationTypes",
      "resourcePath",
      "resourceTypes"
    ]
  });
  /**
   * Users management permissions
   */
  getUsersManagementPermissions = this.makeRequest({
    method: "GET",
    path: "/{realm}/users-management-permissions",
    urlParamKeys: ["realm"]
  });
  updateUsersManagementPermissions = this.makeRequest({
    method: "PUT",
    path: "/{realm}/users-management-permissions",
    urlParamKeys: ["realm"]
  });
  /**
   * Sessions
   */
  getClientSessionStats = this.makeRequest({
    method: "GET",
    path: "/{realm}/client-session-stats",
    urlParamKeys: ["realm"]
  });
  logoutAll = this.makeRequest({
    method: "POST",
    path: "/{realm}/logout-all",
    urlParamKeys: ["realm"]
  });
  deleteSession = this.makeRequest({
    method: "DELETE",
    path: "/{realm}/sessions/{session}",
    urlParamKeys: ["realm", "session"],
    queryParamKeys: ["isOffline"]
  });
  pushRevocation = this.makeRequest({
    method: "POST",
    path: "/{realm}/push-revocation",
    urlParamKeys: ["realm"],
    ignoredKeys: ["realm"]
  });
  getKeys = this.makeRequest({
    method: "GET",
    path: "/{realm}/keys",
    urlParamKeys: ["realm"]
  });
  testLDAPConnection = this.makeUpdateRequest({
    method: "POST",
    path: "/{realm}/testLDAPConnection",
    urlParamKeys: ["realm"]
  });
  testSMTPConnection = this.makeUpdateRequest({
    method: "POST",
    path: "/{realm}/testSMTPConnection",
    urlParamKeys: ["realm"]
  });
  ldapServerCapabilities = this.makeUpdateRequest({
    method: "POST",
    path: "/{realm}/ldap-server-capabilities",
    urlParamKeys: ["realm"]
  });
  getRealmSpecificLocales = this.makeRequest({
    method: "GET",
    path: "/{realm}/localization",
    urlParamKeys: ["realm"]
  });
  getRealmLocalizationTexts = this.makeRequest({
    method: "GET",
    path: "/{realm}/localization/{selectedLocale}",
    urlParamKeys: ["realm", "selectedLocale"]
  });
  addLocalization = this.makeUpdateRequest({
    method: "PUT",
    path: "/{realm}/localization/{selectedLocale}/{key}",
    urlParamKeys: ["realm", "selectedLocale", "key"],
    headers: { "content-type": "text/plain" }
  });
  deleteRealmLocalizationTexts = this.makeRequest({
    method: "DELETE",
    path: "/{realm}/localization/{selectedLocale}/{key}",
    urlParamKeys: ["realm", "selectedLocale", "key"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms",
      getBaseUrl: () => t.baseUrl
    });
  }
}
let bE = class extends la {
  /**
   * Organizations
   */
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/organizations",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
  find = this.makeRequest({
    method: "GET",
    path: "/"
  });
  findOne = this.makeRequest({
    method: "GET",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  create = this.makeRequest({
    method: "POST",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  delById = this.makeRequest({
    method: "DELETE",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  updateById = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  listMembers = this.makeRequest({
    method: "GET",
    path: "/{orgId}/members",
    urlParamKeys: ["orgId"]
  });
  addMember = this.makeRequest({
    method: "POST",
    path: "/{orgId}/members",
    urlParamKeys: ["orgId"],
    payloadKey: "userId"
  });
  delMember = this.makeRequest({
    method: "DELETE",
    path: "/{orgId}/members/{userId}",
    urlParamKeys: ["orgId", "userId"]
  });
  memberOrganizations = this.makeRequest({
    method: "GET",
    path: "/members/{userId}/organizations",
    urlParamKeys: ["userId"]
  });
  invite = this.makeUpdateRequest({
    method: "POST",
    path: "/{orgId}/members/invite-user",
    urlParamKeys: ["orgId"]
  });
  inviteExistingUser = this.makeUpdateRequest({
    method: "POST",
    path: "/{orgId}/members/invite-existing-user",
    urlParamKeys: ["orgId"]
  });
  listIdentityProviders = this.makeRequest({
    method: "GET",
    path: "/{orgId}/identity-providers",
    urlParamKeys: ["orgId"]
  });
  linkIdp = this.makeRequest({
    method: "POST",
    path: "/{orgId}/identity-providers",
    urlParamKeys: ["orgId"],
    payloadKey: "alias"
  });
  unLinkIdp = this.makeRequest({
    method: "DELETE",
    path: "/{orgId}/identity-providers/{alias}",
    urlParamKeys: ["orgId", "alias"]
  });
};
class vE extends la {
  /**
   * Realm roles
   */
  find = this.makeRequest({
    method: "GET",
    path: "/roles"
  });
  create = this.makeRequest({
    method: "POST",
    path: "/roles",
    returnResourceIdInLocationHeader: { field: "roleName" }
  });
  /**
   * Roles by name
   */
  findOneByName = this.makeRequest({
    method: "GET",
    path: "/roles/{name}",
    urlParamKeys: ["name"],
    catchNotFound: !0
  });
  updateByName = this.makeUpdateRequest({
    method: "PUT",
    path: "/roles/{name}",
    urlParamKeys: ["name"]
  });
  delByName = this.makeRequest({
    method: "DELETE",
    path: "/roles/{name}",
    urlParamKeys: ["name"]
  });
  findUsersWithRole = this.makeRequest({
    method: "GET",
    path: "/roles/{name}/users",
    urlParamKeys: ["name"],
    catchNotFound: !0
  });
  /**
   * Roles by id
   */
  findOneById = this.makeRequest({
    method: "GET",
    path: "/roles-by-id/{id}",
    urlParamKeys: ["id"],
    catchNotFound: !0
  });
  createComposite = this.makeUpdateRequest({
    method: "POST",
    path: "/roles-by-id/{roleId}/composites",
    urlParamKeys: ["roleId"]
  });
  getCompositeRoles = this.makeRequest({
    method: "GET",
    path: "/roles-by-id/{id}/composites",
    urlParamKeys: ["id"]
  });
  getCompositeRolesForRealm = this.makeRequest({
    method: "GET",
    path: "/roles-by-id/{id}/composites/realm",
    urlParamKeys: ["id"]
  });
  getCompositeRolesForClient = this.makeRequest({
    method: "GET",
    path: "/roles-by-id/{id}/composites/clients/{clientId}",
    urlParamKeys: ["id", "clientId"]
  });
  delCompositeRoles = this.makeUpdateRequest({
    method: "DELETE",
    path: "/roles-by-id/{id}/composites",
    urlParamKeys: ["id"]
  });
  updateById = this.makeUpdateRequest({
    method: "PUT",
    path: "/roles-by-id/{id}",
    urlParamKeys: ["id"]
  });
  delById = this.makeRequest({
    method: "DELETE",
    path: "/roles-by-id/{id}",
    urlParamKeys: ["id"]
  });
  /**
   * Authorization permissions
   */
  updatePermission = this.makeUpdateRequest({
    method: "PUT",
    path: "/roles-by-id/{id}/management/permissions",
    urlParamKeys: ["id"]
  });
  listPermissions = this.makeRequest({
    method: "GET",
    path: "/roles-by-id/{id}/management/permissions",
    urlParamKeys: ["id"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
}
class yE extends la {
  constructor(t) {
    super(t, {
      path: "/",
      getBaseUrl: () => t.baseUrl
    });
  }
  find = this.makeRequest({
    method: "GET",
    path: "/admin/serverinfo"
  });
  findEffectiveMessageBundles = this.makeRequest({
    method: "GET",
    path: "/resources/{realm}/{themeType}/{locale}",
    urlParamKeys: ["realm", "themeType", "locale"],
    queryParamKeys: ["theme", "source"]
  });
}
class CE extends la {
  find = this.makeRequest({
    method: "GET"
  });
  create = this.makeRequest({
    method: "POST",
    returnResourceIdInLocationHeader: { field: "id" }
  });
  /**
   * Single user
   */
  findOne = this.makeRequest({
    method: "GET",
    path: "/{id}",
    urlParamKeys: ["id"],
    catchNotFound: !0
  });
  update = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  del = this.makeRequest({
    method: "DELETE",
    path: "/{id}",
    urlParamKeys: ["id"]
  });
  count = this.makeRequest({
    method: "GET",
    path: "/count"
  });
  getProfile = this.makeRequest({
    method: "GET",
    path: "/profile"
  });
  updateProfile = this.makeRequest({
    method: "PUT",
    path: "/profile"
  });
  getProfileMetadata = this.makeRequest({
    method: "GET",
    path: "/profile/metadata"
  });
  /**
   * role mappings
   */
  listRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings",
    urlParamKeys: ["id"]
  });
  addRealmRoleMappings = this.makeRequest({
    method: "POST",
    path: "/{id}/role-mappings/realm",
    urlParamKeys: ["id"],
    payloadKey: "roles"
  });
  listRealmRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/realm",
    urlParamKeys: ["id"]
  });
  delRealmRoleMappings = this.makeRequest({
    method: "DELETE",
    path: "/{id}/role-mappings/realm",
    urlParamKeys: ["id"],
    payloadKey: "roles"
  });
  listAvailableRealmRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/realm/available",
    urlParamKeys: ["id"]
  });
  // Get effective realm-level role mappings This will recurse all composite roles to get the result.
  listCompositeRealmRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/realm/composite",
    urlParamKeys: ["id"]
  });
  /**
   * Client role mappings
   * https://www.keycloak.org/docs-api/11.0/rest-api/#_client_role_mappings_resource
   */
  listClientRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/clients/{clientUniqueId}",
    urlParamKeys: ["id", "clientUniqueId"]
  });
  addClientRoleMappings = this.makeRequest({
    method: "POST",
    path: "/{id}/role-mappings/clients/{clientUniqueId}",
    urlParamKeys: ["id", "clientUniqueId"],
    payloadKey: "roles"
  });
  delClientRoleMappings = this.makeRequest({
    method: "DELETE",
    path: "/{id}/role-mappings/clients/{clientUniqueId}",
    urlParamKeys: ["id", "clientUniqueId"],
    payloadKey: "roles"
  });
  listAvailableClientRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/clients/{clientUniqueId}/available",
    urlParamKeys: ["id", "clientUniqueId"]
  });
  listCompositeClientRoleMappings = this.makeRequest({
    method: "GET",
    path: "/{id}/role-mappings/clients/{clientUniqueId}/composite",
    urlParamKeys: ["id", "clientUniqueId"]
  });
  /**
   * Send a update account email to the user
   * an email contains a link the user can click to perform a set of required actions.
   */
  executeActionsEmail = this.makeRequest({
    method: "PUT",
    path: "/{id}/execute-actions-email",
    urlParamKeys: ["id"],
    payloadKey: "actions",
    queryParamKeys: ["lifespan", "redirectUri", "clientId"],
    keyTransform: {
      clientId: "client_id",
      redirectUri: "redirect_uri"
    }
  });
  /**
   * Group
   */
  listGroups = this.makeRequest({
    method: "GET",
    path: "/{id}/groups",
    urlParamKeys: ["id"]
  });
  addToGroup = this.makeRequest({
    method: "PUT",
    path: "/{id}/groups/{groupId}",
    urlParamKeys: ["id", "groupId"]
  });
  delFromGroup = this.makeRequest({
    method: "DELETE",
    path: "/{id}/groups/{groupId}",
    urlParamKeys: ["id", "groupId"]
  });
  countGroups = this.makeRequest({
    method: "GET",
    path: "/{id}/groups/count",
    urlParamKeys: ["id"]
  });
  /**
   * Federated Identity
   */
  listFederatedIdentities = this.makeRequest({
    method: "GET",
    path: "/{id}/federated-identity",
    urlParamKeys: ["id"]
  });
  addToFederatedIdentity = this.makeRequest({
    method: "POST",
    path: "/{id}/federated-identity/{federatedIdentityId}",
    urlParamKeys: ["id", "federatedIdentityId"],
    payloadKey: "federatedIdentity"
  });
  delFromFederatedIdentity = this.makeRequest({
    method: "DELETE",
    path: "/{id}/federated-identity/{federatedIdentityId}",
    urlParamKeys: ["id", "federatedIdentityId"]
  });
  /**
   * remove totp
   */
  removeTotp = this.makeRequest({
    method: "PUT",
    path: "/{id}/remove-totp",
    urlParamKeys: ["id"]
  });
  /**
   * reset password
   */
  resetPassword = this.makeRequest({
    method: "PUT",
    path: "/{id}/reset-password",
    urlParamKeys: ["id"],
    payloadKey: "credential"
  });
  getUserStorageCredentialTypes = this.makeRequest({
    method: "GET",
    path: "/{id}/configured-user-storage-credential-types",
    urlParamKeys: ["id"]
  });
  /**
   * get user credentials
   */
  getCredentials = this.makeRequest({
    method: "GET",
    path: "/{id}/credentials",
    urlParamKeys: ["id"]
  });
  /**
   * delete user credentials
   */
  deleteCredential = this.makeRequest({
    method: "DELETE",
    path: "/{id}/credentials/{credentialId}",
    urlParamKeys: ["id", "credentialId"]
  });
  /**
   * update a credential label for a user
   */
  updateCredentialLabel = this.makeUpdateRequest({
    method: "PUT",
    path: "/{id}/credentials/{credentialId}/userLabel",
    urlParamKeys: ["id", "credentialId"],
    headers: { "content-type": "text/plain" }
  });
  // Move a credential to a position behind another credential
  moveCredentialPositionDown = this.makeRequest({
    method: "POST",
    path: "/{id}/credentials/{credentialId}/moveAfter/{newPreviousCredentialId}",
    urlParamKeys: ["id", "credentialId", "newPreviousCredentialId"]
  });
  // Move a credential to a first position in the credentials list of the user
  moveCredentialPositionUp = this.makeRequest({
    method: "POST",
    path: "/{id}/credentials/{credentialId}/moveToFirst",
    urlParamKeys: ["id", "credentialId"]
  });
  /**
   * send verify email
   */
  sendVerifyEmail = this.makeRequest({
    method: "PUT",
    path: "/{id}/send-verify-email",
    urlParamKeys: ["id"],
    queryParamKeys: ["clientId", "redirectUri"],
    keyTransform: {
      clientId: "client_id",
      redirectUri: "redirect_uri"
    }
  });
  /**
   * list user sessions
   */
  listSessions = this.makeRequest({
    method: "GET",
    path: "/{id}/sessions",
    urlParamKeys: ["id"]
  });
  /**
   * list offline sessions associated with the user and client
   */
  listOfflineSessions = this.makeRequest({
    method: "GET",
    path: "/{id}/offline-sessions/{clientId}",
    urlParamKeys: ["id", "clientId"]
  });
  /**
   * logout user from all sessions
   */
  logout = this.makeRequest({
    method: "POST",
    path: "/{id}/logout",
    urlParamKeys: ["id"]
  });
  /**
   * list consents granted by the user
   */
  listConsents = this.makeRequest({
    method: "GET",
    path: "/{id}/consents",
    urlParamKeys: ["id"]
  });
  impersonation = this.makeUpdateRequest({
    method: "POST",
    path: "/{id}/impersonation",
    urlParamKeys: ["id"]
  });
  /**
   * revoke consent and offline tokens for particular client from user
   */
  revokeConsent = this.makeRequest({
    method: "DELETE",
    path: "/{id}/consents/{clientId}",
    urlParamKeys: ["id", "clientId"]
  });
  getUnmanagedAttributes = this.makeRequest({
    method: "GET",
    path: "/{id}/unmanagedAttributes",
    urlParamKeys: ["id"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/users",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
}
class xE extends la {
  name = this.makeRequest({
    method: "GET",
    path: "/{id}/name",
    urlParamKeys: ["id"]
  });
  removeImportedUsers = this.makeRequest({
    method: "POST",
    path: "/{id}/remove-imported-users",
    urlParamKeys: ["id"]
  });
  sync = this.makeRequest({
    method: "POST",
    path: "/{id}/sync",
    urlParamKeys: ["id"],
    queryParamKeys: ["action"]
  });
  unlinkUsers = this.makeRequest({
    method: "POST",
    path: "/{id}/unlink-users",
    urlParamKeys: ["id"]
  });
  mappersSync = this.makeRequest({
    method: "POST",
    path: "/{parentId}/mappers/{id}/sync",
    urlParamKeys: ["id", "parentId"],
    queryParamKeys: ["direction"]
  });
  constructor(t) {
    super(t, {
      path: "/admin/realms/{realm}/user-storage",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
}
let SE = class extends la {
  constructor(t) {
    super(t, {
      path: "/admin/{realm}/console",
      getUrlParams: () => ({
        realm: t.realmName
      }),
      getBaseUrl: () => t.baseUrl
    });
  }
  find = this.makeRequest({
    method: "GET",
    path: "/whoami",
    queryParamKeys: ["currentRealm"]
  });
};
function Qx(e) {
  return e.replace(/[_.-](\w|$)/g, function(t, n) {
    return n.toUpperCase();
  });
}
function Ad(e, t = !1) {
  return !e || typeof e != "object" || e instanceof Date || e instanceof RegExp ? e : Array.isArray(e) ? e.map((n) => t ? typeof n == "object" ? Ad(n, t) : n : Ad(n)) : Object.keys(e).reduce((n, r) => {
    const i = Qx(r), s = i.charAt(0).toLowerCase() + i.slice(1);
    return n[s] = t ? e[r] : Ad(e[r]), n;
  }, {});
}
function wE(e, t) {
  return typeof e == "string" ? Qx(e) : Ad(e, t);
}
const eS = "http://127.0.0.1:8180", tS = "master", OE = (e) => btoa(Array.from(e, (t) => String.fromCodePoint(t)).join("")), kE = (e) => OE(new TextEncoder().encode(e)), TE = (e) => encodeURIComponent(e).replace(/[!'()*]/g, (t) => `%${t.charCodeAt(0).toString(16).toUpperCase()}`), Tb = (e) => TE(e).replaceAll("%20", "+"), IE = async (e) => {
  const t = e.baseUrl || eS, n = e.realmName || tS, r = `${t}/realms/${n}/protocol/openid-connect/token`, i = e.credentials || {}, s = Zx({
    username: i.username,
    password: i.password,
    grant_type: i.grantType,
    client_id: i.clientId,
    totp: i.totp,
    ...i.offlineToken ? { scope: "offline_access" } : {},
    ...i.scopes ? { scope: i.scopes.join(" ") } : {},
    ...i.refreshToken ? {
      refresh_token: i.refreshToken,
      client_secret: i.clientSecret
    } : {}
  }), o = e.requestOptions ?? {}, l = new Headers(o.headers);
  if (i.clientSecret) {
    const u = Tb(i.clientId), p = Tb(i.clientSecret);
    l.set("authorization", `Basic ${kE(`${u}:${p}`)}`);
  }
  l.set("content-type", "application/x-www-form-urlencoded");
  const d = await (await Ai(r, {
    ...o,
    method: "POST",
    headers: l,
    body: s
  })).json();
  return wE(d);
};
class EE {
  // Resources
  users;
  userStorageProvider;
  groups;
  roles;
  organizations;
  clients;
  realms;
  clientScopes;
  clientPolicies;
  identityProviders;
  components;
  serverInfo;
  whoAmI;
  attackDetection;
  authenticationManagement;
  cache;
  // Members
  baseUrl;
  realmName;
  scope;
  accessToken;
  refreshToken;
  #e;
  #n;
  #t;
  constructor(t) {
    this.baseUrl = t?.baseUrl || eS, this.realmName = t?.realmName || tS, this.#e = t?.requestOptions, this.#n = t?.requestArgOptions, this.users = new CE(this), this.userStorageProvider = new xE(this), this.groups = new fE(this), this.roles = new vE(this), this.organizations = new bE(this), this.clients = new uE(this), this.realms = new gE(this), this.clientScopes = new pE(this), this.clientPolicies = new dE(this), this.identityProviders = new hE(this), this.components = new mE(this), this.authenticationManagement = new lE(this), this.serverInfo = new yE(this), this.whoAmI = new SE(this), this.attackDetection = new oE(this), this.cache = new cE(this);
  }
  async auth(t) {
    const { accessToken: n, refreshToken: r } = await IE({
      baseUrl: this.baseUrl,
      realmName: this.realmName,
      scope: this.scope,
      credentials: t,
      requestOptions: this.#e
    });
    this.accessToken = n, this.refreshToken = r;
  }
  registerTokenProvider(t) {
    if (this.#t)
      throw new Error("An existing token provider was already registered.");
    this.#t = t;
  }
  setAccessToken(t) {
    this.accessToken = t;
  }
  async getAccessToken() {
    return this.#t ? this.#t.getAccessToken() : this.accessToken;
  }
  getRequestOptions() {
    return this.#e;
  }
  getGlobalRequestArgOptions() {
    return this.#n;
  }
  setConfig(t) {
    typeof t.baseUrl == "string" && t.baseUrl && (this.baseUrl = t.baseUrl), typeof t.realmName == "string" && t.realmName && (this.realmName = t.realmName), this.#e = t.requestOptions;
  }
}
var Wm;
(function(e) {
  e.VERIFY_EMAIL = "VERIFY_EMAIL", e.UPDATE_PROFILE = "UPDATE_PROFILE", e.CONFIGURE_TOTP = "CONFIGURE_TOTP", e.UPDATE_PASSWORD = "UPDATE_PASSWORD", e.TERMS_AND_CONDITIONS = "TERMS_AND_CONDITIONS";
})(Wm || (Wm = {}));
function se(e, t) {
  var n = {};
  for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function")
    for (var i = 0, r = Object.getOwnPropertySymbols(e); i < r.length; i++)
      t.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[i]) && (n[r[i]] = e[r[i]]);
  return n;
}
function Qo(e, t, n, r) {
  function i(s) {
    return s instanceof n ? s : new n(function(o) {
      o(s);
    });
  }
  return new (n || (n = Promise))(function(s, o) {
    function l(u) {
      try {
        d(r.next(u));
      } catch (p) {
        o(p);
      }
    }
    function c(u) {
      try {
        d(r.throw(u));
      } catch (p) {
        o(p);
      }
    }
    function d(u) {
      u.done ? s(u.value) : i(u.value).then(l, c);
    }
    d((r = r.apply(e, t || [])).next());
  });
}
function el(e, t) {
  var n = { label: 0, sent: function() {
    if (s[0] & 1) throw s[1];
    return s[1];
  }, trys: [], ops: [] }, r, i, s, o = Object.create((typeof Iterator == "function" ? Iterator : Object).prototype);
  return o.next = l(0), o.throw = l(1), o.return = l(2), typeof Symbol == "function" && (o[Symbol.iterator] = function() {
    return this;
  }), o;
  function l(d) {
    return function(u) {
      return c([d, u]);
    };
  }
  function c(d) {
    if (r) throw new TypeError("Generator is already executing.");
    for (; o && (o = 0, d[0] && (n = 0)), n; ) try {
      if (r = 1, i && (s = d[0] & 2 ? i.return : d[0] ? i.throw || ((s = i.return) && s.call(i), 0) : i.next) && !(s = s.call(i, d[1])).done) return s;
      switch (i = 0, s && (d = [d[0] & 2, s.value]), d[0]) {
        case 0:
        case 1:
          s = d;
          break;
        case 4:
          return n.label++, { value: d[1], done: !1 };
        case 5:
          n.label++, i = d[1], d = [0];
          continue;
        case 7:
          d = n.ops.pop(), n.trys.pop();
          continue;
        default:
          if (s = n.trys, !(s = s.length > 0 && s[s.length - 1]) && (d[0] === 6 || d[0] === 2)) {
            n = 0;
            continue;
          }
          if (d[0] === 3 && (!s || d[1] > s[0] && d[1] < s[3])) {
            n.label = d[1];
            break;
          }
          if (d[0] === 6 && n.label < s[1]) {
            n.label = s[1], s = d;
            break;
          }
          if (s && n.label < s[2]) {
            n.label = s[2], n.ops.push(d);
            break;
          }
          s[2] && n.ops.pop(), n.trys.pop();
          continue;
      }
      d = t.call(e, n);
    } catch (u) {
      d = [6, u], i = 0;
    } finally {
      r = s = 0;
    }
    if (d[0] & 5) throw d[1];
    return { value: d[0] ? d[1] : void 0, done: !0 };
  }
}
function Ib(e, t) {
  var n = typeof Symbol == "function" && e[Symbol.iterator];
  if (!n) return e;
  var r = n.call(e), i, s = [], o;
  try {
    for (; (t === void 0 || t-- > 0) && !(i = r.next()).done; ) s.push(i.value);
  } catch (l) {
    o = { error: l };
  } finally {
    try {
      i && !i.done && (n = r.return) && n.call(r);
    } finally {
      if (o) throw o.error;
    }
  }
  return s;
}
function Eb(e, t, n) {
  if (n || arguments.length === 2) for (var r = 0, i = t.length, s; r < i; r++)
    (s || !(r in t)) && (s || (s = Array.prototype.slice.call(t, 0, r)), s[r] = t[r]);
  return e.concat(s || Array.prototype.slice.call(t));
}
function j(...e) {
  const t = [], n = {}.hasOwnProperty;
  return e.filter(Boolean).forEach((r) => {
    const i = typeof r;
    if (i === "string" || i === "number")
      t.push(r);
    else if (Array.isArray(r) && r.length) {
      const s = j(...r);
      s && t.push(s);
    } else if (i === "object")
      for (const s in r)
        n.call(r, s) && r[s] && t.push(s);
  }), t.join(" ");
}
const Vd = {
  content: "pf-v5-c-content",
  modifiers: {
    visited: "pf-m-visited",
    plain: "pf-m-plain"
  }
}, Pb = {
  modifiers: {
    "4xl": "pf-m-4xl",
    "3xl": "pf-m-3xl",
    "2xl": "pf-m-2xl",
    xl: "pf-m-xl",
    lg: "pf-m-lg",
    md: "pf-m-md"
  },
  title: "pf-v5-c-title"
}, PE = {
  name: "--pf-v5-global--breakpoint--sm",
  value: "576px",
  var: "var(--pf-v5-global--breakpoint--sm)"
}, nS = {
  name: "--pf-v5-global--breakpoint--md",
  value: "768px",
  var: "var(--pf-v5-global--breakpoint--md)"
}, aS = {
  name: "--pf-v5-global--breakpoint--lg",
  value: "992px",
  var: "var(--pf-v5-global--breakpoint--lg)"
}, lh = {
  name: "--pf-v5-global--breakpoint--xl",
  value: "1200px",
  var: "var(--pf-v5-global--breakpoint--xl)"
}, rS = {
  name: "--pf-v5-global--breakpoint--2xl",
  value: "1450px",
  var: "var(--pf-v5-global--breakpoint--2xl)"
}, _E = {
  name: "--pf-v5-global--height-breakpoint--sm",
  value: "0",
  var: "var(--pf-v5-global--height-breakpoint--sm)"
}, RE = {
  name: "--pf-v5-global--height-breakpoint--md",
  value: "40rem",
  var: "var(--pf-v5-global--height-breakpoint--md)"
}, AE = {
  name: "--pf-v5-global--height-breakpoint--lg",
  value: "48rem",
  var: "var(--pf-v5-global--height-breakpoint--lg)"
}, LE = {
  name: "--pf-v5-global--height-breakpoint--xl",
  value: "60rem",
  var: "var(--pf-v5-global--height-breakpoint--xl)"
}, NE = {
  name: "--pf-v5-global--height-breakpoint--2xl",
  value: "80rem",
  var: "var(--pf-v5-global--height-breakpoint--2xl)"
};
var _n;
(function(e) {
  e.success = "success", e.error = "error", e.warning = "warning", e.default = "default";
})(_n || (_n = {}));
const cn = {
  Tab: "Tab",
  Space: " ",
  Escape: "Escape",
  Enter: "Enter",
  ArrowUp: "ArrowUp",
  ArrowDown: "ArrowDown",
  ArrowLeft: "ArrowLeft",
  ArrowRight: "ArrowRight"
}, Ol = {
  sm: parseInt(PE.value),
  md: parseInt(nS.value),
  lg: parseInt(aS.value),
  xl: parseInt(lh.value),
  "2xl": parseInt(rS.value)
}, kl = {
  sm: parseInt(_E.value),
  md: parseInt(RE.value),
  lg: parseInt(AE.value),
  xl: parseInt(LE.value),
  "2xl": parseInt(NE.value)
};
/*!
* tabbable 6.2.0
* @license MIT, https://github.com/focus-trap/tabbable/blob/master/LICENSE
*/
var iS = ["input:not([inert])", "select:not([inert])", "textarea:not([inert])", "a[href]:not([inert])", "button:not([inert])", "[tabindex]:not(slot):not([inert])", "audio[controls]:not([inert])", "video[controls]:not([inert])", '[contenteditable]:not([contenteditable="false"]):not([inert])', "details>summary:first-of-type:not([inert])", "details:not([inert])"], Kd = /* @__PURE__ */ iS.join(","), sS = typeof Element > "u", Ps = sS ? function() {
} : Element.prototype.matches || Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector, Hd = !sS && Element.prototype.getRootNode ? function(e) {
  var t;
  return e == null || (t = e.getRootNode) === null || t === void 0 ? void 0 : t.call(e);
} : function(e) {
  return e?.ownerDocument;
}, zd = function e(t, n) {
  var r;
  n === void 0 && (n = !0);
  var i = t == null || (r = t.getAttribute) === null || r === void 0 ? void 0 : r.call(t, "inert"), s = i === "" || i === "true", o = s || n && t && e(t.parentNode);
  return o;
}, DE = function(t) {
  var n, r = t == null || (n = t.getAttribute) === null || n === void 0 ? void 0 : n.call(t, "contenteditable");
  return r === "" || r === "true";
}, oS = function(t, n, r) {
  if (zd(t))
    return [];
  var i = Array.prototype.slice.apply(t.querySelectorAll(Kd));
  return n && Ps.call(t, Kd) && i.unshift(t), i = i.filter(r), i;
}, lS = function e(t, n, r) {
  for (var i = [], s = Array.from(t); s.length; ) {
    var o = s.shift();
    if (!zd(o, !1))
      if (o.tagName === "SLOT") {
        var l = o.assignedElements(), c = l.length ? l : o.children, d = e(c, !0, r);
        r.flatten ? i.push.apply(i, d) : i.push({
          scopeParent: o,
          candidates: d
        });
      } else {
        var u = Ps.call(o, Kd);
        u && r.filter(o) && (n || !t.includes(o)) && i.push(o);
        var p = o.shadowRoot || // check for an undisclosed shadow
        typeof r.getShadowRoot == "function" && r.getShadowRoot(o), m = !zd(p, !1) && (!r.shadowRootFilter || r.shadowRootFilter(o));
        if (p && m) {
          var f = e(p === !0 ? o.children : p.children, !0, r);
          r.flatten ? i.push.apply(i, f) : i.push({
            scopeParent: o,
            candidates: f
          });
        } else
          s.unshift.apply(s, o.children);
      }
  }
  return i;
}, cS = function(t) {
  return !isNaN(parseInt(t.getAttribute("tabindex"), 10));
}, xs = function(t) {
  if (!t)
    throw new Error("No node provided");
  return t.tabIndex < 0 && (/^(AUDIO|VIDEO|DETAILS)$/.test(t.tagName) || DE(t)) && !cS(t) ? 0 : t.tabIndex;
}, ME = function(t, n) {
  var r = xs(t);
  return r < 0 && n && !cS(t) ? 0 : r;
}, FE = function(t, n) {
  return t.tabIndex === n.tabIndex ? t.documentOrder - n.documentOrder : t.tabIndex - n.tabIndex;
}, dS = function(t) {
  return t.tagName === "INPUT";
}, $E = function(t) {
  return dS(t) && t.type === "hidden";
}, jE = function(t) {
  var n = t.tagName === "DETAILS" && Array.prototype.slice.apply(t.children).some(function(r) {
    return r.tagName === "SUMMARY";
  });
  return n;
}, BE = function(t, n) {
  for (var r = 0; r < t.length; r++)
    if (t[r].checked && t[r].form === n)
      return t[r];
}, UE = function(t) {
  if (!t.name)
    return !0;
  var n = t.form || Hd(t), r = function(l) {
    return n.querySelectorAll('input[type="radio"][name="' + l + '"]');
  }, i;
  if (typeof window < "u" && typeof window.CSS < "u" && typeof window.CSS.escape == "function")
    i = r(window.CSS.escape(t.name));
  else
    try {
      i = r(t.name);
    } catch (o) {
      return console.error("Looks like you have a radio button with a name attribute containing invalid CSS selector characters and need the CSS.escape polyfill: %s", o.message), !1;
    }
  var s = BE(i, t.form);
  return !s || s === t;
}, VE = function(t) {
  return dS(t) && t.type === "radio";
}, KE = function(t) {
  return VE(t) && !UE(t);
}, HE = function(t) {
  var n, r = t && Hd(t), i = (n = r) === null || n === void 0 ? void 0 : n.host, s = !1;
  if (r && r !== t) {
    var o, l, c;
    for (s = !!((o = i) !== null && o !== void 0 && (l = o.ownerDocument) !== null && l !== void 0 && l.contains(i) || t != null && (c = t.ownerDocument) !== null && c !== void 0 && c.contains(t)); !s && i; ) {
      var d, u, p;
      r = Hd(i), i = (d = r) === null || d === void 0 ? void 0 : d.host, s = !!((u = i) !== null && u !== void 0 && (p = u.ownerDocument) !== null && p !== void 0 && p.contains(i));
    }
  }
  return s;
}, _b = function(t) {
  var n = t.getBoundingClientRect(), r = n.width, i = n.height;
  return r === 0 && i === 0;
}, zE = function(t, n) {
  var r = n.displayCheck, i = n.getShadowRoot;
  if (getComputedStyle(t).visibility === "hidden")
    return !0;
  var s = Ps.call(t, "details>summary:first-of-type"), o = s ? t.parentElement : t;
  if (Ps.call(o, "details:not([open]) *"))
    return !0;
  if (!r || r === "full" || r === "legacy-full") {
    if (typeof i == "function") {
      for (var l = t; t; ) {
        var c = t.parentElement, d = Hd(t);
        if (c && !c.shadowRoot && i(c) === !0)
          return _b(t);
        t.assignedSlot ? t = t.assignedSlot : !c && d !== t.ownerDocument ? t = d.host : t = c;
      }
      t = l;
    }
    if (HE(t))
      return !t.getClientRects().length;
    if (r !== "legacy-full")
      return !0;
  } else if (r === "non-zero-area")
    return _b(t);
  return !1;
}, qE = function(t) {
  if (/^(INPUT|BUTTON|SELECT|TEXTAREA)$/.test(t.tagName))
    for (var n = t.parentElement; n; ) {
      if (n.tagName === "FIELDSET" && n.disabled) {
        for (var r = 0; r < n.children.length; r++) {
          var i = n.children.item(r);
          if (i.tagName === "LEGEND")
            return Ps.call(n, "fieldset[disabled] *") ? !0 : !i.contains(t);
        }
        return !0;
      }
      n = n.parentElement;
    }
  return !1;
}, qd = function(t, n) {
  return !(n.disabled || // we must do an inert look up to filter out any elements inside an inert ancestor
  //  because we're limited in the type of selectors we can use in JSDom (see related
  //  note related to `candidateSelectors`)
  zd(n) || $E(n) || zE(n, t) || // For a details element with a summary, the summary element gets the focus
  jE(n) || qE(n));
}, Xm = function(t, n) {
  return !(KE(n) || xs(n) < 0 || !qd(t, n));
}, GE = function(t) {
  var n = parseInt(t.getAttribute("tabindex"), 10);
  return !!(isNaN(n) || n >= 0);
}, WE = function e(t) {
  var n = [], r = [];
  return t.forEach(function(i, s) {
    var o = !!i.scopeParent, l = o ? i.scopeParent : i, c = ME(l, o), d = o ? e(i.candidates) : l;
    c === 0 ? o ? n.push.apply(n, d) : n.push(l) : r.push({
      documentOrder: s,
      tabIndex: c,
      item: i,
      isScope: o,
      content: d
    });
  }), r.sort(FE).reduce(function(i, s) {
    return s.isScope ? i.push.apply(i, s.content) : i.push(s.content), i;
  }, []).concat(n);
}, XE = function(t, n) {
  n = n || {};
  var r;
  return n.getShadowRoot ? r = lS([t], n.includeContainer, {
    filter: Xm.bind(null, n),
    flatten: !1,
    getShadowRoot: n.getShadowRoot,
    shadowRootFilter: GE
  }) : r = oS(t, n.includeContainer, Xm.bind(null, n)), WE(r);
}, YE = function(t, n) {
  n = n || {};
  var r;
  return n.getShadowRoot ? r = lS([t], n.includeContainer, {
    filter: qd.bind(null, n),
    flatten: !0,
    getShadowRoot: n.getShadowRoot
  }) : r = oS(t, n.includeContainer, qd.bind(null, n)), r;
}, co = function(t, n) {
  if (n = n || {}, !t)
    throw new Error("No node provided");
  return Ps.call(t, Kd) === !1 ? !1 : Xm(n, t);
}, JE = /* @__PURE__ */ iS.concat("iframe").join(","), $p = function(t, n) {
  if (n = n || {}, !t)
    throw new Error("No node provided");
  return Ps.call(t, JE) === !1 ? !1 : qd(n, t);
};
/*!
* focus-trap 7.5.4
* @license MIT, https://github.com/focus-trap/focus-trap/blob/master/LICENSE
*/
function Rb(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function Ab(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? Rb(Object(n), !0).forEach(function(r) {
      ZE(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Rb(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function ZE(e, t, n) {
  return t = e2(t), t in e ? Object.defineProperty(e, t, {
    value: n,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = n, e;
}
function QE(e, t) {
  if (typeof e != "object" || e === null) return e;
  var n = e[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(e, t || "default");
    if (typeof r != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function e2(e) {
  var t = QE(e, "string");
  return typeof t == "symbol" ? t : String(t);
}
var Lb = {
  activateTrap: function(t, n) {
    if (t.length > 0) {
      var r = t[t.length - 1];
      r !== n && r.pause();
    }
    var i = t.indexOf(n);
    i === -1 || t.splice(i, 1), t.push(n);
  },
  deactivateTrap: function(t, n) {
    var r = t.indexOf(n);
    r !== -1 && t.splice(r, 1), t.length > 0 && t[t.length - 1].unpause();
  }
}, t2 = function(t) {
  return t.tagName && t.tagName.toLowerCase() === "input" && typeof t.select == "function";
}, n2 = function(t) {
  return t?.key === "Escape" || t?.key === "Esc" || t?.keyCode === 27;
}, Vl = function(t) {
  return t?.key === "Tab" || t?.keyCode === 9;
}, a2 = function(t) {
  return Vl(t) && !t.shiftKey;
}, r2 = function(t) {
  return Vl(t) && t.shiftKey;
}, Nb = function(t) {
  return setTimeout(t, 0);
}, Db = function(t, n) {
  var r = -1;
  return t.every(function(i, s) {
    return n(i) ? (r = s, !1) : !0;
  }), r;
}, Tl = function(t) {
  for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++)
    r[i - 1] = arguments[i];
  return typeof t == "function" ? t.apply(void 0, r) : t;
}, dd = function(t) {
  return t.target.shadowRoot && typeof t.composedPath == "function" ? t.composedPath()[0] : t.target;
}, i2 = [], s2 = function(t, n) {
  var r = n?.document || document, i = n?.trapStack || i2, s = Ab({
    returnFocusOnDeactivate: !0,
    escapeDeactivates: !0,
    delayInitialFocus: !0,
    isKeyForward: a2,
    isKeyBackward: r2
  }, n), o = {
    // containers given to createFocusTrap()
    // @type {Array<HTMLElement>}
    containers: [],
    // list of objects identifying tabbable nodes in `containers` in the trap
    // NOTE: it's possible that a group has no tabbable nodes if nodes get removed while the trap
    //  is active, but the trap should never get to a state where there isn't at least one group
    //  with at least one tabbable node in it (that would lead to an error condition that would
    //  result in an error being thrown)
    // @type {Array<{
    //   container: HTMLElement,
    //   tabbableNodes: Array<HTMLElement>, // empty if none
    //   focusableNodes: Array<HTMLElement>, // empty if none
    //   posTabIndexesFound: boolean,
    //   firstTabbableNode: HTMLElement|undefined,
    //   lastTabbableNode: HTMLElement|undefined,
    //   firstDomTabbableNode: HTMLElement|undefined,
    //   lastDomTabbableNode: HTMLElement|undefined,
    //   nextTabbableNode: (node: HTMLElement, forward: boolean) => HTMLElement|undefined
    // }>}
    containerGroups: [],
    // same order/length as `containers` list
    // references to objects in `containerGroups`, but only those that actually have
    //  tabbable nodes in them
    // NOTE: same order as `containers` and `containerGroups`, but __not necessarily__
    //  the same length
    tabbableGroups: [],
    nodeFocusedBeforeActivation: null,
    mostRecentlyFocusedNode: null,
    active: !1,
    paused: !1,
    // timer ID for when delayInitialFocus is true and initial focus in this trap
    //  has been delayed during activation
    delayInitialFocusTimer: void 0,
    // the most recent KeyboardEvent for the configured nav key (typically [SHIFT+]TAB), if any
    recentNavEvent: void 0
  }, l, c = function(E, L, F) {
    return E && E[L] !== void 0 ? E[L] : s[F || L];
  }, d = function(E, L) {
    var F = typeof L?.composedPath == "function" ? L.composedPath() : void 0;
    return o.containerGroups.findIndex(function(R) {
      var M = R.container, U = R.tabbableNodes;
      return M.contains(E) || F?.includes(M) || U.find(function(K) {
        return K === E;
      });
    });
  }, u = function(E) {
    var L = s[E];
    if (typeof L == "function") {
      for (var F = arguments.length, R = new Array(F > 1 ? F - 1 : 0), M = 1; M < F; M++)
        R[M - 1] = arguments[M];
      L = L.apply(void 0, R);
    }
    if (L === !0 && (L = void 0), !L) {
      if (L === void 0 || L === !1)
        return L;
      throw new Error("`".concat(E, "` was specified but was not a node, or did not return a node"));
    }
    var U = L;
    if (typeof L == "string" && (U = r.querySelector(L), !U))
      throw new Error("`".concat(E, "` as selector refers to no known node"));
    return U;
  }, p = function() {
    var E = u("initialFocus");
    if (E === !1)
      return !1;
    if (E === void 0 || !$p(E, s.tabbableOptions))
      if (d(r.activeElement) >= 0)
        E = r.activeElement;
      else {
        var L = o.tabbableGroups[0], F = L && L.firstTabbableNode;
        E = F || u("fallbackFocus");
      }
    if (!E)
      throw new Error("Your focus-trap needs to have at least one focusable element");
    return E;
  }, m = function() {
    if (o.containerGroups = o.containers.map(function(E) {
      var L = XE(E, s.tabbableOptions), F = YE(E, s.tabbableOptions), R = L.length > 0 ? L[0] : void 0, M = L.length > 0 ? L[L.length - 1] : void 0, U = F.find(function(N) {
        return co(N);
      }), K = F.slice().reverse().find(function(N) {
        return co(N);
      }), G = !!L.find(function(N) {
        return xs(N) > 0;
      });
      return {
        container: E,
        tabbableNodes: L,
        focusableNodes: F,
        /** True if at least one node with positive `tabindex` was found in this container. */
        posTabIndexesFound: G,
        /** First tabbable node in container, __tabindex__ order; `undefined` if none. */
        firstTabbableNode: R,
        /** Last tabbable node in container, __tabindex__ order; `undefined` if none. */
        lastTabbableNode: M,
        // NOTE: DOM order is NOT NECESSARILY "document position" order, but figuring that out
        //  would require more than just https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition
        //  because that API doesn't work with Shadow DOM as well as it should (@see
        //  https://github.com/whatwg/dom/issues/320) and since this first/last is only needed, so far,
        //  to address an edge case related to positive tabindex support, this seems like a much easier,
        //  "close enough most of the time" alternative for positive tabindexes which should generally
        //  be avoided anyway...
        /** First tabbable node in container, __DOM__ order; `undefined` if none. */
        firstDomTabbableNode: U,
        /** Last tabbable node in container, __DOM__ order; `undefined` if none. */
        lastDomTabbableNode: K,
        /**
         * Finds the __tabbable__ node that follows the given node in the specified direction,
         *  in this container, if any.
         * @param {HTMLElement} node
         * @param {boolean} [forward] True if going in forward tab order; false if going
         *  in reverse.
         * @returns {HTMLElement|undefined} The next tabbable node, if any.
         */
        nextTabbableNode: function($) {
          var q = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0, V = L.indexOf($);
          return V < 0 ? q ? F.slice(F.indexOf($) + 1).find(function(B) {
            return co(B);
          }) : F.slice(0, F.indexOf($)).reverse().find(function(B) {
            return co(B);
          }) : L[V + (q ? 1 : -1)];
        }
      };
    }), o.tabbableGroups = o.containerGroups.filter(function(E) {
      return E.tabbableNodes.length > 0;
    }), o.tabbableGroups.length <= 0 && !u("fallbackFocus"))
      throw new Error("Your focus-trap must have at least one container with at least one tabbable node in it at all times");
    if (o.containerGroups.find(function(E) {
      return E.posTabIndexesFound;
    }) && o.containerGroups.length > 1)
      throw new Error("At least one node with a positive tabindex was found in one of your focus-trap's multiple containers. Positive tabindexes are only supported in single-container focus-traps.");
  }, f = function _(E) {
    var L = E.activeElement;
    if (L)
      return L.shadowRoot && L.shadowRoot.activeElement !== null ? _(L.shadowRoot) : L;
  }, g = function _(E) {
    if (E !== !1 && E !== f(document)) {
      if (!E || !E.focus) {
        _(p());
        return;
      }
      E.focus({
        preventScroll: !!s.preventScroll
      }), o.mostRecentlyFocusedNode = E, t2(E) && E.select();
    }
  }, b = function(E) {
    var L = u("setReturnFocus", E);
    return L || (L === !1 ? !1 : E);
  }, v = function(E) {
    var L = E.target, F = E.event, R = E.isBackward, M = R === void 0 ? !1 : R;
    L = L || dd(F), m();
    var U = null;
    if (o.tabbableGroups.length > 0) {
      var K = d(L, F), G = K >= 0 ? o.containerGroups[K] : void 0;
      if (K < 0)
        M ? U = o.tabbableGroups[o.tabbableGroups.length - 1].lastTabbableNode : U = o.tabbableGroups[0].firstTabbableNode;
      else if (M) {
        var N = Db(o.tabbableGroups, function(X) {
          var Q = X.firstTabbableNode;
          return L === Q;
        });
        if (N < 0 && (G.container === L || $p(L, s.tabbableOptions) && !co(L, s.tabbableOptions) && !G.nextTabbableNode(L, !1)) && (N = K), N >= 0) {
          var $ = N === 0 ? o.tabbableGroups.length - 1 : N - 1, q = o.tabbableGroups[$];
          U = xs(L) >= 0 ? q.lastTabbableNode : q.lastDomTabbableNode;
        } else Vl(F) || (U = G.nextTabbableNode(L, !1));
      } else {
        var V = Db(o.tabbableGroups, function(X) {
          var Q = X.lastTabbableNode;
          return L === Q;
        });
        if (V < 0 && (G.container === L || $p(L, s.tabbableOptions) && !co(L, s.tabbableOptions) && !G.nextTabbableNode(L)) && (V = K), V >= 0) {
          var B = V === o.tabbableGroups.length - 1 ? 0 : V + 1, Z = o.tabbableGroups[B];
          U = xs(L) >= 0 ? Z.firstTabbableNode : Z.firstDomTabbableNode;
        } else Vl(F) || (U = G.nextTabbableNode(L));
      }
    } else
      U = u("fallbackFocus");
    return U;
  }, y = function(E) {
    var L = dd(E);
    if (!(d(L, E) >= 0)) {
      if (Tl(s.clickOutsideDeactivates, E)) {
        l.deactivate({
          // NOTE: by setting `returnFocus: false`, deactivate() will do nothing,
          //  which will result in the outside click setting focus to the node
          //  that was clicked (and if not focusable, to "nothing"); by setting
          //  `returnFocus: true`, we'll attempt to re-focus the node originally-focused
          //  on activation (or the configured `setReturnFocus` node), whether the
          //  outside click was on a focusable node or not
          returnFocus: s.returnFocusOnDeactivate
        });
        return;
      }
      Tl(s.allowOutsideClick, E) || E.preventDefault();
    }
  }, C = function(E) {
    var L = dd(E), F = d(L, E) >= 0;
    if (F || L instanceof Document)
      F && (o.mostRecentlyFocusedNode = L);
    else {
      E.stopImmediatePropagation();
      var R, M = !0;
      if (o.mostRecentlyFocusedNode)
        if (xs(o.mostRecentlyFocusedNode) > 0) {
          var U = d(o.mostRecentlyFocusedNode), K = o.containerGroups[U].tabbableNodes;
          if (K.length > 0) {
            var G = K.findIndex(function(N) {
              return N === o.mostRecentlyFocusedNode;
            });
            G >= 0 && (s.isKeyForward(o.recentNavEvent) ? G + 1 < K.length && (R = K[G + 1], M = !1) : G - 1 >= 0 && (R = K[G - 1], M = !1));
          }
        } else
          o.containerGroups.some(function(N) {
            return N.tabbableNodes.some(function($) {
              return xs($) > 0;
            });
          }) || (M = !1);
      else
        M = !1;
      M && (R = v({
        // move FROM the MRU node, not event-related node (which will be the node that is
        //  outside the trap causing the focus escape we're trying to fix)
        target: o.mostRecentlyFocusedNode,
        isBackward: s.isKeyBackward(o.recentNavEvent)
      })), g(R || o.mostRecentlyFocusedNode || p());
    }
    o.recentNavEvent = void 0;
  }, S = function(E) {
    var L = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !1;
    o.recentNavEvent = E;
    var F = v({
      event: E,
      isBackward: L
    });
    F && (Vl(E) && E.preventDefault(), g(F));
  }, P = function(E) {
    if (n2(E) && Tl(s.escapeDeactivates, E) !== !1) {
      E.preventDefault(), l.deactivate();
      return;
    }
    (s.isKeyForward(E) || s.isKeyBackward(E)) && S(E, s.isKeyBackward(E));
  }, w = function(E) {
    var L = dd(E);
    d(L, E) >= 0 || Tl(s.clickOutsideDeactivates, E) || Tl(s.allowOutsideClick, E) || (E.preventDefault(), E.stopImmediatePropagation());
  }, A = function() {
    if (o.active)
      return Lb.activateTrap(i, l), o.delayInitialFocusTimer = s.delayInitialFocus ? Nb(function() {
        g(p());
      }) : g(p()), r.addEventListener("focusin", C, !0), r.addEventListener("mousedown", y, {
        capture: !0,
        passive: !1
      }), r.addEventListener("touchstart", y, {
        capture: !0,
        passive: !1
      }), r.addEventListener("click", w, {
        capture: !0,
        passive: !1
      }), r.addEventListener("keydown", P, {
        capture: !0,
        passive: !1
      }), l;
  }, k = function() {
    if (o.active)
      return r.removeEventListener("focusin", C, !0), r.removeEventListener("mousedown", y, !0), r.removeEventListener("touchstart", y, !0), r.removeEventListener("click", w, !0), r.removeEventListener("keydown", P, !0), l;
  }, T = function(E) {
    var L = E.some(function(F) {
      var R = Array.from(F.removedNodes);
      return R.some(function(M) {
        return M === o.mostRecentlyFocusedNode;
      });
    });
    L && g(p());
  }, O = typeof window < "u" && "MutationObserver" in window ? new MutationObserver(T) : void 0, I = function() {
    O && (O.disconnect(), o.active && !o.paused && o.containers.map(function(E) {
      O.observe(E, {
        subtree: !0,
        childList: !0
      });
    }));
  };
  return l = {
    get active() {
      return o.active;
    },
    get paused() {
      return o.paused;
    },
    activate: function(E) {
      if (o.active)
        return this;
      var L = c(E, "onActivate"), F = c(E, "onPostActivate"), R = c(E, "checkCanFocusTrap");
      R || m(), o.active = !0, o.paused = !1, o.nodeFocusedBeforeActivation = r.activeElement, L?.();
      var M = function() {
        R && m(), A(), I(), F?.();
      };
      return R ? (R(o.containers.concat()).then(M, M), this) : (M(), this);
    },
    deactivate: function(E) {
      if (!o.active)
        return this;
      var L = Ab({
        onDeactivate: s.onDeactivate,
        onPostDeactivate: s.onPostDeactivate,
        checkCanReturnFocus: s.checkCanReturnFocus
      }, E);
      clearTimeout(o.delayInitialFocusTimer), o.delayInitialFocusTimer = void 0, k(), o.active = !1, o.paused = !1, I(), Lb.deactivateTrap(i, l);
      var F = c(L, "onDeactivate"), R = c(L, "onPostDeactivate"), M = c(L, "checkCanReturnFocus"), U = c(L, "returnFocus", "returnFocusOnDeactivate");
      F?.();
      var K = function() {
        Nb(function() {
          U && g(b(o.nodeFocusedBeforeActivation)), R?.();
        });
      };
      return U && M ? (M(b(o.nodeFocusedBeforeActivation)).then(K, K), this) : (K(), this);
    },
    pause: function(E) {
      if (o.paused || !o.active)
        return this;
      var L = c(E, "onPause"), F = c(E, "onPostPause");
      return o.paused = !0, L?.(), k(), I(), F?.(), this;
    },
    unpause: function(E) {
      if (!o.paused || !o.active)
        return this;
      var L = c(E, "onUnpause"), F = c(E, "onPostUnpause");
      return o.paused = !1, L?.(), m(), A(), I(), F?.(), this;
    },
    updateContainerElements: function(E) {
      var L = [].concat(E).filter(Boolean);
      return o.containers = L.map(function(F) {
        return typeof F == "string" ? r.querySelector(F) : F;
      }), o.active && m(), I(), this;
    }
  }, l.updateContainerElements(t), l;
};
function o2(e) {
  const t = Ct(e);
  t.current = e, ze(() => () => {
    t.current();
  }, []);
}
const ju = ah(function(t, n) {
  var { active: r = !0, paused: i = !1, focusTrapOptions: s = {}, preventScrollOnDeactivate: o = !1 } = t, l = se(t, ["active", "paused", "focusTrapOptions", "preventScrollOnDeactivate"]);
  const c = Ct(null);
  rh(n, () => c.current);
  const d = Ct(null);
  ze(() => {
    const p = s2(c.current, Object.assign(Object.assign({}, s), { returnFocusOnDeactivate: !1 }));
    return d.current = p, () => {
      p.deactivate();
    };
  }, []), ze(() => {
    const p = d.current;
    r ? p?.activate() : p?.deactivate();
  }, [r]), ze(() => {
    const p = d.current;
    i ? p?.pause() : p?.unpause();
  }, [i]);
  const u = Ct(typeof document < "u" ? document.activeElement : null);
  return o2(() => {
    s.returnFocusOnDeactivate !== !1 && u.current instanceof HTMLElement && u.current.focus({
      preventScroll: o
    });
  }), ne.createElement("div", Object.assign({ ref: c }, l));
});
ju.displayName = "FocusTrap";
function sc(e) {
  return e[0].toUpperCase() + e.substring(1);
}
function Ti(e = "pf") {
  const t = (/* @__PURE__ */ new Date()).getTime() + Math.random().toString(36).slice(2);
  return `${e}-${t}`;
}
function ch(e, t) {
  let n;
  return (...r) => {
    clearTimeout(n), n = setTimeout(() => e.apply(this, r), t);
  };
}
function hi(e, t, n, r = !1) {
  if (!e || !t)
    return !1;
  const i = e.getBoundingClientRect(), s = t.getBoundingClientRect(), o = Math.ceil(i.left), l = Math.floor(i.right), c = Math.ceil(s.left), d = Math.floor(s.right), u = c >= o && d <= l, p = !r && i.width < s.width && (c < o && d > o || d > l && c < l);
  return u || p;
}
function dh(e, t) {
  return e.replace(/\${(.*?)}/g, (n, r) => t[r] || "");
}
function l2(e, t, n) {
  return n || (n = `${t}s`), `${e || 0} ${e === 1 ? t : n}`;
}
const Mo = (e, t) => Object.entries(e || {}).reduce((n, [r, i]) => r === "default" ? Object.assign(Object.assign({}, n), { [t]: i }) : Object.assign(Object.assign({}, n), { [`${t}-on-${r}`]: i }), {}), pt = (e, t, n = "", r, i) => {
  if (!e)
    return "";
  if (r && !i) {
    if (r in e)
      return t.modifiers[Kl(`${n}${e[r]}`)];
    const s = ["2xl", "xl", "lg", "md", "sm", "default"], o = s.indexOf(r);
    for (let l = o; l < s.length; l++)
      if (s[l] in e)
        return t.modifiers[Kl(`${n}${e[s[l]]}`)];
    return "";
  }
  return Object.entries(e || {}).map(([s, o]) => `${n}${o}${s !== "default" ? `-on-${s}` : ""}${i && s !== "default" ? "-height" : ""}`).map(Kl).map((s) => s.replace(/-?(\dxl)/gi, (o, l) => `_${l}`)).map((s) => t.modifiers[s]).filter(Boolean).join(" ");
}, uS = (e) => e === null ? null : e >= kl["2xl"] ? "2xl" : e >= kl.xl ? "xl" : e >= kl.lg ? "lg" : e >= kl.md ? "md" : e >= kl.sm ? "sm" : "default", pS = (e) => e === null ? null : e >= Ol["2xl"] ? "2xl" : e >= Ol.xl ? "xl" : e >= Ol.lg ? "lg" : e >= Ol.md ? "md" : e >= Ol.sm ? "sm" : "default", c2 = (e) => e.toUpperCase().replace("-", "").replace("_", ""), Kl = (e) => e.replace(/([-_][a-z])/gi, c2), wn = !!(typeof window < "u" && window.document && window.document.createElement), Mb = (e, t) => {
  const n = getComputedStyle(t), r = () => {
    let o = "";
    const l = {
      "50%": "ultra-condensed",
      "62.5%": "extra-condensed",
      "75%": "condensed",
      "87.5%": "semi-condensed",
      "100%": "normal",
      "112.5%": "semi-expanded",
      "125%": "expanded",
      "150%": "extra-expanded",
      "200%": "ultra-expanded"
    };
    let c;
    return n.fontStretch in l ? c = l[n.fontStretch] : c = "normal", o = n.fontStyle + " " + n.fontVariant + " " + n.fontWeight + " " + c + " " + n.fontSize + "/" + n.lineHeight + " " + n.fontFamily, o;
  }, s = document.createElement("canvas").getContext("2d");
  return s.font = n.font || r(), s.measureText(e).width;
}, d2 = (e) => {
  const t = getComputedStyle(e);
  let n = e.clientWidth, r = e.clientHeight;
  return r -= parseFloat(t.paddingTop) + parseFloat(t.paddingBottom), n -= parseFloat(t.paddingLeft) + parseFloat(t.paddingRight), { height: r, width: n };
}, u2 = (e, t) => {
  const n = d2(e).width;
  let r = t;
  if (Mb(t, e) > n) {
    for (; Mb(`...${r}`, e) > n; )
      r = r.substring(1);
    e.value ? e.value = `...${r}` : e.innerText = `...${r}`;
  } else
    e.value ? e.value = t : e.innerText = t;
}, ud = (e) => {
  e.forEach((t) => {
    t.current && clearTimeout(t.current);
  });
}, Zi = (e, t = "ltr") => {
  if (!e)
    return t;
  const n = getComputedStyle(e).getPropertyValue("direction");
  return ["ltr", "rtl"].includes(n) ? n : t;
};
let p2 = 0;
function m2() {
  return typeof crypto < "u" && crypto.randomUUID ? crypto.randomUUID() : Ti();
}
class Ba extends h.Component {
  constructor() {
    super(...arguments), this.uniqueElement = this.props.isRandom ? m2() : p2++, this.id = `${this.props.prefix}${this.uniqueElement}`;
  }
  render() {
    return this.props.children(this.id);
  }
}
Ba.displayName = "GenerateId";
Ba.defaultProps = {
  prefix: "pf-random-id-",
  isRandom: !1
};
const mS = "*";
let f2 = 0;
const Fb = "OUIA-Generated-", jp = {};
function Gn(e, t, n = !0) {
  return {
    "data-ouia-component-type": `PF5/${e}`,
    "data-ouia-safe": n,
    "data-ouia-component-id": t
  };
}
const za = (e, t, n = !0, r) => ({
  "data-ouia-component-type": `PF5/${e}`,
  "data-ouia-safe": n,
  "data-ouia-component-id": h2(e, t, r)
}), h2 = (e, t, n) => {
  const r = nt(() => qa(e, n), [e, n]);
  return t ?? r;
};
function qa(e, t) {
  try {
    let n;
    return typeof window < "u" ? n = `${window.location.href}-${e}-${t || ""}` : n = `${e}-${t || ""}`, jp[n] || (jp[n] = 0), `${Fb}${e}-${t ? `${t}-` : ""}${++jp[n]}`;
  } catch {
    return `${Fb}${e}-${t ? `${t}-` : ""}${++f2}`;
  }
}
function oc(e) {
  const t = e.getBoundingClientRect();
  return {
    width: t.width,
    height: t.height,
    top: t.top,
    right: t.right,
    bottom: t.bottom,
    left: t.left,
    x: t.left,
    y: t.top
  };
}
function Qr(e) {
  if (e.toString() !== "[object Window]") {
    const t = e.ownerDocument;
    return t ? t.defaultView : window;
  }
  return e;
}
function uh(e) {
  const t = Qr(e), n = t.pageXOffset, r = t.pageYOffset;
  return {
    scrollLeft: n,
    scrollTop: r
  };
}
function lc(e) {
  const t = Qr(e).Element;
  return e instanceof t || e instanceof Element;
}
function Xr(e) {
  const t = Qr(e).HTMLElement;
  return e instanceof t || e instanceof HTMLElement;
}
function g2(e) {
  return {
    scrollLeft: e.scrollLeft,
    scrollTop: e.scrollTop
  };
}
function b2(e) {
  return e === Qr(e) || !Xr(e) ? uh(e) : g2(e);
}
function _r(e) {
  return e ? (e.nodeName || "").toLowerCase() : null;
}
function Li(e) {
  return (lc(e) ? e.ownerDocument : e.document).documentElement;
}
function ph(e) {
  return oc(Li(e)).left + uh(e).scrollLeft;
}
function Ci(e) {
  return Qr(e).getComputedStyle(e);
}
function mh(e) {
  const { overflow: t, overflowX: n, overflowY: r } = Ci(e);
  return /auto|scroll|overlay|hidden/.test(t + r + n);
}
function v2(e, t, n = !1) {
  const r = Li(t), i = oc(e), s = Xr(t);
  let o = { scrollLeft: 0, scrollTop: 0 }, l = { x: 0, y: 0 };
  return (s || !s && !n) && ((_r(t) !== "body" || // https://github.com/popperjs/popper-core/issues/1078
  mh(r)) && (o = b2(t)), Xr(t) ? (l = oc(t), l.x += t.clientLeft, l.y += t.clientTop) : r && (l.x = ph(r))), {
    x: i.left + o.scrollLeft - l.x,
    y: i.top + o.scrollTop - l.y,
    width: i.width,
    height: i.height
  };
}
function fh(e) {
  return {
    x: e.offsetLeft,
    y: e.offsetTop,
    width: e.offsetWidth,
    height: e.offsetHeight
  };
}
function Bu(e) {
  return _r(e) === "html" ? e : (
    // $FlowFixMe: this is a quicker (but less type safe) way to save quite some bytes from the bundle
    e.assignedSlot || // step into the shadow DOM of the parent of a slotted node
    e.parentNode || // DOM Element detected
    // $FlowFixMe: need a better way to handle this...
    e.host || // ShadowRoot detected
    // $FlowFixMe: HTMLElement is a Node
    Li(e)
  );
}
function fS(e) {
  return ["html", "body", "#document"].indexOf(_r(e)) >= 0 ? e.ownerDocument.body : Xr(e) && mh(e) ? e : fS(Bu(e));
}
function Hl(e, t = []) {
  const n = fS(e), r = _r(n) === "body", i = Qr(n), s = r ? [i].concat(i.visualViewport || [], mh(n) ? n : []) : n, o = t.concat(s);
  return r ? o : o.concat(Hl(Bu(s)));
}
function y2(e) {
  return ["table", "td", "th"].indexOf(_r(e)) >= 0;
}
function $b(e) {
  if (!Xr(e) || // https://github.com/popperjs/popper-core/issues/837
  Ci(e).position === "fixed")
    return null;
  const t = e.offsetParent;
  if (t) {
    const n = Li(t);
    if (_r(t) === "body" && Ci(t).position === "static" && Ci(n).position !== "static")
      return n;
  }
  return t;
}
function C2(e) {
  let t = Bu(e);
  for (; Xr(t) && ["html", "body"].indexOf(_r(t)) < 0; ) {
    const n = Ci(t);
    if (n.transform !== "none" || n.perspective !== "none" || n.willChange && n.willChange !== "auto")
      return t;
    t = t.parentNode;
  }
  return null;
}
function Fc(e) {
  const t = Qr(e);
  let n = $b(e);
  for (; n && y2(n) && Ci(n).position === "static"; )
    n = $b(n);
  return n && _r(n) === "body" && Ci(n).position === "static" ? t : n || C2(e) || t;
}
const sr = "top", kr = "bottom", Tr = "right", or = "left", hh = "auto", $c = [sr, kr, Tr, or], Fo = "start", gh = "end", x2 = "clippingParents", hS = "viewport", Il = "popper", S2 = "reference", jb = $c.reduce((e, t) => e.concat([`${t}-${Fo}`, `${t}-${gh}`]), []), gS = [...$c, hh].reduce((e, t) => e.concat([t, `${t}-${Fo}`, `${t}-${gh}`]), []), w2 = "beforeRead", O2 = "read", k2 = "afterRead", T2 = "beforeMain", I2 = "main", E2 = "afterMain", P2 = "beforeWrite", _2 = "write", R2 = "afterWrite", A2 = [
  w2,
  O2,
  k2,
  T2,
  I2,
  E2,
  P2,
  _2,
  R2
];
function L2(e) {
  const t = /* @__PURE__ */ new Map(), n = /* @__PURE__ */ new Set(), r = [];
  e.forEach((s) => {
    t.set(s.name, s);
  });
  function i(s) {
    n.add(s.name), [...s.requires || [], ...s.requiresIfExists || []].forEach((l) => {
      if (!n.has(l)) {
        const c = t.get(l);
        c && i(c);
      }
    }), r.push(s);
  }
  return e.forEach((s) => {
    n.has(s.name) || i(s);
  }), r;
}
function N2(e) {
  const t = L2(e);
  return A2.reduce((n, r) => n.concat(t.filter((i) => i.phase === r)), []);
}
function D2(e) {
  let t;
  return () => (t || (t = new Promise((n) => {
    Promise.resolve().then(() => {
      t = void 0, n(e());
    });
  })), t);
}
function qr(e) {
  return e.split("-")[0];
}
function M2(e) {
  const t = e.reduce((n, r) => {
    const i = n[r.name];
    return n[r.name] = i ? Object.assign(Object.assign(Object.assign({}, i), r), { options: Object.assign(Object.assign({}, i.options), r.options), data: Object.assign(Object.assign({}, i.data), r.data) }) : r, n;
  }, {});
  return Object.keys(t).map((n) => t[n]);
}
function F2(e) {
  const t = Qr(e), n = Li(e), r = t.visualViewport;
  let i = n.clientWidth, s = n.clientHeight, o = 0, l = 0;
  return r && (i = r.width, s = r.height, /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || (o = r.offsetLeft, l = r.offsetTop)), {
    width: i,
    height: s,
    x: o + ph(e),
    y: l
  };
}
function $2(e) {
  const t = Li(e), n = uh(e), r = e.ownerDocument.body, i = Math.max(t.scrollWidth, t.clientWidth, r ? r.scrollWidth : 0, r ? r.clientWidth : 0), s = Math.max(t.scrollHeight, t.clientHeight, r ? r.scrollHeight : 0, r ? r.clientHeight : 0);
  let o = -n.scrollLeft + ph(e);
  const l = -n.scrollTop;
  return Ci(r || t).direction === "rtl" && (o += Math.max(t.clientWidth, r ? r.clientWidth : 0) - i), { width: i, height: s, x: o, y: l };
}
function bS(e, t) {
  const n = !!(t.getRootNode && t.getRootNode().host);
  if (e.contains(t))
    return !0;
  if (n) {
    let r = t;
    do {
      if (r && e.isSameNode(r))
        return !0;
      r = r.parentNode || r.host;
    } while (r);
  }
  return !1;
}
function Ym(e) {
  return Object.assign(Object.assign({}, e), { left: e.x, top: e.y, right: e.x + e.width, bottom: e.y + e.height });
}
function j2(e) {
  const t = oc(e);
  return t.top = t.top + e.clientTop, t.left = t.left + e.clientLeft, t.bottom = t.top + e.clientHeight, t.right = t.left + e.clientWidth, t.width = e.clientWidth, t.height = e.clientHeight, t.x = t.left, t.y = t.top, t;
}
function Bb(e, t) {
  return t === hS ? Ym(F2(e)) : Xr(t) ? j2(t) : Ym($2(Li(e)));
}
function B2(e) {
  const t = Hl(Bu(e)), r = ["absolute", "fixed"].indexOf(Ci(e).position) >= 0 && Xr(e) ? Fc(e) : e;
  return lc(r) ? t.filter((i) => lc(i) && bS(i, r) && _r(i) !== "body") : [];
}
function U2(e, t, n) {
  const i = [...t === "clippingParents" ? B2(e) : [].concat(t), n], s = i[0], o = i.reduce((l, c) => {
    const d = Bb(e, c);
    return l.top = Math.max(d.top, l.top), l.right = Math.min(d.right, l.right), l.bottom = Math.min(d.bottom, l.bottom), l.left = Math.max(d.left, l.left), l;
  }, Bb(e, s));
  return o.width = o.right - o.left, o.height = o.bottom - o.top, o.x = o.left, o.y = o.top, o;
}
function cc(e) {
  return e.split("-")[1];
}
function bh(e) {
  return ["top", "bottom"].indexOf(e) >= 0 ? "x" : "y";
}
function vS({ reference: e, element: t, placement: n }) {
  const r = n ? qr(n) : null, i = n ? cc(n) : null, s = e.x + e.width / 2 - t.width / 2, o = e.y + e.height / 2 - t.height / 2;
  let l;
  switch (r) {
    case sr:
      l = {
        x: s,
        y: e.y - t.height
      };
      break;
    case kr:
      l = {
        x: s,
        y: e.y + e.height
      };
      break;
    case Tr:
      l = {
        x: e.x + e.width,
        y: o
      };
      break;
    case or:
      l = {
        x: e.x - t.width,
        y: o
      };
      break;
    default:
      l = {
        x: e.x,
        y: e.y
      };
  }
  const c = r ? bh(r) : null;
  if (c != null) {
    const d = c === "y" ? "height" : "width";
    switch (i) {
      case Fo:
        l[c] = Math.floor(l[c]) - Math.floor(e[d] / 2 - t[d] / 2);
        break;
      case gh:
        l[c] = Math.floor(l[c]) + Math.ceil(e[d] / 2 - t[d] / 2);
        break;
    }
  }
  return l;
}
function yS() {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  };
}
function CS(e) {
  return Object.assign(Object.assign({}, yS()), e);
}
function xS(e, t) {
  return t.reduce((n, r) => (n[r] = e, n), {});
}
function dc(e, t = {}) {
  const { placement: n = e.placement, boundary: r = x2, rootBoundary: i = hS, elementContext: s = Il, altBoundary: o = !1, padding: l = 0 } = t, c = CS(typeof l != "number" ? l : xS(l, $c)), d = s === Il ? S2 : Il, u = e.elements.reference, p = e.rects.popper, m = e.elements[o ? d : s], f = U2(lc(m) ? m : m.contextElement || Li(e.elements.popper), r, i), g = oc(u), b = vS({
    reference: g,
    element: p,
    strategy: "absolute",
    placement: n
  }), v = Ym(Object.assign(Object.assign({}, p), b)), y = s === Il ? v : g, C = {
    top: f.top - y.top + c.top,
    bottom: y.bottom - f.bottom + c.bottom,
    left: f.left - y.left + c.left,
    right: y.right - f.right + c.right
  }, S = e.modifiersData.offset;
  if (s === Il && S) {
    const P = S[n];
    Object.keys(C).forEach((w) => {
      const A = [Tr, kr].indexOf(w) >= 0 ? 1 : -1, k = [sr, kr].indexOf(w) >= 0 ? "y" : "x";
      C[w] += P[k] * A;
    });
  }
  return C;
}
const Ub = {
  placement: "bottom",
  modifiers: [],
  strategy: "absolute"
};
function Vb(...e) {
  return !e.some((t) => !(t && typeof t.getBoundingClientRect == "function"));
}
function V2(e = {}) {
  const { defaultModifiers: t = [], defaultOptions: n = Ub } = e;
  return function(i, s, o = n) {
    let l = {
      placement: "bottom",
      orderedModifiers: [],
      options: Object.assign(Object.assign({}, Ub), n),
      modifiersData: {},
      elements: {
        reference: i,
        popper: s
      },
      attributes: {},
      styles: {}
    }, c = [], d = !1;
    const u = {
      state: l,
      setOptions(f) {
        m(), l.options = Object.assign(Object.assign(Object.assign({}, n), l.options), f), l.scrollParents = {
          reference: lc(i) ? Hl(i) : i.contextElement ? Hl(i.contextElement) : [],
          popper: Hl(s)
        };
        const g = N2(M2([...t, ...l.options.modifiers]));
        return l.orderedModifiers = g.filter((b) => b.enabled), p(), u.update();
      },
      // Sync update – it will always be executed, even if not necessary. This
      // is useful for low frequency updates where sync behavior simplifies the
      // logic.
      // For high frequency updates (e.g. `resize` and `scroll` events), always
      // prefer the async Popper#update method
      forceUpdate() {
        if (d)
          return;
        const { reference: f, popper: g } = l.elements;
        if (Vb(f, g)) {
          l.rects = {
            reference: v2(f, Fc(g), l.options.strategy === "fixed"),
            popper: fh(g)
          }, l.reset = !1, l.placement = l.options.placement, l.orderedModifiers.forEach((b) => l.modifiersData[b.name] = Object.assign({}, b.data));
          for (let b = 0; b < l.orderedModifiers.length; b++) {
            if (l.reset === !0) {
              l.reset = !1, b = -1;
              continue;
            }
            const { fn: v, options: y = {}, name: C } = l.orderedModifiers[b];
            typeof v == "function" && (l = v({ state: l, options: y, name: C, instance: u }) || l);
          }
        }
      },
      // Async and optimistically optimized update – it will not be executed if
      // not necessary (debounced to run at most once-per-tick)
      update: D2(() => new Promise((f) => {
        u.forceUpdate(), f(l);
      })),
      destroy() {
        m(), d = !0;
      }
    };
    if (!Vb(i, s))
      return u;
    u.setOptions(o).then((f) => {
      !d && o.onFirstUpdate && o.onFirstUpdate(f);
    });
    function p() {
      l.orderedModifiers.forEach(({ name: f, options: g = {}, effect: b }) => {
        if (typeof b == "function") {
          const v = b({ state: l, name: f, instance: u, options: g }), y = () => {
          };
          c.push(v || y);
        }
      });
    }
    function m() {
      c.forEach((f) => f()), c = [];
    }
    return u;
  };
}
const pd = { passive: !0 };
function K2({ state: e, instance: t, options: n }) {
  const { scroll: r = !0, resize: i = !0 } = n, s = Qr(e.elements.popper), o = [...e.scrollParents.reference, ...e.scrollParents.popper];
  return r && o.forEach((l) => {
    l.addEventListener("scroll", t.update, pd);
  }), i && s.addEventListener("resize", t.update, pd), () => {
    r && o.forEach((l) => {
      l.removeEventListener("scroll", t.update, pd);
    }), i && s.removeEventListener("resize", t.update, pd);
  };
}
const H2 = {
  name: "eventListeners",
  enabled: !0,
  phase: "write",
  fn: () => {
  },
  effect: K2,
  data: {}
};
function z2({ state: e, name: t }) {
  e.modifiersData[t] = vS({
    reference: e.rects.reference,
    element: e.rects.popper,
    strategy: "absolute",
    placement: e.placement
  });
}
const q2 = {
  name: "popperOffsets",
  enabled: !0,
  phase: "read",
  fn: z2,
  data: {}
}, G2 = {
  top: "auto",
  right: "auto",
  bottom: "auto",
  left: "auto"
};
function W2({ x: e, y: t }) {
  const r = window.devicePixelRatio || 1;
  return {
    x: Math.round(e * r) / r || 0,
    y: Math.round(t * r) / r || 0
  };
}
function Kb({ popper: e, popperRect: t, placement: n, offsets: r, position: i, gpuAcceleration: s, adaptive: o }) {
  let { x: l, y: c } = W2(r);
  const d = r.hasOwnProperty("x"), u = r.hasOwnProperty("y");
  let p = or, m = sr;
  const f = window;
  if (o) {
    let b = Fc(e);
    b === Qr(e) && (b = Li(e)), n === sr && (m = kr, c -= b.clientHeight - t.height, c *= s ? 1 : -1), n === or && (p = Tr, l -= b.clientWidth - t.width, l *= s ? 1 : -1);
  }
  const g = Object.assign({ position: i }, o && G2);
  return s ? Object.assign(Object.assign({}, g), {
    [m]: u ? "0" : "",
    [p]: d ? "0" : "",
    // Layer acceleration can disable subpixel rendering which causes slightly
    // blurry text on low PPI displays, so we want to use 2D transforms
    // instead
    transform: (f.devicePixelRatio || 1) < 2 ? `translate(${l}px, ${c}px)` : `translate3d(${l}px, ${c}px, 0)`
  }) : Object.assign(Object.assign({}, g), { [m]: u ? `${c}px` : "", [p]: d ? `${l}px` : "", transform: "" });
}
function X2({ state: e, options: t }) {
  const { gpuAcceleration: n = !0, adaptive: r = !0 } = t, i = {
    placement: qr(e.placement),
    popper: e.elements.popper,
    popperRect: e.rects.popper,
    gpuAcceleration: n
  };
  e.modifiersData.popperOffsets != null && (e.styles.popper = Object.assign(Object.assign({}, e.styles.popper), Kb(Object.assign(Object.assign({}, i), { offsets: e.modifiersData.popperOffsets, position: e.options.strategy, adaptive: r })))), e.modifiersData.arrow != null && (e.styles.arrow = Object.assign(Object.assign({}, e.styles.arrow), Kb(Object.assign(Object.assign({}, i), { offsets: e.modifiersData.arrow, position: "absolute", adaptive: !1 })))), e.attributes.popper = Object.assign(Object.assign({}, e.attributes.popper), { "data-popper-placement": e.placement });
}
const Y2 = {
  name: "computeStyles",
  enabled: !0,
  phase: "beforeWrite",
  fn: X2,
  data: {}
};
function J2({ state: e }) {
  Object.keys(e.elements).forEach((t) => {
    const n = e.styles[t] || {}, r = e.attributes[t] || {}, i = e.elements[t];
    !Xr(i) || !_r(i) || (Object.assign(i.style, n), Object.keys(r).forEach((s) => {
      const o = r[s];
      o === !1 ? i.removeAttribute(s) : i.setAttribute(s, o === !0 ? "" : o);
    }));
  });
}
function Z2({ state: e }) {
  const t = {
    popper: {
      position: e.options.strategy,
      left: "0",
      top: "0",
      margin: "0"
    },
    arrow: {
      position: "absolute"
    },
    reference: {}
  };
  return Object.assign(e.elements.popper.style, t.popper), e.elements.arrow && Object.assign(e.elements.arrow.style, t.arrow), () => {
    Object.keys(e.elements).forEach((n) => {
      const r = e.elements[n], i = e.attributes[n] || {}, o = Object.keys(e.styles.hasOwnProperty(n) ? e.styles[n] : t[n]).reduce((l, c) => (l[c] = "", l), {});
      !Xr(r) || !_r(r) || (Object.assign(r.style, o), Object.keys(i).forEach((l) => {
        r.removeAttribute(l);
      }));
    });
  };
}
const Q2 = {
  name: "applyStyles",
  enabled: !0,
  phase: "write",
  fn: J2,
  effect: Z2,
  requires: ["computeStyles"]
};
function eP(e, t, n) {
  const r = qr(e), i = [or, sr].indexOf(r) >= 0 ? -1 : 1;
  let [s, o] = typeof n == "function" ? n(Object.assign(Object.assign({}, t), { placement: e })) : n;
  return s = s || 0, o = (o || 0) * i, [or, Tr].indexOf(r) >= 0 ? { x: o, y: s } : { x: s, y: o };
}
function tP({ state: e, options: t, name: n }) {
  const { offset: r = [0, 0] } = t, i = gS.reduce((l, c) => (l[c] = eP(c, e.rects, r), l), {}), { x: s, y: o } = i[e.placement];
  e.modifiersData.popperOffsets != null && (e.modifiersData.popperOffsets.x += s, e.modifiersData.popperOffsets.y += o), e.modifiersData[n] = i;
}
const nP = {
  name: "offset",
  enabled: !0,
  phase: "main",
  requires: ["popperOffsets"],
  fn: tP
}, aP = { left: "right", right: "left", bottom: "top", top: "bottom" };
function Ld(e) {
  return e.replace(/left|right|bottom|top/g, (t) => aP[t]);
}
const rP = { start: "end", end: "start" };
function Hb(e) {
  return e.replace(/start|end/g, (t) => rP[t]);
}
function iP(e, t = {}) {
  const { placement: n, boundary: r, rootBoundary: i, padding: s, flipVariations: o, allowedAutoPlacements: l = gS } = t, c = cc(n), d = c ? o ? jb : jb.filter((m) => cc(m) === c) : $c;
  let u = d.filter((m) => l.indexOf(m) >= 0);
  u.length === 0 && (u = d);
  const p = u.reduce((m, f) => (m[f] = dc(e, {
    placement: f,
    boundary: r,
    rootBoundary: i,
    padding: s
  })[qr(f)], m), {});
  return Object.keys(p).sort((m, f) => p[m] - p[f]);
}
function sP(e) {
  if (qr(e) === hh)
    return [];
  const t = Ld(e);
  return [
    Hb(e),
    t,
    Hb(t)
  ];
}
function oP({ state: e, options: t, name: n }) {
  if (e.modifiersData[n]._skip)
    return;
  const { mainAxis: r = !0, altAxis: i = !0, fallbackPlacements: s, padding: o, boundary: l, rootBoundary: c, altBoundary: d, flipVariations: u = !0, allowedAutoPlacements: p } = t, m = e.options.placement, g = qr(m) === m, b = s || (g || !u ? [Ld(m)] : sP(m)), v = [m, ...b].reduce((A, k) => A.concat(qr(k) === hh ? iP(e, {
    placement: k,
    boundary: l,
    rootBoundary: c,
    padding: o,
    flipVariations: u,
    allowedAutoPlacements: p
  }) : k), []), y = e.rects.reference, C = e.rects.popper, S = /* @__PURE__ */ new Map();
  let P = !0, w = v[0];
  for (let A = 0; A < v.length; A++) {
    const k = v[A], T = qr(k), O = cc(k) === Fo, I = [sr, kr].indexOf(T) >= 0, _ = I ? "width" : "height", E = dc(e, {
      placement: k,
      boundary: l,
      rootBoundary: c,
      altBoundary: d,
      padding: o
    });
    let L = I ? O ? Tr : or : O ? kr : sr;
    y[_] > C[_] && (L = Ld(L));
    const F = Ld(L), R = [];
    if (r && R.push(E[T] <= 0), i && R.push(E[L] <= 0, E[F] <= 0), R.every((M) => M)) {
      w = k, P = !1;
      break;
    }
    S.set(k, R);
  }
  if (P) {
    const A = u ? 3 : 1;
    for (let k = A; k > 0; k--) {
      const T = v.find((O) => {
        const I = S.get(O);
        if (I)
          return I.slice(0, k).every((_) => _);
      });
      if (T) {
        w = T;
        break;
      }
    }
  }
  e.placement !== w && (e.modifiersData[n]._skip = !0, e.placement = w, e.reset = !0);
}
const lP = {
  name: "flip",
  enabled: !0,
  phase: "main",
  fn: oP,
  requiresIfExists: ["offset"],
  data: { _skip: !1 }
};
function cP(e) {
  return e === "x" ? "y" : "x";
}
function Nd(e, t, n) {
  return Math.max(e, Math.min(t, n));
}
function dP({ state: e, options: t, name: n }) {
  const { mainAxis: r = !0, altAxis: i = !1, boundary: s, rootBoundary: o, altBoundary: l, padding: c, tether: d = !0, tetherOffset: u = 0 } = t, p = dc(e, {
    boundary: s,
    rootBoundary: o,
    padding: c,
    altBoundary: l
  }), m = qr(e.placement), f = cc(e.placement), g = !f, b = bh(m), v = cP(b), y = e.modifiersData.popperOffsets, C = e.rects.reference, S = e.rects.popper, P = typeof u == "function" ? u(Object.assign(Object.assign({}, e.rects), { placement: e.placement })) : u, w = { x: 0, y: 0 };
  if (y) {
    if (r) {
      const A = b === "y" ? sr : or, k = b === "y" ? kr : Tr, T = b === "y" ? "height" : "width", O = y[b], I = y[b] + p[A], _ = y[b] - p[k], E = d ? -S[T] / 2 : 0, L = f === Fo ? C[T] : S[T], F = f === Fo ? -S[T] : -C[T], R = e.elements.arrow, M = d && R ? fh(R) : { width: 0, height: 0 }, U = e.modifiersData["arrow#persistent"] ? e.modifiersData["arrow#persistent"].padding : yS(), K = U[A], G = U[k], N = Nd(0, C[T], M[T]), $ = g ? C[T] / 2 - E - N - K - P : L - N - K - P, q = g ? -C[T] / 2 + E + N + G + P : F + N + G + P, V = e.elements.arrow && Fc(e.elements.arrow), B = V ? b === "y" ? V.clientTop || 0 : V.clientLeft || 0 : 0, Z = e.modifiersData.offset ? e.modifiersData.offset[e.placement][b] : 0, X = y[b] + $ - Z - B, Q = y[b] + q - Z, ie = Nd(d ? Math.min(I, X) : I, O, d ? Math.max(_, Q) : _);
      y[b] = ie, w[b] = ie - O;
    }
    if (i) {
      const A = b === "x" ? sr : or, k = b === "x" ? kr : Tr, T = y[v], O = T + p[A], I = T - p[k], _ = Nd(O, T, I);
      y[v] = _, w[v] = _ - T;
    }
    e.modifiersData[n] = w;
  }
}
const uP = {
  name: "preventOverflow",
  enabled: !0,
  phase: "main",
  fn: dP,
  requiresIfExists: ["offset"]
};
function pP({ state: e, name: t }) {
  const n = e.elements.arrow, r = e.modifiersData.popperOffsets, i = qr(e.placement), s = bh(i), l = [or, Tr].indexOf(i) >= 0 ? "height" : "width";
  if (!n || !r)
    return;
  const c = e.modifiersData[`${t}#persistent`].padding, d = fh(n), u = s === "y" ? sr : or, p = s === "y" ? kr : Tr, m = e.rects.reference[l] + e.rects.reference[s] - r[s] - e.rects.popper[l], f = r[s] - e.rects.reference[s], g = Fc(n), b = g ? s === "y" ? g.clientHeight || 0 : g.clientWidth || 0 : 0, v = m / 2 - f / 2, y = c[u], C = b - d[l] - c[p], S = b / 2 - d[l] / 2 + v, P = Nd(y, S, C), w = s;
  e.modifiersData[t] = {
    [w]: P,
    centerOffset: P - S
  };
}
function mP({ state: e, options: t, name: n }) {
  let { element: r = "[data-popper-arrow]", padding: i = 0 } = t;
  r != null && (typeof r == "string" && (r = e.elements.popper.querySelector(r), !r) || bS(e.elements.popper, r) && (e.elements.arrow = r, e.modifiersData[`${n}#persistent`] = {
    padding: CS(typeof i != "number" ? i : xS(i, $c))
  }));
}
const fP = {
  name: "arrow",
  enabled: !0,
  phase: "main",
  fn: pP,
  effect: mP,
  requires: ["popperOffsets"],
  requiresIfExists: ["preventOverflow"]
};
function zb(e, t, n = { x: 0, y: 0 }) {
  return {
    top: e.top - t.height - n.y,
    right: e.right - t.width + n.x,
    bottom: e.bottom - t.height + n.y,
    left: e.left - t.width - n.x
  };
}
function qb(e) {
  return [sr, Tr, kr, or].some((t) => e[t] >= 0);
}
function hP({ state: e, name: t }) {
  const n = e.rects.reference, r = e.rects.popper, i = e.modifiersData.preventOverflow, s = dc(e, {
    elementContext: "reference"
  }), o = dc(e, {
    altBoundary: !0
  }), l = zb(s, n), c = zb(o, r, i), d = qb(l), u = qb(c);
  e.modifiersData[t] = {
    referenceClippingOffsets: l,
    popperEscapeOffsets: c,
    isReferenceHidden: d,
    hasPopperEscaped: u
  }, e.attributes.popper = Object.assign(Object.assign({}, e.attributes.popper), { "data-popper-reference-hidden": d, "data-popper-escaped": u });
}
const gP = {
  name: "hide",
  enabled: !0,
  phase: "main",
  requiresIfExists: ["preventOverflow"],
  fn: hP
}, bP = [
  H2,
  q2,
  Y2,
  Q2,
  nP,
  lP,
  uP,
  fP,
  gP
], vP = V2({ defaultModifiers: bP }), uc = wn ? h.useLayoutEffect : h.useEffect, yP = (e, t) => JSON.stringify(e) === JSON.stringify(t), Gb = (e) => e.reduce((t, [n, r]) => (t[n] = r, t), {}), CP = [], xP = (e, t, n = {}) => {
  const r = h.useRef(null), i = {
    onFirstUpdate: n.onFirstUpdate,
    placement: n.placement || "bottom",
    strategy: n.strategy || "absolute",
    modifiers: n.modifiers || CP
  }, [s, o] = h.useState({
    styles: {
      popper: {
        position: i.strategy,
        left: "0",
        top: "0"
      }
    },
    attributes: {}
  }), l = h.useMemo(() => ({
    name: "updateState",
    enabled: !0,
    phase: "write",
    // eslint-disable-next-line no-shadow
    fn: ({ state: u }) => {
      const p = Object.keys(u.elements);
      o({
        styles: Gb(p.map((m) => [m, u.styles[m] || {}])),
        attributes: Gb(p.map((m) => [m, u.attributes[m]]))
      });
    },
    requires: ["computeStyles"]
  }), []), c = h.useMemo(() => {
    const u = {
      onFirstUpdate: i.onFirstUpdate,
      placement: i.placement,
      strategy: i.strategy,
      modifiers: [...i.modifiers, l, { name: "applyStyles", enabled: !1 }]
    };
    return yP(r.current, u) ? r.current || u : (r.current = u, u);
  }, [
    i.onFirstUpdate,
    i.placement,
    i.strategy,
    i.modifiers,
    l
  ]), d = h.useRef();
  return uc(() => {
    d && d.current && d.current.setOptions(c);
  }, [c]), uc(() => {
    if (e == null || t == null)
      return;
    const p = (n.createPopper || vP)(e, t, c);
    return d.current = p, () => {
      p.destroy(), d.current = null;
    };
  }, [e, t, n.createPopper]), {
    state: d.current ? d.current.state : null,
    styles: s.styles,
    attributes: s.attributes,
    update: d.current ? d.current.update : null,
    forceUpdate: d.current ? d.current.forceUpdate : null
  };
}, SP = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom",
  "top-start": "bottom-end",
  "top-end": "bottom-start",
  "bottom-start": "top-end",
  "bottom-end": "top-start",
  "left-start": "right-end",
  "left-end": "right-start",
  "right-start": "left-end",
  "right-end": "left-start"
}, wP = (e) => e.replace(/left|right|bottom|top|top-start|top-end|bottom-start|bottom-end|right-start|right-end|left-start|left-end/g, (t) => SP[t]), OP = (e) => `opacity ${e}ms cubic-bezier(.54, 1.5, .38, 1.11)`, ei = ({ trigger: e, popper: t, direction: n = "down", position: r = "start", placement: i, width: s, minWidth: o = "trigger", maxWidth: l, appendTo: c = "inline", zIndex: d = 9999, isVisible: u = !0, positionModifiers: p, distance: m = 0, onMouseEnter: f, onMouseLeave: g, onFocus: b, onBlur: v, onDocumentClick: y, onTriggerClick: C, onTriggerEnter: S, onPopperClick: P, onPopperMouseEnter: w, onPopperMouseLeave: A, onDocumentKeyDown: k, enableFlip: T = !0, flipBehavior: O = "flip", triggerRef: I, popperRef: _, animationDuration: E = 0, entryDelay: L = 0, exitDelay: F = 0, onHidden: R = () => {
}, onHide: M = () => {
}, onMount: U = () => {
}, onShow: K = () => {
}, onShown: G = () => {
}, preventOverflow: N = !1 }) => {
  var $;
  const [q, V] = h.useState(null), [B, Z] = h.useState(null), [X, Q] = h.useState(null), [ie, me] = h.useState(null), [ee, ce] = h.useState(!1), [ae, Oe] = h.useState(0), [Ie, Me] = h.useState(u), ge = h.useRef(null), Se = h.useRef(null), J = h.useRef(null), W = h.useRef(), Y = B || q, oe = u || Ie, he = ($ = I?.current || q) === null || $ === void 0 ? void 0 : $.parentElement, ue = Zi(he), fe = h.useMemo(() => {
    const It = { left: "left", right: "right", center: "center" };
    return {
      ltr: Object.assign({ start: "left", end: "right" }, It),
      rtl: Object.assign({ start: "right", end: "left" }, It)
    }[ue][r];
  }, [r, ue]), Ce = h.useCallback((It) => y(It, Y, X), [oe, q, B, X, y]);
  h.useEffect(() => {
    ce(!0), U();
  }, []), h.useEffect(() => () => {
    ud([ge, J, Se]);
  }, []), h.useEffect(() => {
    I && (I.current ? Z(I.current) : typeof I == "function" && Z(I()));
  }, [I, e]), h.useEffect(() => {
    _ && (_.current ? Q(_.current) : typeof _ == "function" && Q(_()));
  }, [oe, _]), h.useEffect(() => {
    const It = new MutationObserver(() => {
      Wn && Wn();
    });
    return X && It.observe(X, { attributes: !0, childList: !0, subtree: !0 }), () => {
      It.disconnect();
    };
  }, [X]);
  const Ge = (It, Tn, vs, ys = !1) => {
    It && Tn && Tn.addEventListener(vs, It, { capture: ys });
  }, Qe = (It, Tn, vs, ys = !1) => {
    It && Tn && Tn.removeEventListener(vs, It, { capture: ys });
  };
  h.useEffect(() => (Ge(f, Y, "mouseenter"), Ge(g, Y, "mouseleave"), Ge(b, Y, "focus"), Ge(v, Y, "blur"), Ge(C, Y, "click"), Ge(S, Y, "keydown"), Ge(P, X, "click"), Ge(w, X, "mouseenter"), Ge(A, X, "mouseleave"), y && Ge(Ce, document, "click", !0), Ge(k, document, "keydown", !0), () => {
    Qe(f, Y, "mouseenter"), Qe(g, Y, "mouseleave"), Qe(b, Y, "focus"), Qe(v, Y, "blur"), Qe(C, Y, "click"), Qe(S, Y, "keydown"), Qe(P, X, "click"), Qe(w, X, "mouseenter"), Qe(A, X, "mouseleave"), y && Qe(Ce, document, "click", !0), Qe(k, document, "keydown", !0);
  }), [
    q,
    X,
    f,
    g,
    b,
    v,
    C,
    S,
    P,
    w,
    A,
    y,
    k,
    B
  ]);
  const qe = () => {
    if (i)
      return i;
    let It = n === "up" ? "top" : "bottom";
    return fe !== "center" && (It = `${It}-${fe === "right" ? "end" : "start"}`), It;
  }, Ot = h.useMemo(qe, [n, fe, i]), Bt = h.useMemo(() => wP(qe()), [n, fe, i]), Ye = h.useMemo(() => ({
    name: "widthMods",
    enabled: s !== void 0 || o !== void 0 || l !== void 0,
    phase: "beforeWrite",
    requires: ["computeStyles"],
    fn: ({ state: It }) => {
      const Tn = It.rects.reference.width;
      s && (It.styles.popper.width = s === "trigger" ? `${Tn}px` : s), o && (It.styles.popper.minWidth = o === "trigger" ? `${Tn}px` : o), l && (It.styles.popper.maxWidth = l === "trigger" ? `${Tn}px` : l);
    },
    effect: ({ state: It }) => {
      const Tn = It.elements.reference.offsetWidth;
      return s && (It.elements.popper.style.width = s === "trigger" ? `${Tn}px` : s), o && (It.elements.popper.style.minWidth = o === "trigger" ? `${Tn}px` : o), l && (It.elements.popper.style.maxWidth = l === "trigger" ? `${Tn}px` : l), () => {
      };
    }
  }), [s, o, l]), { styles: _t, attributes: Mt, update: Wn, forceUpdate: Na } = xP(Y, X, {
    placement: Ot,
    modifiers: [
      {
        name: "offset",
        options: {
          offset: [0, m]
        }
      },
      {
        name: "preventOverflow",
        enabled: N
      },
      {
        // adds attribute [data-popper-reference-hidden] to the popper element which can be used to hide it using CSS
        name: "hide",
        enabled: !0
      },
      {
        name: "flip",
        enabled: Ot.startsWith("auto") || T,
        options: {
          fallbackPlacements: O === "flip" ? [Bt] : O
        }
      },
      Ye
    ]
  });
  h.useEffect(() => {
    var It, Tn, vs, ys, Lp, Np, Dp;
    const Mp = ((ys = (vs = (Tn = (It = t?.props) === null || It === void 0 ? void 0 : It.children) === null || Tn === void 0 ? void 0 : Tn[1]) === null || vs === void 0 ? void 0 : vs.props) === null || ys === void 0 ? void 0 : ys.children) || ((Dp = (Np = (Lp = t?.props) === null || Lp === void 0 ? void 0 : Lp.children) === null || Np === void 0 ? void 0 : Np.props) === null || Dp === void 0 ? void 0 : Dp.children);
    me(Mp), Mp && ie && Mp !== ie && Na && Na();
  }, [t]), h.useEffect(() => {
    W.current < F && (ud([ge, J]), J.current = setTimeout(() => {
      ge.current = setTimeout(() => {
        Me(!1);
      }, E);
    }, F)), W.current = F;
  }, [F]);
  const Ga = () => {
    K(), ud([ge, J]), Se.current = setTimeout(() => {
      Me(!0), Oe(1), G();
    }, L);
  }, ii = () => {
    M(), ud([Se]), J.current = setTimeout(() => {
      Oe(0), ge.current = setTimeout(() => {
        Me(!1), R();
      }, E);
    }, F);
  };
  h.useEffect(() => {
    u ? Ga() : ii();
  }, [u]);
  const si = () => {
    if (Mt && Mt.popper && Mt.popper["data-popper-placement"]) {
      const It = Mt.popper["data-popper-placement"];
      return p[It];
    }
    return p.top;
  }, ld = Object.assign({ className: j(t.props && t.props.className, p && si()), style: Object.assign(Object.assign(Object.assign({}, t.props && t.props.style || {}), _t.popper), {
    zIndex: d,
    opacity: ae,
    transition: OP(E)
  }) }, Mt.popper), kb = () => {
    const It = h.cloneElement(t, ld);
    return _ ? It : h.createElement("div", { style: { display: "contents" }, ref: (Tn) => Q(Tn?.firstElementChild) }, It);
  }, UI = () => {
    if (c === "inline")
      return kb();
    {
      const It = typeof c == "function" ? c() : c;
      return sh.createPortal(kb(), It);
    }
  };
  return h.createElement(
    h.Fragment,
    null,
    !I && e && h.isValidElement(e) && h.createElement("div", { style: { display: "contents" }, ref: (It) => V(It?.firstElementChild) }, e),
    I && e && h.isValidElement(e) && e,
    ee && oe && UI()
  );
};
ei.displayName = "Popper";
const Gd = (e, t, n = (d) => document.activeElement.contains(d), r = (d) => d, i = ["A", "BUTTON", "INPUT"], s = !1, o = !1, l = !0, c = !0) => {
  const d = document.activeElement, u = e.key;
  let p = null;
  if (!s && ["ArrowUp", "ArrowDown"].includes(u)) {
    e.preventDefault(), e.stopImmediatePropagation();
    let m = -1;
    t.forEach((f, g) => {
      if (n(f)) {
        let b = 0;
        for (; !p && b < t.length && b * -1 < t.length; )
          u === "ArrowUp" ? b-- : b++, m = g + b, m >= t.length && (m = 0), m < 0 && (m = t.length - 1), p = r(t[m]);
      }
    });
  }
  if (!o && ["ArrowLeft", "ArrowRight"].includes(u)) {
    e.preventDefault(), e.stopImmediatePropagation();
    let m = -1;
    t.forEach((f, g) => {
      if (n(f)) {
        const b = t[g].querySelectorAll(i.join(","));
        if (!b.length || c) {
          let v = d;
          for (; v; )
            if (v = u === "ArrowLeft" ? v.previousElementSibling : v.nextElementSibling, v && i.includes(v.tagName)) {
              p = v;
              break;
            }
        } else
          b.forEach((v, y) => {
            e.target === v && (m = y + (u === "ArrowLeft" ? -1 : 1), m >= b.length && (m = 0), m < 0 && (m = b.length - 1), p = b[m]);
          });
      }
    });
  }
  p && (l && (d.tabIndex = -1, p.tabIndex = 0), p.focus());
}, kP = (e) => {
  e && e.length > 0 && (e.forEach((t) => {
    t.tabIndex = -1;
  }), e[0].tabIndex = 0);
};
class vh extends h.Component {
  constructor() {
    super(...arguments), this.keyHandler = (t) => {
      const { isEventFromContainer: n } = this.props;
      if (n ? !n(t) : !this._isEventFromContainer(t))
        return;
      const { isActiveElement: r, getFocusableElement: i, noVerticalArrowHandling: s, noHorizontalArrowHandling: o, noEnterHandling: l, noSpaceHandling: c, updateTabIndex: d, validSiblingTags: u, additionalKeyHandler: p, createNavigableElements: m, onlyTraverseSiblings: f } = this.props;
      p && p(t);
      const g = m();
      if (!g) {
        console.warn("No navigable elements have been passed to the KeyboardHandler. Keyboard navigation provided by this component will be ignored.");
        return;
      }
      const b = t.key;
      l || b === "Enter" && (t.preventDefault(), t.stopImmediatePropagation(), document.activeElement.click()), c || b === " " && (t.preventDefault(), t.stopImmediatePropagation(), document.activeElement.click()), Gd(t, g, r, i, u, s, o, d, f);
    }, this._isEventFromContainer = (t) => {
      const { containerRef: n } = this.props;
      return n.current && n.current.contains(t.target);
    };
  }
  componentDidMount() {
    wn && window.addEventListener("keydown", this.keyHandler);
  }
  componentWillUnmount() {
    wn && window.removeEventListener("keydown", this.keyHandler);
  }
  render() {
    return null;
  }
}
vh.displayName = "KeyboardHandler";
vh.defaultProps = {
  containerRef: null,
  createNavigableElements: () => null,
  isActiveElement: (e) => document.activeElement === e,
  getFocusableElement: (e) => e,
  validSiblingTags: ["BUTTON", "A"],
  onlyTraverseSiblings: !0,
  updateTabIndex: !0,
  noHorizontalArrowHandling: !1,
  noVerticalArrowHandling: !1,
  noEnterHandling: !1,
  noSpaceHandling: !1
};
const tl = (e, t, n) => {
  let r;
  if (wn) {
    const { ResizeObserver: i } = window;
    if (e && i) {
      const s = new i((o) => {
        n ? window.requestAnimationFrame(() => {
          Array.isArray(o) && o.length > 0;
        }) : Array.isArray(o) && o.length > 0 && t();
      });
      s.observe(e), r = () => s.unobserve(e);
    } else
      window.addEventListener("resize", t), r = () => window.removeEventListener("resize", t);
  }
  return () => {
    r && r();
  };
}, Xn = (e) => !!(e && !isNaN(e));
var Wb;
(function(e) {
  e.md = "md", e.lg = "lg", e.xl = "xl", e["2xl"] = "2xl", e["3xl"] = "3xl", e["4xl"] = "4xl";
})(Wb || (Wb = {}));
var Jm;
(function(e) {
  e.h1 = "2xl", e.h2 = "xl", e.h3 = "lg", e.h4 = "md", e.h5 = "md", e.h6 = "md";
})(Jm || (Jm = {}));
const lr = (e) => {
  var { className: t = "", children: n = "", headingLevel: r, size: i = Jm[r], ouiaId: s, ouiaSafe: o = !0 } = e, l = se(e, ["className", "children", "headingLevel", "size", "ouiaId", "ouiaSafe"]);
  const c = za(lr.displayName, s, o);
  return h.createElement(r, Object.assign({}, c, l, { className: j(Pb.title, i && Pb.modifiers[i], t) }), n);
};
lr.displayName = "Title";
const In = {
  badge: "pf-v5-c-badge",
  button: "pf-v5-c-button",
  buttonCount: "pf-v5-c-button__count",
  buttonIcon: "pf-v5-c-button__icon",
  buttonProgress: "pf-v5-c-button__progress",
  modifiers: {
    active: "pf-m-active",
    block: "pf-m-block",
    small: "pf-m-small",
    primary: "pf-m-primary",
    displayLg: "pf-m-display-lg",
    secondary: "pf-m-secondary",
    tertiary: "pf-m-tertiary",
    link: "pf-m-link",
    unread: "pf-m-unread",
    inline: "pf-m-inline",
    danger: "pf-m-danger",
    warning: "pf-m-warning",
    control: "pf-m-control",
    expanded: "pf-m-expanded",
    plain: "pf-m-plain",
    noPadding: "pf-m-no-padding",
    disabled: "pf-m-disabled",
    ariaDisabled: "pf-m-aria-disabled",
    progress: "pf-m-progress",
    inProgress: "pf-m-in-progress",
    start: "pf-m-start",
    end: "pf-m-end"
  },
  spinner: "pf-v5-c-spinner",
  themeDark: "pf-v5-theme-dark"
}, md = {
  modifiers: {
    inline: "pf-m-inline",
    sm: "pf-m-sm",
    md: "pf-m-md",
    lg: "pf-m-lg",
    xl: "pf-m-xl"
  },
  spinner: "pf-v5-c-spinner",
  spinnerPath: "pf-v5-c-spinner__path"
}, TP = {
  name: "--pf-v5-c-spinner--diameter",
  value: "3.375rem",
  var: "var(--pf-v5-c-spinner--diameter)"
};
var Wd;
(function(e) {
  e.sm = "sm", e.md = "md", e.lg = "lg", e.xl = "xl";
})(Wd || (Wd = {}));
const ti = (e) => {
  var { className: t = "", size: n = "xl", "aria-valuetext": r = "Loading...", diameter: i, isInline: s = !1, "aria-label": o, "aria-labelledBy": l } = e, c = se(e, ["className", "size", "aria-valuetext", "diameter", "isInline", "aria-label", "aria-labelledBy"]);
  return h.createElement(
    "svg",
    Object.assign({ className: j(md.spinner, s ? md.modifiers.inline : md.modifiers[n], t), role: "progressbar", "aria-valuetext": r, viewBox: "0 0 100 100" }, i && { style: { [TP.name]: i } }, o && { "aria-label": o }, l && { "aria-labelledBy": l }, !o && !l && { "aria-label": "Contents" }, c),
    h.createElement("circle", { className: md.spinnerPath, cx: "50", cy: "50", r: "45", fill: "none" })
  );
};
ti.displayName = "Spinner";
const Bp = {
  badge: "pf-v5-c-badge",
  modifiers: {
    read: "pf-m-read",
    unread: "pf-m-unread"
  },
  themeDark: "pf-v5-theme-dark"
}, Ir = (e) => {
  var { isRead: t = !1, className: n = "", children: r = "", screenReaderText: i } = e, s = se(e, ["isRead", "className", "children", "screenReaderText"]);
  return h.createElement(
    "span",
    Object.assign({}, s, { className: j(Bp.badge, t ? Bp.modifiers.read : Bp.modifiers.unread, n) }),
    r,
    i && h.createElement("span", { className: "pf-v5-screen-reader" }, i)
  );
};
Ir.displayName = "Badge";
var xe;
(function(e) {
  e.primary = "primary", e.secondary = "secondary", e.tertiary = "tertiary", e.danger = "danger", e.warning = "warning", e.link = "link", e.plain = "plain", e.control = "control";
})(xe || (xe = {}));
var Zm;
(function(e) {
  e.button = "button", e.submit = "submit", e.reset = "reset";
})(Zm || (Zm = {}));
var zl;
(function(e) {
  e.default = "default", e.sm = "sm", e.lg = "lg";
})(zl || (zl = {}));
const IP = (e) => {
  var { children: t = null, className: n = "", component: r = "button", isActive: i = !1, isBlock: s = !1, isDisabled: o = !1, isAriaDisabled: l = !1, isLoading: c = null, isDanger: d = !1, spinnerAriaValueText: u, spinnerAriaLabelledBy: p, spinnerAriaLabel: m, size: f = zl.default, inoperableEvents: g = ["onClick", "onKeyPress"], isInline: b = !1, type: v = Zm.button, variant: y = xe.primary, iconPosition: C = "start", "aria-label": S = null, icon: P = null, ouiaId: w, ouiaSafe: A = !0, tabIndex: k = null, innerRef: T, countOptions: O } = e, I = se(e, ["children", "className", "component", "isActive", "isBlock", "isDisabled", "isAriaDisabled", "isLoading", "isDanger", "spinnerAriaValueText", "spinnerAriaLabelledBy", "spinnerAriaLabel", "size", "inoperableEvents", "isInline", "type", "variant", "iconPosition", "aria-label", "icon", "ouiaId", "ouiaSafe", "tabIndex", "innerRef", "countOptions"]);
  const _ = za(z.displayName, w, A, y), E = r, L = E === "button", F = b && E === "span", R = g.reduce((U, K) => Object.assign(Object.assign({}, U), { [K]: (G) => {
    G.preventDefault();
  } }), {}), M = () => {
    if (o)
      return L ? null : -1;
    if (l)
      return null;
    if (F)
      return 0;
  };
  return h.createElement(
    E,
    Object.assign({}, I, l ? R : null, { "aria-disabled": o || l, "aria-label": S, className: j(In.button, In.modifiers[y], s && In.modifiers.block, o && In.modifiers.disabled, l && In.modifiers.ariaDisabled, i && In.modifiers.active, b && y === xe.link && In.modifiers.inline, d && (y === xe.secondary || y === xe.link) && In.modifiers.danger, c !== null && y !== xe.plain && In.modifiers.progress, c && In.modifiers.inProgress, f === zl.sm && In.modifiers.small, f === zl.lg && In.modifiers.displayLg, n), disabled: L ? o : null, tabIndex: k !== null ? k : M(), type: L || F ? v : null, role: F ? "button" : null, ref: T }, _),
    c && h.createElement(
      "span",
      { className: j(In.buttonProgress) },
      h.createElement(ti, { size: Wd.md, isInline: b, "aria-valuetext": u, "aria-label": m, "aria-labelledby": p })
    ),
    y === xe.plain && t === null && P ? P : null,
    y !== xe.plain && P && (C === "start" || C === "left") && h.createElement("span", { className: j(In.buttonIcon, In.modifiers.start) }, P),
    t,
    y !== xe.plain && P && (C === "end" || C === "right") && h.createElement("span", { className: j(In.buttonIcon, In.modifiers.end) }, P),
    O && h.createElement(
      "span",
      { className: j(In.buttonCount, O.className) },
      h.createElement(Ir, { isRead: O.isRead }, O.count)
    )
  );
}, z = h.forwardRef((e, t) => h.createElement(IP, Object.assign({ innerRef: t }, e)));
z.displayName = "Button";
let EP = 0;
function et({ name: e, xOffset: t = 0, yOffset: n = 0, width: r, height: i, svgPath: s }) {
  var o;
  return o = class extends h.Component {
    constructor() {
      super(...arguments), this.id = `icon-title-${EP++}`;
    }
    render() {
      const c = this.props, { title: d, className: u } = c, p = se(c, ["title", "className"]), m = u ? `pf-v5-svg ${u}` : "pf-v5-svg", f = !!d, g = [t, n, r, i].join(" ");
      return h.createElement(
        "svg",
        Object.assign({ className: m, viewBox: g, fill: "currentColor", "aria-labelledby": f ? this.id : null, "aria-hidden": f ? null : !0, role: "img", width: "1em", height: "1em" }, p),
        f && h.createElement("title", { id: this.id }, d),
        h.createElement("path", { d: s })
      );
    }
  }, o.displayName = e, o;
}
const PP = {
  name: "TimesIcon",
  height: 512,
  width: 352,
  svgPath: "M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z",
  yOffset: 0,
  xOffset: 0
}, fa = et(PP), go = {
  backdrop: "pf-v5-c-backdrop",
  backdropOpen: "pf-v5-c-backdrop__open"
}, qn = {
  button: "pf-v5-c-button",
  modalBox: "pf-v5-c-modal-box",
  modalBoxBody: "pf-v5-c-modal-box__body",
  modalBoxClose: "pf-v5-c-modal-box__close",
  modalBoxDescription: "pf-v5-c-modal-box__description",
  modalBoxFooter: "pf-v5-c-modal-box__footer",
  modalBoxHeader: "pf-v5-c-modal-box__header",
  modalBoxHeaderMain: "pf-v5-c-modal-box__header-main",
  modalBoxTitle: "pf-v5-c-modal-box__title",
  modalBoxTitleIcon: "pf-v5-c-modal-box__title-icon",
  modalBoxTitleText: "pf-v5-c-modal-box__title-text",
  modifiers: {
    sm: "pf-m-sm",
    md: "pf-m-md",
    lg: "pf-m-lg",
    alignTop: "pf-m-align-top",
    danger: "pf-m-danger",
    warning: "pf-m-warning",
    success: "pf-m-success",
    custom: "pf-m-custom",
    info: "pf-m-info",
    help: "pf-m-help",
    icon: "pf-m-icon"
  },
  themeDark: "pf-v5-theme-dark"
}, SS = {
  bullseye: "pf-v5-l-bullseye"
}, wS = (e) => {
  var { children: t = null, className: n = "" } = e, r = se(e, ["children", "className"]);
  return h.createElement("div", Object.assign({}, r, { className: j(go.backdrop, n) }), t);
};
wS.displayName = "Backdrop";
const OS = (e) => {
  var { children: t = null, className: n = "" } = e, r = se(e, ["children", "className"]);
  return h.createElement("div", Object.assign({}, r, { className: j(qn.modalBoxBody, n) }), t);
};
OS.displayName = "ModalBoxBody";
const yh = (e) => {
  var { className: t, onClose: n = () => {
  }, "aria-label": r = "Close", ouiaId: i } = e, s = se(e, ["className", "onClose", "aria-label", "ouiaId"]);
  return h.createElement(
    "div",
    { className: j(qn.modalBoxClose, t) },
    h.createElement(
      z,
      Object.assign({ variant: "plain", onClick: (o) => n(o), "aria-label": r }, i && { ouiaId: `${i}-${yh.displayName}` }, s),
      h.createElement(fa, null)
    )
  );
};
yh.displayName = "ModalBoxCloseButton";
const _P = {
  name: "--pf-v5-c-modal-box--m-align-top--spacer",
  value: "0.5rem",
  var: "var(--pf-v5-c-modal-box--m-align-top--spacer)"
}, kS = (e) => {
  var { children: t, className: n = "", variant: r = "default", position: i, positionOffset: s, "aria-labelledby": o, "aria-label": l = "", "aria-describedby": c, style: d } = e, u = se(e, ["children", "className", "variant", "position", "positionOffset", "aria-labelledby", "aria-label", "aria-describedby", "style"]);
  return s && (d = d || {}, d[_P.name] = s), h.createElement("div", Object.assign({}, u, { role: "dialog", "aria-label": l || null, "aria-labelledby": o || null, "aria-describedby": c, "aria-modal": "true", className: j(qn.modalBox, n, i === "top" && qn.modifiers.alignTop, r === "large" && qn.modifiers.lg, r === "small" && qn.modifiers.sm, r === "medium" && qn.modifiers.md), style: d }), t);
};
kS.displayName = "ModalBox";
const Qm = (e) => {
  var { children: t = null, className: n = "" } = e, r = se(e, ["children", "className"]);
  return h.createElement("footer", Object.assign({}, r, { className: j(qn.modalBoxFooter, n) }), t);
};
Qm.displayName = "ModalBoxFooter";
const TS = (e) => {
  var { children: t = null, className: n = "", id: r = "" } = e, i = se(e, ["children", "className", "id"]);
  return h.createElement("div", Object.assign({}, i, { id: r, className: j(qn.modalBoxDescription, n) }), t);
};
TS.displayName = "ModalBoxDescription";
const ef = (e) => {
  var { children: t = null, className: n = "", help: r = null } = e, i = se(e, ["children", "className", "help"]);
  return h.createElement(
    "header",
    Object.assign({ className: j(qn.modalBoxHeader, r && qn.modifiers.help, n) }, i),
    r && h.createElement(
      h.Fragment,
      null,
      h.createElement("div", { className: j(qn.modalBoxHeaderMain) }, t),
      h.createElement("div", { className: `${qn.modalBoxHeader}-help` }, r)
    ),
    !r && t
  );
};
ef.displayName = "ModalBoxHeader";
const ra = {
  modifiers: {
    top: "pf-m-top",
    topLeft: "pf-m-top-left",
    topRight: "pf-m-top-right",
    bottom: "pf-m-bottom",
    bottomLeft: "pf-m-bottom-left",
    bottomRight: "pf-m-bottom-right",
    left: "pf-m-left",
    leftTop: "pf-m-left-top",
    leftBottom: "pf-m-left-bottom",
    right: "pf-m-right",
    rightTop: "pf-m-right-top",
    rightBottom: "pf-m-right-bottom",
    textAlignLeft: "pf-m-text-align-left"
  },
  themeDark: "pf-v5-theme-dark",
  tooltip: "pf-v5-c-tooltip",
  tooltipArrow: "pf-v5-c-tooltip__arrow",
  tooltipContent: "pf-v5-c-tooltip__content"
}, IS = (e) => {
  var { className: t, children: n, isLeftAligned: r } = e, i = se(e, ["className", "children", "isLeftAligned"]);
  return h.createElement("div", Object.assign({ className: j(ra.tooltipContent, r && ra.modifiers.textAlignLeft, t) }, i), n);
};
IS.displayName = "TooltipContent";
const ES = (e) => {
  var { className: t } = e, n = se(e, ["className"]);
  return h.createElement("div", Object.assign({ className: j(ra.tooltipArrow, t) }, n));
};
ES.displayName = "TooltipArrow";
const Xb = {
  name: "--pf-v5-c-tooltip--MaxWidth",
  value: "18.75rem",
  var: "var(--pf-v5-c-tooltip--MaxWidth)"
};
var tf;
(function(e) {
  e.auto = "auto", e.top = "top", e.bottom = "bottom", e.left = "left", e.right = "right", e.topStart = "top-start", e.topEnd = "top-end", e.bottomStart = "bottom-start", e.bottomEnd = "bottom-end", e.leftStart = "left-start", e.leftEnd = "left-end", e.rightStart = "right-start", e.rightEnd = "right-end";
})(tf || (tf = {}));
let RP = 1;
const Ht = (e) => {
  var {
    content: t,
    position: n = "top",
    trigger: r = "mouseenter focus",
    isVisible: i = !1,
    isContentLeftAligned: s = !1,
    enableFlip: o = !0,
    className: l = "",
    entryDelay: c = 300,
    exitDelay: d = 300,
    appendTo: u = () => document.body,
    zIndex: p = 9999,
    minWidth: m,
    maxWidth: f = Xb.value,
    distance: g = 15,
    aria: b = "describedby",
    // For every initial starting position, there are 3 escape positions
    flipBehavior: v = ["top", "right", "bottom", "left", "top", "right", "bottom"],
    id: y = `pf-tooltip-${RP++}`,
    children: C,
    animationDuration: S = 300,
    triggerRef: P,
    "aria-live": w = P ? "polite" : "off",
    onTooltipHidden: A = () => {
    }
  } = e, k = se(e, ["content", "position", "trigger", "isVisible", "isContentLeftAligned", "enableFlip", "className", "entryDelay", "exitDelay", "appendTo", "zIndex", "minWidth", "maxWidth", "distance", "aria", "flipBehavior", "id", "children", "animationDuration", "triggerRef", "aria-live", "onTooltipHidden"]);
  const T = r.includes("mouseenter"), O = r.includes("focus"), I = r.includes("click"), _ = r === "manual", [E, L] = h.useState(!1), F = h.createRef(), R = (B) => {
    _ || B.key === cn.Escape && E && K();
  }, M = (B) => {
    B.key === cn.Enter && (E ? K() : U());
  };
  h.useEffect(() => {
    i ? U() : K();
  }, [i]);
  const U = () => {
    L(!0);
  }, K = () => {
    L(!1);
  }, G = {
    top: ra.modifiers.top,
    bottom: ra.modifiers.bottom,
    left: ra.modifiers.left,
    right: ra.modifiers.right,
    "top-start": ra.modifiers.topLeft,
    "top-end": ra.modifiers.topRight,
    "bottom-start": ra.modifiers.bottomLeft,
    "bottom-end": ra.modifiers.bottomRight,
    "left-start": ra.modifiers.leftTop,
    "left-end": ra.modifiers.leftBottom,
    "right-start": ra.modifiers.rightTop,
    "right-end": ra.modifiers.rightBottom
  }, N = f !== Xb.value, $ = h.createElement(
    "div",
    Object.assign({ "aria-live": w, className: j(ra.tooltip, l), role: "tooltip", id: y, style: {
      maxWidth: N ? f : null
    }, ref: F }, k),
    h.createElement(ES, null),
    h.createElement(IS, { isLeftAligned: s }, t)
  ), q = (B, Z) => {
    E ? K() : B.target === Z && U();
  }, V = () => b === "describedby" && C && C.props && !C.props["aria-describedby"] ? h.cloneElement(C, { "aria-describedby": y }) : b === "labelledby" && C.props && !C.props["aria-labelledby"] ? h.cloneElement(C, { "aria-labelledby": y }) : C;
  return h.createElement(ei, { trigger: b !== "none" && E ? V() : C, triggerRef: P, popper: $, popperRef: F, minWidth: m !== void 0 ? m : "revert", appendTo: u, isVisible: E, positionModifiers: G, distance: g, placement: n, onMouseEnter: T && U, onMouseLeave: T && K, onPopperMouseEnter: T && U, onPopperMouseLeave: T && K, onFocus: O && U, onBlur: O && K, onDocumentClick: I && q, onDocumentKeyDown: _ ? null : R, onTriggerEnter: _ ? null : M, enableFlip: o, zIndex: p, flipBehavior: v, animationDuration: S, entryDelay: c, exitDelay: d, onHidden: A });
};
Ht.displayName = "Tooltip";
const AP = {
  name: "CheckCircleIcon",
  height: 512,
  width: 512,
  svgPath: "M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z",
  yOffset: 0,
  xOffset: 0
}, Ks = et(AP), LP = {
  name: "ExclamationCircleIcon",
  height: 512,
  width: 512,
  svgPath: "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z",
  yOffset: 0,
  xOffset: 0
}, us = et(LP), NP = {
  name: "ExclamationTriangleIcon",
  height: 512,
  width: 576,
  svgPath: "M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z",
  yOffset: 0,
  xOffset: 0
}, nl = et(NP), DP = {
  name: "InfoCircleIcon",
  height: 512,
  width: 512,
  svgPath: "M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z",
  yOffset: 0,
  xOffset: 0
}, Ni = et(DP), MP = {
  name: "BellIcon",
  height: 1024,
  width: 896,
  svgPath: "M448,0 C465.333333,0 480.333333,6.33333333 493,19 C505.666667,31.6666667 512,46.6666667 512,64 L512,106 L514.23,106.45 C587.89,121.39 648.48,157.24 696,214 C744,271.333333 768,338.666667 768,416 C768,500 780,568.666667 804,622 C818.666667,652.666667 841.333333,684 872,716 C873.773676,718.829136 875.780658,721.505113 878,724 C890,737.333333 896,752.333333 896,769 C896,785.666667 890,800.333333 878,813 C866,825.666667 850.666667,832 832,832 L63.3,832 C44.9533333,831.84 29.8533333,825.506667 18,813 C6,800.333333 0,785.666667 0,769 C0,752.333333 6,737.333333 18,724 L24,716 L25.06,714.9 C55.1933333,683.28 77.5066667,652.313333 92,622 C116,568.666667 128,500 128,416 C128,338.666667 152,271.333333 200,214 C248,156.666667 309.333333,120.666667 384,106 L384,63.31 C384.166667,46.27 390.5,31.5 403,19 C415.666667,6.33333333 430.666667,0 448,0 Z M576,896 L576,897.08 C575.74,932.6 563.073333,962.573333 538,987 C512.666667,1011.66667 482.666667,1024 448,1024 C413.333333,1024 383.333333,1011.66667 358,987 C332.666667,962.333333 320,932 320,896 L576,896 Z",
  yOffset: 0,
  xOffset: 0
}, Ch = et(MP), Dd = (e) => ["success", "danger", "warning", "info", "custom"].includes(e), PS = (e) => {
  var { className: t = "", id: n, title: r, titleIconVariant: i, titleLabel: s = "" } = e, o = se(e, ["className", "id", "title", "titleIconVariant", "titleLabel"]);
  const [l, c] = h.useState(!1), d = h.useRef(null), u = s || (Dd(i) ? `${sc(i)} alert:` : s), p = {
    success: h.createElement(Ks, null),
    danger: h.createElement(us, null),
    warning: h.createElement(nl, null),
    info: h.createElement(Ni, null),
    custom: h.createElement(Ch, null)
  }, m = !Dd(i) && i;
  uc(() => {
    c(d.current && d.current.offsetWidth < d.current.scrollWidth);
  }, []);
  const f = h.createElement(
    "h1",
    Object.assign({ id: n, ref: d, className: j(qn.modalBoxTitle, i && qn.modifiers.icon, t) }, o),
    i && h.createElement("span", { className: j(qn.modalBoxTitleIcon) }, Dd(i) ? p[i] : h.createElement(m, null)),
    u && h.createElement("span", { className: "pf-v5-screen-reader" }, u),
    h.createElement("span", { className: j(qn.modalBoxTitleText) }, r)
  );
  return l ? h.createElement(Ht, { content: r }, f) : f;
};
PS.displayName = "ModalBoxTitle";
const xh = (e) => {
  var { children: t, className: n = "", isOpen: r = !1, header: i = null, help: s = null, description: o = null, title: l = "", titleIconVariant: c = null, titleLabel: d = "", "aria-label": u = "", "aria-describedby": p, "aria-labelledby": m, bodyAriaLabel: f, bodyAriaRole: g, showClose: b = !0, footer: v = null, actions: y = [], onClose: C = () => {
  }, variant: S = "default", position: P, positionOffset: w, width: A, maxWidth: k, boxId: T, labelId: O, descriptorId: I, disableFocusTrap: _ = !1, hasNoBodyWrapper: E = !1, ouiaId: L, ouiaSafe: F = !0, elementToFocus: R } = e, M = se(e, ["children", "className", "isOpen", "header", "help", "description", "title", "titleIconVariant", "titleLabel", "aria-label", "aria-describedby", "aria-labelledby", "bodyAriaLabel", "bodyAriaRole", "showClose", "footer", "actions", "onClose", "variant", "position", "positionOffset", "width", "maxWidth", "boxId", "labelId", "descriptorId", "disableFocusTrap", "hasNoBodyWrapper", "ouiaId", "ouiaSafe", "elementToFocus"]);
  if (!r)
    return null;
  const U = i ? h.createElement(ef, { help: s }, i) : l && h.createElement(
    ef,
    { help: s },
    h.createElement(PS, { title: l, titleIconVariant: c, titleLabel: d, id: O }),
    o && h.createElement(TS, { id: I }, o)
  ), K = v ? h.createElement(Qm, null, v) : y.length > 0 && h.createElement(Qm, null, y), G = f ? "region" : void 0, $ = !o && !p ? I : void 0, q = E ? t : h.createElement(OS, Object.assign({ "aria-label": f, role: g || G }, M, { id: $ }), t), V = () => {
    if (m === null)
      return null;
    const Z = [];
    return (u && T) !== "" && Z.push(u && T), m && Z.push(m), l && Z.push(O), Z.join(" ");
  }, B = h.createElement(
    kS,
    Object.assign({ id: T, className: j(n, Dd(c) && qn.modifiers[c]), variant: S, position: P, positionOffset: w, "aria-label": u, "aria-labelledby": V(), "aria-describedby": p || (E ? null : I) }, Gn(xh.displayName, L, F), { style: Object.assign(Object.assign({}, A && { "--pf-v5-c-modal-box--Width": typeof A != "number" ? A : `${A}px` }), k && {
      "--pf-v5-c-modal-box--MaxWidth": typeof k != "number" ? k : `${k}px`
    }) }),
    b && h.createElement(yh, { onClose: (Z) => C(Z), ouiaId: L }),
    U,
    q,
    K
  );
  return h.createElement(
    wS,
    null,
    h.createElement(ju, { active: !_, focusTrapOptions: {
      clickOutsideDeactivates: !0,
      tabbableOptions: { displayCheck: "none" },
      // FocusTrap's initialFocus can accept false as a value to prevent initial focus.
      // We want to prevent this in case false is ever passed in.
      initialFocus: R || void 0
    }, className: j(SS.bullseye) }, B)
  );
};
xh.displayName = "ModalContent";
var Et;
(function(e) {
  e.small = "small", e.medium = "medium", e.large = "large", e.default = "default";
})(Et || (Et = {}));
class ft extends h.Component {
  constructor(t) {
    super(t), this.boxId = "", this.labelId = "", this.descriptorId = "", this.handleEscKeyClick = (s) => {
      var o, l;
      const { onEscapePress: c } = this.props;
      s.key === cn.Escape && this.props.isOpen && (c ? c(s) : (l = (o = this.props).onClose) === null || l === void 0 || l.call(o, s));
    }, this.getElement = (s) => typeof s == "function" ? s() : s || document.body, this.toggleSiblingsFromScreenReaders = (s) => {
      const { appendTo: o } = this.props, c = this.getElement(o).children;
      for (const d of Array.from(c))
        d !== this.state.container && (s ? d.setAttribute("aria-hidden", "" + s) : d.removeAttribute("aria-hidden"));
    }, this.isEmpty = (s) => s == null || s === "";
    const n = ft.currentId++, r = n + 1, i = n + 2;
    this.boxId = t.id || `pf-modal-part-${n}`, this.labelId = `pf-modal-part-${r}`, this.descriptorId = `pf-modal-part-${i}`, this.state = {
      container: void 0,
      ouiaStateId: qa(ft.displayName, t.variant)
    };
  }
  componentDidMount() {
    const { appendTo: t, title: n, "aria-label": r, "aria-labelledby": i, hasNoBodyWrapper: s, header: o } = this.props, l = this.getElement(t), c = document.createElement("div");
    this.setState({ container: c }), l.appendChild(c), l.addEventListener("keydown", this.handleEscKeyClick, !1), this.props.isOpen ? l.classList.add(j(go.backdropOpen)) : l.classList.remove(j(go.backdropOpen)), !n && this.isEmpty(r) && this.isEmpty(i) && console.error("Modal: Specify at least one of: title, aria-label, aria-labelledby."), this.isEmpty(r) && this.isEmpty(i) && (s || o) && console.error("Modal: When using hasNoBodyWrapper or setting a custom header, ensure you assign an accessible name to the the modal container with aria-label or aria-labelledby.");
  }
  componentDidUpdate() {
    const { appendTo: t } = this.props, n = this.getElement(t);
    this.props.isOpen ? (n.classList.add(j(go.backdropOpen)), this.toggleSiblingsFromScreenReaders(!0)) : (n.classList.remove(j(go.backdropOpen)), this.toggleSiblingsFromScreenReaders(!1));
  }
  componentWillUnmount() {
    const { appendTo: t } = this.props, n = this.getElement(t);
    this.state.container && n.removeChild(this.state.container), n.removeEventListener("keydown", this.handleEscKeyClick, !1), n.classList.remove(j(go.backdropOpen)), this.toggleSiblingsFromScreenReaders(!1);
  }
  render() {
    const t = this.props, {
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      appendTo: n,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onEscapePress: r,
      "aria-labelledby": i,
      "aria-label": s,
      "aria-describedby": o,
      bodyAriaLabel: l,
      bodyAriaRole: c,
      title: d,
      titleIconVariant: u,
      titleLabel: p,
      ouiaId: m,
      ouiaSafe: f,
      position: g,
      elementToFocus: b
    } = t, v = se(t, ["appendTo", "onEscapePress", "aria-labelledby", "aria-label", "aria-describedby", "bodyAriaLabel", "bodyAriaRole", "title", "titleIconVariant", "titleLabel", "ouiaId", "ouiaSafe", "position", "elementToFocus"]), { container: y } = this.state;
    return !wn || !y ? null : sh.createPortal(h.createElement(xh, Object.assign({}, v, { boxId: this.boxId, labelId: this.labelId, descriptorId: this.descriptorId, title: d, titleIconVariant: u, titleLabel: p, "aria-label": s, "aria-describedby": o, "aria-labelledby": i, bodyAriaLabel: l, bodyAriaRole: c, ouiaId: m !== void 0 ? m : this.state.ouiaStateId, ouiaSafe: f, position: g, elementToFocus: b })), y);
  }
}
ft.displayName = "Modal";
ft.currentId = 0;
ft.defaultProps = {
  className: "",
  isOpen: !1,
  title: "",
  titleIconVariant: null,
  titleLabel: "",
  "aria-label": "",
  showClose: !0,
  "aria-describedby": "",
  "aria-labelledby": "",
  id: void 0,
  actions: [],
  onClose: () => {
  },
  variant: "default",
  hasNoBodyWrapper: !1,
  appendTo: () => document.body,
  ouiaSafe: !0,
  position: "default"
};
const FP = {
  name: "AngleRightIcon",
  height: 512,
  width: 256,
  svgPath: "M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34z",
  yOffset: 0,
  xOffset: 0
}, Nn = et(FP), nf = {
  actionList: "pf-v5-c-action-list",
  actionListGroup: "pf-v5-c-action-list__group",
  modifiers: {
    icons: "pf-m-icons"
  }
}, Uu = (e) => {
  var { children: t, isIconList: n, className: r = "" } = e, i = se(e, ["children", "isIconList", "className"]);
  return h.createElement("div", Object.assign({ className: j(nf.actionList, n && nf.modifiers.icons, r) }, i), t);
};
Uu.displayName = "ActionList";
const xi = (e) => {
  var { children: t, className: n = "" } = e, r = se(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: j(`${nf.actionList}__item`, n) }, r), t);
};
xi.displayName = "ActionListItem";
const ya = {
  alert: "pf-v5-c-alert",
  alertAction: "pf-v5-c-alert__action",
  alertActionGroup: "pf-v5-c-alert__action-group",
  alertDescription: "pf-v5-c-alert__description",
  alertIcon: "pf-v5-c-alert__icon",
  alertTitle: "pf-v5-c-alert__title",
  alertToggle: "pf-v5-c-alert__toggle",
  alertToggleIcon: "pf-v5-c-alert__toggle-icon",
  button: "pf-v5-c-button",
  dirRtl: "pf-v5-m-dir-rtl",
  modifiers: {
    custom: "pf-m-custom",
    success: "pf-m-success",
    danger: "pf-m-danger",
    warning: "pf-m-warning",
    info: "pf-m-info",
    inline: "pf-m-inline",
    plain: "pf-m-plain",
    expandable: "pf-m-expandable",
    expanded: "pf-m-expanded",
    truncate: "pf-m-truncate"
  },
  themeDark: "pf-v5-theme-dark"
}, $P = {
  success: Ks,
  danger: us,
  warning: nl,
  info: Ni,
  custom: Ch
}, jP = (e) => {
  var { variant: t, customIcon: n, className: r = "" } = e, i = se(e, ["variant", "customIcon", "className"]);
  const s = $P[t];
  return s ? h.createElement("div", Object.assign({}, i, { className: j(ya.alertIcon, r) }), n || h.createElement(s, null)) : null;
}, Xd = h.createContext(null), BP = {
  name: "--pf-v5-c-alert__title--max-lines",
  value: "1",
  var: "var(--pf-v5-c-alert__title--max-lines)"
}, _S = (e) => {
  var { "aria-label": t = "", variantLabel: n, onToggleExpand: r, isExpanded: i = !1 } = e, s = se(e, ["aria-label", "variantLabel", "onToggleExpand", "isExpanded"]);
  const { title: o, variantLabel: l } = h.useContext(Xd);
  return h.createElement(
    z,
    Object.assign({ variant: xe.plain, onClick: r, "aria-expanded": i, "aria-label": t === "" ? `Toggle ${n || l} alert: ${o}` : t }, s),
    h.createElement(
      "span",
      { className: j(ya.alertToggleIcon) },
      h.createElement(Nn, { "aria-hidden": "true" })
    )
  );
};
_S.displayName = "AlertToggleExpandButton";
var pe;
(function(e) {
  e.success = "success", e.danger = "danger", e.warning = "warning", e.info = "info", e.custom = "custom";
})(pe || (pe = {}));
const En = (e) => {
  var { variant: t = pe.custom, isInline: n = !1, isPlain: r = !1, isLiveRegion: i = !1, variantLabel: s = `${sc(t)} alert:`, actionClose: o, actionLinks: l, title: c, component: d = "h4", children: u = "", className: p = "", ouiaId: m, ouiaSafe: f = !0, timeout: g = !1, timeoutAnimation: b = 3e3, onTimeout: v = () => {
  }, truncateTitle: y = 0, tooltipPosition: C, customIcon: S, isExpandable: P = !1, toggleAriaLabel: w = `${sc(t)} alert details`, onMouseEnter: A = () => {
  }, onMouseLeave: k = () => {
  }, id: T } = e, O = se(e, ["variant", "isInline", "isPlain", "isLiveRegion", "variantLabel", "actionClose", "actionLinks", "title", "component", "children", "className", "ouiaId", "ouiaSafe", "timeout", "timeoutAnimation", "onTimeout", "truncateTitle", "tooltipPosition", "customIcon", "isExpandable", "toggleAriaLabel", "onMouseEnter", "onMouseLeave", "id"]);
  const I = za(En.displayName, m, f, t), _ = h.createElement(
    h.Fragment,
    null,
    h.createElement("span", { className: "pf-v5-screen-reader" }, s),
    c
  ), E = h.useRef(null), L = d, F = h.useRef(), [R, M] = D(!1);
  h.useEffect(() => {
    if (!E.current || !y)
      return;
    E.current.style.setProperty(BP.name, y.toString());
    const ae = E.current && E.current.offsetHeight < E.current.scrollHeight;
    R !== ae && M(ae);
  }, [E, y, R]);
  const [U, K] = D(!1), [G, N] = D(!0), [$, q] = D(), [V, B] = D(), Z = U && G && !$ && !V;
  h.useEffect(() => {
    const ae = g === !0 ? 8e3 : Number(g);
    if (ae > 0) {
      const Oe = setTimeout(() => K(!0), ae);
      return () => clearTimeout(Oe);
    }
  }, [g]), h.useEffect(() => {
    const ae = () => {
      F.current && (F.current.contains(document.activeElement) ? (B(!0), N(!1)) : V && B(!1));
    };
    return document.addEventListener("focus", ae, !0), () => document.removeEventListener("focus", ae, !0);
  }, [V]), h.useEffect(() => {
    if (V === !1 || $ === !1) {
      const ae = setTimeout(() => N(!0), b);
      return () => clearTimeout(ae);
    }
  }, [V, $, b]), h.useEffect(() => {
    Z && v();
  }, [Z, v]);
  const [X, Q] = D(!1), ie = () => {
    Q(!X);
  }, me = (ae) => {
    q(!0), N(!1), A(ae);
  }, ee = (ae) => {
    q(!1), k(ae);
  };
  if (Z)
    return null;
  const ce = h.createElement(L, Object.assign({}, R && { tabIndex: 0 }, { ref: E, className: j(ya.alertTitle, y && ya.modifiers.truncate) }), _);
  return h.createElement(
    "div",
    Object.assign({ ref: F, className: j(ya.alert, n && ya.modifiers.inline, r && ya.modifiers.plain, P && ya.modifiers.expandable, X && ya.modifiers.expanded, ya.modifiers[t], p) }, I, i && {
      "aria-live": "polite",
      "aria-atomic": "false"
    }, { onMouseEnter: me, onMouseLeave: ee, id: T }, O),
    P && h.createElement(
      Xd.Provider,
      { value: { title: c, variantLabel: s } },
      h.createElement(
        "div",
        { className: j(ya.alertToggle) },
        h.createElement(_S, { isExpanded: X, onToggleExpand: ie, "aria-label": w })
      )
    ),
    h.createElement(jP, { variant: t, customIcon: S }),
    R ? h.createElement(Ht, { content: _, position: C }, ce) : ce,
    o && h.createElement(
      Xd.Provider,
      { value: { title: c, variantLabel: s } },
      h.createElement("div", { className: j(ya.alertAction) }, o)
    ),
    u && (!P || P && X) && h.createElement("div", { className: j(ya.alertDescription) }, u),
    l && h.createElement("div", { className: j(ya.alertActionGroup) }, l)
  );
};
En.displayName = "Alert";
const Sh = (e) => {
  var { className: t, onClose: n = () => {
  }, "aria-label": r = "", variantLabel: i } = e, s = se(e, ["className", "onClose", "aria-label", "variantLabel"]);
  return h.createElement(Xd.Consumer, null, ({ title: o, variantLabel: l }) => h.createElement(
    z,
    Object.assign({ variant: xe.plain, onClick: n, "aria-label": r === "" ? `Close ${i || l} alert: ${o}` : r, className: t }, s),
    h.createElement(fa, null)
  ));
};
Sh.displayName = "AlertActionCloseButton";
const wh = (e) => {
  var { className: t = "", children: n } = e, r = se(e, ["className", "children"]);
  return h.createElement(z, Object.assign({ variant: xe.link, isInline: !0, className: t }, r), n);
};
wh.displayName = "AlertActionLink";
const Up = {
  alertGroup: "pf-v5-c-alert-group",
  alertGroupOverflowButton: "pf-v5-c-alert-group__overflow-button",
  modifiers: {
    toast: "pf-m-toast"
  }
}, RS = (e) => {
  var { className: t, children: n, isToast: r, isLiveRegion: i, onOverflowClick: s, overflowMessage: o } = e, l = se(e, ["className", "children", "isToast", "isLiveRegion", "onOverflowClick", "overflowMessage"]);
  return h.createElement(
    "ul",
    Object.assign({ role: "list", "aria-live": i ? "polite" : null, "aria-atomic": i ? !1 : null, className: j(Up.alertGroup, t, r ? Up.modifiers.toast : "") }, l),
    h.Children.toArray(n).map((c, d) => {
      var u;
      return h.createElement("li", { key: ((u = c.props) === null || u === void 0 ? void 0 : u.id) || d }, c);
    }),
    o && h.createElement(
      "li",
      null,
      h.createElement("button", { onClick: s, className: j(Up.alertGroupOverflowButton) }, o)
    )
  );
};
RS.displayName = "AlertGroupInline";
class AS extends h.Component {
  constructor() {
    super(...arguments), this.state = {
      container: void 0
    };
  }
  componentDidMount() {
    const t = document.createElement("div"), n = this.getTargetElement();
    this.setState({ container: t }), n.appendChild(t);
  }
  componentWillUnmount() {
    const t = this.getTargetElement();
    this.state.container && t.removeChild(this.state.container);
  }
  getTargetElement() {
    const t = this.props.appendTo;
    return typeof t == "function" ? t() : t || document.body;
  }
  render() {
    const t = this.props, {
      className: n,
      children: r,
      isToast: i,
      isLiveRegion: s,
      onOverflowClick: o,
      overflowMessage: l,
      "aria-label": c,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      appendTo: d
    } = t, u = se(t, ["className", "children", "isToast", "isLiveRegion", "onOverflowClick", "overflowMessage", "aria-label", "appendTo"]), p = h.createElement(RS, Object.assign({ onOverflowClick: o, className: n, isToast: i, isLiveRegion: s, overflowMessage: l, "aria-label": c }, u), r);
    if (!this.props.isToast)
      return p;
    const m = this.state.container;
    return !wn || !m ? null : sh.createPortal(p, m);
  }
}
AS.displayName = "AlertGroup";
const fd = {
  avatar: "pf-v5-c-avatar",
  modifiers: {
    light: "pf-m-light",
    dark: "pf-m-dark",
    sm: "pf-m-sm",
    md: "pf-m-md",
    lg: "pf-m-lg",
    xl: "pf-m-xl"
  }
}, LS = (e) => {
  var { className: t = "", src: n = "", alt: r, border: i, size: s } = e, o = se(e, ["className", "src", "alt", "border", "size"]);
  return h.createElement("img", Object.assign({ src: n, alt: r, className: j(fd.avatar, fd.modifiers[s], i === "light" && fd.modifiers.light, i === "dark" && fd.modifiers.dark, t) }, o));
};
LS.displayName = "Avatar";
const UP = {
  name: "AngleUpIcon",
  height: 512,
  width: 320,
  svgPath: "M177 159.7l136 136c9.4 9.4 9.4 24.6 0 33.9l-22.6 22.6c-9.4 9.4-24.6 9.4-33.9 0L160 255.9l-96.4 96.4c-9.4 9.4-24.6 9.4-33.9 0L7 329.7c-9.4-9.4-9.4-24.6 0-33.9l136-136c9.4-9.5 24.6-9.5 34-.1z",
  yOffset: 0,
  xOffset: 0
}, VP = et(UP), Vp = {
  banner: "pf-v5-c-banner",
  button: "pf-v5-c-button",
  modifiers: {
    gold: "pf-m-gold",
    blue: "pf-m-blue",
    red: "pf-m-red",
    green: "pf-m-green",
    sticky: "pf-m-sticky",
    disabled: "pf-m-disabled",
    inline: "pf-m-inline"
  },
  themeDark: "pf-v5-theme-dark"
}, NS = (e) => {
  var { children: t, className: n, variant: r = "default", screenReaderText: i, isSticky: s = !1 } = e, o = se(e, ["children", "className", "variant", "screenReaderText", "isSticky"]);
  return h.createElement(
    "div",
    Object.assign({ className: j(Vp.banner, Vp.modifiers[r], s && Vp.modifiers.sticky, n) }, o),
    i && h.createElement("span", { className: "pf-v5-screen-reader" }, i),
    t
  );
};
NS.displayName = "Banner";
const Kp = {
  brand: "pf-v5-c-brand",
  modifiers: {
    picture: "pf-m-picture"
  }
}, KP = {
  name: "--pf-v5-c-brand--Height",
  value: "auto",
  var: "var(--pf-v5-c-brand--Height)"
}, HP = {
  name: "--pf-v5-c-brand--Width",
  value: "auto",
  var: "var(--pf-v5-c-brand--Width)"
}, DS = (e) => {
  var { className: t = "", src: n = "", alt: r, children: i, widths: s, heights: o, style: l } = e, c = se(e, ["className", "src", "alt", "children", "widths", "heights", "style"]);
  let d;
  return s !== void 0 && (d = Object.assign({}, Mo(s, HP.name))), o !== void 0 && (d = Object.assign(Object.assign({}, d), Mo(o, KP.name))), /** the brand component currently contains no styling the 'pf-v5-c-brand' string will be used for the className */
  i !== void 0 ? h.createElement(
    "picture",
    Object.assign({ className: j(Kp.brand, Kp.modifiers.picture, t), style: Object.assign(Object.assign({}, l), d) }, c),
    i,
    h.createElement("img", { src: n, alt: r })
  ) : h.createElement("img", Object.assign({}, c, { className: j(Kp.brand, t), style: Object.assign(Object.assign({}, l), d), src: n, alt: r }));
};
DS.displayName = "Brand";
const Br = {
  breadcrumb: "pf-v5-c-breadcrumb",
  breadcrumbDropdown: "pf-v5-c-breadcrumb__dropdown",
  breadcrumbHeading: "pf-v5-c-breadcrumb__heading",
  breadcrumbItem: "pf-v5-c-breadcrumb__item",
  breadcrumbItemDivider: "pf-v5-c-breadcrumb__item-divider",
  breadcrumbLink: "pf-v5-c-breadcrumb__link",
  breadcrumbList: "pf-v5-c-breadcrumb__list",
  dirRtl: "pf-v5-m-dir-rtl",
  dropdownToggle: "pf-v5-c-dropdown__toggle",
  modifiers: {
    current: "pf-m-current"
  }
}, jc = (e) => {
  var { children: t = null, className: n = "", "aria-label": r = "Breadcrumb", ouiaId: i, ouiaSafe: s = !0 } = e, o = se(e, ["children", "className", "aria-label", "ouiaId", "ouiaSafe"]);
  const l = za(jc.displayName, i, s);
  return h.createElement(
    "nav",
    Object.assign({}, o, { "aria-label": r, className: j(Br.breadcrumb, n) }, l),
    h.createElement("ol", { className: Br.breadcrumbList, role: "list" }, h.Children.map(t, (c, d) => {
      const u = d > 0;
      return h.isValidElement(c) ? h.cloneElement(c, { showDivider: u }) : c;
    }))
  );
};
jc.displayName = "Breadcrumb";
const $o = (e) => {
  var { children: t = null, className: n = "", to: r = void 0, isActive: i = !1, isDropdown: s = !1, showDivider: o, target: l = void 0, component: c = "a", render: d = void 0 } = e, u = se(e, ["children", "className", "to", "isActive", "isDropdown", "showDivider", "target", "component", "render"]);
  const p = c, m = i ? "page" : void 0, f = j(Br.breadcrumbLink, i && Br.modifiers.current);
  return h.createElement(
    "li",
    Object.assign({}, u, { className: j(Br.breadcrumbItem, n) }),
    o && h.createElement(
      "span",
      { className: Br.breadcrumbItemDivider },
      h.createElement(Nn, null)
    ),
    c === "button" && h.createElement("button", { className: f, "aria-current": m, type: "button" }, t),
    s && h.createElement("span", { className: j(Br.breadcrumbDropdown) }, t),
    d && d({ className: f, ariaCurrent: m }),
    r && !d && h.createElement(p, { href: r, target: l, className: f, "aria-current": m }, t),
    !r && c !== "button" && !s && t
  );
};
$o.displayName = "BreadcrumbItem";
const Yn = {
  formControl: "pf-v5-c-form-control",
  formControlIcon: "pf-v5-c-form-control__icon",
  formControlToggleIcon: "pf-v5-c-form-control__toggle-icon",
  formControlUtilities: "pf-v5-c-form-control__utilities",
  modifiers: {
    readonly: "pf-m-readonly",
    success: "pf-m-success",
    warning: "pf-m-warning",
    error: "pf-m-error",
    plain: "pf-m-plain",
    expanded: "pf-m-expanded",
    disabled: "pf-m-disabled",
    icon: "pf-m-icon",
    placeholder: "pf-m-placeholder",
    resizeVertical: "pf-m-resize-vertical",
    resizeHorizontal: "pf-m-resize-horizontal",
    resizeBoth: "pf-m-resize-both",
    status: "pf-m-status"
  },
  themeDark: "pf-v5-theme-dark"
}, zP = {
  success: Ks,
  error: us,
  warning: nl
}, af = (e) => {
  var { status: t, customIcon: n, className: r } = e, i = se(e, ["status", "customIcon", "className"]);
  const s = t && zP[t];
  return h.createElement("span", Object.assign({ className: j(Yn.formControlIcon, t && Yn.modifiers.status, r) }, i), n || h.createElement(s, null));
};
var rf;
(function(e) {
  e.text = "text", e.date = "date", e.datetimeLocal = "datetime-local", e.email = "email", e.month = "month", e.number = "number", e.password = "password", e.search = "search", e.tel = "tel", e.time = "time", e.url = "url";
})(rf || (rf = {}));
var Yb;
(function(e) {
  e.default = "default", e.plain = "plain";
})(Yb || (Yb = {}));
class Bc extends h.Component {
  constructor(t) {
    super(t), this.inputRef = h.createRef(), this.observer = () => {
    }, this.handleChange = (n) => {
      this.props.onChange && this.props.onChange(n, n.currentTarget.value);
    }, this.handleResize = () => {
      const n = this.props.innerRef || this.inputRef;
      n && n.current && u2(n.current, String(this.props.value));
    }, this.restoreText = () => {
      const n = this.props.innerRef || this.inputRef;
      n.current.value = String(this.props.value), n.current.scrollLeft = n.current.scrollWidth;
    }, this.onFocus = (n) => {
      const { isLeftTruncated: r, isStartTruncated: i, onFocus: s } = this.props;
      (r || i) && this.restoreText(), s && s(n);
    }, this.onBlur = (n) => {
      const { isLeftTruncated: r, isStartTruncated: i, onBlur: s } = this.props;
      (r || i) && this.handleResize(), s && s(n);
    }, this.sanitizeInputValue = (n) => typeof n == "string" ? n.replace(/\n/g, " ") : n, !t.id && !t["aria-label"] && !t["aria-labelledby"] && console.error("Text input:", "Text input requires either an id or aria-label to be specified"), this.state = {
      ouiaStateId: qa(Bc.displayName)
    };
  }
  componentDidMount() {
    if (this.props.isLeftTruncated || this.props.isStartTruncated) {
      const t = this.props.innerRef || this.inputRef;
      this.observer = tl(t.current, this.handleResize, !0), this.handleResize();
    }
  }
  componentWillUnmount() {
    (this.props.isLeftTruncated || this.props.isStartTruncated) && this.observer();
  }
  render() {
    const t = this.props, {
      innerRef: n,
      className: r,
      type: i,
      value: s,
      placeholder: o,
      validated: l,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      onChange: c,
      onFocus: d,
      onBlur: u,
      isLeftTruncated: p,
      isStartTruncated: m,
      isExpanded: f,
      expandedProps: g,
      readOnly: b,
      readOnlyVariant: v,
      isRequired: y,
      isDisabled: C,
      customIcon: S,
      ouiaId: P,
      ouiaSafe: w
    } = t, A = se(t, ["innerRef", "className", "type", "value", "placeholder", "validated", "onChange", "onFocus", "onBlur", "isLeftTruncated", "isStartTruncated", "isExpanded", "expandedProps", "readOnly", "readOnlyVariant", "isRequired", "isDisabled", "customIcon", "ouiaId", "ouiaSafe"]), k = ["success", "error", "warning"].includes(l), T = g ? { "aria-expanded": g?.isExpanded, "aria-controls": g?.ariaControls, role: "combobox" } : {};
    return h.createElement(
      "span",
      { className: j(Yn.formControl, v && Yn.modifiers.readonly, v === "plain" && Yn.modifiers.plain, C && Yn.modifiers.disabled, (f || g?.isExpanded) && Yn.modifiers.expanded, S && Yn.modifiers.icon, k && Yn.modifiers[l], r) },
      h.createElement("input", Object.assign({}, A, { onFocus: this.onFocus, onBlur: this.onBlur, onChange: this.handleChange, type: i, value: this.sanitizeInputValue(s), "aria-invalid": A["aria-invalid"] ? A["aria-invalid"] : l === _n.error }, T, { required: y, disabled: C, readOnly: !!v || b, ref: n || this.inputRef, placeholder: o }, Gn(gt.displayName, P !== void 0 ? P : this.state.ouiaStateId, w))),
      (S || k) && h.createElement(
        "span",
        { className: j(Yn.formControlUtilities) },
        S && h.createElement(af, { customIcon: S }),
        k && h.createElement(af, { status: l })
      )
    );
  }
}
Bc.displayName = "TextInputBase";
Bc.defaultProps = {
  "aria-label": null,
  isRequired: !1,
  validated: "default",
  isDisabled: !1,
  isExpanded: !1,
  type: rf.text,
  isLeftTruncated: !1,
  isStartTruncated: !1,
  onChange: () => {
  },
  ouiaSafe: !0
};
const gt = h.forwardRef((e, t) => h.createElement(Bc, Object.assign({}, e, { innerRef: t })));
gt.displayName = "TextInput";
const lt = {
  breadcrumb: "pf-v5-c-breadcrumb",
  check: "pf-v5-c-check",
  dirRtl: "pf-v5-m-dir-rtl",
  divider: "pf-v5-c-divider",
  menu: "pf-v5-c-menu",
  menuBreadcrumb: "pf-v5-c-menu__breadcrumb",
  menuContent: "pf-v5-c-menu__content",
  menuFooter: "pf-v5-c-menu__footer",
  menuGroup: "pf-v5-c-menu__group",
  menuGroupTitle: "pf-v5-c-menu__group-title",
  menuHeader: "pf-v5-c-menu__header",
  menuItem: "pf-v5-c-menu__item",
  menuItemAction: "pf-v5-c-menu__item-action",
  menuItemActionIcon: "pf-v5-c-menu__item-action-icon",
  menuItemCheck: "pf-v5-c-menu__item-check",
  menuItemDescription: "pf-v5-c-menu__item-description",
  menuItemExternalIcon: "pf-v5-c-menu__item-external-icon",
  menuItemIcon: "pf-v5-c-menu__item-icon",
  menuItemMain: "pf-v5-c-menu__item-main",
  menuItemSelectIcon: "pf-v5-c-menu__item-select-icon",
  menuItemText: "pf-v5-c-menu__item-text",
  menuItemToggleIcon: "pf-v5-c-menu__item-toggle-icon",
  menuList: "pf-v5-c-menu__list",
  menuListItem: "pf-v5-c-menu__list-item",
  menuSearch: "pf-v5-c-menu__search",
  modifiers: {
    hidden: "pf-m-hidden",
    hiddenOnSm: "pf-m-hidden-on-sm",
    visibleOnSm: "pf-m-visible-on-sm",
    hiddenOnMd: "pf-m-hidden-on-md",
    visibleOnMd: "pf-m-visible-on-md",
    hiddenOnLg: "pf-m-hidden-on-lg",
    visibleOnLg: "pf-m-visible-on-lg",
    hiddenOnXl: "pf-m-hidden-on-xl",
    visibleOnXl: "pf-m-visible-on-xl",
    hiddenOn_2xl: "pf-m-hidden-on-2xl",
    visibleOn_2xl: "pf-m-visible-on-2xl",
    flyout: "pf-m-flyout",
    top: "pf-m-top",
    left: "pf-m-left",
    drilldown: "pf-m-drilldown",
    drilledIn: "pf-m-drilled-in",
    currentPath: "pf-m-current-path",
    static: "pf-m-static",
    plain: "pf-m-plain",
    scrollable: "pf-m-scrollable",
    nav: "pf-m-nav",
    focus: "pf-m-focus",
    disabled: "pf-m-disabled",
    ariaDisabled: "pf-m-aria-disabled",
    load: "pf-m-load",
    loading: "pf-m-loading",
    danger: "pf-m-danger",
    selected: "pf-m-selected",
    favorite: "pf-m-favorite",
    favorited: "pf-m-favorited"
  },
  themeDark: "pf-v5-theme-dark"
}, Jb = {
  badge: "pf-v5-c-badge",
  check: "pf-v5-c-check",
  divider: "pf-v5-c-divider",
  dropdown: "pf-v5-c-dropdown",
  dropdownGroup: "pf-v5-c-dropdown__group",
  dropdownGroupTitle: "pf-v5-c-dropdown__group-title",
  dropdownMenu: "pf-v5-c-dropdown__menu",
  dropdownMenuItem: "pf-v5-c-dropdown__menu-item",
  dropdownMenuItemDescription: "pf-v5-c-dropdown__menu-item-description",
  dropdownMenuItemIcon: "pf-v5-c-dropdown__menu-item-icon",
  dropdownMenuItemMain: "pf-v5-c-dropdown__menu-item-main",
  dropdownToggle: "pf-v5-c-dropdown__toggle",
  dropdownToggleButton: "pf-v5-c-dropdown__toggle-button",
  dropdownToggleCheck: "pf-v5-c-dropdown__toggle-check",
  dropdownToggleIcon: "pf-v5-c-dropdown__toggle-icon",
  dropdownToggleImage: "pf-v5-c-dropdown__toggle-image",
  dropdownToggleProgress: "pf-v5-c-dropdown__toggle-progress",
  dropdownToggleText: "pf-v5-c-dropdown__toggle-text",
  menu: "pf-v5-c-menu",
  modifiers: {
    fullHeight: "pf-m-full-height",
    expanded: "pf-m-expanded",
    action: "pf-m-action",
    disabled: "pf-m-disabled",
    plain: "pf-m-plain",
    text: "pf-m-text",
    splitButton: "pf-m-split-button",
    primary: "pf-m-primary",
    inProgress: "pf-m-in-progress",
    active: "pf-m-active",
    secondary: "pf-m-secondary",
    top: "pf-m-top",
    static: "pf-m-static",
    alignRight: "pf-m-align-right",
    alignLeft: "pf-m-align-left",
    alignRightOnSm: "pf-m-align-right-on-sm",
    alignLeftOnSm: "pf-m-align-left-on-sm",
    alignRightOnMd: "pf-m-align-right-on-md",
    alignLeftOnMd: "pf-m-align-left-on-md",
    alignRightOnLg: "pf-m-align-right-on-lg",
    alignLeftOnLg: "pf-m-align-left-on-lg",
    alignRightOnXl: "pf-m-align-right-on-xl",
    alignLeftOnXl: "pf-m-align-left-on-xl",
    alignRightOn_2xl: "pf-m-align-right-on-2xl",
    alignLeftOn_2xl: "pf-m-align-left-on-2xl",
    ariaDisabled: "pf-m-aria-disabled",
    icon: "pf-m-icon",
    description: "pf-m-description"
  },
  spinner: "pf-v5-c-spinner",
  themeDark: "pf-v5-theme-dark"
}, _s = h.createContext({
  menuId: null,
  parentMenu: null,
  onActionClick: () => null,
  onSelect: () => null,
  activeItemId: null,
  selected: null,
  drilledInMenus: [],
  drilldownItemPath: [],
  onDrillIn: null,
  onDrillOut: null,
  onGetMenuHeight: () => null,
  flyoutRef: null,
  setFlyoutRef: () => null,
  disableHover: !1,
  role: "menu"
}), MS = h.createContext({
  itemId: null,
  isDisabled: !1
});
class Vu extends h.Component {
  constructor(t) {
    super(t), this.menuRef = h.createRef(), this.activeMenu = null, this.state = {
      ouiaStateId: qa(rs.displayName),
      transitionMoveTarget: null,
      flyoutRef: null,
      disableHover: !1,
      currentDrilldownMenuId: this.props.id
    }, this.handleDrilldownTransition = (n) => {
      const r = this.menuRef.current;
      if (!(!r || r !== n.target.closest(`.${lt.menu}`) && !Array.from(r.getElementsByClassName(lt.menu)).includes(n.target.closest(`.${lt.menu}`))))
        if (this.state.transitionMoveTarget)
          this.state.transitionMoveTarget.focus(), this.setState({ transitionMoveTarget: null });
        else {
          const i = r.querySelector("#" + this.props.activeMenu) || r || null, s = i.getElementsByTagName("UL");
          if (s.length === 0)
            return;
          const o = Array.from(s[0].children);
          if (!this.state.currentDrilldownMenuId || i.id !== this.state.currentDrilldownMenuId)
            this.setState({ currentDrilldownMenuId: i.id });
          else
            return;
          const l = o.filter((c) => !(c.classList.contains("pf-m-disabled") || c.classList.contains(lt.divider)))[0].firstChild;
          l.focus(), l.tabIndex = 0;
        }
    }, this.handleExtraKeys = (n) => {
      const r = this.props.containsDrilldown, i = document.activeElement;
      if (n.target.closest(`.${lt.menu}`) !== this.activeMenu && !n.target.classList.contains(Br.breadcrumbLink) && (this.activeMenu = n.target.closest(`.${lt.menu}`), this.setState({ disableHover: !0 })), n.target.tagName === "INPUT")
        return;
      const s = this.activeMenu, o = n.key, l = i.classList.contains(Br.breadcrumbLink) || i.classList.contains(Jb.dropdownToggle);
      if (o === " " || o === "Enter") {
        if (n.preventDefault(), r && !l) {
          if (i.closest("li").classList.contains("pf-m-current-path") && s.parentElement.tagName === "LI")
            i.tabIndex = -1, s.parentElement.firstChild.tabIndex = 0, this.setState({ transitionMoveTarget: s.parentElement.firstChild });
          else if (i.nextElementSibling && i.nextElementSibling.classList.contains(lt.menu)) {
            const d = Array.from(i.nextElementSibling.getElementsByTagName("UL")[0].children).filter((u) => !(u.classList.contains("pf-m-disabled") || u.classList.contains(lt.divider)));
            i.tabIndex = -1, d[0].firstChild.tabIndex = 0, this.setState({ transitionMoveTarget: d[0].firstChild });
          }
        }
        document.activeElement.click();
      }
    }, this.createNavigableElements = () => this.props.containsDrilldown ? this.activeMenu ? Array.from(this.activeMenu.getElementsByTagName("UL")[0].children).filter((r) => !(r.classList.contains("pf-m-disabled") || r.classList.contains(lt.divider))) : [] : this.menuRef.current ? Array.from(this.menuRef.current.getElementsByTagName("LI")).filter((r) => !(r.classList.contains("pf-m-disabled") || r.classList.contains(lt.divider))) : [], t.innerRef && (this.menuRef = t.innerRef);
  }
  allowTabFirstItem() {
    const t = this.menuRef.current;
    if (t) {
      const n = t.querySelector("ul button:not(:disabled), ul a:not(:disabled)");
      n && (n.tabIndex = 0);
    }
  }
  componentDidMount() {
    this.context && this.setState({ disableHover: this.context.disableHover }), wn && window.addEventListener("transitionend", this.props.isRootMenu ? this.handleDrilldownTransition : null), this.allowTabFirstItem();
  }
  componentWillUnmount() {
    wn && window.removeEventListener("transitionend", this.handleDrilldownTransition);
  }
  componentDidUpdate(t) {
    t.children !== this.props.children && this.allowTabFirstItem();
  }
  render() {
    const t = this.props, {
      id: n,
      children: r,
      className: i,
      onSelect: s,
      selected: o = null,
      onActionClick: l,
      ouiaId: c,
      ouiaSafe: d,
      containsFlyout: u,
      isNavFlyout: p,
      containsDrilldown: m,
      isMenuDrilledIn: f,
      isPlain: g,
      isScrollable: b,
      drilldownItemPath: v,
      drilledInMenus: y,
      onDrillIn: C,
      onDrillOut: S,
      onGetMenuHeight: P,
      parentMenu: w = null,
      activeItemId: A = null,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      innerRef: k,
      isRootMenu: T,
      activeMenu: O,
      role: I
    } = t, _ = se(t, ["id", "children", "className", "onSelect", "selected", "onActionClick", "ouiaId", "ouiaSafe", "containsFlyout", "isNavFlyout", "containsDrilldown", "isMenuDrilledIn", "isPlain", "isScrollable", "drilldownItemPath", "drilledInMenus", "onDrillIn", "onDrillOut", "onGetMenuHeight", "parentMenu", "activeItemId", "innerRef", "isRootMenu", "activeMenu", "role"]), E = f || y && y.includes(n) || !1;
    return h.createElement(
      _s.Provider,
      { value: {
        menuId: n,
        parentMenu: w || n,
        onSelect: s,
        onActionClick: l,
        activeItemId: A,
        selected: o,
        drilledInMenus: y,
        drilldownItemPath: v,
        onDrillIn: C,
        onDrillOut: S,
        onGetMenuHeight: P,
        flyoutRef: this.state.flyoutRef,
        setFlyoutRef: (L) => this.setState({ flyoutRef: L }),
        disableHover: this.state.disableHover,
        role: I
      } },
      T && h.createElement(vh, { containerRef: this.menuRef || null, additionalKeyHandler: this.handleExtraKeys, createNavigableElements: this.createNavigableElements, isActiveElement: (L) => document.activeElement.closest("li") === L || // if element is a basic MenuItem
      document.activeElement.parentElement === L || document.activeElement.closest(`.${lt.menuSearch}`) === L || // if element is a MenuSearch
      document.activeElement.closest("ol") && document.activeElement.closest("ol").firstChild === L, getFocusableElement: (L) => {
        var F, R;
        return L?.tagName === "DIV" && L.querySelector("input") || // for MenuSearchInput
        ((F = L.firstChild) === null || F === void 0 ? void 0 : F.tagName) === "LABEL" && L.querySelector("input") || // for MenuItem checkboxes
        ((R = L.firstChild) === null || R === void 0 ? void 0 : R.tagName) === "DIV" && L.querySelector("a, button, input") || // For aria-disabled element that is rendered inside a div with "display: contents" styling
        L.firstChild;
      }, noHorizontalArrowHandling: document.activeElement && (document.activeElement.classList.contains(Br.breadcrumbLink) || document.activeElement.classList.contains(Jb.dropdownToggle) || document.activeElement.tagName === "INPUT"), noEnterHandling: !0, noSpaceHandling: !0 }),
      h.createElement("div", Object.assign({ id: n, className: j(lt.menu, g && lt.modifiers.plain, b && lt.modifiers.scrollable, u && lt.modifiers.flyout, p && lt.modifiers.nav, m && lt.modifiers.drilldown, E && lt.modifiers.drilledIn, i), ref: this.menuRef }, Gn(rs.displayName, c !== void 0 ? c : this.state.ouiaStateId, d), _), r)
    );
  }
}
Vu.displayName = "Menu";
Vu.contextType = _s;
Vu.defaultProps = {
  ouiaSafe: !0,
  isRootMenu: !0,
  isPlain: !1,
  isScrollable: !1,
  role: "menu"
};
const rs = h.forwardRef((e, t) => h.createElement(Vu, Object.assign({}, e, { innerRef: t })));
rs.displayName = "Menu";
const qP = {
  name: "--pf-v5-c-menu__content--Height",
  value: "auto",
  var: "var(--pf-v5-c-menu__content--Height)"
}, GP = {
  name: "--pf-v5-c-menu__content--MaxHeight",
  value: "18.75rem",
  var: "var(--pf-v5-c-menu__content--MaxHeight)"
}, al = h.forwardRef((e, t) => {
  const { getHeight: n, children: r, menuHeight: i, maxMenuHeight: s } = e, o = se(e, ["getHeight", "children", "menuHeight", "maxMenuHeight"]), l = h.createRef(), c = (d, u, p) => {
    if (d) {
      let m = d.clientHeight, f = null, g = d.closest(`.${lt.menuList}`);
      for (; g !== null && g.nodeType === 1; )
        g.classList.contains(lt.menuList) && (f = g), g = g.parentElement;
      if (f) {
        const b = getComputedStyle(f), v = parseFloat(b.getPropertyValue("padding-top").replace(/px/g, "")) + parseFloat(b.getPropertyValue("padding-bottom").replace(/px/g, "")) + parseFloat(getComputedStyle(f.parentElement).getPropertyValue("border-bottom-width").replace(/px/g, ""));
        m = m + v;
      }
      p && p(u, m), n && n(m.toString());
    }
    return t || l;
  };
  return h.createElement(_s.Consumer, null, ({ menuId: d, onGetMenuHeight: u }) => h.createElement("div", Object.assign({}, o, { className: j(lt.menuContent, e.className), ref: (p) => c(p, d, u), style: Object.assign(Object.assign({}, i && { [qP.name]: i }), s && { [GP.name]: s }) }), r));
});
al.displayName = "MenuContent";
const FS = (e) => {
  var { children: t, className: n = "" } = e, r = se(e, ["children", "className"]);
  return h.createElement("div", Object.assign({}, r, { className: j(lt.menuFooter, n) }), t);
};
FS.displayName = "MenuFooter";
const WP = (e) => {
  var { children: t, className: n = "", label: r = "", titleId: i, innerRef: s, labelHeadingLevel: o = "h1" } = e, l = se(e, ["children", "className", "label", "titleId", "innerRef", "labelHeadingLevel"]);
  const c = typeof r == "function" ? r : o;
  return h.createElement(
    "section",
    Object.assign({}, l, { className: j(lt.menuGroup, n), ref: s }),
    h.createElement(
      h.Fragment,
      null,
      ["function", "string"].includes(typeof r) ? h.createElement(c, { className: j(lt.menuGroupTitle), id: i }, r) : r,
      t
    )
  );
}, Oh = h.forwardRef((e, t) => h.createElement(WP, Object.assign({}, e, { innerRef: t })));
Oh.displayName = "MenuGroup";
const XP = {
  name: "--pf-v5-c-menu--m-flyout__menu--top-offset",
  value: "0px",
  var: "var(--pf-v5-c-menu--m-flyout__menu--top-offset)"
}, YP = {
  name: "--pf-v5-c-menu--m-flyout__menu--m-left--right-offset",
  value: "0px",
  var: "var(--pf-v5-c-menu--m-flyout__menu--m-left--right-offset)"
}, JP = {
  name: "--pf-v5-c-menu--m-flyout__menu--left-offset",
  value: "0px",
  var: "var(--pf-v5-c-menu--m-flyout__menu--left-offset)"
}, ZP = {
  name: "ExternalLinkAltIcon",
  height: 512,
  width: 512,
  svgPath: "M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z",
  yOffset: 0,
  xOffset: 0
}, $S = et(ZP), QP = {
  name: "AngleLeftIcon",
  height: 512,
  width: 256,
  svgPath: "M31.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L127.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L201.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34z",
  yOffset: 0,
  xOffset: 0
}, Hs = et(QP), e_ = {
  name: "CheckIcon",
  height: 512,
  width: 512,
  svgPath: "M173.898 439.404l-166.4-166.4c-9.997-9.997-9.997-26.206 0-36.204l36.203-36.204c9.997-9.998 26.207-9.998 36.204 0L192 312.69 432.095 72.596c9.997-9.997 26.207-9.997 36.204 0l36.203 36.204c9.997 9.997 9.997 26.206 0 36.204l-294.4 294.401c-9.998 9.997-26.207 9.997-36.204-.001z",
  yOffset: 0,
  xOffset: 0
}, Rs = et(e_), ui = {
  check: "pf-v5-c-check",
  checkBody: "pf-v5-c-check__body",
  checkDescription: "pf-v5-c-check__description",
  checkInput: "pf-v5-c-check__input",
  checkLabel: "pf-v5-c-check__label",
  checkLabelRequired: "pf-v5-c-check__label-required",
  modifiers: {
    standalone: "pf-m-standalone",
    disabled: "pf-m-disabled"
  }
}, jS = () => {
};
class Zt extends h.Component {
  constructor(t) {
    super(t), this.handleChange = (n) => {
      this.props.onChange(n, n.currentTarget.checked);
    }, this.state = {
      ouiaStateId: qa(Zt.displayName)
    };
  }
  render() {
    const t = this.props, { "aria-label": n, className: r, inputClassName: i, onChange: s, isLabelWrapped: o, isLabelBeforeButton: l, isValid: c, isDisabled: d, isRequired: u, isChecked: p, label: m, checked: f, defaultChecked: g, description: b, body: v, ouiaId: y, ouiaSafe: C, component: S } = t, P = se(t, ["aria-label", "className", "inputClassName", "onChange", "isLabelWrapped", "isLabelBeforeButton", "isValid", "isDisabled", "isRequired", "isChecked", "label", "checked", "defaultChecked", "description", "body", "ouiaId", "ouiaSafe", "component"]);
    P.id || console.error("Checkbox:", "id is required to make input accessible");
    const w = {};
    ([!0, !1].includes(f) || p === !0) && (w.checked = f || p), s !== jS && (w.checked = p), [!1, !0].includes(g) && (w.defaultChecked = g);
    const A = h.createElement("input", Object.assign({}, P, { className: j(ui.checkInput, i), type: "checkbox", onChange: this.handleChange, "aria-invalid": !c, "aria-label": n, disabled: d, required: u, ref: (_) => _ && (_.indeterminate = p === null) }, w, Gn(Zt.displayName, y !== void 0 ? y : this.state.ouiaStateId, C))), k = o && !S || S === "label", T = k ? "span" : "label", O = m ? h.createElement(
      T,
      { className: j(ui.checkLabel, d && ui.modifiers.disabled), htmlFor: k ? void 0 : P.id },
      m,
      u && h.createElement("span", { className: j(ui.checkLabelRequired), "aria-hidden": "true" }, mS)
    ) : null, I = S ?? (k ? "label" : "div");
    return w.checked = w.checked === null ? !1 : w.checked, h.createElement(
      I,
      { className: j(ui.check, !m && ui.modifiers.standalone, r), htmlFor: k ? P.id : void 0 },
      l ? h.createElement(
        h.Fragment,
        null,
        O,
        A
      ) : h.createElement(
        h.Fragment,
        null,
        A,
        O
      ),
      b && h.createElement("span", { className: j(ui.checkDescription) }, b),
      v && h.createElement("span", { className: j(ui.checkBody) }, v)
    );
  }
}
Zt.displayName = "Checkbox";
Zt.defaultProps = {
  className: "",
  isLabelWrapped: !1,
  isValid: !0,
  isDisabled: !1,
  isRequired: !1,
  isChecked: !1,
  onChange: jS,
  ouiaSafe: !0
};
const t_ = {
  name: "StarIcon",
  height: 512,
  width: 576,
  svgPath: "M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z",
  yOffset: 0,
  xOffset: 0
}, kh = et(t_), n_ = (e) => {
  var { className: t = "", icon: n, onClick: r, "aria-label": i, isFavorited: s = null, isDisabled: o, actionId: l, innerRef: c } = e, d = se(e, ["className", "icon", "onClick", "aria-label", "isFavorited", "isDisabled", "actionId", "innerRef"]);
  return h.createElement(_s.Consumer, null, ({ onActionClick: u }) => h.createElement(MS.Consumer, null, ({ itemId: p, isDisabled: m }) => {
    const f = (g) => {
      r && r(g), u && u(g, p, l);
    };
    return h.createElement(
      "button",
      Object.assign({ className: j(lt.menuItemAction, s !== null && lt.modifiers.favorite, s && lt.modifiers.favorited, t), "aria-label": i, onClick: f }, (o === !0 || m === !0) && { disabled: !0 }, { ref: c, tabIndex: -1 }, d),
      h.createElement("span", { className: j(lt.menuItemActionIcon) }, n === "favorites" || s !== null ? h.createElement(kh, { "aria-hidden": !0 }) : n)
    );
  }));
}, BS = h.forwardRef((e, t) => h.createElement(n_, Object.assign({}, e, { innerRef: t })));
BS.displayName = "MenuItemAction";
const Zb = h.createContext({
  direction: "right"
}), a_ = (e) => {
  var { children: t, className: n, itemId: r = null, to: i, hasCheckbox: s = !1, isActive: o = null, isFavorited: l = null, isLoadButton: c = !1, isLoading: d = !1, flyoutMenu: u, direction: p, description: m = null, onClick: f = () => {
  }, component: g = "button", isDisabled: b = !1, isAriaDisabled: v = !1, isExternalLink: y = !1, isSelected: C = null, isFocused: S, isDanger: P = !1, icon: w, actions: A, onShowFlyout: k, drilldownMenu: T, isOnPath: O, innerRef: I, id: _, "aria-label": E, tooltipProps: L, rel: F, target: R, download: M } = e, U = se(e, ["children", "className", "itemId", "to", "hasCheckbox", "isActive", "isFavorited", "isLoadButton", "isLoading", "flyoutMenu", "direction", "description", "onClick", "component", "isDisabled", "isAriaDisabled", "isExternalLink", "isSelected", "isFocused", "isDanger", "icon", "actions", "onShowFlyout", "drilldownMenu", "isOnPath", "innerRef", "id", "aria-label", "tooltipProps", "rel", "target", "download"]);
  const { menuId: K, parentMenu: G, onSelect: N, onActionClick: $, activeItemId: q, selected: V, drilldownItemPath: B, onDrillIn: Z, onDrillOut: X, flyoutRef: Q, setFlyoutRef: ie, disableHover: me, role: ee } = h.useContext(_s);
  let ce = i ? "a" : g;
  s && !i && (ce = "label");
  const [ae, Oe] = h.useState(null), Ie = h.useContext(Zb), [Me, ge] = h.useState(Ie.direction), Se = h.useRef(), J = Se === Q, W = u !== void 0, Y = (Ye) => {
    !J && Ye ? ie(Se) : J && !Ye && ie(null), k && Ye && k();
  };
  uc(() => {
    if (W && Se.current && wn) {
      const Ye = Se.current.lastElementChild;
      if (Ye && Ye.classList.contains(lt.menu)) {
        const _t = Se.current.getClientRects()[0], Mt = Ye.getClientRects()[0];
        if (_t && Mt) {
          const Wn = _t.x - Mt.width, Na = window.innerWidth - _t.x - _t.width - Mt.width;
          let Ga = Me;
          Na < 0 && Ga !== "left" ? (ge("left"), Ga = "left") : Wn < 0 && Ga !== "right" && (ge("right"), Ga = "right");
          let ii = 0;
          Wn < 0 && Na < 0 && (ii = Ga === "right" ? -Na : -Wn), Ga === "left" ? (Ye.classList.add(lt.modifiers.left), Ye.style.setProperty(YP.name, `-${ii}px`)) : Ye.style.setProperty(JP.name, `-${ii}px`);
          const si = window.innerHeight - _t.y - Mt.height;
          window.innerHeight - Mt.height < 0 && si < 0 || si < 0 && Ye.style.setProperty(XP.name, `${si}px`);
        }
      }
    }
  }, [J, u]), h.useEffect(() => {
    ge(Ie.direction);
  }, [Ie]), h.useEffect(() => {
    if (ae)
      if (J) {
        const Ye = ae.nextElementSibling;
        Array.from(Ye.getElementsByTagName("UL")[0].children).filter((Mt) => !(Mt.classList.contains("pf-m-disabled") || Mt.classList.contains(lt.divider)))[0].firstChild.focus();
      } else
        ae.focus();
  }, [J, ae]);
  const oe = (Ye) => {
    const _t = Ye.key, Mt = Ye.target, Wn = Ye.type;
    (_t === " " || _t === "Enter" || _t === "ArrowRight" || Wn === "click") && (Ye.stopPropagation(), Ye.preventDefault(), J || (Y(!0), Oe(Mt))), (_t === "Escape" || _t === "ArrowLeft") && J && (Ye.stopPropagation(), Y(!1));
  }, he = (Ye, _t) => {
    v || (_t && _t(Ye, r), f && f(Ye));
  }, ue = O && O || B && B.includes(r) || !1;
  let fe;
  p && (p === "down" ? fe = (Ye) => Z && Z(Ye, K, typeof T == "function" ? T().props.id : T.props.id, r) : fe = (Ye) => X && X(Ye, G, r));
  let Ce = {};
  ce === "a" ? Ce = {
    href: i,
    "aria-disabled": b || v ? !0 : null,
    // prevent invalid 'disabled' attribute on <a> tags
    disabled: null,
    target: y ? "_blank" : R,
    rel: F,
    download: M
  } : ce === "button" && (Ce = {
    type: "button",
    "aria-disabled": v ? !0 : null
  }), O ? Ce["aria-expanded"] = !0 : W && (Ce["aria-haspopup"] = "menu", Ce["aria-expanded"] = J);
  const Ge = () => o !== null ? o ? "page" : null : r !== null && q !== null ? r === q : null, Qe = () => C !== null ? C : V !== null && r !== null ? Array.isArray(V) && V.includes(r) || r === V : !1, qe = () => {
    me || (W ? Y(!0) : ie(null));
  };
  h.useEffect(() => {
    if (S && Se.current) {
      const Ye = Se.current, _t = Ye.parentElement;
      if (_t) {
        const Mt = Ye.offsetTop - _t.offsetTop < _t.scrollTop, Wn = Ye.offsetTop - _t.offsetTop + Ye.clientHeight;
        (Mt || Wn) && Ye.scrollIntoView({ behavior: "auto", block: "nearest" });
      }
    }
  }, [S]);
  const Ot = ee === "listbox", Bt = h.createElement(
    h.Fragment,
    null,
    h.createElement(Ba, null, (Ye) => h.createElement(
      ce,
      Object.assign({ id: _, tabIndex: -1, className: j(lt.menuItem, Qe() && !s && lt.modifiers.selected, n), "aria-current": Ge() }, !s && { disabled: b, "aria-label": E }, !s && !u && { role: Ot ? "option" : "menuitem" }, !s && !u && Ot && { "aria-selected": Qe() }, { ref: I }, !s && {
        onClick: (_t) => {
          v ? _t.preventDefault() : (he(_t, N), fe && fe(_t), u && oe(_t));
        }
      }, s && { htmlFor: Ye }, Ce),
      h.createElement(
        "span",
        { className: j(lt.menuItemMain) },
        p === "up" && h.createElement(
          "span",
          { className: j(lt.menuItemToggleIcon) },
          h.createElement(Hs, { "aria-hidden": !0 })
        ),
        w && h.createElement("span", { className: j(lt.menuItemIcon) }, w),
        s && h.createElement(
          "span",
          { className: j(lt.menuItemCheck) },
          h.createElement(Zt, { id: Ye, component: "span", isChecked: C || !1, onChange: (_t) => he(_t, N), isDisabled: b, "aria-disabled": v })
        ),
        h.createElement("span", { className: j(lt.menuItemText) }, t),
        y && h.createElement(
          "span",
          { className: j(lt.menuItemExternalIcon) },
          h.createElement($S, { "aria-hidden": !0 })
        ),
        (u || p === "down") && h.createElement(
          "span",
          { className: j(lt.menuItemToggleIcon) },
          h.createElement(Nn, { "aria-hidden": !0 })
        ),
        Qe() && h.createElement(
          "span",
          { className: j(lt.menuItemSelectIcon) },
          h.createElement(Rs, { "aria-hidden": !0 })
        )
      ),
      m && p !== "up" && h.createElement(
        "span",
        { className: j(lt.menuItemDescription) },
        h.createElement("span", null, m)
      )
    )),
    J && h.createElement(
      _s.Provider,
      { value: { disableHover: me } },
      h.createElement(Zb.Provider, { value: { direction: Me } }, u)
    ),
    typeof T == "function" ? T() : T,
    h.createElement(
      MS.Provider,
      { value: { itemId: r, isDisabled: b } },
      A,
      l !== null && h.createElement(BS, { icon: "favorites", isFavorited: l, "aria-label": l ? "starred" : "not starred", onClick: (Ye) => $(Ye, r), tabIndex: -1, actionId: "fav" })
    )
  );
  return h.createElement("li", Object.assign({ className: j(lt.menuListItem, b && lt.modifiers.disabled, v && lt.modifiers.ariaDisabled, ue && lt.modifiers.currentPath, c && lt.modifiers.load, d && lt.modifiers.loading, S && lt.modifiers.focus, P && lt.modifiers.danger, n), onMouseOver: () => {
    v || qe();
  } }, u && !v && { onKeyDown: oe }, { ref: Se, role: s ? "menuitem" : "none" }, s && { "aria-label": E }, U), L ? h.createElement(Ht, Object.assign({}, L), Bt) : Bt);
}, rl = h.forwardRef((e, t) => h.createElement(a_, Object.assign({}, e, { innerRef: t })));
rl.displayName = "MenuItem";
const il = (e) => {
  var { children: t = null, className: n, isAriaMultiselectable: r = !1, "aria-label": i } = e, s = se(e, ["children", "className", "isAriaMultiselectable", "aria-label"]);
  const { role: o } = h.useContext(_s);
  return h.createElement("ul", Object.assign({ role: o }, o === "listbox" && { "aria-multiselectable": r }, { className: j(lt.menuList, n), "aria-label": i }, s), t);
};
il.displayName = "MenuList";
const r_ = (e) => {
  var { children: t, className: n, onSelect: r, isOpen: i, selected: s, toggle: o, shouldFocusToggleOnSelect: l = !1, shouldFocusFirstItemOnOpen: c = !0, onOpenChange: d, onOpenChangeKeys: u = ["Escape", "Tab"], isPlain: p, innerRef: m, zIndex: f = 9999, role: g = "listbox", popperProps: b, menuHeight: v, maxMenuHeight: y, isScrollable: C } = e, S = se(e, ["children", "className", "onSelect", "isOpen", "selected", "toggle", "shouldFocusToggleOnSelect", "shouldFocusFirstItemOnOpen", "onOpenChange", "onOpenChangeKeys", "isPlain", "innerRef", "zIndex", "role", "popperProps", "menuHeight", "maxMenuHeight", "isScrollable"]);
  const P = ne.useRef(), w = ne.useRef(), A = m || P, k = typeof o == "function" || typeof o != "function" && !o.toggleRef ? w : o?.toggleRef;
  ne.useEffect(() => {
    const O = (_) => {
      var E, L, F;
      i && d && (!((E = A.current) === null || E === void 0) && E.contains(_.target) || !((L = k.current) === null || L === void 0) && L.contains(_.target)) && u.includes(_.key) && (_.preventDefault(), d(!1), (F = k.current) === null || F === void 0 || F.focus());
    }, I = (_) => {
      var E, L, F;
      i && c && (!((E = k.current) === null || E === void 0) && E.contains(_.target)) && setTimeout(() => {
        var R;
        const M = (R = A?.current) === null || R === void 0 ? void 0 : R.querySelector("li button:not(:disabled),li input:not(:disabled)");
        M && M.focus();
      }, 10), i && d && !(!((L = k?.current) === null || L === void 0) && L.contains(_.target)) && i && !(!((F = A.current) === null || F === void 0) && F.contains(_.target)) && d(!1);
    };
    return window.addEventListener("keydown", O), window.addEventListener("click", I), () => {
      window.removeEventListener("keydown", O), window.removeEventListener("click", I);
    };
  }, [i, A, k, d, u]);
  const T = ne.createElement(
    rs,
    Object.assign({ role: g, className: j(n), ref: A, onSelect: (O, I) => {
      r && r(O, I), l && k.current.focus();
    }, isPlain: p, selected: s, isScrollable: C ?? (v !== void 0 || y !== void 0) }, Gn(Dn.displayName, S.ouiaId !== void 0 ? S.ouiaId : qa(Dn.displayName), S.ouiaSafe !== void 0 ? S.ouiaSafe : !0), S),
    ne.createElement(al, { menuHeight: v, maxMenuHeight: y }, t)
  );
  return ne.createElement(ei, Object.assign({ trigger: typeof o == "function" ? o(k) : o.toggleNode, triggerRef: k, popper: T, popperRef: A, isVisible: i, zIndex: f }, b));
}, Dn = ne.forwardRef((e, t) => ne.createElement(r_, Object.assign({ innerRef: t }, e)));
Dn.displayName = "Select";
const sf = (e) => {
  var { children: t, className: n, label: r } = e, i = se(e, ["children", "className", "label"]);
  return ne.createElement(Oh, Object.assign({ className: j(n), label: r }, i), t);
};
sf.displayName = "SelectGroup";
const ea = (e) => {
  var { children: t, className: n, isAriaMultiselectable: r = !1 } = e, i = se(e, ["children", "className", "isAriaMultiselectable"]);
  return ne.createElement(il, Object.assign({ isAriaMultiselectable: r, className: j(n) }, i), t);
};
ea.displayName = "SelectList";
const i_ = (e) => {
  var { children: t, className: n, innerRef: r, value: i } = e, s = se(e, ["children", "className", "innerRef", "value"]);
  return ne.createElement(rl, Object.assign({ itemId: i, ref: r, className: j(n) }, s), t);
}, Re = ne.forwardRef((e, t) => ne.createElement(i_, Object.assign({}, e, { innerRef: t })));
Re.displayName = "SelectOption";
const xn = {
  check: "pf-v5-c-check",
  checkInput: "pf-v5-c-check__input",
  menuToggle: "pf-v5-c-menu-toggle",
  menuToggleButton: "pf-v5-c-menu-toggle__button",
  menuToggleControls: "pf-v5-c-menu-toggle__controls",
  menuToggleCount: "pf-v5-c-menu-toggle__count",
  menuToggleIcon: "pf-v5-c-menu-toggle__icon",
  menuToggleStatusIcon: "pf-v5-c-menu-toggle__status-icon",
  menuToggleText: "pf-v5-c-menu-toggle__text",
  menuToggleToggleIcon: "pf-v5-c-menu-toggle__toggle-icon",
  modifiers: {
    primary: "pf-m-primary",
    secondary: "pf-m-secondary",
    expanded: "pf-m-expanded",
    plain: "pf-m-plain",
    text: "pf-m-text",
    fullHeight: "pf-m-full-height",
    disabled: "pf-m-disabled",
    typeahead: "pf-m-typeahead",
    splitButton: "pf-m-split-button",
    action: "pf-m-action",
    active: "pf-m-active",
    fullWidth: "pf-m-full-width",
    success: "pf-m-success",
    warning: "pf-m-warning",
    danger: "pf-m-danger"
  },
  textInputGroup: "pf-v5-c-text-input-group",
  themeDark: "pf-v5-theme-dark"
}, s_ = {
  name: "CaretDownIcon",
  height: 512,
  width: 320,
  svgPath: "M31.3 192h257.3c17.8 0 26.7 21.5 14.1 34.1L174.1 354.8c-7.8 7.8-20.5 7.8-28.3 0L17.2 226.1C4.6 213.5 13.5 192 31.3 192z",
  yOffset: 0,
  xOffset: 0
}, jo = et(s_);
var Qi;
(function(e) {
  e.success = "success", e.danger = "danger", e.warning = "warning";
})(Qi || (Qi = {}));
class US extends h.Component {
  constructor() {
    super(...arguments), this.displayName = "MenuToggleBase", this.state = {
      ouiaStateId: qa(ut.displayName, this.props.variant)
    };
  }
  render() {
    const t = this.props, { children: n, className: r, icon: i, badge: s, isExpanded: o, isDisabled: l, isFullHeight: c, isFullWidth: d, splitButtonOptions: u, variant: p, status: m, statusIcon: f, innerRef: g, onClick: b, "aria-label": v, ouiaId: y, ouiaSafe: C } = t, S = se(t, ["children", "className", "icon", "badge", "isExpanded", "isDisabled", "isFullHeight", "isFullWidth", "splitButtonOptions", "variant", "status", "statusIcon", "innerRef", "onClick", "aria-label", "ouiaId", "ouiaSafe"]), P = p === "plain", w = p === "plainText", A = p === "typeahead", k = Gn(ut.displayName, y ?? this.state.ouiaStateId, C);
    let T = f;
    if (!f)
      switch (m) {
        case Qi.success:
          T = h.createElement(Ks, { "aria-hidden": "true" });
          break;
        case Qi.warning:
          T = h.createElement(nl, { "aria-hidden": "true" });
          break;
        case Qi.danger:
          T = h.createElement(us, { "aria-hidden": "true" });
          break;
      }
    const O = h.createElement(
      "span",
      { className: j(xn.menuToggleControls) },
      m !== void 0 && h.createElement("span", { className: j(xn.menuToggleStatusIcon) }, T),
      h.createElement(
        "span",
        { className: j(xn.menuToggleToggleIcon) },
        h.createElement(jo, { "aria-hidden": !0 })
      )
    ), I = h.createElement(
      h.Fragment,
      null,
      i && h.createElement("span", { className: j(xn.menuToggleIcon) }, i),
      A ? n : h.createElement("span", { className: j(xn.menuToggleText) }, n),
      h.isValidElement(s) && h.createElement("span", { className: j(xn.menuToggleCount) }, s),
      A ? h.createElement("button", Object.assign({ type: "button", className: j(xn.menuToggleButton), "aria-expanded": o, onClick: b, "aria-label": v || "Menu toggle", tabIndex: -1 }, k), O) : O
    ), _ = j(xn.menuToggle, o && xn.modifiers.expanded, p === "primary" && xn.modifiers.primary, p === "secondary" && xn.modifiers.secondary, m && xn.modifiers[m], (P || w) && xn.modifiers.plain, w && xn.modifiers.text, c && xn.modifiers.fullHeight, d && xn.modifiers.fullWidth, l && xn.modifiers.disabled, r), E = Object.assign(Object.assign({ children: P ? n : I }, l && { disabled: !0 }), S);
    return A ? h.createElement("div", Object.assign({ ref: g, className: j(_, xn.modifiers.typeahead) }, E)) : u ? h.createElement(
      "div",
      { ref: g, className: j(_, xn.modifiers.splitButton, u?.variant === "action" && xn.modifiers.action) },
      u?.items,
      h.createElement(
        "button",
        Object.assign({ className: j(xn.menuToggleButton, n && xn.modifiers.text), type: "button", "aria-expanded": o, "aria-label": v, disabled: l, onClick: b }, S, k),
        n && h.createElement("span", { className: j(xn.menuToggleText) }, n),
        O
      )
    ) : h.createElement("button", Object.assign({ className: j(_), type: "button", "aria-label": v, "aria-expanded": o, ref: g, disabled: l, onClick: b }, E, k));
  }
}
US.defaultProps = {
  className: "",
  isExpanded: !1,
  isDisabled: !1,
  isFullWidth: !1,
  isFullHeight: !1,
  ouiaSafe: !0
};
const ut = h.forwardRef((e, t) => h.createElement(US, Object.assign({ innerRef: t }, e)));
ut.displayName = "MenuToggle";
const bo = {
  inputGroup: "pf-v5-c-input-group",
  inputGroupItem: "pf-v5-c-input-group__item",
  inputGroupText: "pf-v5-c-input-group__text",
  modifiers: {
    box: "pf-m-box",
    plain: "pf-m-plain",
    disabled: "pf-m-disabled",
    fill: "pf-m-fill"
  },
  themeDark: "pf-v5-theme-dark"
}, VS = (e) => {
  var { className: t, children: n, innerRef: r } = e, i = se(e, ["className", "children", "innerRef"]);
  const s = h.useRef(null), o = r || s;
  return h.createElement("div", Object.assign({ ref: o, className: j(bo.inputGroup, t) }, i), n);
};
VS.displayName = "InputGroupBase";
const nn = h.forwardRef((e, t) => h.createElement(VS, Object.assign({ innerRef: t }, e)));
nn.displayName = "InputGroup";
const dt = (e) => {
  var { className: t, children: n, isFill: r = !1, isBox: i = !1, isPlain: s, isDisabled: o } = e, l = se(e, ["className", "children", "isFill", "isBox", "isPlain", "isDisabled"]);
  return h.createElement("div", Object.assign({ className: j(bo.inputGroupItem, r && bo.modifiers.fill, i && bo.modifiers.box, s && bo.modifiers.plain, o && bo.modifiers.disabled, t) }, l), n);
};
dt.displayName = "InputGroupItem";
const Yt = {
  calendarMonth: "pf-v5-c-calendar-month",
  calendarMonthCalendar: "pf-v5-c-calendar-month__calendar",
  calendarMonthDate: "pf-v5-c-calendar-month__date",
  calendarMonthDatesCell: "pf-v5-c-calendar-month__dates-cell",
  calendarMonthDatesRow: "pf-v5-c-calendar-month__dates-row",
  calendarMonthDay: "pf-v5-c-calendar-month__day",
  calendarMonthDays: "pf-v5-c-calendar-month__days",
  calendarMonthHeader: "pf-v5-c-calendar-month__header",
  calendarMonthHeaderMonth: "pf-v5-c-calendar-month__header-month",
  calendarMonthHeaderNavControl: "pf-v5-c-calendar-month__header-nav-control",
  calendarMonthHeaderYear: "pf-v5-c-calendar-month__header-year",
  dirRtl: "pf-v5-m-dir-rtl",
  modifiers: {
    prevMonth: "pf-m-prev-month",
    nextMonth: "pf-m-next-month",
    current: "pf-m-current",
    inRange: "pf-m-in-range",
    startRange: "pf-m-start-range",
    endRange: "pf-m-end-range",
    adjacentMonth: "pf-m-adjacent-month",
    selected: "pf-m-selected",
    disabled: "pf-m-disabled",
    hover: "pf-m-hover",
    focus: "pf-m-focus"
  },
  themeDark: "pf-v5-theme-dark"
};
var Qb;
(function(e) {
  e[e.Sunday = 0] = "Sunday", e[e.Monday = 1] = "Monday", e[e.Tuesday = 2] = "Tuesday", e[e.Wednesday = 3] = "Wednesday", e[e.Thursday = 4] = "Thursday", e[e.Friday = 5] = "Friday", e[e.Saturday = 6] = "Saturday";
})(Qb || (Qb = {}));
const o_ = (e, t, n, r) => {
  const i = new Date(e, t), s = new Date(i);
  s.setDate(s.getDate() - s.getDay() + n);
  const o = [];
  s.getMonth() === i.getMonth() && s.getDate() !== 1 && s.setDate(s.getDate() - 7);
  for (let l = 0; l < 6; l++) {
    const c = [];
    for (let d = 0; d < 7; d++) {
      const u = new Date(s);
      c.push({
        date: u,
        isValid: r.every((p) => p(u))
      }), s.setDate(s.getDate() + 1);
    }
    if (o.push(c), s.getMonth() !== i.getMonth())
      break;
  }
  return o;
}, uo = (e, t) => e.getFullYear() === t.getFullYear() && e.getMonth() === t.getMonth() && e.getDate() === t.getDate(), Hp = /* @__PURE__ */ new Date(), KS = (e) => {
  var {
    date: t,
    locale: n = void 0,
    monthFormat: r = (Y) => Y.toLocaleDateString(n, { month: "long" }),
    weekdayFormat: i = (Y) => Y.toLocaleDateString(n, { weekday: "narrow" }),
    longWeekdayFormat: s = (Y) => Y.toLocaleDateString(n, { weekday: "long" }),
    dayFormat: o = (Y) => Y.getDate(),
    weekStart: l = 0,
    // Use the American Sunday as a default
    onChange: c = () => {
    },
    validators: d = [() => !0],
    className: u,
    onSelectToggle: p = () => {
    },
    onMonthChange: m = () => {
    },
    rangeStart: f,
    prevMonthAriaLabel: g = "Previous month",
    nextMonthAriaLabel: b = "Next month",
    yearInputAriaLabel: v = "Select year",
    cellAriaLabel: y,
    isDateFocused: C = !1,
    inlineProps: S
  } = e, P = se(e, ["date", "locale", "monthFormat", "weekdayFormat", "longWeekdayFormat", "dayFormat", "weekStart", "onChange", "validators", "className", "onSelectToggle", "onMonthChange", "rangeStart", "prevMonthAriaLabel", "nextMonthAriaLabel", "yearInputAriaLabel", "cellAriaLabel", "isDateFocused", "inlineProps"]);
  const w = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].map((Y) => new Date(1990, Y)).map(r), [A, k] = ne.useState(!1), O = Xn(t) ? t : Xn(f) ? f : Hp, [I, _] = ne.useState(O), E = (Y) => Y.getFullYear(), L = E(I), [F, R] = ne.useState(L.toString()), [M, U] = ne.useState(void 0), K = ne.useRef(), [G] = ne.useState(Ti("hidden-month-span")), [N, $] = ne.useState(!1), q = (Y) => d.every((oe) => oe(Y)), V = q(I);
  ze(() => {
    Xn(t) && !uo(I, t) ? _(t) : t || _(Hp);
  }, [t]), ze(() => {
    (N || C) && V && K.current && K.current.focus();
  }, [I, C, V, K]);
  const B = (Y, oe) => {
    _(oe), $(!1), m(Y, oe), R(E(oe).toString());
  }, Z = (Y) => {
    const oe = new Date(I);
    Y.key === "ArrowUp" ? oe.setDate(oe.getDate() - 7) : Y.key === "ArrowRight" ? oe.setDate(oe.getDate() + 1) : Y.key === "ArrowDown" ? oe.setDate(oe.getDate() + 7) : Y.key === "ArrowLeft" && oe.setDate(oe.getDate() - 1), oe.getTime() !== I.getTime() && q(oe) && (Y.preventDefault(), _(oe), $(!0));
  }, X = (Y) => Q(I.getMonth(), Y), Q = (Y, oe) => new Date(oe ?? I.getFullYear(), Y, 1), ie = 1900, me = 2100, ee = (Y, oe) => {
    if (/^\d{0,4}$/.test(oe) && (R(oe), oe.length === 4)) {
      const he = Number(oe);
      if (he >= ie && he <= me) {
        const ue = X(he);
        _(ue), $(!1), Y.target.focus(), m(Y, ue);
      } else
        R(L.toString());
    }
  }, ce = (Y) => {
    let oe = I.getMonth() + Y, he = I.getFullYear();
    return oe === -1 ? (oe = 11, he--) : oe === 12 && (oe = 0, he++), Q(oe, he);
  }, ae = ce(-1), Oe = ce(1), Ie = I.getFullYear(), Me = I.getMonth(), ge = ne.useMemo(() => o_(Ie, Me, l, d), [Ie, Me, l, d]);
  if (!V) {
    const Y = ge.reduce((oe, he) => [...oe, ...he], []).filter(({ date: oe, isValid: he }) => he && oe.getMonth() === Me).map(({ date: oe }) => ({ date: oe, days: Math.abs(I.getTime() - oe.getTime()) })).sort((oe, he) => oe.days - he.days).map(({ date: oe }) => oe)[0];
    Y && _(Y);
  }
  const Se = M && q(M), J = r(I), W = ne.createElement(
    "div",
    Object.assign({ className: j(Yt.calendarMonth, u) }, P),
    ne.createElement(
      "div",
      { className: Yt.calendarMonthHeader },
      ne.createElement(
        "div",
        { className: j(Yt.calendarMonthHeaderNavControl, Yt.modifiers.prevMonth) },
        ne.createElement(
          z,
          { variant: "plain", "aria-label": g, onClick: (Y) => B(Y, ae) },
          ne.createElement(Hs, { "aria-hidden": !0 })
        )
      ),
      ne.createElement(
        nn,
        null,
        ne.createElement(
          dt,
          { isFill: !0 },
          ne.createElement(
            "div",
            { className: Yt.calendarMonthHeaderMonth },
            ne.createElement("span", { id: G, hidden: !0 }, "Month"),
            ne.createElement(
              Dn,
              { toggle: (Y) => ne.createElement(ut, { ref: Y, onClick: () => k(!A), isExpanded: A, style: { width: "140px" } }, J), "aria-labelledby": G, isOpen: A, onOpenChange: (Y) => {
                k(Y), p(Y);
              }, onSelect: (Y, oe) => {
                setTimeout(() => {
                  k(!1), p(!1);
                  const he = Q(Number(oe));
                  _(he), $(!1), m(Y, he);
                }, 0);
              }, selected: J },
              ne.createElement(ea, null, w.map((Y, oe) => ne.createElement(Re, { key: oe, value: oe, isSelected: Y === J }, Y)))
            )
          )
        ),
        ne.createElement(
          dt,
          null,
          ne.createElement(
            "div",
            { className: Yt.calendarMonthHeaderYear },
            ne.createElement(gt, { "aria-label": v, type: "number", value: F, onChange: ee })
          )
        )
      ),
      ne.createElement(
        "div",
        { className: j(Yt.calendarMonthHeaderNavControl, Yt.modifiers.nextMonth) },
        ne.createElement(
          z,
          { variant: "plain", "aria-label": b, onClick: (Y) => B(Y, Oe) },
          ne.createElement(Nn, { "aria-hidden": !0 })
        )
      )
    ),
    ne.createElement(
      "table",
      { className: Yt.calendarMonthCalendar, onMouseLeave: () => U(void 0) },
      ne.createElement(
        "thead",
        { className: Yt.calendarMonthDays },
        ne.createElement("tr", null, ge[0].map(({ date: Y }, oe) => ne.createElement(
          "th",
          { key: oe, className: Yt.calendarMonthDay, scope: "col" },
          ne.createElement("span", { className: "pf-v5-screen-reader" }, s(Y)),
          ne.createElement("span", { "aria-hidden": !0 }, i(Y))
        )))
      ),
      ne.createElement("tbody", { onKeyDown: Z }, ge.map((Y, oe) => ne.createElement("tr", { key: oe, className: Yt.calendarMonthDatesRow }, Y.map(({ date: he, isValid: ue }, fe) => {
        const Ce = o(he), Ge = uo(he, Hp), Qe = Xn(t) && uo(he, t), qe = uo(he, I), Ot = he.getMonth() !== I.getMonth(), Bt = Xn(f) && uo(he, f);
        let Ye = !1, _t = !1;
        if (Xn(f)) {
          let Mt;
          Xn(t) && (Mt = t), Se && (!Xn(t) || M > t) && (Mt = M), Mt && (Ye = he >= f && he <= Mt, _t = uo(he, Mt));
        }
        return ne.createElement(
          "td",
          { key: fe, className: j(Yt.calendarMonthDatesCell, Ot && Yt.modifiers.adjacentMonth, Ge && Yt.modifiers.current, (Qe || Bt) && Yt.modifiers.selected, !ue && !(Ye || Bt || _t || Qe) && Yt.modifiers.disabled, Ye && Yt.modifiers.inRange, Bt && Yt.modifiers.startRange, _t && Yt.modifiers.endRange) },
          ne.createElement("button", Object.assign({ className: j(Yt.calendarMonthDate, _t && Yt.modifiers.hover, !ue && Yt.modifiers.disabled), type: "button", onClick: (Mt) => c(Mt, he), onMouseOver: () => U(he), tabIndex: qe ? 0 : -1, disabled: !ue, "aria-label": y ? y(he) : `${o(he)} ${r(he)} ${E(he)}` }, qe && { ref: K }), Ce)
        );
      }))))
    )
  );
  if (S !== void 0) {
    const Y = S.component ? S.component : "article";
    return ne.createElement(
      Y,
      Object.assign({}, S.ariaLabelledby && { "aria-labelledby": S.ariaLabelledby }),
      S.title,
      W
    );
  }
  return W;
};
KS.displayName = "CalendarMonth";
const jt = {
  card: "pf-v5-c-card",
  cardActions: "pf-v5-c-card__actions",
  cardBody: "pf-v5-c-card__body",
  cardExpandableContent: "pf-v5-c-card__expandable-content",
  cardFooter: "pf-v5-c-card__footer",
  cardHeader: "pf-v5-c-card__header",
  cardHeaderMain: "pf-v5-c-card__header-main",
  cardHeaderToggle: "pf-v5-c-card__header-toggle",
  cardHeaderToggleIcon: "pf-v5-c-card__header-toggle-icon",
  cardSelectableActions: "pf-v5-c-card__selectable-actions",
  cardSrInput: "pf-v5-c-card__sr-input",
  cardTitle: "pf-v5-c-card__title",
  cardTitleText: "pf-v5-c-card__title-text",
  check: "pf-v5-c-check",
  checkInput: "pf-v5-c-check__input",
  checkLabel: "pf-v5-c-check__label",
  dirRtl: "pf-v5-m-dir-rtl",
  divider: "pf-v5-c-divider",
  modifiers: {
    selectable: "pf-m-selectable",
    clickable: "pf-m-clickable",
    selected: "pf-m-selected",
    current: "pf-m-current",
    disabled: "pf-m-disabled",
    hoverableRaised: "pf-m-hoverable-raised",
    selectableRaised: "pf-m-selectable-raised",
    nonSelectableRaised: "pf-m-non-selectable-raised",
    selectedRaised: "pf-m-selected-raised",
    compact: "pf-m-compact",
    displayLg: "pf-m-display-lg",
    flat: "pf-m-flat",
    plain: "pf-m-plain",
    rounded: "pf-m-rounded",
    expanded: "pf-m-expanded",
    fullHeight: "pf-m-full-height",
    toggleRight: "pf-m-toggle-right",
    noOffset: "pf-m-no-offset",
    noFill: "pf-m-no-fill"
  },
  radio: "pf-v5-c-radio",
  radioInput: "pf-v5-c-radio__input",
  radioLabel: "pf-v5-c-radio__label",
  themeDark: "pf-v5-theme-dark"
}, Th = h.createContext({
  cardId: "",
  registerTitleId: () => {
  },
  isExpanded: !1,
  isClickable: !1,
  isSelectable: !1,
  isSelected: !1,
  isClicked: !1,
  isDisabled: !1
}), ka = (e) => {
  var { children: t, id: n = "", className: r, component: i = "div", isCompact: s = !1, isSelectable: o = !1, isClickable: l = !1, isDisabled: c = !1, isSelectableRaised: d = !1, isSelected: u = !1, isClicked: p = !1, isDisabledRaised: m = !1, isFlat: f = !1, isExpanded: g = !1, isRounded: b = !1, isLarge: v = !1, isFullHeight: y = !1, isPlain: C = !1, ouiaId: S, ouiaSafe: P = !0, hasSelectableInput: w = !1, selectableInputAriaLabel: A, onSelectableInputChange: k = () => {
  } } = e, T = se(e, ["children", "id", "className", "component", "isCompact", "isSelectable", "isClickable", "isDisabled", "isSelectableRaised", "isSelected", "isClicked", "isDisabledRaised", "isFlat", "isExpanded", "isRounded", "isLarge", "isFullHeight", "isPlain", "ouiaId", "ouiaSafe", "hasSelectableInput", "selectableInputAriaLabel", "onSelectableInputChange"]);
  const O = i, I = za(ka.displayName, S, P), [_, E] = h.useState(""), [L, F] = h.useState();
  s && v && (console.warn("Card: Cannot use isCompact with isLarge. Defaulting to isCompact"), v = !1);
  const R = () => m ? j(jt.modifiers.nonSelectableRaised) : d ? j(jt.modifiers.selectableRaised, u && jt.modifiers.selectedRaised) : o && l ? j(jt.modifiers.selectable, jt.modifiers.clickable, (u || p) && jt.modifiers.current) : o ? j(jt.modifiers.selectable, u && jt.modifiers.selected) : l ? j(jt.modifiers.clickable, p && jt.modifiers.current) : "", M = h.useRef(!1), U = (K) => {
    E(K), M.current = !!K;
  };
  return h.useEffect(() => {
    A ? F({ "aria-label": A }) : _ ? F({ "aria-labelledby": _ }) : w && !M.current && (F({}), console.warn("If no CardTitle component is passed as a child of Card the selectableInputAriaLabel prop must be passed"));
  }, [w, A, _]), h.createElement(
    Th.Provider,
    { value: {
      cardId: n,
      registerTitleId: U,
      isExpanded: g,
      isClickable: l,
      isSelectable: o,
      isSelected: u,
      isClicked: p,
      isDisabled: c,
      // TODO: Remove hasSelectableInput when deprecated prop is removed
      hasSelectableInput: w
    } },
    w && h.createElement("input", Object.assign({ className: "pf-v5-screen-reader", id: `${n}-input` }, L, { type: "checkbox", checked: u, onChange: (K) => k(K, n), disabled: m, tabIndex: -1 })),
    h.createElement(O, Object.assign({ id: n, className: j(jt.card, s && jt.modifiers.compact, g && jt.modifiers.expanded, f && jt.modifiers.flat, b && jt.modifiers.rounded, v && jt.modifiers.displayLg, y && jt.modifiers.fullHeight, C && jt.modifiers.plain, R(), c && jt.modifiers.disabled, r), tabIndex: d ? "0" : void 0 }, T, I), t)
  );
};
ka.displayName = "Card";
const ma = (e) => {
  var { children: t, className: n, component: r = "div", isFilled: i = !0 } = e, s = se(e, ["children", "className", "component", "isFilled"]);
  const o = r;
  return h.createElement(o, Object.assign({ className: j(jt.cardBody, !i && jt.modifiers.noFill, n) }, s), t);
};
ma.displayName = "CardBody";
const HS = (e) => {
  var { children: t, className: n, component: r = "div" } = e, i = se(e, ["children", "className", "component"]);
  const s = r;
  return h.createElement(s, Object.assign({ className: j(jt.cardFooter, n) }, i), t);
};
HS.displayName = "CardFooter";
const Sr = (e) => {
  var { children: t, className: n, component: r = "div" } = e, i = se(e, ["children", "className", "component"]);
  const { cardId: s, registerTitleId: o } = h.useContext(Th), l = r, c = s ? `${s}-title` : "";
  return h.useEffect(() => (o(c), () => o("")), [o, c]), h.createElement(
    "div",
    { className: j(jt.cardTitle) },
    h.createElement(l, Object.assign({ className: j(jt.cardTitleText, n), id: c || void 0 }, i), t)
  );
};
Sr.displayName = "CardTitle";
const zS = (e) => {
  var { children: t, className: n } = e, r = se(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: j(jt.cardHeaderMain, n) }, r), t);
};
zS.displayName = "CardHeaderMain";
const qS = (e) => {
  var { children: t, className: n, hasNoOffset: r = !1 } = e, i = se(e, ["children", "className", "hasNoOffset"]);
  return h.createElement("div", Object.assign({ className: j(jt.cardActions, r && jt.modifiers.noOffset, n) }, i), t);
};
qS.displayName = "CardActions";
const GS = (e) => {
  var { children: t, className: n } = e, r = se(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: j(jt.cardSelectableActions, n) }, r), t);
};
GS.displayName = "CardSelectableActions";
const Cs = {
  modifiers: {
    standalone: "pf-m-standalone",
    disabled: "pf-m-disabled"
  },
  radio: "pf-v5-c-radio",
  radioBody: "pf-v5-c-radio__body",
  radioDescription: "pf-v5-c-radio__description",
  radioInput: "pf-v5-c-radio__input",
  radioLabel: "pf-v5-c-radio__label"
};
class sn extends h.Component {
  constructor(t) {
    super(t), this.handleChange = (n) => {
      this.props.onChange(n, n.currentTarget.checked);
    }, !t.label && !t["aria-label"] && console.error("Radio:", "Radio requires an aria-label to be specified"), this.state = {
      ouiaStateId: qa(sn.displayName)
    };
  }
  render() {
    const t = this.props, {
      "aria-label": n,
      checked: r,
      className: i,
      inputClassName: s,
      defaultChecked: o,
      isLabelWrapped: l,
      isLabelBeforeButton: c,
      isChecked: d,
      isDisabled: u,
      isValid: p,
      label: m,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onChange: f,
      description: g,
      body: b,
      ouiaId: v,
      ouiaSafe: y = !0,
      component: C
    } = t, S = se(t, ["aria-label", "checked", "className", "inputClassName", "defaultChecked", "isLabelWrapped", "isLabelBeforeButton", "isChecked", "isDisabled", "isValid", "label", "onChange", "description", "body", "ouiaId", "ouiaSafe", "component"]);
    S.id || console.error("Radio:", "id is required to make input accessible");
    const P = h.createElement("input", Object.assign({}, S, { className: j(Cs.radioInput, s), type: "radio", onChange: this.handleChange, "aria-invalid": !p, disabled: u, checked: r || d }, r === void 0 && { defaultChecked: o }, !m && { "aria-label": n }, Gn(sn.displayName, v !== void 0 ? v : this.state.ouiaStateId, y))), w = l && !C || C === "label", A = w ? "span" : "label", k = m ? h.createElement(A, { className: j(Cs.radioLabel, u && Cs.modifiers.disabled), htmlFor: w ? void 0 : S.id }, m) : null, T = C ?? (w ? "label" : "div");
    return h.createElement(
      T,
      { className: j(Cs.radio, !m && Cs.modifiers.standalone, i), htmlFor: w ? S.id : void 0 },
      c ? h.createElement(
        h.Fragment,
        null,
        k,
        P
      ) : h.createElement(
        h.Fragment,
        null,
        P,
        k
      ),
      g && h.createElement("span", { className: j(Cs.radioDescription) }, g),
      b && h.createElement("span", { className: j(Cs.radioBody) }, b)
    );
  }
}
sn.displayName = "Radio";
sn.defaultProps = {
  className: "",
  isDisabled: !1,
  isValid: !0,
  onChange: () => {
  }
};
const Uc = (e) => {
  var { children: t, className: n, actions: r, selectableActions: i, id: s, onExpand: o, toggleButtonProps: l, isToggleRightAligned: c } = e, d = se(e, ["children", "className", "actions", "selectableActions", "id", "onExpand", "toggleButtonProps", "isToggleRightAligned"]);
  return h.createElement(Th.Consumer, null, ({ cardId: u, isClickable: p, isSelectable: m, isSelected: f, isClicked: g, isDisabled: b, hasSelectableInput: v }) => {
    const y = h.createElement(
      "div",
      { className: j(jt.cardHeaderToggle) },
      h.createElement(
        z,
        Object.assign({ variant: "plain", type: "button", onClick: (A) => {
          o(A, u);
        } }, l),
        h.createElement(
          "span",
          { className: j(jt.cardHeaderToggleIcon) },
          h.createElement(Nn, { "aria-hidden": "true" })
        )
      )
    ), C = p && !m || m && !p, S = v;
    r?.actions && C && !S && console.warn(`${p ? "Clickable" : "Selectable"} only cards should not contain any other actions. If you wish to include additional actions, use a clickable and selectable card.`);
    const P = (A) => {
      i?.onClickAction ? i.onClickAction(A) : i?.to && window.open(i.to, i.isExternalLink ? "_blank" : "_self");
    }, w = () => {
      var A;
      const k = {
        className: "pf-m-standalone",
        inputClassName: p && !m && "pf-v5-screen-reader",
        label: h.createElement(h.Fragment, null),
        "aria-label": i.selectableActionAriaLabel,
        "aria-labelledby": i.selectableActionAriaLabelledby,
        id: i.selectableActionId,
        name: i.name,
        isDisabled: b
      }, T = (A = i.isChecked) !== null && A !== void 0 ? A : f;
      return p && !m ? Object.assign(Object.assign({}, k), { onClick: P, isChecked: g }) : m ? Object.assign(Object.assign({}, k), { onChange: i.onChange, isChecked: T }) : k;
    };
    return h.createElement(
      "div",
      Object.assign({ className: j(jt.cardHeader, c && jt.modifiers.toggleRight, n), id: s }, d),
      o && !c && y,
      (r || i && (p || m)) && h.createElement(
        qS,
        { className: r?.className, hasNoOffset: r?.hasNoOffset || i?.hasNoOffset },
        r?.actions,
        i && (p || m) && h.createElement(GS, { className: i?.className }, i?.variant === "single" || p && !m ? h.createElement(sn, Object.assign({}, w())) : h.createElement(Zt, Object.assign({}, w())))
      ),
      t && h.createElement(zS, null, t),
      o && c && y
    );
  });
};
Uc.displayName = "CardHeader";
const Ki = {
  badge: "pf-v5-c-badge",
  button: "pf-v5-c-button",
  chip: "pf-v5-c-chip",
  chipActions: "pf-v5-c-chip__actions",
  chipContent: "pf-v5-c-chip__content",
  chipIcon: "pf-v5-c-chip__icon",
  chipText: "pf-v5-c-chip__text",
  modifiers: {
    overflow: "pf-m-overflow",
    draggable: "pf-m-draggable"
  },
  themeDark: "pf-v5-theme-dark"
}, l_ = {
  name: "--pf-v5-c-chip__text--MaxWidth",
  value: "16ch",
  var: "var(--pf-v5-c-chip__text--MaxWidth)"
};
class Vt extends h.Component {
  constructor(t) {
    super(t), this.span = h.createRef(), this.setChipStyle = () => ({
      [l_.name]: this.props.textMaxWidth
    }), this.renderOverflowChip = () => {
      const n = this.props, {
        badge: r,
        children: i,
        className: s,
        onClick: o,
        ouiaId: l,
        textMaxWidth: c,
        style: d,
        component: u,
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        tooltipPosition: p,
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        isOverflowChip: m,
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        closeBtnAriaLabel: f,
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        isReadOnly: g
      } = n, b = se(n, ["badge", "children", "className", "onClick", "ouiaId", "textMaxWidth", "style", "component", "tooltipPosition", "isOverflowChip", "closeBtnAriaLabel", "isReadOnly"]), v = u;
      return h.createElement(
        v,
        Object.assign({ onClick: o }, c && Object.assign({ style: this.setChipStyle() }, d), { className: j(Ki.chip, Ki.modifiers.overflow, s) }, u === "button" ? { type: "button" } : {}, Gn("OverflowChip", l !== void 0 ? l : this.state.ouiaStateId), b),
        h.createElement(
          "span",
          { className: j(Ki.chipContent) },
          h.createElement("span", { className: j(Ki.chipText) }, i),
          r && r
        )
      );
    }, this.renderChip = (n) => {
      const { children: r, tooltipPosition: i } = this.props;
      return this.state.isTooltipVisible ? h.createElement(Ht, { position: i, content: r }, this.renderInnerChip(n)) : this.renderInnerChip(n);
    }, this.state = {
      isTooltipVisible: !1,
      ouiaStateId: qa(Vt.displayName)
    };
  }
  componentDidMount() {
    this.setState({
      isTooltipVisible: !!(this.span.current && this.span.current.offsetWidth < this.span.current.scrollWidth)
    });
  }
  componentDidUpdate(t, n) {
    const r = !!(this.span.current && this.span.current.offsetWidth < this.span.current.scrollWidth);
    n.isTooltipVisible !== r && this.setState({
      isTooltipVisible: r
    });
  }
  renderInnerChip(t) {
    const n = this.props, {
      badge: r,
      children: i,
      className: s,
      onClick: o,
      closeBtnAriaLabel: l,
      isReadOnly: c,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      isOverflowChip: d,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      tooltipPosition: u,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      id: p,
      component: m,
      ouiaId: f,
      textMaxWidth: g
    } = n, b = se(n, ["badge", "children", "className", "onClick", "closeBtnAriaLabel", "isReadOnly", "isOverflowChip", "tooltipPosition", "id", "component", "ouiaId", "textMaxWidth"]), v = m;
    return h.createElement(
      v,
      Object.assign({}, g && {
        style: this.setChipStyle()
      }, { className: j(Ki.chip, s) }, this.state.isTooltipVisible && { tabIndex: 0 }, Gn(Vt.displayName, f !== void 0 ? f : this.state.ouiaStateId), b),
      h.createElement(
        "span",
        { className: j(Ki.chipContent) },
        h.createElement("span", { ref: this.span, className: j(Ki.chipText), id: t }, i),
        r && r
      ),
      !c && h.createElement(
        "span",
        { className: j(Ki.chipActions) },
        h.createElement(
          z,
          { onClick: o, variant: "plain", "aria-label": l, id: `remove_${t}`, "aria-labelledby": `remove_${t} ${t}`, ouiaId: f || l },
          h.createElement(fa, { "aria-hidden": "true" })
        )
      )
    );
  }
  render() {
    const { isOverflowChip: t } = this.props;
    return h.createElement(Ba, null, (n) => t ? this.renderOverflowChip() : this.renderChip(this.props.id || n));
  }
}
Vt.displayName = "Chip";
Vt.defaultProps = {
  closeBtnAriaLabel: "close",
  className: "",
  isOverflowChip: !1,
  isReadOnly: !1,
  tooltipPosition: "top",
  onClick: (e) => {
  },
  component: "div"
};
const oi = {
  chipGroup: "pf-v5-c-chip-group",
  chipGroupClose: "pf-v5-c-chip-group__close",
  chipGroupLabel: "pf-v5-c-chip-group__label",
  chipGroupList: "pf-v5-c-chip-group__list",
  chipGroupListItem: "pf-v5-c-chip-group__list-item",
  chipGroupMain: "pf-v5-c-chip-group__main",
  modifiers: {
    category: "pf-m-category"
  }
}, c_ = {
  name: "TimesCircleIcon",
  height: 512,
  width: 512,
  svgPath: "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z",
  yOffset: 0,
  xOffset: 0
}, d_ = et(c_);
class vn extends h.Component {
  constructor(t) {
    super(t), this.headingRef = h.createRef(), this.toggleCollapse = () => {
      this.setState((n) => ({
        isOpen: !n.isOpen,
        isTooltipVisible: !!(this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth)
      }));
    }, this.state = {
      isOpen: this.props.defaultIsOpen,
      isTooltipVisible: !1
    };
  }
  componentDidMount() {
    this.setState({
      isTooltipVisible: !!(this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth)
    });
  }
  renderLabel(t) {
    const { categoryName: n, tooltipPosition: r } = this.props, { isTooltipVisible: i } = this.state;
    return i ? h.createElement(
      Ht,
      { position: r, content: n },
      h.createElement(
        "span",
        { tabIndex: 0, ref: this.headingRef, className: j(oi.chipGroupLabel) },
        h.createElement("span", { id: t }, n)
      )
    ) : h.createElement("span", { ref: this.headingRef, className: j(oi.chipGroupLabel), id: t }, n);
  }
  render() {
    const t = this.props, {
      categoryName: n,
      children: r,
      className: i,
      isClosable: s,
      closeBtnAriaLabel: o,
      "aria-label": l,
      onClick: c,
      onOverflowChipClick: d,
      numChips: u,
      expandedText: p,
      collapsedText: m,
      ouiaId: f,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      defaultIsOpen: g,
      tooltipPosition: b
    } = t, v = se(t, ["categoryName", "children", "className", "isClosable", "closeBtnAriaLabel", "aria-label", "onClick", "onOverflowChipClick", "numChips", "expandedText", "collapsedText", "ouiaId", "defaultIsOpen", "tooltipPosition"]), { isOpen: y } = this.state, C = h.Children.count(r), S = dh(m, {
      remaining: h.Children.count(r) - u
    }), P = (w) => {
      const A = y ? h.Children.toArray(r) : h.Children.toArray(r).slice(0, u);
      return h.createElement(
        "div",
        Object.assign({ className: j(oi.chipGroup, i, n && oi.modifiers.category), role: "group" }, n && { "aria-labelledby": w }, !n && { "aria-label": l }, Gn(vn.displayName, f)),
        h.createElement(
          "div",
          { className: j(oi.chipGroupMain) },
          n && this.renderLabel(w),
          h.createElement(
            "ul",
            Object.assign({ className: j(oi.chipGroupList) }, n && { "aria-labelledby": w }, !n && { "aria-label": l }, { role: "list" }, v),
            A.map((k, T) => h.createElement("li", { className: j(oi.chipGroupListItem), key: T }, k)),
            C > u && h.createElement(
              "li",
              { className: j(oi.chipGroupListItem) },
              h.createElement(Vt, { isOverflowChip: !0, onClick: (k) => {
                this.toggleCollapse(), d(k);
              }, component: "button" }, y ? p : S)
            )
          )
        ),
        s && h.createElement(
          "div",
          { className: j(oi.chipGroupClose) },
          h.createElement(
            z,
            { variant: "plain", "aria-label": o, onClick: c, id: `remove_group_${w}`, "aria-labelledby": `remove_group_${w} ${w}`, ouiaId: f || o },
            h.createElement(d_, { "aria-hidden": "true" })
          )
        )
      );
    };
    return C === 0 ? null : h.createElement(Ba, null, (w) => P(this.props.id || w));
  }
}
vn.displayName = "ChipGroup";
vn.defaultProps = {
  expandedText: "Show Less",
  collapsedText: "${remaining} more",
  categoryName: "",
  defaultIsOpen: !1,
  numChips: 3,
  isClosable: !1,
  onClick: (e) => {
  },
  onOverflowChipClick: (e) => {
  },
  closeBtnAriaLabel: "Close chip group",
  tooltipPosition: "top",
  "aria-label": "Chip group category"
};
const Ja = {
  button: "pf-v5-c-button",
  clipboardCopy: "pf-v5-c-clipboard-copy",
  clipboardCopyActions: "pf-v5-c-clipboard-copy__actions",
  clipboardCopyActionsItem: "pf-v5-c-clipboard-copy__actions-item",
  clipboardCopyExpandableContent: "pf-v5-c-clipboard-copy__expandable-content",
  clipboardCopyGroup: "pf-v5-c-clipboard-copy__group",
  clipboardCopyText: "pf-v5-c-clipboard-copy__text",
  clipboardCopyToggleIcon: "pf-v5-c-clipboard-copy__toggle-icon",
  dirRtl: "pf-v5-m-dir-rtl",
  modifiers: {
    expanded: "pf-m-expanded",
    inline: "pf-m-inline",
    block: "pf-m-block",
    code: "pf-m-code"
  },
  themeDark: "pf-v5-theme-dark"
}, u_ = {
  name: "CopyIcon",
  height: 512,
  width: 448,
  svgPath: "M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z",
  yOffset: 0,
  xOffset: 0
}, WS = et(u_), Yd = (e) => {
  var { onClick: t, exitDelay: n = 0, entryDelay: r = 300, maxWidth: i = "100px", position: s = "top", "aria-label": o = "Copyable input", id: l, textId: c, children: d, variant: u = "control", onTooltipHidden: p = () => {
  }, className: m } = e, f = se(e, ["onClick", "exitDelay", "entryDelay", "maxWidth", "position", "aria-label", "id", "textId", "children", "variant", "onTooltipHidden", "className"]);
  const g = h.createRef();
  return h.createElement(
    Ht,
    { trigger: "mouseenter focus click", triggerRef: g, exitDelay: n, entryDelay: r, maxWidth: i, position: s, "aria-live": "polite", aria: "none", content: h.createElement("div", null, d), onTooltipHidden: p },
    h.createElement(
      z,
      Object.assign({ type: "button", variant: u, onClick: t, "aria-label": o, className: m, id: l, "aria-labelledby": `${l} ${c}` }, f, { ref: g }),
      h.createElement(WS, null)
    )
  );
};
Yd.displayName = "ClipboardCopyButton";
const XS = (e) => {
  var { onClick: t, id: n, textId: r, contentId: i, isExpanded: s = !1 } = e, o = se(e, ["onClick", "id", "textId", "contentId", "isExpanded"]);
  return h.createElement(
    z,
    Object.assign({ type: "button", variant: "control", onClick: t, id: n, "aria-labelledby": `${n} ${r}`, "aria-controls": i, "aria-expanded": s }, o),
    h.createElement(
      "div",
      { className: j(Ja.clipboardCopyToggleIcon) },
      h.createElement(Nn, { "aria-hidden": "true" })
    )
  );
};
XS.displayName = "ClipboardCopyToggle";
class Ih extends h.Component {
  constructor(t) {
    super(t);
  }
  render() {
    const t = this.props, { className: n, children: r, onChange: i, isReadOnly: s, isCode: o } = t, l = se(t, ["className", "children", "onChange", "isReadOnly", "isCode"]);
    return h.createElement("div", Object.assign({ suppressContentEditableWarning: !0, className: j(Ja.clipboardCopyExpandableContent, n), onInput: (c) => i(c, c.target.innerText), contentEditable: !s }, l), o ? h.createElement("pre", { dir: "ltr" }, r) : r);
  }
}
Ih.displayName = "ClipboardCopyExpanded";
Ih.defaultProps = {
  onChange: () => {
  },
  className: "",
  isReadOnly: !1,
  isCode: !1
};
const p_ = (e, t) => {
  try {
    navigator.clipboard.writeText(t.toString());
  } catch (n) {
    console.warn("Clipboard API not found, this copy function will not work. This is likely because you're using an", `unsupported browser or you're not using HTTPS. 

If you're a developer building an application which needs`, "to support copying to the clipboard without the clipboard API, you'll have to create your own copy", "function and pass it to the ClipboardCopy component as the onCopy prop. For more information see", "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/clipboard"), console.error(n);
  }
};
var ev;
(function(e) {
  e.inline = "inline", e.expansion = "expansion", e.inlineCompact = "inline-compact";
})(ev || (ev = {}));
class ni extends h.Component {
  constructor(t) {
    super(t), this.timer = null, this.componentDidUpdate = (r, i) => {
      if (r.children !== this.props.children) {
        const s = this.props.children;
        this.setState({ text: s, textWhenExpanded: s });
      }
    }, this.componentWillUnmount = () => {
      this.timer && window.clearTimeout(this.timer);
    }, this.expandContent = (r) => {
      this.setState((i) => ({
        expanded: !i.expanded
      }));
    }, this.updateText = (r, i) => {
      this.setState({ text: i }), this.props.onChange(r, i);
    }, this.updateTextWhenExpanded = (r, i) => {
      this.setState({ textWhenExpanded: i }), this.props.onChange(r, i);
    }, this.render = () => {
      const r = this.props, {
        /* eslint-disable @typescript-eslint/no-unused-vars */
        isExpanded: i,
        onChange: s,
        // Don't pass to <div>
        /* eslint-enable @typescript-eslint/no-unused-vars */
        isReadOnly: o,
        isCode: l,
        isBlock: c,
        exitDelay: d,
        maxWidth: u,
        entryDelay: p,
        onCopy: m,
        hoverTip: f,
        clickTip: g,
        textAriaLabel: b,
        toggleAriaLabel: v,
        variant: y,
        position: C,
        className: S,
        additionalActions: P,
        ouiaId: w,
        ouiaSafe: A
      } = r, k = se(r, ["isExpanded", "onChange", "isReadOnly", "isCode", "isBlock", "exitDelay", "maxWidth", "entryDelay", "onCopy", "hoverTip", "clickTip", "textAriaLabel", "toggleAriaLabel", "variant", "position", "className", "additionalActions", "ouiaId", "ouiaSafe"]), T = "text-input-", O = "toggle-", I = "content-";
      return h.createElement(
        "div",
        Object.assign({ className: j(Ja.clipboardCopy, y === "inline-compact" && Ja.modifiers.inline, c && Ja.modifiers.block, this.state.expanded && Ja.modifiers.expanded, S) }, k, Gn(ni.displayName, w, A)),
        y === "inline-compact" && h.createElement(Ba, { prefix: "" }, (_) => h.createElement(
          h.Fragment,
          null,
          !l && h.createElement("span", { className: j(Ja.clipboardCopyText), id: `${T}${_}` }, this.state.text),
          l && h.createElement("code", { className: j(Ja.clipboardCopyText, Ja.modifiers.code), id: `${T}${_}` }, this.state.text),
          h.createElement(
            "span",
            { className: j(Ja.clipboardCopyActions) },
            h.createElement(
              "span",
              { className: j(Ja.clipboardCopyActionsItem) },
              h.createElement(Yd, { variant: "plain", exitDelay: d, entryDelay: p, maxWidth: u, position: C, id: `copy-button-${_}`, textId: `text-input-${_}`, "aria-label": f, onClick: (E) => {
                m(E, this.state.text), this.setState({ copied: !0 });
              }, onTooltipHidden: () => this.setState({ copied: !1 }) }, this.state.copied ? g : f)
            ),
            P && P
          )
        )),
        y !== "inline-compact" && h.createElement(Ba, { prefix: "" }, (_) => h.createElement(
          h.Fragment,
          null,
          h.createElement(
            "div",
            { className: j(Ja.clipboardCopyGroup) },
            y === "expansion" && h.createElement(XS, { isExpanded: this.state.expanded, onClick: (E) => {
              this.expandContent(E), this.state.expanded ? this.setState({ text: this.state.textWhenExpanded }) : this.setState({ textWhenExpanded: this.state.text });
            }, id: `${O}${_}`, textId: `${T}${_}`, contentId: `${I}${_}`, "aria-label": v }),
            h.createElement(gt, Object.assign({ readOnlyVariant: o || this.state.expanded ? "default" : void 0, onChange: this.updateText, value: this.state.expanded ? this.state.textWhenExpanded : this.state.text, id: `text-input-${_}`, "aria-label": b }, l && { dir: "ltr" })),
            h.createElement(Yd, { exitDelay: d, entryDelay: p, maxWidth: u, position: C, id: `copy-button-${_}`, textId: `text-input-${_}`, "aria-label": f, onClick: (E) => {
              m(E, this.state.expanded ? this.state.textWhenExpanded : this.state.text), this.setState({ copied: !0 });
            }, onTooltipHidden: () => this.setState({ copied: !1 }) }, this.state.copied ? g : f)
          ),
          this.state.expanded && h.createElement(Ih, { isReadOnly: o, isCode: l, id: `content-${_}`, onChange: this.updateTextWhenExpanded }, this.state.text)
        ))
      );
    };
    const n = Array.isArray(this.props.children) ? this.props.children.join("") : this.props.children;
    this.state = {
      text: n,
      expanded: this.props.isExpanded,
      copied: !1,
      textWhenExpanded: n
    };
  }
}
ni.displayName = "ClipboardCopy";
ni.defaultProps = {
  hoverTip: "Copy to clipboard",
  clickTip: "Successfully copied to clipboard!",
  isReadOnly: !1,
  isExpanded: !1,
  isCode: !1,
  variant: "inline",
  position: tf.top,
  maxWidth: "150px",
  exitDelay: 1500,
  entryDelay: 300,
  onCopy: p_,
  onChange: () => {
  },
  textAriaLabel: "Copyable input",
  toggleAriaLabel: "Show content",
  additionalActions: null,
  ouiaSafe: !0
};
const Ml = {
  codeBlock: "pf-v5-c-code-block",
  codeBlockActions: "pf-v5-c-code-block__actions",
  codeBlockCode: "pf-v5-c-code-block__code",
  codeBlockContent: "pf-v5-c-code-block__content",
  codeBlockHeader: "pf-v5-c-code-block__header",
  codeBlockPre: "pf-v5-c-code-block__pre"
}, YS = (e) => {
  var { children: t = null, className: n, actions: r = null } = e, i = se(e, ["children", "className", "actions"]);
  return h.createElement(
    "div",
    Object.assign({ className: j(Ml.codeBlock, n) }, i),
    r && h.createElement(
      "div",
      { className: j(Ml.codeBlockHeader) },
      h.createElement("div", { className: j(Ml.codeBlockActions) }, r)
    ),
    h.createElement("div", { className: j(Ml.codeBlockContent) }, t)
  );
};
YS.displayName = "CodeBlock";
const JS = (e) => {
  var { children: t = null, className: n } = e, r = se(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: j(`${Ml.codeBlockActions}-item`, n) }, r), t);
};
JS.displayName = "CodeBlockAction";
const Lt = {
  dataList: "pf-v5-c-data-list",
  dataListAction: "pf-v5-c-data-list__action",
  dataListCell: "pf-v5-c-data-list__cell",
  dataListCheck: "pf-v5-c-data-list__check",
  dataListExpandableContent: "pf-v5-c-data-list__expandable-content",
  dataListExpandableContentBody: "pf-v5-c-data-list__expandable-content-body",
  dataListItem: "pf-v5-c-data-list__item",
  dataListItemAction: "pf-v5-c-data-list__item-action",
  dataListItemContent: "pf-v5-c-data-list__item-content",
  dataListItemControl: "pf-v5-c-data-list__item-control",
  dataListItemDraggableButton: "pf-v5-c-data-list__item-draggable-button",
  dataListItemDraggableIcon: "pf-v5-c-data-list__item-draggable-icon",
  dataListItemRow: "pf-v5-c-data-list__item-row",
  dataListText: "pf-v5-c-data-list__text",
  dataListToggle: "pf-v5-c-data-list__toggle",
  dataListToggleIcon: "pf-v5-c-data-list__toggle-icon",
  dirRtl: "pf-v5-m-dir-rtl",
  modifiers: {
    hidden: "pf-m-hidden",
    hiddenOnSm: "pf-m-hidden-on-sm",
    visibleOnSm: "pf-m-visible-on-sm",
    hiddenOnMd: "pf-m-hidden-on-md",
    visibleOnMd: "pf-m-visible-on-md",
    hiddenOnLg: "pf-m-hidden-on-lg",
    visibleOnLg: "pf-m-visible-on-lg",
    hiddenOnXl: "pf-m-hidden-on-xl",
    visibleOnXl: "pf-m-visible-on-xl",
    hiddenOn_2xl: "pf-m-hidden-on-2xl",
    visibleOn_2xl: "pf-m-visible-on-2xl",
    icon: "pf-m-icon",
    alignRight: "pf-m-align-right",
    noFill: "pf-m-no-fill",
    flex_2: "pf-m-flex-2",
    flex_3: "pf-m-flex-3",
    flex_4: "pf-m-flex-4",
    flex_5: "pf-m-flex-5",
    gridNone: "pf-m-grid-none",
    gridSm: "pf-m-grid-sm",
    gridMd: "pf-m-grid-md",
    gridLg: "pf-m-grid-lg",
    gridXl: "pf-m-grid-xl",
    grid_2xl: "pf-m-grid-2xl",
    compact: "pf-m-compact",
    dragOver: "pf-m-drag-over",
    truncate: "pf-m-truncate",
    breakWord: "pf-m-break-word",
    nowrap: "pf-m-nowrap",
    clickable: "pf-m-clickable",
    selected: "pf-m-selected",
    ghostRow: "pf-m-ghost-row",
    expanded: "pf-m-expanded",
    disabled: "pf-m-disabled",
    noPadding: "pf-m-no-padding"
  },
  themeDark: "pf-v5-theme-dark"
}, m_ = {
  none: Lt.modifiers.gridNone,
  always: "pf-m-grid",
  // Placeholder per https://github.com/patternfly/patternfly-react/issues/4965#issuecomment-704984236
  sm: Lt.modifiers.gridSm,
  md: Lt.modifiers.gridMd,
  lg: Lt.modifiers.gridLg,
  xl: Lt.modifiers.gridXl,
  "2xl": Lt.modifiers.grid_2xl
};
var tv;
(function(e) {
  e.nowrap = "nowrap", e.truncate = "truncate", e.breakWord = "breakWord";
})(tv || (tv = {}));
const ZS = h.createContext({
  isSelectable: !1
}), QS = (e) => {
  var { children: t = null, className: n = "", "aria-label": r, onSelectDataListItem: i, selectedDataListItemId: s = "", isCompact: o = !1, gridBreakpoint: l = "md", wrapModifier: c = null, onSelectableRowChange: d, innerRef: u } = e, p = se(e, ["children", "className", "aria-label", "onSelectDataListItem", "selectedDataListItemId", "isCompact", "gridBreakpoint", "wrapModifier", "onSelectableRowChange", "innerRef"]);
  const m = i !== void 0, f = (g, b) => {
    i(g, b);
  };
  return h.createElement(
    ZS.Provider,
    { value: {
      isSelectable: m,
      selectedDataListItemId: s,
      updateSelectedDataListItem: f,
      onSelectableRowChange: d
    } },
    h.createElement("ul", Object.assign({ className: j(Lt.dataList, o && Lt.modifiers.compact, m_[l], c && Lt.modifiers[c], n), style: p.style, role: "list", "aria-label": r, ref: u }, p), t)
  );
};
QS.displayName = "DataListBase";
const Er = h.forwardRef((e, t) => h.createElement(QS, Object.assign({ innerRef: t }, e)));
Er.displayName = "DataList";
const e0 = (e) => {
  var {
    children: t,
    className: n,
    visibility: r,
    /* eslint-disable @typescript-eslint/no-unused-vars */
    id: i,
    "aria-label": s,
    "aria-labelledby": o,
    isPlainButtonAction: l
  } = e, c = se(e, ["children", "className", "visibility", "id", "aria-label", "aria-labelledby", "isPlainButtonAction"]);
  return h.createElement("div", Object.assign({ className: j(Lt.dataListItemAction, pt(r, Lt), n) }, c), l ? h.createElement("div", { className: j(Lt.dataListAction) }, t) : t);
};
e0.displayName = "DataListAction";
const oa = (e) => {
  var { children: t = null, className: n = "", width: r = 1, isFilled: i = !0, alignRight: s = !1, isIcon: o = !1, wrapModifier: l = null } = e, c = se(e, ["children", "className", "width", "isFilled", "alignRight", "isIcon", "wrapModifier"]);
  return h.createElement("div", Object.assign({ className: j(Lt.dataListCell, r > 1 && Lt.modifiers[`flex_${r}`], !i && Lt.modifiers.noFill, s && Lt.modifiers.alignRight, o && Lt.modifiers.icon, n, l && Lt.modifiers[l]) }, c), t);
};
oa.displayName = "DataListCell";
const t0 = (e) => {
  var {
    className: t = "",
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    onChange: n = (p, m) => {
    },
    isValid: r = !0,
    isDisabled: i = !1,
    isChecked: s = !1,
    checked: o = !1,
    defaultChecked: l,
    otherControls: c = !1
  } = e, d = se(e, ["className", "onChange", "isValid", "isDisabled", "isChecked", "checked", "defaultChecked", "otherControls"]);
  const u = h.createElement(
    "div",
    { className: j(Lt.dataListCheck) },
    h.createElement("input", Object.assign({}, d, { type: "checkbox", onChange: (p) => n(p, p.currentTarget.checked), "aria-invalid": !r, disabled: i }, [!0, !1].includes(l) && { defaultChecked: l }, ![!0, !1].includes(l) && { checked: s || o }))
  );
  return h.createElement(
    h.Fragment,
    null,
    !c && h.createElement("div", { className: j(Lt.dataListItemControl, t) }, u),
    c && u
  );
};
t0.displayName = "DataListCheck";
const Eh = (e) => {
  var { children: t, className: n = "" } = e, r = se(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: j(Lt.dataListItemControl, n) }, r), t);
};
Eh.displayName = "DataListControl";
const f_ = {
  name: "GripVerticalIcon",
  height: 512,
  width: 320,
  svgPath: "M96 32H32C14.33 32 0 46.33 0 64v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160H32c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zM288 32h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32V64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32zm0 160h-64c-17.67 0-32 14.33-32 32v64c0 17.67 14.33 32 32 32h64c17.67 0 32-14.33 32-32v-64c0-17.67-14.33-32-32-32z",
  yOffset: 0,
  xOffset: 0
}, n0 = et(f_), Ph = (e) => {
  var { className: t = "", isDisabled: n = !1 } = e, r = se(e, ["className", "isDisabled"]);
  return h.createElement(
    "button",
    Object.assign({ className: j(Lt.dataListItemDraggableButton, n && Lt.modifiers.disabled, t), type: "button", disabled: n }, r),
    h.createElement(
      "span",
      { className: j(Lt.dataListItemDraggableIcon) },
      h.createElement(n0, null)
    )
  );
};
Ph.displayName = "DataListDragButton";
class Pa extends h.Component {
  render() {
    const t = this.props, { children: n, isExpanded: r, className: i, id: s, "aria-labelledby": o, selectableInputAriaLabel: l } = t, c = se(t, ["children", "isExpanded", "className", "id", "aria-labelledby", "selectableInputAriaLabel"]);
    return h.createElement(ZS.Consumer, null, ({ isSelectable: d, selectedDataListItemId: u, updateSelectedDataListItem: p, onSelectableRowChange: m }) => {
      const f = (y) => {
        let C = y.target;
        for (; y.currentTarget !== C; ) {
          if ("onclick" in C && C.onclick || C.parentNode.classList.contains(Lt.dataListItemAction) || C.parentNode.classList.contains(Lt.dataListItemControl))
            return;
          C = C.parentNode;
        }
        p(y, s);
      }, g = (y) => {
        [cn.Enter, cn.Space].includes(y.key) && (y.preventDefault(), p(y, s));
      }, b = u === s, v = l ? { "aria-label": l } : { "aria-labelledby": o };
      return h.createElement(
        "li",
        Object.assign({ id: s, className: j(Lt.dataListItem, r && Lt.modifiers.expanded, d && Lt.modifiers.clickable, u && b && Lt.modifiers.selected, i), "aria-labelledby": o }, d && { tabIndex: 0, onClick: f, onKeyDown: g }, d && b && { "aria-selected": !0 }, c),
        m && h.createElement("input", Object.assign({ className: "pf-v5-screen-reader", type: "radio", checked: b, onChange: (y) => m(y, s), tabIndex: -1 }, v)),
        h.Children.map(n, (y) => h.isValidElement(y) && h.cloneElement(y, {
          rowid: o
        }))
      );
    });
  }
}
Pa.displayName = "DataListItem";
Pa.defaultProps = {
  isExpanded: !1,
  className: "",
  id: "",
  children: null,
  "aria-labelledby": ""
};
const Ua = (e) => {
  var {
    className: t = "",
    dataListCells: n,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    rowid: r = ""
  } = e, i = se(e, ["className", "dataListCells", "rowid"]);
  return h.createElement("div", Object.assign({ className: j(Lt.dataListItemContent, t) }, i), n);
};
Ua.displayName = "DataListItemCells";
const Va = (e) => {
  var { children: t, className: n = "", rowid: r = "", wrapModifier: i = null } = e, s = se(e, ["children", "className", "rowid", "wrapModifier"]);
  return h.createElement("div", Object.assign({ className: j(Lt.dataListItemRow, n, i && Lt.modifiers[i]) }, s), h.Children.map(t, (o) => h.isValidElement(o) && h.cloneElement(o, {
    rowid: r
  })));
};
Va.displayName = "DataListItemRow";
const Oo = {
  datePicker: "pf-v5-c-date-picker",
  datePickerCalendar: "pf-v5-c-date-picker__calendar",
  datePickerHelperText: "pf-v5-c-date-picker__helper-text",
  datePickerInput: "pf-v5-c-date-picker__input",
  formControl: "pf-v5-c-form-control",
  modifiers: {
    alignRight: "pf-m-align-right",
    top: "pf-m-top",
    static: "pf-m-static"
  },
  themeDark: "pf-v5-theme-dark"
}, Jt = {
  modifiers: {
    noPadding: "pf-m-no-padding",
    widthAuto: "pf-m-width-auto",
    top: "pf-m-top",
    topLeft: "pf-m-top-left",
    topRight: "pf-m-top-right",
    bottom: "pf-m-bottom",
    bottomLeft: "pf-m-bottom-left",
    bottomRight: "pf-m-bottom-right",
    left: "pf-m-left",
    leftTop: "pf-m-left-top",
    leftBottom: "pf-m-left-bottom",
    right: "pf-m-right",
    rightTop: "pf-m-right-top",
    rightBottom: "pf-m-right-bottom",
    danger: "pf-m-danger",
    warning: "pf-m-warning",
    success: "pf-m-success",
    custom: "pf-m-custom",
    info: "pf-m-info"
  },
  popover: "pf-v5-c-popover",
  popoverArrow: "pf-v5-c-popover__arrow",
  popoverBody: "pf-v5-c-popover__body",
  popoverClose: "pf-v5-c-popover__close",
  popoverContent: "pf-v5-c-popover__content",
  popoverFooter: "pf-v5-c-popover__footer",
  popoverHeader: "pf-v5-c-popover__header",
  popoverTitle: "pf-v5-c-popover__title",
  popoverTitleIcon: "pf-v5-c-popover__title-icon",
  popoverTitleText: "pf-v5-c-popover__title-text",
  themeDark: "pf-v5-theme-dark"
}, h_ = h.createContext({}), a0 = (e) => {
  var { className: t = null, children: n } = e, r = se(e, ["className", "children"]);
  return h.createElement("div", Object.assign({ className: j(Jt.popoverContent, t) }, r), n);
};
a0.displayName = "PopoverContent";
const r0 = (e) => {
  var { children: t, id: n, className: r } = e, i = se(e, ["children", "id", "className"]);
  return h.createElement("div", Object.assign({ className: j(Jt.popoverBody, r), id: n }, i), t);
};
r0.displayName = "PopoverBody";
const i0 = (e) => {
  var { children: t, className: n } = e, r = se(e, ["children", "className"]);
  return h.createElement("span", Object.assign({ className: j(Jt.popoverTitleIcon, n) }, r), t);
};
i0.displayName = "PopoverHeaderIcon";
const s0 = (e) => {
  var { children: t, className: n, headingLevel: r } = e, i = se(e, ["children", "className", "headingLevel"]);
  const s = r;
  return h.createElement(s, Object.assign({ className: j(Jt.popoverTitleText, n) }, i), t);
};
s0.displayName = "PopoverHeaderText";
const o0 = (e) => {
  var { children: t, icon: n, className: r, titleHeadingLevel: i = "h6", alertSeverityVariant: s, id: o, alertSeverityScreenReaderText: l } = e, c = se(e, ["children", "icon", "className", "titleHeadingLevel", "alertSeverityVariant", "id", "alertSeverityScreenReaderText"]);
  return h.createElement(
    "header",
    Object.assign({ className: j(Jt.popoverHeader, r) }, c),
    h.createElement(
      "div",
      { className: j(Jt.popoverTitle), id: o },
      n && h.createElement(i0, null, n),
      h.createElement(
        s0,
        { headingLevel: i },
        s && l && h.createElement("span", { className: "pf-v5-screen-reader" }, l),
        t
      )
    )
  );
};
o0.displayName = "PopoverHeader";
const l0 = (e) => {
  var { children: t, className: n = "" } = e, r = se(e, ["children", "className"]);
  return h.createElement("footer", Object.assign({ className: j(Jt.popoverFooter, n) }, r), t);
};
l0.displayName = "PopoverFooter";
const c0 = (e) => {
  var { onClose: t = () => {
  } } = e, n = se(e, ["onClose"]);
  return h.createElement(
    "div",
    { className: j(Jt.popoverClose) },
    h.createElement(
      z,
      Object.assign({ onClick: t, variant: "plain", "aria-label": !0 }, n, { style: { pointerEvents: "auto" } }),
      h.createElement(fa, null)
    )
  );
};
c0.displayName = "PopoverCloseButton";
const d0 = (e) => {
  var { className: t = "" } = e, n = se(e, ["className"]);
  return h.createElement("div", Object.assign({ className: j(Jt.popoverArrow, t) }, n));
};
d0.displayName = "PopoverArrow";
const zp = {
  name: "--pf-v5-c-popover--MaxWidth",
  value: "none",
  var: "var(--pf-v5-c-popover--MaxWidth)"
}, qp = {
  name: "--pf-v5-c-popover--MinWidth",
  value: "auto",
  var: "var(--pf-v5-c-popover--MinWidth)"
};
var nv;
(function(e) {
  e.auto = "auto", e.top = "top", e.bottom = "bottom", e.left = "left", e.right = "right", e.topStart = "top-start", e.topEnd = "top-end", e.bottomStart = "bottom-start", e.bottomEnd = "bottom-end", e.leftStart = "left-start", e.leftEnd = "left-end", e.rightStart = "right-start", e.rightEnd = "right-end";
})(nv || (nv = {}));
const g_ = {
  custom: Jt.modifiers.custom,
  info: Jt.modifiers.info,
  success: Jt.modifiers.success,
  warning: Jt.modifiers.warning,
  danger: Jt.modifiers.danger
}, Rr = (e) => {
  var { children: t, position: n = "top", enableFlip: r = !0, className: i = "", isVisible: s = null, shouldClose: o = () => null, shouldOpen: l = () => null, "aria-label": c = "", bodyContent: d, headerContent: u = null, headerComponent: p = "h6", headerIcon: m = null, alertSeverityVariant: f, alertSeverityScreenReaderText: g, footerContent: b = null, appendTo: v = () => document.body, hideOnOutsideClick: y = !0, onHide: C = () => null, onHidden: S = () => null, onShow: P = () => null, onShown: w = () => null, onMount: A = () => null, zIndex: k = 9999, triggerAction: T = "click", minWidth: O = qp && qp.value, maxWidth: I = zp && zp.value, closeBtnAriaLabel: _ = "Close", showClose: E = !0, distance: L = 25, flipBehavior: F = [
    "top",
    "bottom",
    "left",
    "right",
    "top-start",
    "top-end",
    "bottom-start",
    "bottom-end",
    "left-start",
    "left-end",
    "right-start",
    "right-end"
  ], animationDuration: R = 300, id: M, withFocusTrap: U, triggerRef: K, hasNoPadding: G = !1, hasAutoWidth: N = !1, elementToFocus: $ } = e, q = se(e, ["children", "position", "enableFlip", "className", "isVisible", "shouldClose", "shouldOpen", "aria-label", "bodyContent", "headerContent", "headerComponent", "headerIcon", "alertSeverityVariant", "alertSeverityScreenReaderText", "footerContent", "appendTo", "hideOnOutsideClick", "onHide", "onHidden", "onShow", "onShown", "onMount", "zIndex", "triggerAction", "minWidth", "maxWidth", "closeBtnAriaLabel", "showClose", "distance", "flipBehavior", "animationDuration", "id", "withFocusTrap", "triggerRef", "hasNoPadding", "hasAutoWidth", "elementToFocus"]);
  const V = M || Ti(), B = s !== null, [Z, X] = h.useState(!1), [Q, ie] = h.useState(!!U), me = h.useRef(null);
  h.useEffect(() => {
    A();
  }, []), h.useEffect(() => {
    B && (s ? ee(void 0, !0) : ce());
  }, [s, B]);
  const ee = (Ce, Ge) => {
    Ce && P(Ce), X(!0), U !== !1 && Ge && ie(!0);
  }, ce = (Ce) => {
    Ce && C(Ce), X(!1);
  }, ae = {
    top: Jt.modifiers.top,
    bottom: Jt.modifiers.bottom,
    left: Jt.modifiers.left,
    right: Jt.modifiers.right,
    "top-start": Jt.modifiers.topLeft,
    "top-end": Jt.modifiers.topRight,
    "bottom-start": Jt.modifiers.bottomLeft,
    "bottom-end": Jt.modifiers.bottomRight,
    "left-start": Jt.modifiers.leftTop,
    "left-end": Jt.modifiers.leftBottom,
    "right-start": Jt.modifiers.rightTop,
    "right-end": Jt.modifiers.rightBottom
  }, Oe = O !== qp.value, Ie = I !== zp.value, Me = (Ce) => {
    Ce.key === cn.Escape && Z && (B ? o(Ce, ce) : ce(Ce));
  }, ge = (Ce, Ge, Qe) => {
    if (y && Z) {
      const qe = Qe && Qe.contains(Ce.target), Ot = Ge && Ge.contains(Ce.target);
      if (qe || Ot)
        return;
      B ? o(Ce, ce) : ce(Ce);
    }
  }, Se = (Ce) => {
    B ? Z ? o(Ce, ce) : l(Ce, ee) : Z ? ce(Ce) : ee(Ce, !0);
  }, J = () => {
    Q && ie(!1);
  }, W = (Ce) => {
    B ? l(Ce, ee) : ee(Ce, !1);
  }, Y = (Ce) => {
    B ? o(Ce, ce) : ce(Ce);
  }, oe = (Ce) => {
    B ? l(Ce, ee) : ee(Ce, !1);
  }, he = (Ce) => {
    B ? o(Ce, ce) : ce(Ce);
  }, ue = (Ce) => {
    Ce.stopPropagation(), B ? o(Ce, ce) : ce(Ce);
  }, fe = h.createElement(
    ju,
    Object.assign({ ref: me, active: Q, focusTrapOptions: {
      returnFocusOnDeactivate: U !== !1,
      clickOutsideDeactivates: !0,
      // FocusTrap's initialFocus can accept false as a value to prevent initial focus.
      // We want to prevent this in case false is ever passed in.
      initialFocus: $ || void 0,
      checkCanFocusTrap: (Ce) => new Promise((Ge) => {
        const Qe = setInterval(() => {
          Ce.every((qe) => getComputedStyle(qe).visibility !== "hidden") && (Ge(), clearInterval(Qe));
        }, 10);
      }),
      tabbableOptions: { displayCheck: "none" },
      fallbackFocus: () => {
        let Ce = null;
        return document && document.activeElement && (Ce = document.activeElement), Ce;
      }
    }, preventScrollOnDeactivate: !0, className: j(Jt.popover, f && g_[f], G && Jt.modifiers.noPadding, N && Jt.modifiers.widthAuto, i), role: "dialog", "aria-modal": "true", "aria-label": u ? void 0 : c, "aria-labelledby": u ? `popover-${V}-header` : void 0, "aria-describedby": `popover-${V}-body`, onMouseDown: J, style: {
      minWidth: Oe ? O : null,
      maxWidth: Ie ? I : null
    } }, q),
    h.createElement(d0, null),
    h.createElement(
      a0,
      null,
      E && T === "click" && h.createElement(c0, { onClose: ue, "aria-label": _ }),
      u && h.createElement(o0, { id: `popover-${V}-header`, icon: m, alertSeverityVariant: f, alertSeverityScreenReaderText: g || `${f} alert:`, titleHeadingLevel: p }, typeof u == "function" ? u(ce) : u),
      h.createElement(r0, { id: `popover-${V}-body` }, typeof d == "function" ? d(ce) : d),
      b && h.createElement(l0, { id: `popover-${V}-footer` }, typeof b == "function" ? b(ce) : b)
    )
  );
  return h.createElement(
    h_.Provider,
    { value: { headerComponent: p } },
    h.createElement(ei, { trigger: t, triggerRef: K, popper: fe, popperRef: me, minWidth: O, appendTo: v, isVisible: Z, onMouseEnter: T === "hover" && W, onMouseLeave: T === "hover" && Y, onPopperMouseEnter: T === "hover" && W, onPopperMouseLeave: T === "hover" && Y, onFocus: T === "hover" && oe, onBlur: T === "hover" && he, positionModifiers: ae, distance: L, placement: n, onTriggerClick: T === "click" && Se, onDocumentClick: ge, onDocumentKeyDown: Me, enableFlip: r, zIndex: k, flipBehavior: F, animationDuration: R, onHidden: S, onShown: w, onHide: () => ie(!1) })
  );
};
Rr.displayName = "Popover";
const b_ = {
  name: "OutlinedCalendarAltIcon",
  height: 512,
  width: 448,
  svgPath: "M148 288h-40c-6.6 0-12-5.4-12-12v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12zm108-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 96v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm-96 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm192 0v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm96-260v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V112c0-26.5 21.5-48 48-48h48V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h128V12c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v52h48c26.5 0 48 21.5 48 48zm-48 346V160H48v298c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z",
  yOffset: 0,
  xOffset: 0
}, v_ = et(b_), Ur = {
  helperText: "pf-v5-c-helper-text",
  helperTextItem: "pf-v5-c-helper-text__item",
  helperTextItemIcon: "pf-v5-c-helper-text__item-icon",
  helperTextItemText: "pf-v5-c-helper-text__item-text",
  modifiers: {
    hidden: "pf-m-hidden",
    indeterminate: "pf-m-indeterminate",
    warning: "pf-m-warning",
    success: "pf-m-success",
    error: "pf-m-error",
    dynamic: "pf-m-dynamic"
  },
  themeDark: "pf-v5-theme-dark"
}, Yr = (e) => {
  var { children: t, className: n, component: r = "div", id: i, isLiveRegion: s = !1, "aria-label": o } = e, l = se(e, ["children", "className", "component", "id", "isLiveRegion", "aria-label"]);
  const c = r;
  return h.createElement(c, Object.assign({ id: i, className: j(Ur.helperText, n) }, s && { "aria-live": "polite" }, r === "ul" && { role: "list", "aria-label": o }, l), t);
};
Yr.displayName = "HelperText";
const y_ = {
  name: "MinusIcon",
  height: 512,
  width: 448,
  svgPath: "M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z",
  yOffset: 0,
  xOffset: 0
}, u0 = et(y_), C_ = {
  default: "",
  indeterminate: Ur.modifiers.indeterminate,
  warning: Ur.modifiers.warning,
  success: Ur.modifiers.success,
  error: Ur.modifiers.error
}, Jr = (e) => {
  var { children: t, className: n, component: r = "div", variant: i = "default", icon: s, isDynamic: o = !1, hasIcon: l = o, id: c, screenReaderText: d = `${i} status` } = e, u = se(e, ["children", "className", "component", "variant", "icon", "isDynamic", "hasIcon", "id", "screenReaderText"]);
  const p = r;
  return h.createElement(
    p,
    Object.assign({ className: j(Ur.helperTextItem, C_[i], o && Ur.modifiers.dynamic, n), id: c }, u),
    s && h.createElement("span", { className: j(Ur.helperTextItemIcon), "aria-hidden": !0 }, s),
    l && !s && h.createElement(
      "span",
      { className: j(Ur.helperTextItemIcon), "aria-hidden": !0 },
      (i === "default" || i === "indeterminate") && h.createElement(u0, null),
      i === "warning" && h.createElement(nl, null),
      i === "success" && h.createElement(Ks, null),
      i === "error" && h.createElement(us, null)
    ),
    h.createElement(
      "span",
      { className: j(Ur.helperTextItemText) },
      t,
      o && h.createElement(
        "span",
        { className: "pf-v5-screen-reader" },
        ": ",
        d,
        ";"
      )
    )
  );
};
Jr.displayName = "HelperTextItem";
const x_ = {
  name: "--pf-v5-c-date-picker__input--c-form-control--width-chars",
  value: "10",
  var: "var(--pf-v5-c-date-picker__input--c-form-control--width-chars)"
}, S_ = (e) => `${e.getFullYear()}-${(e.getMonth() + 1).toString().padStart(2, "0")}-${e.getDate().toString().padStart(2, "0")}`, w_ = (e, t) => {
  var { className: n, locale: r = void 0, dateFormat: i = S_, dateParse: s = (ue) => ue.split("-").length === 3 ? /* @__PURE__ */ new Date(`${ue}T00:00:00`) : /* @__PURE__ */ new Date(void 0), isDisabled: o = !1, placeholder: l = "YYYY-MM-DD", value: c = "", "aria-label": d = "Date picker", buttonAriaLabel: u = "Toggle date picker", onChange: p = () => {
  }, onBlur: m = () => {
  }, invalidFormatText: f = "Invalid date", requiredDateOptions: g, helperText: b, appendTo: v = "inline", popoverProps: y, monthFormat: C, weekdayFormat: S, longWeekdayFormat: P, dayFormat: w, weekStart: A, validators: k = [], rangeStart: T, style: O = {}, inputProps: I = {} } = e, _ = se(e, ["className", "locale", "dateFormat", "dateParse", "isDisabled", "placeholder", "value", "aria-label", "buttonAriaLabel", "onChange", "onBlur", "invalidFormatText", "requiredDateOptions", "helperText", "appendTo", "popoverProps", "monthFormat", "weekdayFormat", "longWeekdayFormat", "dayFormat", "weekStart", "validators", "rangeStart", "style", "inputProps"]);
  const [E, L] = h.useState(c), [F, R] = h.useState(s(E)), [M, U] = h.useState(""), [K, G] = h.useState(!1), [N, $] = h.useState(!1), [q, V] = h.useState(!0), [B, Z] = h.useState(!1), X = h.useMemo(() => Math.max(i(/* @__PURE__ */ new Date()).length, l.length), [i]), Q = Object.assign({ [x_.name]: X }, O), ie = h.useRef(), me = h.useRef(), ee = h.useRef(), ce = g?.isRequired || !1, ae = g?.emptyDateText || "Date cannot be blank";
  h.useEffect(() => {
    L(c), R(s(c));
  }, [c]), h.useEffect(() => {
    Xn(F) && Oe(F);
  }, [k]), h.useEffect(() => {
    V(!E);
    const ue = s(E);
    M && Xn(ue) && Oe(ue), E === "" && !q && !B && U(ce ? ae : "");
  }, [E]);
  const Oe = (ue) => {
    U(k.map((fe) => fe(ue)).join(`
`) || "");
  }, Ie = (ue, fe) => {
    L(fe), U("");
    const Ce = s(fe);
    R(Ce), Xn(Ce) ? p(ue, fe, new Date(Ce)) : p(ue, fe);
  }, Me = (ue) => {
    Z(!1);
    const fe = s(E), Ce = Xn(fe), Ge = Ce ? new Date(fe) : void 0;
    m(ue, E, Ge), Ce && Oe(fe), !Ce && !q && U(f), !Ce && q && g?.isRequired && U(ae);
  }, ge = (ue, fe) => {
    const Ce = i(fe);
    L(Ce), R(fe), Oe(fe), G(!1), p(null, Ce, new Date(fe));
  }, Se = (ue) => {
    ue.key === "Enter" && E && (Xn(F) ? Oe(F) : U(f));
  };
  rh(t, () => ({
    setCalendarOpen: (ue) => G(ue),
    toggleCalendar: (ue) => {
      G((fe) => ue !== void 0 ? ue : !fe);
    },
    isCalendarOpen: K
  }), [G, K, N]);
  const J = (ue) => `.${Yt.calendarMonthDatesCell}.${ue} .${Yt.calendarMonthDate}`, W = J(Yt.modifiers.selected), Y = J(`${Yt.modifiers.selected}.${Yt.modifiers.endRange}`), oe = J(Yt.modifiers.current), he = () => Xn(F) && Xn(T) ? Y : Xn(F) || Xn(T) ? W : oe;
  return h.createElement(
    "div",
    Object.assign({ className: j(Oo.datePicker, n), ref: me, style: Q }, _),
    h.createElement(
      Rr,
      Object.assign({ elementToFocus: he(), position: "bottom", bodyContent: h.createElement(KS, {
        date: F,
        onChange: ge,
        locale: r,
        // Use truthy values of strings
        validators: k.map((ue) => (fe) => !ue(fe)),
        onSelectToggle: (ue) => $(ue),
        monthFormat: C,
        weekdayFormat: S,
        longWeekdayFormat: P,
        dayFormat: w,
        weekStart: A,
        rangeStart: T
      }), showClose: !1, isVisible: K, shouldClose: (ue, fe) => (ue = ue, ue.key === cn.Escape && N ? (ue.stopPropagation(), $(!1), !1) : ie.current && ie.current.contains(ue.target) ? !1 : (K && (ue.stopPropagation(), G(!1), fe(), g?.isRequired && !E && U(ae)), ue.key === cn.Escape && K && ue.stopPropagation(), !0)), withFocusTrap: !0, hasNoPadding: !0, hasAutoWidth: !0, appendTo: v, triggerRef: ee }, y),
      h.createElement(
        "div",
        { className: Oo.datePickerInput, ref: ee },
        h.createElement(
          nn,
          null,
          h.createElement(
            dt,
            null,
            h.createElement(gt, Object.assign({ isDisabled: o, isRequired: g?.isRequired, "aria-label": d, placeholder: l, validated: M.trim() ? "error" : "default", value: E, onChange: Ie, onBlur: Me, onFocus: () => Z(!0), onKeyPress: Se }, I))
          ),
          h.createElement(
            dt,
            null,
            h.createElement(
              "button",
              {
                ref: ie,
                // TODO: Removed style follow up work with issue #8457
                className: j(In.button, In.modifiers.control),
                "aria-label": u,
                type: "button",
                onClick: () => G(!K),
                disabled: o
              },
              h.createElement(v_, null)
            )
          )
        )
      )
    ),
    (M || b) && h.createElement("div", { className: Oo.datePickerHelperText }, M ? h.createElement(
      Yr,
      null,
      h.createElement(Jr, { variant: "error" }, M)
    ) : b)
  );
}, Bo = h.forwardRef(w_);
Bo.displayName = "DatePicker";
const zn = {
  card: "pf-v5-c-card",
  descriptionList: "pf-v5-c-description-list",
  descriptionListDescription: "pf-v5-c-description-list__description",
  descriptionListGroup: "pf-v5-c-description-list__group",
  descriptionListTerm: "pf-v5-c-description-list__term",
  descriptionListTermIcon: "pf-v5-c-description-list__term-icon",
  descriptionListText: "pf-v5-c-description-list__text",
  modifiers: {
    inlineGrid: "pf-m-inline-grid",
    autoColumnWidths: "pf-m-auto-column-widths",
    autoFit: "pf-m-auto-fit",
    compact: "pf-m-compact",
    fluid: "pf-m-fluid",
    fillColumns: "pf-m-fill-columns",
    displayLg: "pf-m-display-lg",
    display_2xl: "pf-m-display-2xl",
    helpText: "pf-m-help-text",
    "1Col": "pf-m-1-col",
    "2Col": "pf-m-2-col",
    "3Col": "pf-m-3-col",
    horizontal: "pf-m-horizontal",
    vertical: "pf-m-vertical",
    "1ColOnSm": "pf-m-1-col-on-sm",
    "2ColOnSm": "pf-m-2-col-on-sm",
    "3ColOnSm": "pf-m-3-col-on-sm",
    horizontalOnSm: "pf-m-horizontal-on-sm",
    verticalOnSm: "pf-m-vertical-on-sm",
    "1ColOnMd": "pf-m-1-col-on-md",
    "2ColOnMd": "pf-m-2-col-on-md",
    "3ColOnMd": "pf-m-3-col-on-md",
    horizontalOnMd: "pf-m-horizontal-on-md",
    verticalOnMd: "pf-m-vertical-on-md",
    "1ColOnLg": "pf-m-1-col-on-lg",
    "2ColOnLg": "pf-m-2-col-on-lg",
    "3ColOnLg": "pf-m-3-col-on-lg",
    horizontalOnLg: "pf-m-horizontal-on-lg",
    verticalOnLg: "pf-m-vertical-on-lg",
    "1ColOnXl": "pf-m-1-col-on-xl",
    "2ColOnXl": "pf-m-2-col-on-xl",
    "3ColOnXl": "pf-m-3-col-on-xl",
    horizontalOnXl: "pf-m-horizontal-on-xl",
    verticalOnXl: "pf-m-vertical-on-xl",
    "1ColOn_2xl": "pf-m-1-col-on-2xl",
    "2ColOn_2xl": "pf-m-2-col-on-2xl",
    "3ColOn_2xl": "pf-m-3-col-on-2xl",
    horizontalOn_2xl: "pf-m-horizontal-on-2xl",
    verticalOn_2xl: "pf-m-vertical-on-2xl"
  }
}, O_ = {
  name: "--pf-v5-c-description-list--GridTemplateColumns--min",
  value: "0",
  var: "var(--pf-v5-c-description-list--GridTemplateColumns--min)"
}, k_ = {
  name: "--pf-v5-c-description-list__term--width",
  value: "12ch",
  var: "var(--pf-v5-c-description-list__term--width)"
}, T_ = {
  name: "--pf-v5-c-description-list--m-horizontal__term--width",
  value: "fit-content(20ch)",
  var: "var(--pf-v5-c-description-list--m-horizontal__term--width)"
}, av = (e, t) => {
  const n = t;
  return Object.keys(n || {}).reduce((r, i) => i === "default" ? Object.assign(Object.assign({}, r), { [e]: n[i] }) : Object.assign(Object.assign({}, r), { [`${e}-on-${i}`]: n[i] }), {});
}, ir = (e) => {
  var { className: t = "", children: n = null, isHorizontal: r = !1, isAutoColumnWidths: i, isAutoFit: s, isInlineGrid: o, isCompact: l, isFluid: c, isFillColumns: d, displaySize: u = "default", columnModifier: p, autoFitMinModifier: m, termWidth: f, horizontalTermWidthModifier: g, orientation: b, style: v } = e, y = se(e, ["className", "children", "isHorizontal", "isAutoColumnWidths", "isAutoFit", "isInlineGrid", "isCompact", "isFluid", "isFillColumns", "displaySize", "columnModifier", "autoFitMinModifier", "termWidth", "horizontalTermWidthModifier", "orientation", "style"]);
  return s && m && (v = Object.assign(Object.assign({}, v), av(O_.name, m))), f && (v = Object.assign(Object.assign({}, v), { [k_.name]: f })), r && g && (v = Object.assign(Object.assign({}, v), av(T_.name, g))), h.createElement("dl", Object.assign({ className: j(zn.descriptionList, (r || c) && zn.modifiers.horizontal, i && zn.modifiers.autoColumnWidths, s && zn.modifiers.autoFit, pt(p, zn), pt(b, zn), o && zn.modifiers.inlineGrid, l && zn.modifiers.compact, c && zn.modifiers.fluid, d && zn.modifiers.fillColumns, u === "lg" && zn.modifiers.displayLg, u === "2xl" && zn.modifiers.display_2xl, t), style: v }, y), n);
};
ir.displayName = "DescriptionList";
const tr = (e) => {
  var { children: t = null, className: n } = e, r = se(e, ["children", "className"]);
  return h.createElement(
    "dd",
    Object.assign({ className: j(zn.descriptionListDescription, n) }, r),
    h.createElement("div", { className: j(zn.descriptionListText) }, t)
  );
};
tr.displayName = "DescriptionListDescription";
const Vr = (e) => {
  var { className: t, children: n } = e, r = se(e, ["className", "children"]);
  return h.createElement("div", Object.assign({ className: j(zn.descriptionListGroup, t) }, r), n);
};
Vr.displayName = "DescriptionListGroup";
const nr = (e) => {
  var { children: t, className: n, icon: r } = e, i = se(e, ["children", "className", "icon"]);
  return h.createElement(
    "dt",
    Object.assign({ className: j(zn.descriptionListTerm, n) }, i),
    r ? h.createElement("span", { className: j(zn.descriptionListTermIcon) }, r) : null,
    h.createElement("span", { className: j(zn.descriptionListText) }, t)
  );
};
nr.displayName = "DescriptionListTerm";
const Gp = {
  divider: "pf-v5-c-divider",
  modifiers: {
    hidden: "pf-m-hidden",
    hiddenOnSm: "pf-m-hidden-on-sm",
    visibleOnSm: "pf-m-visible-on-sm",
    hiddenOnMd: "pf-m-hidden-on-md",
    visibleOnMd: "pf-m-visible-on-md",
    hiddenOnLg: "pf-m-hidden-on-lg",
    visibleOnLg: "pf-m-visible-on-lg",
    hiddenOnXl: "pf-m-hidden-on-xl",
    visibleOnXl: "pf-m-visible-on-xl",
    hiddenOn_2xl: "pf-m-hidden-on-2xl",
    visibleOn_2xl: "pf-m-visible-on-2xl",
    vertical: "pf-m-vertical",
    insetNone: "pf-m-inset-none",
    insetXs: "pf-m-inset-xs",
    insetSm: "pf-m-inset-sm",
    insetMd: "pf-m-inset-md",
    insetLg: "pf-m-inset-lg",
    insetXl: "pf-m-inset-xl",
    inset_2xl: "pf-m-inset-2xl",
    inset_3xl: "pf-m-inset-3xl",
    horizontalOnSm: "pf-m-horizontal-on-sm",
    verticalOnSm: "pf-m-vertical-on-sm",
    insetNoneOnSm: "pf-m-inset-none-on-sm",
    insetXsOnSm: "pf-m-inset-xs-on-sm",
    insetSmOnSm: "pf-m-inset-sm-on-sm",
    insetMdOnSm: "pf-m-inset-md-on-sm",
    insetLgOnSm: "pf-m-inset-lg-on-sm",
    insetXlOnSm: "pf-m-inset-xl-on-sm",
    inset_2xlOnSm: "pf-m-inset-2xl-on-sm",
    inset_3xlOnSm: "pf-m-inset-3xl-on-sm",
    horizontalOnMd: "pf-m-horizontal-on-md",
    verticalOnMd: "pf-m-vertical-on-md",
    insetNoneOnMd: "pf-m-inset-none-on-md",
    insetXsOnMd: "pf-m-inset-xs-on-md",
    insetSmOnMd: "pf-m-inset-sm-on-md",
    insetMdOnMd: "pf-m-inset-md-on-md",
    insetLgOnMd: "pf-m-inset-lg-on-md",
    insetXlOnMd: "pf-m-inset-xl-on-md",
    inset_2xlOnMd: "pf-m-inset-2xl-on-md",
    inset_3xlOnMd: "pf-m-inset-3xl-on-md",
    horizontalOnLg: "pf-m-horizontal-on-lg",
    verticalOnLg: "pf-m-vertical-on-lg",
    insetNoneOnLg: "pf-m-inset-none-on-lg",
    insetXsOnLg: "pf-m-inset-xs-on-lg",
    insetSmOnLg: "pf-m-inset-sm-on-lg",
    insetMdOnLg: "pf-m-inset-md-on-lg",
    insetLgOnLg: "pf-m-inset-lg-on-lg",
    insetXlOnLg: "pf-m-inset-xl-on-lg",
    inset_2xlOnLg: "pf-m-inset-2xl-on-lg",
    inset_3xlOnLg: "pf-m-inset-3xl-on-lg",
    horizontalOnXl: "pf-m-horizontal-on-xl",
    verticalOnXl: "pf-m-vertical-on-xl",
    insetNoneOnXl: "pf-m-inset-none-on-xl",
    insetXsOnXl: "pf-m-inset-xs-on-xl",
    insetSmOnXl: "pf-m-inset-sm-on-xl",
    insetMdOnXl: "pf-m-inset-md-on-xl",
    insetLgOnXl: "pf-m-inset-lg-on-xl",
    insetXlOnXl: "pf-m-inset-xl-on-xl",
    inset_2xlOnXl: "pf-m-inset-2xl-on-xl",
    inset_3xlOnXl: "pf-m-inset-3xl-on-xl",
    horizontalOn_2xl: "pf-m-horizontal-on-2xl",
    verticalOn_2xl: "pf-m-vertical-on-2xl",
    insetNoneOn_2xl: "pf-m-inset-none-on-2xl",
    insetXsOn_2xl: "pf-m-inset-xs-on-2xl",
    insetSmOn_2xl: "pf-m-inset-sm-on-2xl",
    insetMdOn_2xl: "pf-m-inset-md-on-2xl",
    insetLgOn_2xl: "pf-m-inset-lg-on-2xl",
    insetXlOn_2xl: "pf-m-inset-xl-on-2xl",
    inset_2xlOn_2xl: "pf-m-inset-2xl-on-2xl",
    inset_3xlOn_2xl: "pf-m-inset-3xl-on-2xl"
  }
};
var of;
(function(e) {
  e.hr = "hr", e.li = "li", e.div = "div";
})(of || (of = {}));
const Pt = (e) => {
  var { className: t, component: n = of.hr, inset: r, orientation: i } = e, s = se(e, ["className", "component", "inset", "orientation"]);
  const o = n;
  return h.createElement(o, Object.assign({ className: j(Gp.divider, pt(r, Gp), pt(i, Gp), t) }, n !== "hr" && { role: "separator" }, s));
};
Pt.displayName = "Divider";
const p0 = h.createContext({
  onDrag: (e) => !0,
  onDragMove: (e, t) => {
  },
  onDrop: (e, t) => !1
}), _h = ({ children: e, onDrag: t = () => !0, onDragMove: n = () => {
}, onDrop: r = () => !1 }) => h.createElement(p0.Provider, { value: { onDrag: t, onDragMove: n, onDrop: r } }, e);
_h.displayName = "DragDrop";
const vr = {
  draggable: "pf-v5-c-draggable",
  droppable: "pf-v5-c-droppable",
  modifiers: {
    dragging: "pf-m-dragging",
    dragOutside: "pf-m-drag-outside"
  },
  themeDark: "pf-v5-theme-dark"
}, m0 = h.createContext({
  zone: "defaultDroppableZone",
  droppableId: "defaultDroppableId"
}), I_ = {
  name: "--pf-v5-c-draggable--m-dragging--BackgroundColor",
  value: "#fff",
  var: "var(--pf-v5-c-draggable--m-dragging--BackgroundColor)"
};
function E_() {
  const e = document.createElement("div");
  document.head.appendChild(e);
  const t = window.getComputedStyle(e).backgroundColor;
  return document.head.removeChild(e), t;
}
function f0(e) {
  const t = E_(), n = window.getComputedStyle(e).backgroundColor;
  return n !== t ? n : e.parentElement ? f0(e.parentElement) : t;
}
function P_(e) {
  if (e.getAttribute("blankDiv") === "true")
    for (let t = 0; t < e.children.length; t++) {
      const n = e.children[t];
      if (n.getAttribute("blankDiv") === "true") {
        e.removeChild(n), e.setAttribute("blankDiv", "false");
        break;
      }
    }
}
function Wp(e) {
  P_(e.node), e.node.classList.remove(vr.modifiers.dragging), e.node.classList.remove(vr.modifiers.dragOutside), e.draggableNodes.forEach((t, n) => {
    t.style.transform = "", t.style.transition = "", e.draggableNodesRects[n] = t.getBoundingClientRect();
  });
}
function __(e, t) {
  return e.clientX > t.x && e.clientX < t.x + t.width && e.clientY > t.y && e.clientY < t.y + t.height;
}
const Rh = (e) => {
  var { className: t, children: n, style: r = {}, hasNoWrapper: i = !1 } = e, s = se(e, ["className", "children", "style", "hasNoWrapper"]);
  let [o, l] = h.useState(r);
  const [c, d] = h.useState(!1), [u, p] = h.useState(!0), { zone: m, droppableId: f } = h.useContext(m0), { onDrag: g, onDragMove: b, onDrop: v } = h.useContext(p0);
  let y = 0, C = 0, S = null, P, w = null, A, k, T = 0;
  const O = (R) => {
    c && (d(!1), l(r));
  };
  function I() {
    const R = P ? P.getAttribute("data-pf-droppableid") : null;
    return { source: {
      droppableId: f,
      index: S
    }, dest: R !== null ? {
      droppableId: R,
      index: w
    } : void 0, hoveringDroppableId: R };
  }
  const _ = (R) => {
    R.forEach(Wp), document.removeEventListener("mousemove", A), document.removeEventListener("mouseup", k), document.removeEventListener("contextmenu", k);
    const { source: M, dest: U, hoveringDroppableId: K } = I(), G = v(M, U);
    G && f === K ? (d(!1), l(r)) : G || l(Object.assign(Object.assign({}, o), { transition: "transform 0.5s cubic-bezier(0.2, 1, 0.1, 1) 0s", transform: "", background: r.background, boxShadow: r.boxShadow }));
  }, E = (R, M, U) => {
    if (P = null, M.forEach((N) => {
      const { node: $, rect: q, isDraggingHost: V, draggableNodes: B, draggableNodesRects: Z } = N;
      if (__(R, q)) {
        if ($.classList.remove(vr.modifiers.dragOutside), P = $, $.getAttribute("blankDiv") !== "true" && !V) {
          const X = document.createElement("div");
          X.setAttribute("blankDiv", "true");
          let Q = -1;
          for (let ie = 0; ie < B.length; ie++) {
            const me = Z[ie], ee = ie === B.length - 1, ce = me.y >= C - T;
            (ce || ee) && Q === -1 && (ee && !ce ? B[ie].after(X) : B[ie].before(X), X.style.height = `${U.height}px`, X.style.width = `${U.width}px`, $.setAttribute("blankDiv", "true"), Q = ie), Q !== -1 && (me.y += U.height);
          }
          B.splice(Q, 0, X), Z.splice(Q, 0, U), q.height += U.height;
        }
      } else
        Wp(N), $.classList.add(vr.modifiers.dragging), $.classList.add(vr.modifiers.dragOutside);
    }), l(Object.assign(Object.assign({}, o), { transform: `translate(${R.pageX - y}px, ${R.pageY - C}px)` })), p(!!P), w = null, P) {
      const { draggableNodes: N, draggableNodesRects: $ } = M.find((V) => V.node === P);
      let q = 0;
      N.forEach((V, B) => {
        V.style.transition = "transform 0.5s cubic-bezier(0.2, 1, 0.1, 1) 0s";
        const Z = $[B], X = Z.y + Z.height / 2;
        let Q = 0;
        C < X && R.pageY + (U.height - T) > X ? Q -= U.height : C >= X && R.pageY - T <= X && (Q += U.height), (Q <= q && Q < 0 || Q > q && Q > 0) && (w = B), V.style.transform = `translate(0, ${Q}px`, q = Q;
      });
    }
    const { source: K, dest: G } = I();
    b(K, G);
  }, L = (R) => {
    if (R.preventDefault(), c)
      return;
    const M = R.target, U = M.getBoundingClientRect(), G = Array.from(document.querySelectorAll(`[data-pf-droppable="${m}"]`)).reduce((N, $) => {
      $.classList.add(vr.modifiers.dragging);
      const q = Array.from($.querySelectorAll(`[data-pf-draggable-zone="${m}"]`)), V = $.contains(M);
      V && (S = q.indexOf(M));
      const B = {
        node: $,
        rect: $.getBoundingClientRect(),
        isDraggingHost: V,
        // We don't want styles to apply to the left behind div in onMouseMoveWhileDragging
        draggableNodes: q.map((Z) => Z === M ? Z.cloneNode(!1) : Z),
        draggableNodesRects: q.map((Z) => Z.getBoundingClientRect())
      };
      return N.push(B), N;
    }, []);
    if (!g({ droppableId: f, index: S })) {
      G.forEach((N) => Wp(N));
      return;
    }
    o = Object.assign(Object.assign({}, o), { top: U.y, left: U.x, width: U.width, height: U.height, [I_.name]: f0(M), position: "fixed", zIndex: 5e3 }), l(o), y = R.pageX, C = R.pageY, T = C - U.y, d(!0), A = (N) => E(N, G, U), k = () => _(G), document.addEventListener("mousemove", A), document.addEventListener("mouseup", k);
  }, F = Object.assign({
    "data-pf-draggable-zone": c ? null : m,
    draggable: !0,
    className: j(vr.draggable, c && vr.modifiers.dragging, !u && vr.modifiers.dragOutside, t),
    onDragStart: L,
    onTransitionEnd: O,
    style: o
  }, s);
  return h.createElement(
    h.Fragment,
    null,
    c && h.createElement("div", Object.assign({ draggable: !0 }, s, { style: Object.assign(Object.assign({}, r), { visibility: "hidden" }) }), n),
    i ? h.cloneElement(n, F) : h.createElement("div", Object.assign({}, F), n)
  );
};
Rh.displayName = "Draggable";
const Ah = (e) => {
  var { className: t, children: n, zone: r = "defaultZone", droppableId: i = "defaultId", hasNoWrapper: s = !1 } = e, o = se(e, ["className", "children", "zone", "droppableId", "hasNoWrapper"]);
  const l = Object.assign({
    "data-pf-droppable": r,
    "data-pf-droppableid": i,
    // if has no wrapper is set, don't overwrite children className with the className prop
    className: s && h.Children.count(n) === 1 ? j(vr.droppable, t, n.props.className) : j(vr.droppable, t)
  }, o);
  return h.createElement(m0.Provider, { value: { zone: r, droppableId: i } }, s ? h.cloneElement(n, l) : h.createElement("div", Object.assign({}, l), n));
};
Ah.displayName = "Droppable";
const rn = {
  dirRtl: "pf-v5-m-dir-rtl",
  drawer: "pf-v5-c-drawer",
  drawerActions: "pf-v5-c-drawer__actions",
  drawerBody: "pf-v5-c-drawer__body",
  drawerClose: "pf-v5-c-drawer__close",
  drawerContent: "pf-v5-c-drawer__content",
  drawerHead: "pf-v5-c-drawer__head",
  drawerMain: "pf-v5-c-drawer__main",
  drawerPanel: "pf-v5-c-drawer__panel",
  drawerPanelMain: "pf-v5-c-drawer__panel-main",
  drawerSection: "pf-v5-c-drawer__section",
  drawerSplitter: "pf-v5-c-drawer__splitter",
  drawerSplitterHandle: "pf-v5-c-drawer__splitter-handle",
  modifiers: {
    panelBottom: "pf-m-panel-bottom",
    inline: "pf-m-inline",
    noBorder: "pf-m-no-border",
    resizable: "pf-m-resizable",
    static: "pf-m-static",
    panelLeft: "pf-m-panel-left",
    expanded: "pf-m-expanded",
    resizing: "pf-m-resizing",
    noBackground: "pf-m-no-background",
    light_200: "pf-m-light-200",
    noPadding: "pf-m-no-padding",
    padding: "pf-m-padding",
    vertical: "pf-m-vertical",
    width_25: "pf-m-width-25",
    width_33: "pf-m-width-33",
    width_50: "pf-m-width-50",
    width_66: "pf-m-width-66",
    width_75: "pf-m-width-75",
    width_100: "pf-m-width-100",
    width_25OnLg: "pf-m-width-25-on-lg",
    width_33OnLg: "pf-m-width-33-on-lg",
    width_50OnLg: "pf-m-width-50-on-lg",
    width_66OnLg: "pf-m-width-66-on-lg",
    width_75OnLg: "pf-m-width-75-on-lg",
    width_100OnLg: "pf-m-width-100-on-lg",
    width_25OnXl: "pf-m-width-25-on-xl",
    width_33OnXl: "pf-m-width-33-on-xl",
    width_50OnXl: "pf-m-width-50-on-xl",
    width_66OnXl: "pf-m-width-66-on-xl",
    width_75OnXl: "pf-m-width-75-on-xl",
    width_100OnXl: "pf-m-width-100-on-xl",
    width_25On_2xl: "pf-m-width-25-on-2xl",
    width_33On_2xl: "pf-m-width-33-on-2xl",
    width_50On_2xl: "pf-m-width-50-on-2xl",
    width_66On_2xl: "pf-m-width-66-on-2xl",
    width_75On_2xl: "pf-m-width-75-on-2xl",
    width_100On_2xl: "pf-m-width-100-on-2xl",
    inlineOnLg: "pf-m-inline-on-lg",
    staticOnLg: "pf-m-static-on-lg",
    inlineOnXl: "pf-m-inline-on-xl",
    staticOnXl: "pf-m-static-on-xl",
    inlineOn_2xl: "pf-m-inline-on-2xl",
    staticOn_2xl: "pf-m-static-on-2xl"
  },
  pageMain: "pf-v5-c-page__main",
  themeDark: "pf-v5-theme-dark"
};
var es;
(function(e) {
  e.default = "default", e.light200 = "light-200", e.noBackground = "no-background";
})(es || (es = {}));
const Lh = h.createContext({
  isExpanded: !1,
  isStatic: !1,
  onExpand: () => {
  },
  position: "end",
  drawerRef: null,
  drawerContentRef: null,
  isInline: !1
}), Nh = (e) => {
  var { className: t = "", children: n, isExpanded: r = !1, isInline: i = !1, isStatic: s = !1, position: o = "end", onExpand: l = () => {
  } } = e, c = se(e, ["className", "children", "isExpanded", "isInline", "isStatic", "position", "onExpand"]);
  const d = h.useRef(), u = h.useRef();
  return h.createElement(
    Lh.Provider,
    { value: { isExpanded: r, isStatic: s, onExpand: l, position: o, drawerRef: d, drawerContentRef: u, isInline: i } },
    h.createElement("div", Object.assign({ className: j(rn.drawer, r && rn.modifiers.expanded, i && rn.modifiers.inline, s && rn.modifiers.static, (o === "left" || o === "start") && rn.modifiers.panelLeft, o === "bottom" && rn.modifiers.panelBottom, t), ref: d }, c), n)
  );
};
Nh.displayName = "Drawer";
const h0 = (e) => {
  var { className: t = "", children: n } = e, r = se(e, ["className", "children"]);
  return h.createElement("div", Object.assign({ className: j(rn.drawerMain, t) }, r), n);
};
h0.displayName = "DrawerMain";
const Dh = (e) => {
  var { className: t = "", children: n, panelContent: r, colorVariant: i = es.default } = e, s = se(e, ["className", "children", "panelContent", "colorVariant"]);
  const { drawerContentRef: o } = h.useContext(Lh);
  return h.createElement(
    h0,
    null,
    h.createElement("div", Object.assign({ className: j(rn.drawerContent, i === es.light200 && rn.modifiers.light_200, i === es.noBackground && rn.modifiers.noBackground, t), ref: o }, s), n),
    r
  );
};
Dh.displayName = "DrawerContent";
const Mh = (e) => {
  var { className: t = "", children: n, hasPadding: r = !1 } = e, i = se(e, ["className", "children", "hasPadding"]);
  return h.createElement("div", Object.assign({ className: j(rn.drawerBody, r && rn.modifiers.padding, t) }, i), n);
};
Mh.displayName = "DrawerContentBody";
const g0 = (e) => {
  var { className: t = "", children: n, hasNoPadding: r = !1 } = e, i = se(e, ["className", "children", "hasNoPadding"]);
  return h.createElement("div", Object.assign({ className: j(rn.drawerBody, r && rn.modifiers.noPadding, t) }, i), n);
};
g0.displayName = "DrawerPanelBody";
const b0 = (e) => {
  var { className: t = "", children: n, hasNoPadding: r = !1 } = e, i = se(e, ["className", "children", "hasNoPadding"]);
  return h.createElement(
    g0,
    { hasNoPadding: r },
    h.createElement("div", Object.assign({ className: j(rn.drawerHead, t) }, i), n)
  );
};
b0.displayName = "DrawerHead";
const Xp = {
  name: "--pf-v5-c-drawer__panel--md--FlexBasis",
  value: "50%",
  var: "var(--pf-v5-c-drawer__panel--md--FlexBasis)"
}, R_ = {
  name: "--pf-v5-c-drawer__panel--md--FlexBasis--min",
  value: "1.5rem",
  var: "var(--pf-v5-c-drawer__panel--md--FlexBasis--min)"
}, A_ = {
  name: "--pf-v5-c-drawer__panel--md--FlexBasis--max",
  value: "100%",
  var: "var(--pf-v5-c-drawer__panel--md--FlexBasis--max)"
};
let Hi = null, El = 0;
const Fh = (e) => {
  var { className: t = "", id: n, children: r, hasNoBorder: i = !1, isResizable: s = !1, onResize: o, minSize: l, defaultSize: c, maxSize: d, increment: u = 5, resizeAriaLabel: p = "Resize", widths: m, colorVariant: f = es.default, focusTrap: g } = e, b = se(e, ["className", "id", "children", "hasNoBorder", "isResizable", "onResize", "minSize", "defaultSize", "maxSize", "increment", "resizeAriaLabel", "widths", "colorVariant", "focusTrap"]);
  const v = h.useRef(), y = h.useRef(), [C, S] = h.useState(0), { position: P, isExpanded: w, isStatic: A, onExpand: k, drawerRef: T, drawerContentRef: O, isInline: I } = h.useContext(Lh), _ = A ? !1 : !w, [E, L] = h.useState(!_), [F, R] = h.useState(!1), M = h.useRef(null);
  let U = 0, K, G, N, $, q = !0;
  A && g?.enabled && console.warn("DrawerPanelContent: The focusTrap.enabled prop cannot be true if the Drawer's isStatic prop is true. This will cause a permanent focus trap."), h.useEffect(() => {
    !A && w && L(w);
  }, [A, w]);
  const V = () => {
    let W, Y;
    const oe = Zi(v.current) === "rtl";
    I && (P === "end" || P === "right") ? oe ? (W = v.current.getBoundingClientRect().left - y.current.getBoundingClientRect().right, Y = T.current.getBoundingClientRect().left - T.current.getBoundingClientRect().right) : (W = v.current.getBoundingClientRect().right - y.current.getBoundingClientRect().left, Y = T.current.getBoundingClientRect().right - T.current.getBoundingClientRect().left) : I && (P === "start" || P === "left") ? oe ? (W = y.current.getBoundingClientRect().left - v.current.getBoundingClientRect().right, Y = T.current.getBoundingClientRect().left - T.current.getBoundingClientRect().right) : (W = y.current.getBoundingClientRect().right - v.current.getBoundingClientRect().left, Y = T.current.getBoundingClientRect().right - T.current.getBoundingClientRect().left) : P === "end" || P === "right" ? oe ? (W = O.current.getBoundingClientRect().left - y.current.getBoundingClientRect().right, Y = O.current.getBoundingClientRect().left - O.current.getBoundingClientRect().right) : (W = O.current.getBoundingClientRect().right - y.current.getBoundingClientRect().left, Y = O.current.getBoundingClientRect().right - O.current.getBoundingClientRect().left) : P === "start" || P === "left" ? oe ? (W = y.current.getBoundingClientRect().left - O.current.getBoundingClientRect().right, Y = O.current.getBoundingClientRect().left - O.current.getBoundingClientRect().right) : (W = y.current.getBoundingClientRect().right - O.current.getBoundingClientRect().left, Y = O.current.getBoundingClientRect().right - O.current.getBoundingClientRect().left) : P === "bottom" && (W = O.current.getBoundingClientRect().bottom - y.current.getBoundingClientRect().top, Y = O.current.getBoundingClientRect().bottom - O.current.getBoundingClientRect().top);
    const he = W / Y * 100;
    return Math.round((he + Number.EPSILON) * 100) / 100;
  }, B = (W) => {
    W.stopPropagation(), document.addEventListener("touchmove", Oe, { passive: !1 }), document.addEventListener("touchend", ae), Hi = !0;
  }, Z = (W) => {
    W.stopPropagation(), W.preventDefault(), document.addEventListener("mousemove", ce), document.addEventListener("mouseup", Ie), T.current.classList.add(j(rn.modifiers.resizing)), Hi = !0, q = !0;
  }, X = (W) => {
    const Y = P === "bottom" ? W.clientY : W.clientX;
    ie(W, Y);
  }, Q = (W) => {
    W.preventDefault(), W.stopImmediatePropagation();
    const Y = P === "bottom" ? W.touches[0].clientY : W.touches[0].clientX;
    ie(W, Y);
  }, ie = (W, Y) => {
    const oe = Zi(v.current) === "rtl";
    if (W.stopPropagation(), !Hi)
      return;
    q && (K = v.current.getBoundingClientRect(), oe ? (N = K.right, G = K.left) : (G = K.right, N = K.left), $ = K.bottom, q = !1);
    const he = Y;
    let ue = 0;
    P === "end" || P === "right" ? ue = oe ? he - G : G - he : P === "start" || P === "left" ? ue = oe ? N - he : he - N : ue = $ - he, P === "bottom" && (v.current.style.overflowAnchor = "none"), v.current.style.setProperty(Xp.name, ue + "px"), U = ue, S(V());
  }, me = (W) => {
    Hi && (T.current.classList.remove(j(rn.modifiers.resizing)), Hi = !1, o && o(W, U, n), q = !0, document.removeEventListener("mousemove", ce), document.removeEventListener("mouseup", Ie));
  }, ee = (W) => {
    W.stopPropagation(), Hi && (Hi = !1, o && o(W, U, n), document.removeEventListener("touchmove", Oe), document.removeEventListener("touchend", ae));
  }, ce = h.useCallback(X, []), ae = h.useCallback(ee, []), Oe = h.useCallback(Q, []), Ie = h.useCallback(me, []), Me = (W) => {
    const Y = Zi(v.current) === "rtl", oe = W.key;
    if (oe !== "Escape" && oe !== "Enter" && oe !== "ArrowUp" && oe !== "ArrowDown" && oe !== "ArrowLeft" && oe !== "ArrowRight") {
      Hi && W.preventDefault();
      return;
    }
    W.preventDefault(), (oe === "Escape" || oe === "Enter") && o && o(W, U, n);
    const he = v.current.getBoundingClientRect();
    El = P === "bottom" ? he.height : he.width;
    let ue = 0;
    oe === "ArrowRight" ? Y ? ue = P === "left" || P === "start" ? -u : u : ue = P === "left" || P === "start" ? u : -u : oe === "ArrowLeft" ? Y ? ue = P === "left" || P === "start" ? u : -u : ue = P === "left" || P === "start" ? -u : u : oe === "ArrowUp" ? ue = u : oe === "ArrowDown" && (ue = -u), El = El + ue, P === "bottom" && (v.current.style.overflowAnchor = "none"), v.current.style.setProperty(Xp.name, El + "px"), U = El, S(V());
  }, ge = {};
  c && (ge[Xp.name] = c), l && (ge[R_.name] = l), d && (ge[A_.name] = d);
  const Se = g?.enabled && !A, J = Se ? ju : "div";
  return h.createElement(Ba, { prefix: "pf-drawer-panel-" }, (W) => {
    const Y = {
      tabIndex: -1,
      "aria-modal": !0,
      role: "dialog",
      active: F,
      "aria-labelledby": g?.["aria-labelledby"] || n || W,
      focusTrapOptions: {
        fallbackFocus: () => v.current,
        onActivate: () => {
          M.current !== document.activeElement && (M.current = document.activeElement);
        },
        onDeactivate: () => {
          M.current && M.current.focus && M.current.focus();
        },
        clickOutsideDeactivates: !0,
        returnFocusOnDeactivate: !1,
        // FocusTrap's initialFocus can accept false as a value to prevent initial focus.
        // We want to prevent this in case false is ever passed in.
        initialFocus: g?.elementToFocusOnExpand || void 0,
        escapeDeactivates: !1
      }
    };
    return h.createElement(J, Object.assign({}, Se && Y, { id: n || W, className: j(rn.drawerPanel, s && rn.modifiers.resizable, i && rn.modifiers.noBorder, pt(m, rn), f === es.light200 && rn.modifiers.light_200, f === es.noBackground && rn.modifiers.noBackground, t), onTransitionEnd: (oe) => {
      oe.target === v.current && (!_ && oe.nativeEvent.propertyName === "transform" && k(oe), L(!_), Se && oe.nativeEvent.propertyName === "transform" && R((he) => !he));
    }, hidden: _ }, (c || l || d) && {
      style: ge
    }, b, { ref: v }), E && h.createElement(
      h.Fragment,
      null,
      s && h.createElement(
        h.Fragment,
        null,
        h.createElement(
          "div",
          { className: j(rn.drawerSplitter, P !== "bottom" && rn.modifiers.vertical), role: "separator", tabIndex: 0, "aria-orientation": P === "bottom" ? "horizontal" : "vertical", "aria-label": p, "aria-valuenow": C, "aria-valuemin": 0, "aria-valuemax": 100, "aria-controls": n || W, onMouseDown: Z, onKeyDown: Me, onTouchStart: B, ref: y },
          h.createElement("div", { className: j(rn.drawerSplitterHandle), "aria-hidden": !0 })
        ),
        h.createElement("div", { className: j(rn.drawerPanelMain) }, r)
      ),
      !s && r
    ));
  });
};
Fh.displayName = "DrawerPanelContent";
const L_ = (e) => {
  var { children: t, className: n, onSelect: r, isOpen: i, toggle: s, shouldFocusToggleOnSelect: o = !1, onOpenChange: l, isPlain: c, isScrollable: d, innerRef: u, ouiaId: p, ouiaSafe: m = !0, zIndex: f = 9999, popperProps: g, onOpenChangeKeys: b = ["Escape", "Tab"], menuHeight: v, maxMenuHeight: y, shouldFocusFirstItemOnOpen: C = !0 } = e, S = se(e, ["children", "className", "onSelect", "isOpen", "toggle", "shouldFocusToggleOnSelect", "onOpenChange", "isPlain", "isScrollable", "innerRef", "ouiaId", "ouiaSafe", "zIndex", "popperProps", "onOpenChangeKeys", "menuHeight", "maxMenuHeight", "shouldFocusFirstItemOnOpen"]);
  const P = ne.useRef(), w = ne.useRef(), A = za(Kt.displayName, p, m), k = u || P, T = typeof s == "function" || typeof s != "function" && !s.toggleRef ? w : s?.toggleRef;
  ne.useEffect(() => {
    const _ = (L) => {
      var F, R, M;
      i && l && (!((F = k.current) === null || F === void 0) && F.contains(L.target) || !((R = T.current) === null || R === void 0) && R.contains(L.target)) && b.includes(L.key) && (l(!1), (M = T.current) === null || M === void 0 || M.focus());
    }, E = (L) => {
      var F, R, M;
      i && C && (!((F = T.current) === null || F === void 0) && F.contains(L.target)) && setTimeout(() => {
        var U;
        const K = (U = k?.current) === null || U === void 0 ? void 0 : U.querySelector('li button:not(:disabled),li input:not(:disabled),li a:not([aria-disabled="true"])');
        K && K.focus();
      }, 10), i && l && !(!((R = T?.current) === null || R === void 0) && R.contains(L.target)) && i && !(!((M = k.current) === null || M === void 0) && M.contains(L.target)) && l(!1);
    };
    return window.addEventListener("keydown", _), window.addEventListener("click", E), () => {
      window.removeEventListener("keydown", _), window.removeEventListener("click", E);
    };
  }, [i, k, T, l, b]);
  const O = y !== void 0 || v !== void 0 || d, I = ne.createElement(
    rs,
    Object.assign({ className: j(n), ref: k, onSelect: (_, E) => {
      r && r(_, E), o && T.current.focus();
    }, isPlain: c, isScrollable: O }, S, A),
    ne.createElement(al, { menuHeight: v, maxMenuHeight: y }, t)
  );
  return ne.createElement(ei, Object.assign({ trigger: typeof s == "function" ? s(T) : s.toggleNode, triggerRef: T, popper: I, popperRef: k, isVisible: i, zIndex: f }, g));
}, Kt = ne.forwardRef((e, t) => ne.createElement(L_, Object.assign({ innerRef: t }, e)));
Kt.displayName = "Dropdown";
const $h = (e) => {
  var { children: t, className: n, label: r, labelHeadingLevel: i = "h1" } = e, s = se(e, ["children", "className", "label", "labelHeadingLevel"]);
  return ne.createElement(Oh, Object.assign({ className: j(n), label: r, labelHeadingLevel: i }, s), t);
};
$h.displayName = "DropdownGroup";
const N_ = (e) => {
  var { children: t, className: n, description: r, isDisabled: i, isAriaDisabled: s, value: o, onClick: l, ouiaId: c, ouiaSafe: d, innerRef: u, tooltipProps: p } = e, m = se(e, ["children", "className", "description", "isDisabled", "isAriaDisabled", "value", "onClick", "ouiaId", "ouiaSafe", "innerRef", "tooltipProps"]);
  const f = za(Ue.displayName, c, d);
  return ne.createElement(rl, Object.assign({ className: j(n), description: r, isDisabled: i, isAriaDisabled: s, itemId: o, onClick: l, tooltipProps: p, ref: u }, f, m), t);
}, Ue = ne.forwardRef((e, t) => ne.createElement(N_, Object.assign({}, e, { innerRef: t })));
Ue.displayName = "DropdownItem";
const Xt = (e) => {
  var { children: t, className: n } = e, r = se(e, ["children", "className"]);
  return ne.createElement(il, Object.assign({ className: j(n) }, r), t);
};
Xt.displayName = "DropdownList";
const D_ = {
  name: "AngleDoubleLeftIcon",
  height: 512,
  width: 448,
  svgPath: "M223.7 239l136-136c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9L319.9 256l96.4 96.4c9.4 9.4 9.4 24.6 0 33.9L393.7 409c-9.4 9.4-24.6 9.4-33.9 0l-136-136c-9.5-9.4-9.5-24.6-.1-34zm-192 34l136 136c9.4 9.4 24.6 9.4 33.9 0l22.6-22.6c9.4-9.4 9.4-24.6 0-33.9L127.9 256l96.4-96.4c9.4-9.4 9.4-24.6 0-33.9L201.7 103c-9.4-9.4-24.6-9.4-33.9 0l-136 136c-9.5 9.4-9.5 24.6-.1 34z",
  yOffset: 0,
  xOffset: 0
}, M_ = et(D_), F_ = {
  name: "AngleDoubleRightIcon",
  height: 512,
  width: 448,
  svgPath: "M224.3 273l-136 136c-9.4 9.4-24.6 9.4-33.9 0l-22.6-22.6c-9.4-9.4-9.4-24.6 0-33.9l96.4-96.4-96.4-96.4c-9.4-9.4-9.4-24.6 0-33.9L54.3 103c9.4-9.4 24.6-9.4 33.9 0l136 136c9.5 9.4 9.5 24.6.1 34zm192-34l-136-136c-9.4-9.4-24.6-9.4-33.9 0l-22.6 22.6c-9.4 9.4-9.4 24.6 0 33.9l96.4 96.4-96.4 96.4c-9.4 9.4-9.4 24.6 0 33.9l22.6 22.6c9.4 9.4 24.6 9.4 33.9 0l136-136c9.4-9.2 9.4-24.4 0-33.8z",
  yOffset: 0,
  xOffset: 0
}, $_ = et(F_), li = {
  icon: "pf-v5-c-icon",
  iconContent: "pf-v5-c-icon__content",
  iconProgress: "pf-v5-c-icon__progress",
  modifiers: {
    inline: "pf-m-inline",
    sm: "pf-m-sm",
    md: "pf-m-md",
    lg: "pf-m-lg",
    xl: "pf-m-xl",
    inProgress: "pf-m-in-progress",
    danger: "pf-m-danger",
    warning: "pf-m-warning",
    success: "pf-m-success",
    info: "pf-m-info",
    custom: "pf-m-custom"
  },
  spinner: "pf-v5-c-spinner"
}, Ii = (e) => {
  var { children: t, className: n, progressIcon: r, size: i, iconSize: s, progressIconSize: o, status: l, isInline: c = !1, isInProgress: d = !1, defaultProgressArialabel: u = "Loading...", shouldMirrorRTL: p = !1 } = e, m = se(e, ["children", "className", "progressIcon", "size", "iconSize", "progressIconSize", "status", "isInline", "isInProgress", "defaultProgressArialabel", "shouldMirrorRTL"]);
  const f = r ?? h.createElement(ti, { diameter: "1em", "aria-label": u });
  return h.createElement(
    "span",
    Object.assign({ className: j(li.icon, c && li.modifiers.inline, d && li.modifiers.inProgress, li.modifiers[i], n) }, m),
    h.createElement("span", { className: j(li.iconContent, li.modifiers[s], li.modifiers[l], p && "pf-v5-m-mirror-inline-rtl") }, t),
    d && h.createElement("span", { className: j(li.iconProgress, li.modifiers[o], n) }, f)
  );
};
Ii.displayName = "Icon";
const j_ = {
  name: "AngleDownIcon",
  height: 512,
  width: 320,
  svgPath: "M143 352.3L7 216.3c-9.4-9.4-9.4-24.6 0-33.9l22.6-22.6c9.4-9.4 24.6-9.4 33.9 0l96.4 96.4 96.4-96.4c9.4-9.4 24.6-9.4 33.9 0l22.6 22.6c9.4 9.4 9.4 24.6 0 33.9l-136 136c-9.2 9.4-24.4 9.4-33.8 0z",
  yOffset: 0,
  xOffset: 0
}, jh = et(j_), B_ = {
  name: "SearchIcon",
  height: 512,
  width: 512,
  svgPath: "M505 442.7L405.3 343c-4.5-4.5-10.6-7-17-7H372c27.6-35.3 44-79.7 44-128C416 93.1 322.9 0 208 0S0 93.1 0 208s93.1 208 208 208c48.3 0 92.7-16.4 128-44v16.3c0 6.4 2.5 12.5 7 17l99.7 99.7c9.4 9.4 24.6 9.4 33.9 0l28.3-28.3c9.4-9.4 9.4-24.6.1-34zM208 336c-70.7 0-128-57.2-128-128 0-70.7 57.2-128 128-128 70.7 0 128 57.2 128 128 0 70.7-57.2 128-128 128z",
  yOffset: 0,
  xOffset: 0
}, is = et(B_), U_ = {
  name: "ArrowRightIcon",
  height: 512,
  width: 448,
  svgPath: "M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z",
  yOffset: 0,
  xOffset: 0
}, Bh = et(U_), An = {
  dirRtl: "pf-v5-m-dir-rtl",
  form: "pf-v5-c-form",
  formActions: "pf-v5-c-form__actions",
  formFieldGroup: "pf-v5-c-form__field-group",
  formFieldGroupBody: "pf-v5-c-form__field-group-body",
  formFieldGroupHeader: "pf-v5-c-form__field-group-header",
  formFieldGroupHeaderActions: "pf-v5-c-form__field-group-header-actions",
  formFieldGroupHeaderDescription: "pf-v5-c-form__field-group-header-description",
  formFieldGroupHeaderMain: "pf-v5-c-form__field-group-header-main",
  formFieldGroupHeaderTitle: "pf-v5-c-form__field-group-header-title",
  formFieldGroupHeaderTitleText: "pf-v5-c-form__field-group-header-title-text",
  formFieldGroupToggle: "pf-v5-c-form__field-group-toggle",
  formFieldGroupToggleButton: "pf-v5-c-form__field-group-toggle-button",
  formFieldGroupToggleIcon: "pf-v5-c-form__field-group-toggle-icon",
  formFieldset: "pf-v5-c-form__fieldset",
  formGroup: "pf-v5-c-form__group",
  formGroupControl: "pf-v5-c-form__group-control",
  formGroupLabel: "pf-v5-c-form__group-label",
  formGroupLabelHelp: "pf-v5-c-form__group-label-help",
  formGroupLabelInfo: "pf-v5-c-form__group-label-info",
  formGroupLabelMain: "pf-v5-c-form__group-label-main",
  formHelperText: "pf-v5-c-form__helper-text",
  formHelperTextIcon: "pf-v5-c-form__helper-text-icon",
  formLabel: "pf-v5-c-form__label",
  formLabelRequired: "pf-v5-c-form__label-required",
  formLabelText: "pf-v5-c-form__label-text",
  formSection: "pf-v5-c-form__section",
  formSectionTitle: "pf-v5-c-form__section-title",
  modifiers: {
    horizontal: "pf-m-horizontal",
    alignRight: "pf-m-align-right",
    noPaddingTop: "pf-m-no-padding-top",
    info: "pf-m-info",
    horizontalOnXs: "pf-m-horizontal-on-xs",
    horizontalOnSm: "pf-m-horizontal-on-sm",
    horizontalOnMd: "pf-m-horizontal-on-md",
    horizontalOnLg: "pf-m-horizontal-on-lg",
    horizontalOnXl: "pf-m-horizontal-on-xl",
    horizontalOn_2xl: "pf-m-horizontal-on-2xl",
    limitWidth: "pf-m-limit-width",
    action: "pf-m-action",
    disabled: "pf-m-disabled",
    inline: "pf-m-inline",
    stack: "pf-m-stack",
    error: "pf-m-error",
    success: "pf-m-success",
    warning: "pf-m-warning",
    inactive: "pf-m-inactive",
    hidden: "pf-m-hidden",
    expanded: "pf-m-expanded"
  },
  themeDark: "pf-v5-theme-dark"
}, ot = (e) => {
  var { children: t = null, className: n = "" } = e, r = se(e, ["children", "className"]);
  const i = j(An.formGroup, An.modifiers.action, n), s = h.createElement("div", { className: j(An.formActions) }, t);
  return h.createElement(
    "div",
    Object.assign({}, r, { className: i }),
    h.createElement("div", { className: j(An.formGroupControl) }, s)
  );
};
ot.displayName = "ActionGroup";
const V_ = {
  name: "--pf-v5-c-form--m-limit-width--MaxWidth",
  value: "55rem",
  var: "var(--pf-v5-c-form--m-limit-width--MaxWidth)"
}, K_ = (e) => {
  var { children: t = null, className: n = "", isHorizontal: r = !1, isWidthLimited: i = !1, maxWidth: s = "", innerRef: o } = e, l = se(e, ["children", "className", "isHorizontal", "isWidthLimited", "maxWidth", "innerRef"]);
  return h.createElement("form", Object.assign({ noValidate: !0 }, s && {
    style: Object.assign({ [V_.name]: s }, l.style)
  }, l, { className: j(An.form, r && An.modifiers.horizontal, (i || s) && An.modifiers.limitWidth, n), ref: o }), t);
}, St = h.forwardRef((e, t) => h.createElement(K_, Object.assign({ innerRef: t }, e)));
St.displayName = "Form";
const re = (e) => {
  var { children: t = null, className: n = "", label: r, labelInfo: i, labelIcon: s, isRequired: o = !1, isInline: l = !1, hasNoPaddingTop: c = !1, isStack: d = !1, fieldId: u, role: p } = e, m = se(e, ["children", "className", "label", "labelInfo", "labelIcon", "isRequired", "isInline", "hasNoPaddingTop", "isStack", "fieldId", "role"]);
  const f = p === "group" || p === "radiogroup", g = f ? "span" : "label", b = h.createElement(
    h.Fragment,
    null,
    h.createElement(
      g,
      Object.assign({ className: j(An.formLabel) }, !f && { htmlFor: u }),
      h.createElement("span", { className: j(An.formLabelText) }, r),
      o && h.createElement(
        "span",
        { className: j(An.formLabelRequired), "aria-hidden": "true" },
        " ",
        mS
      )
    ),
    " ",
    h.isValidElement(s) && s
  );
  return h.createElement(Ba, null, (v) => h.createElement(
    "div",
    Object.assign({ className: j(An.formGroup, n) }, p && { role: p }, f && { "aria-labelledby": `${u || v}-legend` }, m),
    r && h.createElement(
      "div",
      Object.assign({ className: j(An.formGroupLabel, i && An.modifiers.info, c && An.modifiers.noPaddingTop) }, f && { id: `${u || v}-legend` }),
      i && h.createElement(
        h.Fragment,
        null,
        h.createElement("div", { className: j(An.formGroupLabelMain) }, b),
        h.createElement("div", { className: j(An.formGroupLabelInfo) }, i)
      ),
      !i && b
    ),
    h.createElement("div", { className: j(An.formGroupControl, l && An.modifiers.inline, d && An.modifiers.stack) }, t)
  ));
};
re.displayName = "FormGroup";
const sl = (e) => {
  var { children: t = null, className: n = "" } = e, r = se(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: j(An.formHelperText, n) }, r), t);
};
sl.displayName = "FormHelperText";
const Os = {
  modifiers: {
    bordered: "pf-m-bordered",
    raised: "pf-m-raised",
    scrollable: "pf-m-scrollable"
  },
  panel: "pf-v5-c-panel",
  panelFooter: "pf-v5-c-panel__footer",
  panelHeader: "pf-v5-c-panel__header",
  panelMain: "pf-v5-c-panel__main",
  panelMainBody: "pf-v5-c-panel__main-body",
  themeDark: "pf-v5-theme-dark"
}, H_ = (e) => {
  var { className: t, children: n, variant: r, isScrollable: i, innerRef: s } = e, o = se(e, ["className", "children", "variant", "isScrollable", "innerRef"]);
  return h.createElement("div", Object.assign({ className: j(Os.panel, r === "raised" && Os.modifiers.raised, r === "bordered" && Os.modifiers.bordered, i && Os.modifiers.scrollable, t), ref: s }, o), n);
}, Jd = h.forwardRef((e, t) => h.createElement(H_, Object.assign({ innerRef: t }, e)));
Jd.displayName = "Panel";
const z_ = {
  name: "--pf-v5-c-panel__main--MaxHeight",
  value: "18.75rem",
  var: "var(--pf-v5-c-panel__main--MaxHeight)"
}, v0 = (e) => {
  var { className: t, children: n, maxHeight: r } = e, i = se(e, ["className", "children", "maxHeight"]);
  return h.createElement("div", Object.assign({ className: j(Os.panelMain, t), style: { [z_.name]: r } }, i), n);
};
v0.displayName = "PanelMain";
const Zd = (e) => {
  var { className: t, children: n } = e, r = se(e, ["className", "children"]);
  return h.createElement("div", Object.assign({ className: j(Os.panelMainBody, t) }, r), n);
};
Zd.displayName = "PanelMainBody";
const lf = (e) => {
  var { className: t, children: n } = e, r = se(e, ["className", "children"]);
  return h.createElement("div", Object.assign({ className: j(Os.panelHeader, t) }, r), n);
};
lf.displayName = "PanelHeader";
const y0 = ({ className: e, parentRef: t, parentInputRef: n, value: r = "", attributes: i = [], formAdditionalItems: s, hasWordsAttrLabel: o = "Has words", advancedSearchDelimiter: l, getAttrValueMap: c, onChange: d, onSearch: u, onClear: p, resetButtonLabel: m = "Reset", submitSearchButtonLabel: f = "Search", isSearchMenuOpen: g, onToggleAdvancedMenu: b }) => {
  const v = h.useRef(null), [y, C] = h.useState(!1);
  h.useEffect(() => {
    i.length > 0 && !l && console.error("AdvancedSearchMenu: An advancedSearchDelimiter prop is required when advanced search attributes are provided using the attributes prop");
  }), h.useEffect(() => {
    g && v && v.current ? (v.current.focus(), C(!0)) : !g && y && n && n.current && n.current.focus();
  }, [g]), h.useEffect(() => (document.addEventListener("mousedown", S), document.addEventListener("touchstart", S), document.addEventListener("keydown", P), function() {
    document.removeEventListener("mousedown", S), document.removeEventListener("touchstart", S), document.removeEventListener("keydown", P);
  }));
  const S = (O) => {
    const I = t && t.current.contains(O.target);
    g && !I && b(O);
  }, P = (O) => {
    g && O.key === cn.Escape && t && t.current.contains(O.target) && (b(O), n && n.current.focus());
  }, w = (O) => {
    O.preventDefault(), u && u(O, r, c()), g && b(O);
  }, A = (O, I, _) => {
    const E = c();
    E[O] = I;
    let L = "";
    Object.entries(E).forEach(([F, R]) => {
      if (R.trim() !== "") {
        const M = R.includes(" ") ? `'${R.replace(/(^'|'$)/g, "")}'` : R;
        F !== "haswords" ? L = `${L} ${F}${l}${M}` : L = `${L} ${M}`;
      }
    }), d && d(_, L.replace(/^\s+/g, ""));
  }, k = (O) => {
    const I = c();
    return I.hasOwnProperty(O) ? I[O] : "";
  }, T = () => {
    const O = [];
    return i.forEach((I, _) => {
      const E = typeof I == "string" ? I : I.display, L = typeof I == "string" ? I : I.attr;
      _ === 0 ? O.push(h.createElement(
        re,
        { label: E, fieldId: `${L}_${_}`, key: `${I}_${_}` },
        h.createElement(gt, { ref: v, type: "text", id: `${L}_${_}`, value: k(L), onChange: (F, R) => A(L, R, F) })
      )) : O.push(h.createElement(
        re,
        { label: E, fieldId: `${L}_${_}`, key: `${I}_${_}` },
        h.createElement(gt, { type: "text", id: `${L}_${_}`, value: k(L), onChange: (F, R) => A(L, R, F) })
      ));
    }), O.push(h.createElement(Ba, { key: "hasWords" }, (I) => h.createElement(
      re,
      { label: o, fieldId: I },
      h.createElement(gt, { type: "text", id: I, value: k("haswords"), onChange: (_, E) => A("haswords", E, _) })
    ))), O;
  };
  return g ? h.createElement(
    Jd,
    { variant: "raised", className: j(e) },
    h.createElement(
      v0,
      null,
      h.createElement(
        Zd,
        null,
        h.createElement(
          St,
          null,
          T(),
          s || null,
          h.createElement(
            ot,
            null,
            h.createElement(z, { variant: "primary", type: "submit", onClick: w, isDisabled: !r }, f),
            !!p && h.createElement(z, { variant: "link", type: "reset", onClick: p }, m)
          )
        )
      )
    )
  ) : null;
};
y0.displayName = "SearchInput";
const Qa = {
  button: "pf-v5-c-button",
  chipGroupMain: "pf-v5-c-chip-group__main",
  modifiers: {
    disabled: "pf-m-disabled",
    plain: "pf-m-plain",
    icon: "pf-m-icon",
    hint: "pf-m-hint"
  },
  textInputGroup: "pf-v5-c-text-input-group",
  textInputGroupGroup: "pf-v5-c-text-input-group__group",
  textInputGroupIcon: "pf-v5-c-text-input-group__icon",
  textInputGroupMain: "pf-v5-c-text-input-group__main",
  textInputGroupText: "pf-v5-c-text-input-group__text",
  textInputGroupTextInput: "pf-v5-c-text-input-group__text-input",
  textInputGroupUtilities: "pf-v5-c-text-input-group__utilities",
  themeDark: "pf-v5-theme-dark"
}, C0 = h.createContext({
  isDisabled: !1
}), zs = (e) => {
  var { children: t, className: n, isDisabled: r, isPlain: i, innerRef: s } = e, o = se(e, ["children", "className", "isDisabled", "isPlain", "innerRef"]);
  const l = h.useRef(null), c = s || l;
  return h.createElement(
    C0.Provider,
    { value: { isDisabled: r } },
    h.createElement("div", Object.assign({ ref: c, className: j(Qa.textInputGroup, r && Qa.modifiers.disabled, i && Qa.modifiers.plain, n) }, o), t)
  );
};
zs.displayName = "TextInputGroup";
const q_ = (e) => {
  var { children: t, className: n, icon: r, type: i = "text", hint: s, onChange: o = () => {
  }, onFocus: l, onBlur: c, "aria-label": d = "Type to filter", value: u, placeholder: p, innerRef: m, name: f, "aria-activedescendant": g, role: b, isExpanded: v, "aria-controls": y, inputId: C } = e, S = se(e, ["children", "className", "icon", "type", "hint", "onChange", "onFocus", "onBlur", "aria-label", "value", "placeholder", "innerRef", "name", "aria-activedescendant", "role", "isExpanded", "aria-controls", "inputId"]);
  const { isDisabled: P } = h.useContext(C0), w = h.useRef(null), A = m || w, k = (T) => {
    o(T, T.currentTarget.value);
  };
  return h.createElement(
    "div",
    Object.assign({ className: j(Qa.textInputGroupMain, r && Qa.modifiers.icon, n) }, S),
    t,
    h.createElement(
      "span",
      { className: j(Qa.textInputGroupText) },
      s && h.createElement("input", { className: j(Qa.textInputGroupTextInput, Qa.modifiers.hint), type: "text", disabled: !0, "aria-hidden": "true", value: s, id: C }),
      r && h.createElement("span", { className: j(Qa.textInputGroupIcon) }, r),
      h.createElement("input", Object.assign({ ref: A, type: i, className: j(Qa.textInputGroupTextInput), "aria-label": d, disabled: P, onChange: k, onFocus: l, onBlur: c, value: u || "", placeholder: p, name: f, "aria-activedescendant": g, id: C }, b && { role: b }, v !== void 0 && { "aria-expanded": v }, y && { "aria-controls": y }))
    )
  );
}, qs = h.forwardRef((e, t) => h.createElement(q_, Object.assign({ innerRef: t }, e)));
qs.displayName = "TextInputGroupMain";
const Gs = (e) => {
  var { children: t, className: n } = e, r = se(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: j(Qa.textInputGroupUtilities, n) }, r), t);
};
Gs.displayName = "TextInputGroupUtilities";
const x0 = (e) => {
  var { className: t, searchInputId: n, value: r = "", attributes: i = [], formAdditionalItems: s, hasWordsAttrLabel: o = "Has words", advancedSearchDelimiter: l, placeholder: c, hint: d, onChange: u, onSearch: p, onClear: m, onToggleAdvancedSearch: f, isAdvancedSearchOpen: g, resultsCount: b, onNextClick: v, onPreviousClick: y, innerRef: C, expandableInput: S, "aria-label": P = "Search input", resetButtonLabel: w = "Reset", openMenuButtonAriaLabel: A = "Open advanced search", previousNavigationButtonAriaLabel: k = "Previous", isPreviousNavigationButtonDisabled: T = !1, isNextNavigationButtonDisabled: O = !1, nextNavigationButtonAriaLabel: I = "Next", submitSearchButtonLabel: _ = "Search", isDisabled: E = !1, appendTo: L, zIndex: F = 9999, name: R, areUtilitiesDisplayed: M } = e, U = se(e, ["className", "searchInputId", "value", "attributes", "formAdditionalItems", "hasWordsAttrLabel", "advancedSearchDelimiter", "placeholder", "hint", "onChange", "onSearch", "onClear", "onToggleAdvancedSearch", "isAdvancedSearchOpen", "resultsCount", "onNextClick", "onPreviousClick", "innerRef", "expandableInput", "aria-label", "resetButtonLabel", "openMenuButtonAriaLabel", "previousNavigationButtonAriaLabel", "isPreviousNavigationButtonDisabled", "isNextNavigationButtonDisabled", "nextNavigationButtonAriaLabel", "submitSearchButtonLabel", "isDisabled", "appendTo", "zIndex", "name", "areUtilitiesDisplayed"]);
  const [K, G] = h.useState(!1), [N, $] = h.useState(r), q = h.useRef(null), V = h.useRef(null), B = C || V, Z = h.useRef(null), X = h.useRef(null), Q = h.useRef(null), [ie, me] = h.useState(!1), { isExpanded: ee, onToggleExpand: ce, toggleAriaLabel: ae } = S || {};
  h.useEffect(() => {
    var qe, Ot;
    if (ie)
      ee ? (qe = B?.current) === null || qe === void 0 || qe.focus() : (Ot = Z?.current) === null || Ot === void 0 || Ot.focus();
    else return;
    me(!1);
  }, [ie, ee, B, Z]), h.useEffect(() => {
    $(r);
  }, [r]), h.useEffect(() => {
    i.length > 0 && !l && console.error("An advancedSearchDelimiter prop is required when advanced search attributes are provided using the attributes prop");
  }), h.useEffect(() => {
    G(g);
  }, [g]);
  const Oe = (qe, Ot) => {
    u && u(qe, Ot), $(Ot);
  }, Ie = (qe) => {
    const Ot = !K;
    G(Ot), f && f(qe, Ot);
  }, Me = (qe) => {
    qe.preventDefault(), p && p(qe, r, Se()), G(!1);
  }, ge = (qe) => {
    let Ot;
    return qe.match(/\\?.|^$/g).reduce((Bt, Ye) => (Ye === "'" || Ye === '"' ? (Ot || (Ot = Ye), Ye === Ot && (Bt.quote = !Bt.quote)) : !Bt.quote && Ye === " " ? Bt.a.push("") : Bt.a[Bt.a.length - 1] += Ye.replace(/\\(.)/, "$1"), Bt), { a: [""] }).a;
  }, Se = () => {
    const qe = {};
    return ge(N).map((Bt) => {
      const Ye = Bt.split(l);
      Ye.length === 2 ? qe[Ye[0]] = Ye[1].replace(/(^'|'$)/g, "") : Ye.length === 1 && (qe.haswords = qe.hasOwnProperty("haswords") ? `${qe.haswords} ${Ye[0]}` : Ye[0]);
    }), qe;
  }, J = (qe) => {
    qe.key === "Enter" && Me(qe);
  }, W = (qe) => {
    m && m(qe), B && B.current && B.current.focus();
  }, Y = (qe) => {
    $(""), ce(qe, ee), me(!0);
  }, oe = r && (b || !!v && !!y || !!m && !S), he = (qe = {}) => {
    var Ot = se(qe, []);
    return h.createElement(
      zs,
      Object.assign({ isDisabled: E }, Ot),
      h.createElement(qs, { hint: d, icon: h.createElement(is, null), innerRef: B, value: N, placeholder: c, "aria-label": P, onKeyDown: J, onChange: Oe, name: R, inputId: n }),
      (oe || M) && h.createElement(
        Gs,
        null,
        b && h.createElement(Ir, { isRead: !0 }, b),
        !!v && !!y && h.createElement(
          "div",
          { className: Qa.textInputGroupGroup },
          h.createElement(
            z,
            { variant: xe.plain, "aria-label": k, isDisabled: E || T, onClick: y },
            h.createElement(VP, null)
          ),
          h.createElement(
            z,
            { variant: xe.plain, "aria-label": I, isDisabled: E || O, onClick: v },
            h.createElement(jh, null)
          )
        ),
        !!m && !S && h.createElement(
          z,
          { variant: xe.plain, isDisabled: E, "aria-label": w, onClick: W },
          h.createElement(fa, null)
        )
      )
    );
  }, ue = h.createElement(z, { variant: xe.plain, "aria-label": ae, "aria-expanded": ee, icon: ee ? h.createElement(fa, null) : h.createElement(is, null), onClick: Y, ref: Z }), fe = (qe = {}) => {
    var Ot = se(qe, []);
    return h.createElement(
      nn,
      Object.assign({}, Ot),
      h.createElement(
        dt,
        { isFill: !0 },
        he(),
        " "
      ),
      h.createElement(dt, { isPlain: !0 }, ue)
    );
  }, Ce = (qe = {}) => {
    var Ot = se(qe, []);
    return S ? fe(Object.assign({}, Ot)) : he(Object.assign({}, Ot));
  }, Ge = (qe = {}) => {
    var Ot = se(qe, []);
    return h.createElement(
      nn,
      Object.assign({ ref: X }, Ot),
      h.createElement(dt, { isFill: !0 }, he()),
      (i.length > 0 || f) && h.createElement(
        dt,
        { isPlain: !0 },
        h.createElement(
          z,
          { className: K && "pf-m-expanded", variant: xe.control, "aria-label": A, onClick: Ie, isDisabled: E, "aria-expanded": K },
          h.createElement(jo, null)
        )
      ),
      !!p && h.createElement(
        dt,
        null,
        h.createElement(
          z,
          { type: "submit", variant: xe.control, "aria-label": _, onClick: Me, isDisabled: E },
          h.createElement(
            Ii,
            { shouldMirrorRTL: !0 },
            h.createElement(Bh, null)
          )
        )
      ),
      S && h.createElement(dt, null, ue)
    );
  }, Qe = Object.assign(Object.assign({}, U), { className: t && j(t), innerRef: q });
  if (S && !ee)
    return h.createElement(
      nn,
      Object.assign({}, Qe),
      h.createElement(dt, null, ue)
    );
  if (p || i.length > 0 || f) {
    if (i.length > 0) {
      const qe = h.createElement(
        "div",
        { ref: Q },
        h.createElement(y0, { value: r, parentRef: q, parentInputRef: B, onSearch: p, onClear: m, onChange: u, onToggleAdvancedMenu: Ie, resetButtonLabel: w, submitSearchButtonLabel: _, attributes: i, formAdditionalItems: s, hasWordsAttrLabel: o, advancedSearchDelimiter: l, getAttrValueMap: Se, isSearchMenuOpen: K })
      ), Ot = h.createElement(
        "div",
        Object.assign({ className: j(t), ref: q }, U),
        h.createElement(ei, { trigger: Ge(), triggerRef: X, popper: qe, popperRef: Q, isVisible: K, enableFlip: !0, appendTo: () => L || q.current, zIndex: F })
      ), Bt = h.createElement(
        "div",
        Object.assign({ className: j(t), ref: q }, U),
        Ge(),
        qe
      );
      return L !== "inline" ? Ot : Bt;
    }
    return Ge(Object.assign({}, Qe));
  }
  return Ce(Qe);
};
x0.displayName = "SearchInputBase";
const Vc = h.forwardRef((e, t) => h.createElement(x0, Object.assign({}, e, { innerRef: t })));
Vc.displayName = "SearchInput";
const xa = {
  emptyState: "pf-v5-c-empty-state",
  emptyStateActions: "pf-v5-c-empty-state__actions",
  emptyStateBody: "pf-v5-c-empty-state__body",
  emptyStateContent: "pf-v5-c-empty-state__content",
  emptyStateFooter: "pf-v5-c-empty-state__footer",
  emptyStateIcon: "pf-v5-c-empty-state__icon",
  emptyStateTitleText: "pf-v5-c-empty-state__title-text",
  modifiers: {
    xs: "pf-m-xs",
    sm: "pf-m-sm",
    lg: "pf-m-lg",
    xl: "pf-m-xl",
    fullHeight: "pf-m-full-height"
  }
};
var pc;
(function(e) {
  e.xs = "xs", e.sm = "sm", e.lg = "lg", e.xl = "xl", e.full = "full";
})(pc || (pc = {}));
const Pr = (e) => {
  var { children: t, className: n, variant: r = pc.full, isFullHeight: i } = e, s = se(e, ["children", "className", "variant", "isFullHeight"]);
  return h.createElement(
    "div",
    Object.assign({ className: j(xa.emptyState, r === "xs" && xa.modifiers.xs, r === "sm" && xa.modifiers.sm, r === "lg" && xa.modifiers.lg, r === "xl" && xa.modifiers.xl, i && xa.modifiers.fullHeight, n) }, s),
    h.createElement("div", { className: j(xa.emptyStateContent) }, t)
  );
};
Pr.displayName = "EmptyState";
const Ei = (e) => {
  var { children: t, className: n, titleClassName: r, titleText: i, headingLevel: s = "h1", icon: o } = e, l = se(e, ["children", "className", "titleClassName", "titleText", "headingLevel", "icon"]);
  return h.createElement(
    "div",
    Object.assign({ className: j(`${xa.emptyState}__header`, n) }, l),
    o,
    (i || t) && h.createElement(
      "div",
      { className: j(`${xa.emptyState}__title`) },
      i && h.createElement(s, { className: j(xa.emptyStateTitleText, r) }, i),
      t
    )
  );
};
Ei.displayName = "EmptyStateHeader";
const G_ = {
  name: "--pf-v5-c-empty-state__icon--Color",
  value: "#6a6e73",
  var: "var(--pf-v5-c-empty-state__icon--Color)"
}, W_ = (e) => e.type === ti, As = (e) => {
  var { className: t, icon: n, color: r } = e, i = se(e, ["className", "icon", "color"]);
  const s = W_(h.createElement(n, null));
  return h.createElement(
    "div",
    Object.assign({ className: j(xa.emptyStateIcon) }, r && !s && { style: { [G_.name]: r } }),
    h.createElement(n, Object.assign({ className: t, "aria-hidden": !s }, i))
  );
};
As.displayName = "EmptyStateIcon";
const Di = (e) => {
  var { children: t, className: n } = e, r = se(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: j(xa.emptyStateBody, n) }, r), t);
};
Di.displayName = "EmptyStateBody";
const ss = (e) => {
  var { children: t, className: n } = e, r = se(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: j(xa.emptyStateFooter, n) }, r), t);
};
ss.displayName = "EmptyStateFooter";
const ko = (e) => {
  var { children: t, className: n } = e, r = se(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: j(xa.emptyStateActions, n) }, r), t);
};
ko.displayName = "EmptyStateActions";
const Wa = {
  dirRtl: "pf-v5-m-dir-rtl",
  expandableSection: "pf-v5-c-expandable-section",
  expandableSectionContent: "pf-v5-c-expandable-section__content",
  expandableSectionToggle: "pf-v5-c-expandable-section__toggle",
  expandableSectionToggleIcon: "pf-v5-c-expandable-section__toggle-icon",
  expandableSectionToggleText: "pf-v5-c-expandable-section__toggle-text",
  modifiers: {
    expanded: "pf-m-expanded",
    detached: "pf-m-detached",
    truncate: "pf-m-truncate",
    limitWidth: "pf-m-limit-width",
    displayLg: "pf-m-display-lg",
    indented: "pf-m-indented",
    active: "pf-m-active",
    expandTop: "pf-m-expand-top"
  }
}, S0 = {
  name: "--pf-v5-c-expandable-section--m-truncate__content--LineClamp",
  value: "3",
  var: "var(--pf-v5-c-expandable-section--m-truncate__content--LineClamp)"
};
var jr;
(function(e) {
  e.default = "default", e.truncate = "truncate";
})(jr || (jr = {}));
const rv = (e, t) => {
  !t || e < 1 || t.style.setProperty(S0.name, e.toString());
};
class ps extends h.Component {
  constructor(t) {
    super(t), this.expandableContentRef = h.createRef(), this.observer = () => {
    }, this.checkToggleVisibility = () => {
      var n;
      if (!((n = this.expandableContentRef) === null || n === void 0) && n.current) {
        const r = this.props.truncateMaxLines || parseInt(S0.value), i = this.expandableContentRef.current.scrollHeight / parseInt(getComputedStyle(this.expandableContentRef.current).lineHeight);
        this.setState({
          hasToggle: i > r
        });
      }
    }, this.resize = () => {
      if (this.expandableContentRef.current) {
        const { offsetWidth: n } = this.expandableContentRef.current;
        this.state.previousWidth !== n && (this.setState({ previousWidth: n }), this.checkToggleVisibility());
      }
    }, this.handleResize = ch(this.resize, 250), this.state = {
      isExpanded: t.isExpanded,
      hasToggle: !0,
      previousWidth: void 0
    };
  }
  calculateToggleText(t, n, r, i) {
    return i && n !== "" ? n : !i && r !== "" ? r : t;
  }
  componentDidMount() {
    if (this.props.variant === jr.truncate) {
      const t = this.expandableContentRef.current;
      this.setState({ previousWidth: t.offsetWidth }), this.observer = tl(t, this.handleResize, !1), this.props.truncateMaxLines && rv(this.props.truncateMaxLines, t), this.checkToggleVisibility();
    }
  }
  componentDidUpdate(t) {
    if (this.props.variant === jr.truncate && (t.truncateMaxLines !== this.props.truncateMaxLines || t.children !== this.props.children)) {
      const n = this.expandableContentRef.current;
      rv(this.props.truncateMaxLines, n), this.checkToggleVisibility();
    }
  }
  componentWillUnmount() {
    this.props.variant === jr.truncate && this.observer();
  }
  render() {
    const t = this.props, {
      onToggle: n,
      isActive: r,
      className: i,
      toggleText: s,
      toggleTextExpanded: o,
      toggleTextCollapsed: l,
      toggleContent: c,
      children: d,
      isExpanded: u,
      isDetached: p,
      displaySize: m,
      isWidthLimited: f,
      isIndented: g,
      contentId: b,
      toggleId: v,
      variant: y,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      truncateMaxLines: C
    } = t, S = se(t, ["onToggle", "isActive", "className", "toggleText", "toggleTextExpanded", "toggleTextCollapsed", "toggleContent", "children", "isExpanded", "isDetached", "displaySize", "isWidthLimited", "isIndented", "contentId", "toggleId", "variant", "truncateMaxLines"]);
    p && !v && console.warn("ExpandableSection: The toggleId value must be passed in and must match the toggleId of the ExpandableSectionToggle.");
    let P = n, w = u;
    const A = b || Ti("expandable-section-content"), k = v || Ti("expandable-section-toggle");
    u === void 0 && (w = this.state.isExpanded, P = (I, _) => {
      this.setState({ isExpanded: _ }, () => n(I, this.state.isExpanded));
    });
    const T = this.calculateToggleText(s, o, l, w), O = !p && h.createElement(
      "button",
      { className: j(Wa.expandableSectionToggle), type: "button", "aria-expanded": w, "aria-controls": A, id: k, onClick: (I) => P(I, !w) },
      y !== jr.truncate && h.createElement(
        "span",
        { className: j(Wa.expandableSectionToggleIcon) },
        h.createElement(Nn, { "aria-hidden": !0 })
      ),
      h.createElement("span", { className: j(Wa.expandableSectionToggleText) }, c || T)
    );
    return h.createElement(
      "div",
      Object.assign({ className: j(Wa.expandableSection, w && Wa.modifiers.expanded, r && Wa.modifiers.active, p && Wa.modifiers.detached, m === "lg" && Wa.modifiers.displayLg, f && Wa.modifiers.limitWidth, g && Wa.modifiers.indented, y === jr.truncate && Wa.modifiers.truncate, i) }, S),
      y === jr.default && O,
      h.createElement("div", { ref: this.expandableContentRef, className: j(Wa.expandableSectionContent), hidden: y !== jr.truncate && !w, id: A, "aria-labelledby": k, role: "region" }, d),
      y === jr.truncate && this.state.hasToggle && O
    );
  }
}
ps.displayName = "ExpandableSection";
ps.defaultProps = {
  className: "",
  toggleText: "",
  toggleTextExpanded: "",
  toggleTextCollapsed: "",
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  onToggle: (e, t) => {
  },
  isActive: !1,
  isDetached: !1,
  displaySize: "default",
  isWidthLimited: !1,
  isIndented: !1,
  variant: "default"
};
const mi = {
  button: "pf-v5-c-button",
  fileUpload: "pf-v5-c-file-upload",
  fileUploadFileDetails: "pf-v5-c-file-upload__file-details",
  fileUploadFileDetailsSpinner: "pf-v5-c-file-upload__file-details-spinner",
  fileUploadFileSelect: "pf-v5-c-file-upload__file-select",
  formControl: "pf-v5-c-form-control",
  modifiers: {
    dragHover: "pf-m-drag-hover",
    loading: "pf-m-loading",
    control: "pf-m-control"
  }
};
var cf;
(function(e) {
  e.horizontal = "horizontal", e.vertical = "vertical", e.both = "both";
})(cf || (cf = {}));
var iv;
(function(e) {
  e.default = "default", e.plain = "plain";
})(iv || (iv = {}));
class Uh extends h.Component {
  constructor(t) {
    super(t), this.inputRef = h.createRef(), this.setAutoHeight = (n) => {
      const r = n.parentElement;
      r.style.setProperty("height", "inherit");
      const i = window.getComputedStyle(n), s = parseInt(i.getPropertyValue("border-top-width")) + parseInt(i.getPropertyValue("padding-top")) + n.scrollHeight + parseInt(i.getPropertyValue("padding-bottom")) + parseInt(i.getPropertyValue("border-bottom-width"));
      r.style.setProperty("height", `${s}px`);
    }, this.handleChange = (n) => {
      const r = n.currentTarget;
      this.props.autoResize && wn && this.setAutoHeight(r), this.props.onChange && this.props.onChange(n, r.value);
    }, !t.id && !t["aria-label"] && console.error("TextArea: TextArea requires either an id or aria-label to be specified");
  }
  componentDidMount() {
    const t = this.props.innerRef || this.inputRef;
    if (this.props.autoResize && wn) {
      const n = t.current;
      this.setAutoHeight(n);
    }
  }
  render() {
    const t = this.props, {
      className: n,
      value: r,
      validated: i,
      isRequired: s,
      isDisabled: o,
      readOnlyVariant: l,
      resizeOrientation: c,
      innerRef: d,
      disabled: u,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      autoResize: p,
      onChange: m,
      /* eslint-enable @typescript-eslint/no-unused-vars */
      onBlur: f,
      onFocus: g
    } = t, b = se(t, ["className", "value", "validated", "isRequired", "isDisabled", "readOnlyVariant", "resizeOrientation", "innerRef", "disabled", "autoResize", "onChange", "onBlur", "onFocus"]), v = `resize${sc(c)}`, y = ["success", "error", "warning"].includes(i);
    return h.createElement(
      "span",
      { className: j(Yn.formControl, l && Yn.modifiers.readonly, l === "plain" && Yn.modifiers.plain, c && Yn.modifiers[v], o && Yn.modifiers.disabled, y && Yn.modifiers[i], n) },
      h.createElement("textarea", Object.assign({ onChange: this.handleChange, onFocus: g, onBlur: f }, typeof this.props.defaultValue != "string" && { value: r }, { "aria-invalid": i === _n.error, required: s, disabled: o || u, readOnly: !!l, ref: d || this.inputRef }, b)),
      y && h.createElement(
        "span",
        { className: j(Yn.formControlUtilities) },
        h.createElement(af, { status: i })
      )
    );
  }
}
Uh.displayName = "TextArea";
Uh.defaultProps = {
  innerRef: h.createRef(),
  className: "",
  isRequired: !1,
  isDisabled: !1,
  validated: "default",
  resizeOrientation: "both",
  "aria-label": null
};
const Mi = h.forwardRef((e, t) => h.createElement(Uh, Object.assign({}, e, { innerRef: t })));
Mi.displayName = "TextArea";
var Sa = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Vh(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var df = { exports: {} }, hd = { exports: {} }, qt = {};
/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var sv;
function X_() {
  if (sv) return qt;
  sv = 1;
  var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, i = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, o = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, d = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, p = e ? Symbol.for("react.suspense") : 60113, m = e ? Symbol.for("react.suspense_list") : 60120, f = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, v = e ? Symbol.for("react.fundamental") : 60117, y = e ? Symbol.for("react.responder") : 60118, C = e ? Symbol.for("react.scope") : 60119;
  function S(w) {
    if (typeof w == "object" && w !== null) {
      var A = w.$$typeof;
      switch (A) {
        case t:
          switch (w = w.type, w) {
            case c:
            case d:
            case r:
            case s:
            case i:
            case p:
              return w;
            default:
              switch (w = w && w.$$typeof, w) {
                case l:
                case u:
                case g:
                case f:
                case o:
                  return w;
                default:
                  return A;
              }
          }
        case n:
          return A;
      }
    }
  }
  function P(w) {
    return S(w) === d;
  }
  return qt.AsyncMode = c, qt.ConcurrentMode = d, qt.ContextConsumer = l, qt.ContextProvider = o, qt.Element = t, qt.ForwardRef = u, qt.Fragment = r, qt.Lazy = g, qt.Memo = f, qt.Portal = n, qt.Profiler = s, qt.StrictMode = i, qt.Suspense = p, qt.isAsyncMode = function(w) {
    return P(w) || S(w) === c;
  }, qt.isConcurrentMode = P, qt.isContextConsumer = function(w) {
    return S(w) === l;
  }, qt.isContextProvider = function(w) {
    return S(w) === o;
  }, qt.isElement = function(w) {
    return typeof w == "object" && w !== null && w.$$typeof === t;
  }, qt.isForwardRef = function(w) {
    return S(w) === u;
  }, qt.isFragment = function(w) {
    return S(w) === r;
  }, qt.isLazy = function(w) {
    return S(w) === g;
  }, qt.isMemo = function(w) {
    return S(w) === f;
  }, qt.isPortal = function(w) {
    return S(w) === n;
  }, qt.isProfiler = function(w) {
    return S(w) === s;
  }, qt.isStrictMode = function(w) {
    return S(w) === i;
  }, qt.isSuspense = function(w) {
    return S(w) === p;
  }, qt.isValidElementType = function(w) {
    return typeof w == "string" || typeof w == "function" || w === r || w === d || w === s || w === i || w === p || w === m || typeof w == "object" && w !== null && (w.$$typeof === g || w.$$typeof === f || w.$$typeof === o || w.$$typeof === l || w.$$typeof === u || w.$$typeof === v || w.$$typeof === y || w.$$typeof === C || w.$$typeof === b);
  }, qt.typeOf = S, qt;
}
var Gt = {};
/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var ov;
function Y_() {
  return ov || (ov = 1, process.env.NODE_ENV !== "production" && function() {
    var e = typeof Symbol == "function" && Symbol.for, t = e ? Symbol.for("react.element") : 60103, n = e ? Symbol.for("react.portal") : 60106, r = e ? Symbol.for("react.fragment") : 60107, i = e ? Symbol.for("react.strict_mode") : 60108, s = e ? Symbol.for("react.profiler") : 60114, o = e ? Symbol.for("react.provider") : 60109, l = e ? Symbol.for("react.context") : 60110, c = e ? Symbol.for("react.async_mode") : 60111, d = e ? Symbol.for("react.concurrent_mode") : 60111, u = e ? Symbol.for("react.forward_ref") : 60112, p = e ? Symbol.for("react.suspense") : 60113, m = e ? Symbol.for("react.suspense_list") : 60120, f = e ? Symbol.for("react.memo") : 60115, g = e ? Symbol.for("react.lazy") : 60116, b = e ? Symbol.for("react.block") : 60121, v = e ? Symbol.for("react.fundamental") : 60117, y = e ? Symbol.for("react.responder") : 60118, C = e ? Symbol.for("react.scope") : 60119;
    function S(ae) {
      return typeof ae == "string" || typeof ae == "function" || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      ae === r || ae === d || ae === s || ae === i || ae === p || ae === m || typeof ae == "object" && ae !== null && (ae.$$typeof === g || ae.$$typeof === f || ae.$$typeof === o || ae.$$typeof === l || ae.$$typeof === u || ae.$$typeof === v || ae.$$typeof === y || ae.$$typeof === C || ae.$$typeof === b);
    }
    function P(ae) {
      if (typeof ae == "object" && ae !== null) {
        var Oe = ae.$$typeof;
        switch (Oe) {
          case t:
            var Ie = ae.type;
            switch (Ie) {
              case c:
              case d:
              case r:
              case s:
              case i:
              case p:
                return Ie;
              default:
                var Me = Ie && Ie.$$typeof;
                switch (Me) {
                  case l:
                  case u:
                  case g:
                  case f:
                  case o:
                    return Me;
                  default:
                    return Oe;
                }
            }
          case n:
            return Oe;
        }
      }
    }
    var w = c, A = d, k = l, T = o, O = t, I = u, _ = r, E = g, L = f, F = n, R = s, M = i, U = p, K = !1;
    function G(ae) {
      return K || (K = !0, console.warn("The ReactIs.isAsyncMode() alias has been deprecated, and will be removed in React 17+. Update your code to use ReactIs.isConcurrentMode() instead. It has the exact same API.")), N(ae) || P(ae) === c;
    }
    function N(ae) {
      return P(ae) === d;
    }
    function $(ae) {
      return P(ae) === l;
    }
    function q(ae) {
      return P(ae) === o;
    }
    function V(ae) {
      return typeof ae == "object" && ae !== null && ae.$$typeof === t;
    }
    function B(ae) {
      return P(ae) === u;
    }
    function Z(ae) {
      return P(ae) === r;
    }
    function X(ae) {
      return P(ae) === g;
    }
    function Q(ae) {
      return P(ae) === f;
    }
    function ie(ae) {
      return P(ae) === n;
    }
    function me(ae) {
      return P(ae) === s;
    }
    function ee(ae) {
      return P(ae) === i;
    }
    function ce(ae) {
      return P(ae) === p;
    }
    Gt.AsyncMode = w, Gt.ConcurrentMode = A, Gt.ContextConsumer = k, Gt.ContextProvider = T, Gt.Element = O, Gt.ForwardRef = I, Gt.Fragment = _, Gt.Lazy = E, Gt.Memo = L, Gt.Portal = F, Gt.Profiler = R, Gt.StrictMode = M, Gt.Suspense = U, Gt.isAsyncMode = G, Gt.isConcurrentMode = N, Gt.isContextConsumer = $, Gt.isContextProvider = q, Gt.isElement = V, Gt.isForwardRef = B, Gt.isFragment = Z, Gt.isLazy = X, Gt.isMemo = Q, Gt.isPortal = ie, Gt.isProfiler = me, Gt.isStrictMode = ee, Gt.isSuspense = ce, Gt.isValidElementType = S, Gt.typeOf = P;
  }()), Gt;
}
var lv;
function w0() {
  return lv || (lv = 1, process.env.NODE_ENV === "production" ? hd.exports = X_() : hd.exports = Y_()), hd.exports;
}
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
var Yp, cv;
function J_() {
  if (cv) return Yp;
  cv = 1;
  var e = Object.getOwnPropertySymbols, t = Object.prototype.hasOwnProperty, n = Object.prototype.propertyIsEnumerable;
  function r(s) {
    if (s == null)
      throw new TypeError("Object.assign cannot be called with null or undefined");
    return Object(s);
  }
  function i() {
    try {
      if (!Object.assign)
        return !1;
      var s = new String("abc");
      if (s[5] = "de", Object.getOwnPropertyNames(s)[0] === "5")
        return !1;
      for (var o = {}, l = 0; l < 10; l++)
        o["_" + String.fromCharCode(l)] = l;
      var c = Object.getOwnPropertyNames(o).map(function(u) {
        return o[u];
      });
      if (c.join("") !== "0123456789")
        return !1;
      var d = {};
      return "abcdefghijklmnopqrst".split("").forEach(function(u) {
        d[u] = u;
      }), Object.keys(Object.assign({}, d)).join("") === "abcdefghijklmnopqrst";
    } catch {
      return !1;
    }
  }
  return Yp = i() ? Object.assign : function(s, o) {
    for (var l, c = r(s), d, u = 1; u < arguments.length; u++) {
      l = Object(arguments[u]);
      for (var p in l)
        t.call(l, p) && (c[p] = l[p]);
      if (e) {
        d = e(l);
        for (var m = 0; m < d.length; m++)
          n.call(l, d[m]) && (c[d[m]] = l[d[m]]);
      }
    }
    return c;
  }, Yp;
}
var Jp, dv;
function Kh() {
  if (dv) return Jp;
  dv = 1;
  var e = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED";
  return Jp = e, Jp;
}
var Zp, uv;
function O0() {
  return uv || (uv = 1, Zp = Function.call.bind(Object.prototype.hasOwnProperty)), Zp;
}
var Qp, pv;
function Z_() {
  if (pv) return Qp;
  pv = 1;
  var e = function() {
  };
  if (process.env.NODE_ENV !== "production") {
    var t = Kh(), n = {}, r = O0();
    e = function(s) {
      var o = "Warning: " + s;
      typeof console < "u" && console.error(o);
      try {
        throw new Error(o);
      } catch {
      }
    };
  }
  function i(s, o, l, c, d) {
    if (process.env.NODE_ENV !== "production") {
      for (var u in s)
        if (r(s, u)) {
          var p;
          try {
            if (typeof s[u] != "function") {
              var m = Error(
                (c || "React class") + ": " + l + " type `" + u + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof s[u] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`."
              );
              throw m.name = "Invariant Violation", m;
            }
            p = s[u](o, u, c, l, null, t);
          } catch (g) {
            p = g;
          }
          if (p && !(p instanceof Error) && e(
            (c || "React class") + ": type specification of " + l + " `" + u + "` is invalid; the type checker function must return `null` or an `Error` but returned a " + typeof p + ". You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument)."
          ), p instanceof Error && !(p.message in n)) {
            n[p.message] = !0;
            var f = d ? d() : "";
            e(
              "Failed " + l + " type: " + p.message + (f ?? "")
            );
          }
        }
    }
  }
  return i.resetWarningCache = function() {
    process.env.NODE_ENV !== "production" && (n = {});
  }, Qp = i, Qp;
}
var em, mv;
function Q_() {
  if (mv) return em;
  mv = 1;
  var e = w0(), t = J_(), n = Kh(), r = O0(), i = Z_(), s = function() {
  };
  process.env.NODE_ENV !== "production" && (s = function(l) {
    var c = "Warning: " + l;
    typeof console < "u" && console.error(c);
    try {
      throw new Error(c);
    } catch {
    }
  });
  function o() {
    return null;
  }
  return em = function(l, c) {
    var d = typeof Symbol == "function" && Symbol.iterator, u = "@@iterator";
    function p(N) {
      var $ = N && (d && N[d] || N[u]);
      if (typeof $ == "function")
        return $;
    }
    var m = "<<anonymous>>", f = {
      array: y("array"),
      bigint: y("bigint"),
      bool: y("boolean"),
      func: y("function"),
      number: y("number"),
      object: y("object"),
      string: y("string"),
      symbol: y("symbol"),
      any: C(),
      arrayOf: S,
      element: P(),
      elementType: w(),
      instanceOf: A,
      node: I(),
      objectOf: T,
      oneOf: k,
      oneOfType: O,
      shape: E,
      exact: L
    };
    function g(N, $) {
      return N === $ ? N !== 0 || 1 / N === 1 / $ : N !== N && $ !== $;
    }
    function b(N, $) {
      this.message = N, this.data = $ && typeof $ == "object" ? $ : {}, this.stack = "";
    }
    b.prototype = Error.prototype;
    function v(N) {
      if (process.env.NODE_ENV !== "production")
        var $ = {}, q = 0;
      function V(Z, X, Q, ie, me, ee, ce) {
        if (ie = ie || m, ee = ee || Q, ce !== n) {
          if (c) {
            var ae = new Error(
              "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
            );
            throw ae.name = "Invariant Violation", ae;
          } else if (process.env.NODE_ENV !== "production" && typeof console < "u") {
            var Oe = ie + ":" + Q;
            !$[Oe] && // Avoid spamming the console because they are often not actionable except for lib authors
            q < 3 && (s(
              "You are manually calling a React.PropTypes validation function for the `" + ee + "` prop on `" + ie + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
            ), $[Oe] = !0, q++);
          }
        }
        return X[Q] == null ? Z ? X[Q] === null ? new b("The " + me + " `" + ee + "` is marked as required " + ("in `" + ie + "`, but its value is `null`.")) : new b("The " + me + " `" + ee + "` is marked as required in " + ("`" + ie + "`, but its value is `undefined`.")) : null : N(X, Q, ie, me, ee);
      }
      var B = V.bind(null, !1);
      return B.isRequired = V.bind(null, !0), B;
    }
    function y(N) {
      function $(q, V, B, Z, X, Q) {
        var ie = q[V], me = M(ie);
        if (me !== N) {
          var ee = U(ie);
          return new b(
            "Invalid " + Z + " `" + X + "` of type " + ("`" + ee + "` supplied to `" + B + "`, expected ") + ("`" + N + "`."),
            { expectedType: N }
          );
        }
        return null;
      }
      return v($);
    }
    function C() {
      return v(o);
    }
    function S(N) {
      function $(q, V, B, Z, X) {
        if (typeof N != "function")
          return new b("Property `" + X + "` of component `" + B + "` has invalid PropType notation inside arrayOf.");
        var Q = q[V];
        if (!Array.isArray(Q)) {
          var ie = M(Q);
          return new b("Invalid " + Z + " `" + X + "` of type " + ("`" + ie + "` supplied to `" + B + "`, expected an array."));
        }
        for (var me = 0; me < Q.length; me++) {
          var ee = N(Q, me, B, Z, X + "[" + me + "]", n);
          if (ee instanceof Error)
            return ee;
        }
        return null;
      }
      return v($);
    }
    function P() {
      function N($, q, V, B, Z) {
        var X = $[q];
        if (!l(X)) {
          var Q = M(X);
          return new b("Invalid " + B + " `" + Z + "` of type " + ("`" + Q + "` supplied to `" + V + "`, expected a single ReactElement."));
        }
        return null;
      }
      return v(N);
    }
    function w() {
      function N($, q, V, B, Z) {
        var X = $[q];
        if (!e.isValidElementType(X)) {
          var Q = M(X);
          return new b("Invalid " + B + " `" + Z + "` of type " + ("`" + Q + "` supplied to `" + V + "`, expected a single ReactElement type."));
        }
        return null;
      }
      return v(N);
    }
    function A(N) {
      function $(q, V, B, Z, X) {
        if (!(q[V] instanceof N)) {
          var Q = N.name || m, ie = G(q[V]);
          return new b("Invalid " + Z + " `" + X + "` of type " + ("`" + ie + "` supplied to `" + B + "`, expected ") + ("instance of `" + Q + "`."));
        }
        return null;
      }
      return v($);
    }
    function k(N) {
      if (!Array.isArray(N))
        return process.env.NODE_ENV !== "production" && (arguments.length > 1 ? s(
          "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
        ) : s("Invalid argument supplied to oneOf, expected an array.")), o;
      function $(q, V, B, Z, X) {
        for (var Q = q[V], ie = 0; ie < N.length; ie++)
          if (g(Q, N[ie]))
            return null;
        var me = JSON.stringify(N, function(ce, ae) {
          var Oe = U(ae);
          return Oe === "symbol" ? String(ae) : ae;
        });
        return new b("Invalid " + Z + " `" + X + "` of value `" + String(Q) + "` " + ("supplied to `" + B + "`, expected one of " + me + "."));
      }
      return v($);
    }
    function T(N) {
      function $(q, V, B, Z, X) {
        if (typeof N != "function")
          return new b("Property `" + X + "` of component `" + B + "` has invalid PropType notation inside objectOf.");
        var Q = q[V], ie = M(Q);
        if (ie !== "object")
          return new b("Invalid " + Z + " `" + X + "` of type " + ("`" + ie + "` supplied to `" + B + "`, expected an object."));
        for (var me in Q)
          if (r(Q, me)) {
            var ee = N(Q, me, B, Z, X + "." + me, n);
            if (ee instanceof Error)
              return ee;
          }
        return null;
      }
      return v($);
    }
    function O(N) {
      if (!Array.isArray(N))
        return process.env.NODE_ENV !== "production" && s("Invalid argument supplied to oneOfType, expected an instance of array."), o;
      for (var $ = 0; $ < N.length; $++) {
        var q = N[$];
        if (typeof q != "function")
          return s(
            "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + K(q) + " at index " + $ + "."
          ), o;
      }
      function V(B, Z, X, Q, ie) {
        for (var me = [], ee = 0; ee < N.length; ee++) {
          var ce = N[ee], ae = ce(B, Z, X, Q, ie, n);
          if (ae == null)
            return null;
          ae.data && r(ae.data, "expectedType") && me.push(ae.data.expectedType);
        }
        var Oe = me.length > 0 ? ", expected one of type [" + me.join(", ") + "]" : "";
        return new b("Invalid " + Q + " `" + ie + "` supplied to " + ("`" + X + "`" + Oe + "."));
      }
      return v(V);
    }
    function I() {
      function N($, q, V, B, Z) {
        return F($[q]) ? null : new b("Invalid " + B + " `" + Z + "` supplied to " + ("`" + V + "`, expected a ReactNode."));
      }
      return v(N);
    }
    function _(N, $, q, V, B) {
      return new b(
        (N || "React class") + ": " + $ + " type `" + q + "." + V + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + B + "`."
      );
    }
    function E(N) {
      function $(q, V, B, Z, X) {
        var Q = q[V], ie = M(Q);
        if (ie !== "object")
          return new b("Invalid " + Z + " `" + X + "` of type `" + ie + "` " + ("supplied to `" + B + "`, expected `object`."));
        for (var me in N) {
          var ee = N[me];
          if (typeof ee != "function")
            return _(B, Z, X, me, U(ee));
          var ce = ee(Q, me, B, Z, X + "." + me, n);
          if (ce)
            return ce;
        }
        return null;
      }
      return v($);
    }
    function L(N) {
      function $(q, V, B, Z, X) {
        var Q = q[V], ie = M(Q);
        if (ie !== "object")
          return new b("Invalid " + Z + " `" + X + "` of type `" + ie + "` " + ("supplied to `" + B + "`, expected `object`."));
        var me = t({}, q[V], N);
        for (var ee in me) {
          var ce = N[ee];
          if (r(N, ee) && typeof ce != "function")
            return _(B, Z, X, ee, U(ce));
          if (!ce)
            return new b(
              "Invalid " + Z + " `" + X + "` key `" + ee + "` supplied to `" + B + "`.\nBad object: " + JSON.stringify(q[V], null, "  ") + `
Valid keys: ` + JSON.stringify(Object.keys(N), null, "  ")
            );
          var ae = ce(Q, ee, B, Z, X + "." + ee, n);
          if (ae)
            return ae;
        }
        return null;
      }
      return v($);
    }
    function F(N) {
      switch (typeof N) {
        case "number":
        case "string":
        case "undefined":
          return !0;
        case "boolean":
          return !N;
        case "object":
          if (Array.isArray(N))
            return N.every(F);
          if (N === null || l(N))
            return !0;
          var $ = p(N);
          if ($) {
            var q = $.call(N), V;
            if ($ !== N.entries) {
              for (; !(V = q.next()).done; )
                if (!F(V.value))
                  return !1;
            } else
              for (; !(V = q.next()).done; ) {
                var B = V.value;
                if (B && !F(B[1]))
                  return !1;
              }
          } else
            return !1;
          return !0;
        default:
          return !1;
      }
    }
    function R(N, $) {
      return N === "symbol" ? !0 : $ ? $["@@toStringTag"] === "Symbol" || typeof Symbol == "function" && $ instanceof Symbol : !1;
    }
    function M(N) {
      var $ = typeof N;
      return Array.isArray(N) ? "array" : N instanceof RegExp ? "object" : R($, N) ? "symbol" : $;
    }
    function U(N) {
      if (typeof N > "u" || N === null)
        return "" + N;
      var $ = M(N);
      if ($ === "object") {
        if (N instanceof Date)
          return "date";
        if (N instanceof RegExp)
          return "regexp";
      }
      return $;
    }
    function K(N) {
      var $ = U(N);
      switch ($) {
        case "array":
        case "object":
          return "an " + $;
        case "boolean":
        case "date":
        case "regexp":
          return "a " + $;
        default:
          return $;
      }
    }
    function G(N) {
      return !N.constructor || !N.constructor.name ? m : N.constructor.name;
    }
    return f.checkPropTypes = i, f.resetWarningCache = i.resetWarningCache, f.PropTypes = f, f;
  }, em;
}
var tm, fv;
function eR() {
  if (fv) return tm;
  fv = 1;
  var e = Kh();
  function t() {
  }
  function n() {
  }
  return n.resetWarningCache = t, tm = function() {
    function r(o, l, c, d, u, p) {
      if (p !== e) {
        var m = new Error(
          "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types"
        );
        throw m.name = "Invariant Violation", m;
      }
    }
    r.isRequired = r;
    function i() {
      return r;
    }
    var s = {
      array: r,
      bigint: r,
      bool: r,
      func: r,
      number: r,
      object: r,
      string: r,
      symbol: r,
      any: r,
      arrayOf: i,
      element: r,
      elementType: r,
      instanceOf: i,
      node: r,
      objectOf: i,
      oneOf: i,
      oneOfType: i,
      shape: i,
      exact: i,
      checkPropTypes: n,
      resetWarningCache: t
    };
    return s.PropTypes = s, s;
  }, tm;
}
if (process.env.NODE_ENV !== "production") {
  var tR = w0(), nR = !0;
  df.exports = Q_()(tR.isElement, nR);
} else
  df.exports = eR()();
var aR = df.exports;
const an = /* @__PURE__ */ Vh(aR);
var rR = /* @__PURE__ */ new Map([
  // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types
  ["aac", "audio/aac"],
  ["abw", "application/x-abiword"],
  ["arc", "application/x-freearc"],
  ["avif", "image/avif"],
  ["avi", "video/x-msvideo"],
  ["azw", "application/vnd.amazon.ebook"],
  ["bin", "application/octet-stream"],
  ["bmp", "image/bmp"],
  ["bz", "application/x-bzip"],
  ["bz2", "application/x-bzip2"],
  ["cda", "application/x-cdf"],
  ["csh", "application/x-csh"],
  ["css", "text/css"],
  ["csv", "text/csv"],
  ["doc", "application/msword"],
  ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"],
  ["eot", "application/vnd.ms-fontobject"],
  ["epub", "application/epub+zip"],
  ["gz", "application/gzip"],
  ["gif", "image/gif"],
  ["heic", "image/heic"],
  ["heif", "image/heif"],
  ["htm", "text/html"],
  ["html", "text/html"],
  ["ico", "image/vnd.microsoft.icon"],
  ["ics", "text/calendar"],
  ["jar", "application/java-archive"],
  ["jpeg", "image/jpeg"],
  ["jpg", "image/jpeg"],
  ["js", "text/javascript"],
  ["json", "application/json"],
  ["jsonld", "application/ld+json"],
  ["mid", "audio/midi"],
  ["midi", "audio/midi"],
  ["mjs", "text/javascript"],
  ["mp3", "audio/mpeg"],
  ["mp4", "video/mp4"],
  ["mpeg", "video/mpeg"],
  ["mpkg", "application/vnd.apple.installer+xml"],
  ["odp", "application/vnd.oasis.opendocument.presentation"],
  ["ods", "application/vnd.oasis.opendocument.spreadsheet"],
  ["odt", "application/vnd.oasis.opendocument.text"],
  ["oga", "audio/ogg"],
  ["ogv", "video/ogg"],
  ["ogx", "application/ogg"],
  ["opus", "audio/opus"],
  ["otf", "font/otf"],
  ["png", "image/png"],
  ["pdf", "application/pdf"],
  ["php", "application/x-httpd-php"],
  ["ppt", "application/vnd.ms-powerpoint"],
  ["pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation"],
  ["rar", "application/vnd.rar"],
  ["rtf", "application/rtf"],
  ["sh", "application/x-sh"],
  ["svg", "image/svg+xml"],
  ["swf", "application/x-shockwave-flash"],
  ["tar", "application/x-tar"],
  ["tif", "image/tiff"],
  ["tiff", "image/tiff"],
  ["ts", "video/mp2t"],
  ["ttf", "font/ttf"],
  ["txt", "text/plain"],
  ["vsd", "application/vnd.visio"],
  ["wav", "audio/wav"],
  ["weba", "audio/webm"],
  ["webm", "video/webm"],
  ["webp", "image/webp"],
  ["woff", "font/woff"],
  ["woff2", "font/woff2"],
  ["xhtml", "application/xhtml+xml"],
  ["xls", "application/vnd.ms-excel"],
  ["xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"],
  ["xml", "application/xml"],
  ["xul", "application/vnd.mozilla.xul+xml"],
  ["zip", "application/zip"],
  ["7z", "application/x-7z-compressed"],
  // Others
  ["mkv", "video/x-matroska"],
  ["mov", "video/quicktime"],
  ["msg", "application/vnd.ms-outlook"]
]);
function Kc(e, t) {
  var n = iR(e);
  if (typeof n.path != "string") {
    var r = e.webkitRelativePath;
    Object.defineProperty(n, "path", {
      value: typeof t == "string" ? t : typeof r == "string" && r.length > 0 ? r : e.name,
      writable: !1,
      configurable: !1,
      enumerable: !0
    });
  }
  return n;
}
function iR(e) {
  var t = e.name, n = t && t.lastIndexOf(".") !== -1;
  if (n && !e.type) {
    var r = t.split(".").pop().toLowerCase(), i = rR.get(r);
    i && Object.defineProperty(e, "type", {
      value: i,
      writable: !1,
      configurable: !1,
      enumerable: !0
    });
  }
  return e;
}
var sR = [
  // Thumbnail cache files for macOS and Windows
  ".DS_Store",
  "Thumbs.db"
  // Windows
];
function k0(e) {
  return Qo(this, void 0, void 0, function() {
    return el(this, function(t) {
      return Qd(e) && oR(e.dataTransfer) ? [2, uR(e.dataTransfer, e.type)] : lR(e) ? [2, cR(e)] : Array.isArray(e) && e.every(function(n) {
        return "getFile" in n && typeof n.getFile == "function";
      }) ? [2, dR(e)] : [2, []];
    });
  });
}
function oR(e) {
  return Qd(e);
}
function lR(e) {
  return Qd(e) && Qd(e.target);
}
function Qd(e) {
  return typeof e == "object" && e !== null;
}
function cR(e) {
  return uf(e.target.files).map(function(t) {
    return Kc(t);
  });
}
function dR(e) {
  return Qo(this, void 0, void 0, function() {
    var t;
    return el(this, function(n) {
      switch (n.label) {
        case 0:
          return [4, Promise.all(e.map(function(r) {
            return r.getFile();
          }))];
        case 1:
          return t = n.sent(), [2, t.map(function(r) {
            return Kc(r);
          })];
      }
    });
  });
}
function uR(e, t) {
  return Qo(this, void 0, void 0, function() {
    var n, r;
    return el(this, function(i) {
      switch (i.label) {
        case 0:
          return e.items ? (n = uf(e.items).filter(function(s) {
            return s.kind === "file";
          }), t !== "drop" ? [2, n] : [4, Promise.all(n.map(pR))]) : [3, 2];
        case 1:
          return r = i.sent(), [2, hv(T0(r))];
        case 2:
          return [2, hv(uf(e.files).map(function(s) {
            return Kc(s);
          }))];
      }
    });
  });
}
function hv(e) {
  return e.filter(function(t) {
    return sR.indexOf(t.name) === -1;
  });
}
function uf(e) {
  if (e === null)
    return [];
  for (var t = [], n = 0; n < e.length; n++) {
    var r = e[n];
    t.push(r);
  }
  return t;
}
function pR(e) {
  if (typeof e.webkitGetAsEntry != "function")
    return gv(e);
  var t = e.webkitGetAsEntry();
  return t && t.isDirectory ? I0(t) : gv(e);
}
function T0(e) {
  return e.reduce(function(t, n) {
    return Eb(Eb([], Ib(t), !1), Ib(Array.isArray(n) ? T0(n) : [n]), !1);
  }, []);
}
function gv(e) {
  var t = e.getAsFile();
  if (!t)
    return Promise.reject("".concat(e, " is not a File"));
  var n = Kc(t);
  return Promise.resolve(n);
}
function mR(e) {
  return Qo(this, void 0, void 0, function() {
    return el(this, function(t) {
      return [2, e.isDirectory ? I0(e) : fR(e)];
    });
  });
}
function I0(e) {
  var t = e.createReader();
  return new Promise(function(n, r) {
    var i = [];
    function s() {
      var o = this;
      t.readEntries(function(l) {
        return Qo(o, void 0, void 0, function() {
          var c, d, u;
          return el(this, function(p) {
            switch (p.label) {
              case 0:
                if (l.length) return [3, 5];
                p.label = 1;
              case 1:
                return p.trys.push([1, 3, , 4]), [4, Promise.all(i)];
              case 2:
                return c = p.sent(), n(c), [3, 4];
              case 3:
                return d = p.sent(), r(d), [3, 4];
              case 4:
                return [3, 6];
              case 5:
                u = Promise.all(l.map(mR)), i.push(u), s(), p.label = 6;
              case 6:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }, function(l) {
        r(l);
      });
    }
    s();
  });
}
function fR(e) {
  return Qo(this, void 0, void 0, function() {
    return el(this, function(t) {
      return [2, new Promise(function(n, r) {
        e.file(function(i) {
          var s = Kc(i, e.fullPath);
          n(s);
        }, function(i) {
          r(i);
        });
      })];
    });
  });
}
var hR = function(e, t) {
  if (e && t) {
    var n = Array.isArray(t) ? t : t.split(","), r = e.name || "", i = (e.type || "").toLowerCase(), s = i.replace(/\/.*$/, "");
    return n.some(function(o) {
      var l = o.trim().toLowerCase();
      return l.charAt(0) === "." ? r.toLowerCase().endsWith(l) : l.endsWith("/*") ? s === l.replace(/\/.*$/, "") : i === l;
    });
  }
  return !0;
};
function bv(e) {
  return vR(e) || bR(e) || P0(e) || gR();
}
function gR() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function bR(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function vR(e) {
  if (Array.isArray(e)) return pf(e);
}
function vv(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function yv(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? vv(Object(n), !0).forEach(function(r) {
      E0(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : vv(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function E0(e, t, n) {
  return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e;
}
function mc(e, t) {
  return xR(e) || CR(e, t) || P0(e, t) || yR();
}
function yR() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function P0(e, t) {
  if (e) {
    if (typeof e == "string") return pf(e, t);
    var n = Object.prototype.toString.call(e).slice(8, -1);
    if (n === "Object" && e.constructor && (n = e.constructor.name), n === "Map" || n === "Set") return Array.from(e);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return pf(e, t);
  }
}
function pf(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var n = 0, r = new Array(t); n < t; n++)
    r[n] = e[n];
  return r;
}
function CR(e, t) {
  var n = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
  if (n != null) {
    var r = [], i = !0, s = !1, o, l;
    try {
      for (n = n.call(e); !(i = (o = n.next()).done) && (r.push(o.value), !(t && r.length === t)); i = !0)
        ;
    } catch (c) {
      s = !0, l = c;
    } finally {
      try {
        !i && n.return != null && n.return();
      } finally {
        if (s) throw l;
      }
    }
    return r;
  }
}
function xR(e) {
  if (Array.isArray(e)) return e;
}
var SR = "file-invalid-type", wR = "file-too-large", OR = "file-too-small", kR = "too-many-files", TR = function(t) {
  t = Array.isArray(t) && t.length === 1 ? t[0] : t;
  var n = Array.isArray(t) ? "one of ".concat(t.join(", ")) : t;
  return {
    code: SR,
    message: "File type must be ".concat(n)
  };
}, Cv = function(t) {
  return {
    code: wR,
    message: "File is larger than ".concat(t, " ").concat(t === 1 ? "byte" : "bytes")
  };
}, xv = function(t) {
  return {
    code: OR,
    message: "File is smaller than ".concat(t, " ").concat(t === 1 ? "byte" : "bytes")
  };
}, IR = {
  code: kR,
  message: "Too many files"
};
function _0(e, t) {
  var n = e.type === "application/x-moz-file" || hR(e, t);
  return [n, n ? null : TR(t)];
}
function R0(e, t, n) {
  if (Ss(e.size))
    if (Ss(t) && Ss(n)) {
      if (e.size > n) return [!1, Cv(n)];
      if (e.size < t) return [!1, xv(t)];
    } else {
      if (Ss(t) && e.size < t) return [!1, xv(t)];
      if (Ss(n) && e.size > n) return [!1, Cv(n)];
    }
  return [!0, null];
}
function Ss(e) {
  return e != null;
}
function ER(e) {
  var t = e.files, n = e.accept, r = e.minSize, i = e.maxSize, s = e.multiple, o = e.maxFiles, l = e.validator;
  return !s && t.length > 1 || s && o >= 1 && t.length > o ? !1 : t.every(function(c) {
    var d = _0(c, n), u = mc(d, 1), p = u[0], m = R0(c, r, i), f = mc(m, 1), g = f[0], b = l ? l(c) : null;
    return p && g && !b;
  });
}
function eu(e) {
  return typeof e.isPropagationStopped == "function" ? e.isPropagationStopped() : typeof e.cancelBubble < "u" ? e.cancelBubble : !1;
}
function gd(e) {
  return e.dataTransfer ? Array.prototype.some.call(e.dataTransfer.types, function(t) {
    return t === "Files" || t === "application/x-moz-file";
  }) : !!e.target && !!e.target.files;
}
function Sv(e) {
  e.preventDefault();
}
function PR(e) {
  return e.indexOf("MSIE") !== -1 || e.indexOf("Trident/") !== -1;
}
function _R(e) {
  return e.indexOf("Edge/") !== -1;
}
function RR() {
  var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
  return PR(e) || _R(e);
}
function Fr() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return function(r) {
    for (var i = arguments.length, s = new Array(i > 1 ? i - 1 : 0), o = 1; o < i; o++)
      s[o - 1] = arguments[o];
    return t.some(function(l) {
      return !eu(r) && l && l.apply(void 0, [r].concat(s)), eu(r);
    });
  };
}
function AR() {
  return "showOpenFilePicker" in window;
}
function LR(e) {
  if (Ss(e)) {
    var t = Object.entries(e).filter(function(n) {
      var r = mc(n, 2), i = r[0], s = r[1], o = !0;
      return A0(i) || (console.warn('Skipped "'.concat(i, '" because it is not a valid MIME type. Check https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types for a list of valid MIME types.')), o = !1), (!Array.isArray(s) || !s.every(L0)) && (console.warn('Skipped "'.concat(i, '" because an invalid file extension was provided.')), o = !1), o;
    }).reduce(function(n, r) {
      var i = mc(r, 2), s = i[0], o = i[1];
      return yv(yv({}, n), {}, E0({}, s, o));
    }, {});
    return [{
      // description is required due to https://crbug.com/1264708
      description: "Files",
      accept: t
    }];
  }
  return e;
}
function NR(e) {
  if (Ss(e))
    return Object.entries(e).reduce(function(t, n) {
      var r = mc(n, 2), i = r[0], s = r[1];
      return [].concat(bv(t), [i], bv(s));
    }, []).filter(function(t) {
      return A0(t) || L0(t);
    }).join(",");
}
function DR(e) {
  return e instanceof DOMException && (e.name === "AbortError" || e.code === e.ABORT_ERR);
}
function MR(e) {
  return e instanceof DOMException && (e.name === "SecurityError" || e.code === e.SECURITY_ERR);
}
function A0(e) {
  return e === "audio/*" || e === "video/*" || e === "image/*" || e === "text/*" || /\w+\/[-+.\w]+/g.test(e);
}
function L0(e) {
  return /^.*\.[\w]+$/.test(e);
}
var FR = ["children"], $R = ["open"], jR = ["refKey", "role", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"], BR = ["refKey", "onChange", "onClick"];
function UR(e) {
  return HR(e) || KR(e) || N0(e) || VR();
}
function VR() {
  throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function KR(e) {
  if (typeof Symbol < "u" && e[Symbol.iterator] != null || e["@@iterator"] != null) return Array.from(e);
}
function HR(e) {
  if (Array.isArray(e)) return mf(e);
}
function nm(e, t) {
  return GR(e) || qR(e, t) || N0(e, t) || zR();
}
function zR() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function N0(e, t) {
  if (e) {
    if (typeof e == "string") return mf(e, t);
    var n = Object.prototype.toString.call(e).slice(8, -1);
    if (n === "Object" && e.constructor && (n = e.constructor.name), n === "Map" || n === "Set") return Array.from(e);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return mf(e, t);
  }
}
function mf(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var n = 0, r = new Array(t); n < t; n++)
    r[n] = e[n];
  return r;
}
function qR(e, t) {
  var n = e == null ? null : typeof Symbol < "u" && e[Symbol.iterator] || e["@@iterator"];
  if (n != null) {
    var r = [], i = !0, s = !1, o, l;
    try {
      for (n = n.call(e); !(i = (o = n.next()).done) && (r.push(o.value), !(t && r.length === t)); i = !0)
        ;
    } catch (c) {
      s = !0, l = c;
    } finally {
      try {
        !i && n.return != null && n.return();
      } finally {
        if (s) throw l;
      }
    }
    return r;
  }
}
function GR(e) {
  if (Array.isArray(e)) return e;
}
function wv(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function Sn(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? wv(Object(n), !0).forEach(function(r) {
      ff(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : wv(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function ff(e, t, n) {
  return t in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e;
}
function tu(e, t) {
  if (e == null) return {};
  var n = WR(e, t), r, i;
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (i = 0; i < s.length; i++)
      r = s[i], !(t.indexOf(r) >= 0) && Object.prototype.propertyIsEnumerable.call(e, r) && (n[r] = e[r]);
  }
  return n;
}
function WR(e, t) {
  if (e == null) return {};
  var n = {}, r = Object.keys(e), i, s;
  for (s = 0; s < r.length; s++)
    i = r[s], !(t.indexOf(i) >= 0) && (n[i] = e[i]);
  return n;
}
var Ku = /* @__PURE__ */ ah(function(e, t) {
  var n = e.children, r = tu(e, FR), i = M0(r), s = i.open, o = tu(i, $R);
  return rh(t, function() {
    return {
      open: s
    };
  }, [s]), /* @__PURE__ */ ne.createElement(Ea, null, n(Sn(Sn({}, o), {}, {
    open: s
  })));
});
Ku.displayName = "Dropzone";
var D0 = {
  disabled: !1,
  getFilesFromEvent: k0,
  maxSize: 1 / 0,
  minSize: 0,
  multiple: !0,
  maxFiles: 0,
  preventDropOnDocument: !0,
  noClick: !1,
  noKeyboard: !1,
  noDrag: !1,
  noDragEventsBubbling: !1,
  validator: null,
  useFsAccessApi: !0,
  autoFocus: !1
};
Ku.defaultProps = D0;
Ku.propTypes = {
  /**
   * Render function that exposes the dropzone state and prop getter fns
   *
   * @param {object} params
   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render
   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render
   * @param {Function} params.open Open the native file selection dialog
   * @param {boolean} params.isFocused Dropzone area is in focus
   * @param {boolean} params.isFileDialogActive File dialog is opened
   * @param {boolean} params.isDragActive Active drag is in progress
   * @param {boolean} params.isDragAccept Dragged files are accepted
   * @param {boolean} params.isDragReject Some dragged files are rejected
   * @param {File[]} params.acceptedFiles Accepted files
   * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected
   */
  children: an.func,
  /**
   * Set accepted file types.
   * Checkout https://developer.mozilla.org/en-US/docs/Web/API/window/showOpenFilePicker types option for more information.
   * Keep in mind that mime type determination is not reliable across platforms. CSV files,
   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under
   * Windows. In some cases there might not be a mime type set at all (https://github.com/react-dropzone/react-dropzone/issues/276).
   */
  accept: an.objectOf(an.arrayOf(an.string)),
  /**
   * Allow drag 'n' drop (or selection from the file dialog) of multiple files
   */
  multiple: an.bool,
  /**
   * If false, allow dropped items to take over the current browser window
   */
  preventDropOnDocument: an.bool,
  /**
   * If true, disables click to open the native file selection dialog
   */
  noClick: an.bool,
  /**
   * If true, disables SPACE/ENTER to open the native file selection dialog.
   * Note that it also stops tracking the focus state.
   */
  noKeyboard: an.bool,
  /**
   * If true, disables drag 'n' drop
   */
  noDrag: an.bool,
  /**
   * If true, stops drag event propagation to parents
   */
  noDragEventsBubbling: an.bool,
  /**
   * Minimum file size (in bytes)
   */
  minSize: an.number,
  /**
   * Maximum file size (in bytes)
   */
  maxSize: an.number,
  /**
   * Maximum accepted number of files
   * The default value is 0 which means there is no limitation to how many files are accepted.
   */
  maxFiles: an.number,
  /**
   * Enable/disable the dropzone
   */
  disabled: an.bool,
  /**
   * Use this to provide a custom file aggregator
   *
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  getFilesFromEvent: an.func,
  /**
   * Cb for when closing the file dialog with no selection
   */
  onFileDialogCancel: an.func,
  /**
   * Cb for when opening the file dialog
   */
  onFileDialogOpen: an.func,
  /**
   * Set to true to use the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API
   * to open the file picker instead of using an `<input type="file">` click event.
   */
  useFsAccessApi: an.bool,
  /**
   * Set to true to focus the root element on render
   */
  autoFocus: an.bool,
  /**
   * Cb for when the `dragenter` event occurs.
   *
   * @param {DragEvent} event
   */
  onDragEnter: an.func,
  /**
   * Cb for when the `dragleave` event occurs
   *
   * @param {DragEvent} event
   */
  onDragLeave: an.func,
  /**
   * Cb for when the `dragover` event occurs
   *
   * @param {DragEvent} event
   */
  onDragOver: an.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.
   *
   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.
   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.
   * If `multiple` is set to false and additional files are dropped,
   * all files besides the first will be rejected.
   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.
   *
   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.
   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.
   *
   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.
   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:
   *
   * ```js
   * function onDrop(acceptedFiles) {
   *   const req = request.post('/upload')
   *   acceptedFiles.forEach(file => {
   *     req.attach(file.name, file)
   *   })
   *   req.end(callback)
   * }
   * ```
   *
   * @param {File[]} acceptedFiles
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  onDrop: an.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are accepted, this callback is not invoked.
   *
   * @param {File[]} files
   * @param {(DragEvent|Event)} event
   */
  onDropAccepted: an.func,
  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are rejected, this callback is not invoked.
   *
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event
   */
  onDropRejected: an.func,
  /**
   * Cb for when there's some error from any of the promises.
   *
   * @param {Error} error
   */
  onError: an.func,
  /**
   * Custom validation function. It must return null if there's no errors.
   * @param {File} file
   * @returns {FileError|FileError[]|null}
   */
  validator: an.func
};
var hf = {
  isFocused: !1,
  isFileDialogActive: !1,
  isDragActive: !1,
  isDragAccept: !1,
  isDragReject: !1,
  acceptedFiles: [],
  fileRejections: []
};
function M0() {
  var e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, t = Sn(Sn({}, D0), e), n = t.accept, r = t.disabled, i = t.getFilesFromEvent, s = t.maxSize, o = t.minSize, l = t.multiple, c = t.maxFiles, d = t.onDragEnter, u = t.onDragLeave, p = t.onDragOver, m = t.onDrop, f = t.onDropAccepted, g = t.onDropRejected, b = t.onFileDialogCancel, v = t.onFileDialogOpen, y = t.useFsAccessApi, C = t.autoFocus, S = t.preventDropOnDocument, P = t.noClick, w = t.noKeyboard, A = t.noDrag, k = t.noDragEventsBubbling, T = t.onError, O = t.validator, I = nt(function() {
    return NR(n);
  }, [n]), _ = nt(function() {
    return LR(n);
  }, [n]), E = nt(function() {
    return typeof v == "function" ? v : Ov;
  }, [v]), L = nt(function() {
    return typeof b == "function" ? b : Ov;
  }, [b]), F = Ct(null), R = Ct(null), M = VI(XR, hf), U = nm(M, 2), K = U[0], G = U[1], N = K.isFocused, $ = K.isFileDialogActive, q = Ct(typeof window < "u" && window.isSecureContext && y && AR()), V = function() {
    !q.current && $ && setTimeout(function() {
      if (R.current) {
        var Ce = R.current.files;
        Ce.length || (G({
          type: "closeDialog"
        }), L());
      }
    }, 300);
  };
  ze(function() {
    return window.addEventListener("focus", V, !1), function() {
      window.removeEventListener("focus", V, !1);
    };
  }, [R, $, L, q]);
  var B = Ct([]), Z = function(Ce) {
    F.current && F.current.contains(Ce.target) || (Ce.preventDefault(), B.current = []);
  };
  ze(function() {
    return S && (document.addEventListener("dragover", Sv, !1), document.addEventListener("drop", Z, !1)), function() {
      S && (document.removeEventListener("dragover", Sv), document.removeEventListener("drop", Z));
    };
  }, [F, S]), ze(function() {
    return !r && C && F.current && F.current.focus(), function() {
    };
  }, [F, C, r]);
  var X = bn(function(fe) {
    T ? T(fe) : console.error(fe);
  }, [T]), Q = bn(function(fe) {
    fe.preventDefault(), fe.persist(), Y(fe), B.current = [].concat(UR(B.current), [fe.target]), gd(fe) && Promise.resolve(i(fe)).then(function(Ce) {
      if (!(eu(fe) && !k)) {
        var Ge = Ce.length, Qe = Ge > 0 && ER({
          files: Ce,
          accept: I,
          minSize: o,
          maxSize: s,
          multiple: l,
          maxFiles: c,
          validator: O
        }), qe = Ge > 0 && !Qe;
        G({
          isDragAccept: Qe,
          isDragReject: qe,
          isDragActive: !0,
          type: "setDraggedFiles"
        }), d && d(fe);
      }
    }).catch(function(Ce) {
      return X(Ce);
    });
  }, [i, d, X, k, I, o, s, l, c, O]), ie = bn(function(fe) {
    fe.preventDefault(), fe.persist(), Y(fe);
    var Ce = gd(fe);
    if (Ce && fe.dataTransfer)
      try {
        fe.dataTransfer.dropEffect = "copy";
      } catch {
      }
    return Ce && p && p(fe), !1;
  }, [p, k]), me = bn(function(fe) {
    fe.preventDefault(), fe.persist(), Y(fe);
    var Ce = B.current.filter(function(Qe) {
      return F.current && F.current.contains(Qe);
    }), Ge = Ce.indexOf(fe.target);
    Ge !== -1 && Ce.splice(Ge, 1), B.current = Ce, !(Ce.length > 0) && (G({
      type: "setDraggedFiles",
      isDragActive: !1,
      isDragAccept: !1,
      isDragReject: !1
    }), gd(fe) && u && u(fe));
  }, [F, u, k]), ee = bn(function(fe, Ce) {
    var Ge = [], Qe = [];
    fe.forEach(function(qe) {
      var Ot = _0(qe, I), Bt = nm(Ot, 2), Ye = Bt[0], _t = Bt[1], Mt = R0(qe, o, s), Wn = nm(Mt, 2), Na = Wn[0], Ga = Wn[1], ii = O ? O(qe) : null;
      if (Ye && Na && !ii)
        Ge.push(qe);
      else {
        var si = [_t, Ga];
        ii && (si = si.concat(ii)), Qe.push({
          file: qe,
          errors: si.filter(function(ld) {
            return ld;
          })
        });
      }
    }), (!l && Ge.length > 1 || l && c >= 1 && Ge.length > c) && (Ge.forEach(function(qe) {
      Qe.push({
        file: qe,
        errors: [IR]
      });
    }), Ge.splice(0)), G({
      acceptedFiles: Ge,
      fileRejections: Qe,
      type: "setFiles"
    }), m && m(Ge, Qe, Ce), Qe.length > 0 && g && g(Qe, Ce), Ge.length > 0 && f && f(Ge, Ce);
  }, [G, l, I, o, s, c, m, f, g, O]), ce = bn(function(fe) {
    fe.preventDefault(), fe.persist(), Y(fe), B.current = [], gd(fe) && Promise.resolve(i(fe)).then(function(Ce) {
      eu(fe) && !k || ee(Ce, fe);
    }).catch(function(Ce) {
      return X(Ce);
    }), G({
      type: "reset"
    });
  }, [i, ee, X, k]), ae = bn(function() {
    if (q.current) {
      G({
        type: "openDialog"
      }), E();
      var fe = {
        multiple: l,
        types: _
      };
      window.showOpenFilePicker(fe).then(function(Ce) {
        return i(Ce);
      }).then(function(Ce) {
        ee(Ce, null), G({
          type: "closeDialog"
        });
      }).catch(function(Ce) {
        DR(Ce) ? (L(Ce), G({
          type: "closeDialog"
        })) : MR(Ce) ? (q.current = !1, R.current ? (R.current.value = null, R.current.click()) : X(new Error("Cannot open the file picker because the https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API is not supported and no <input> was provided."))) : X(Ce);
      });
      return;
    }
    R.current && (G({
      type: "openDialog"
    }), E(), R.current.value = null, R.current.click());
  }, [G, E, L, y, ee, X, _, l]), Oe = bn(function(fe) {
    !F.current || !F.current.isEqualNode(fe.target) || (fe.key === " " || fe.key === "Enter" || fe.keyCode === 32 || fe.keyCode === 13) && (fe.preventDefault(), ae());
  }, [F, ae]), Ie = bn(function() {
    G({
      type: "focus"
    });
  }, []), Me = bn(function() {
    G({
      type: "blur"
    });
  }, []), ge = bn(function() {
    P || (RR() ? setTimeout(ae, 0) : ae());
  }, [P, ae]), Se = function(Ce) {
    return r ? null : Ce;
  }, J = function(Ce) {
    return w ? null : Se(Ce);
  }, W = function(Ce) {
    return A ? null : Se(Ce);
  }, Y = function(Ce) {
    k && Ce.stopPropagation();
  }, oe = nt(function() {
    return function() {
      var fe = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Ce = fe.refKey, Ge = Ce === void 0 ? "ref" : Ce, Qe = fe.role, qe = fe.onKeyDown, Ot = fe.onFocus, Bt = fe.onBlur, Ye = fe.onClick, _t = fe.onDragEnter, Mt = fe.onDragOver, Wn = fe.onDragLeave, Na = fe.onDrop, Ga = tu(fe, jR);
      return Sn(Sn(ff({
        onKeyDown: J(Fr(qe, Oe)),
        onFocus: J(Fr(Ot, Ie)),
        onBlur: J(Fr(Bt, Me)),
        onClick: Se(Fr(Ye, ge)),
        onDragEnter: W(Fr(_t, Q)),
        onDragOver: W(Fr(Mt, ie)),
        onDragLeave: W(Fr(Wn, me)),
        onDrop: W(Fr(Na, ce)),
        role: typeof Qe == "string" && Qe !== "" ? Qe : "presentation"
      }, Ge, F), !r && !w ? {
        tabIndex: 0
      } : {}), Ga);
    };
  }, [F, Oe, Ie, Me, ge, Q, ie, me, ce, w, A, r]), he = bn(function(fe) {
    fe.stopPropagation();
  }, []), ue = nt(function() {
    return function() {
      var fe = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Ce = fe.refKey, Ge = Ce === void 0 ? "ref" : Ce, Qe = fe.onChange, qe = fe.onClick, Ot = tu(fe, BR), Bt = ff({
        accept: I,
        multiple: l,
        type: "file",
        style: {
          display: "none"
        },
        onChange: Se(Fr(Qe, ce)),
        onClick: Se(Fr(qe, he)),
        tabIndex: -1
      }, Ge, R);
      return Sn(Sn({}, Bt), Ot);
    };
  }, [R, n, l, ce, r]);
  return Sn(Sn({}, K), {}, {
    isFocused: N && !r,
    getRootProps: oe,
    getInputProps: ue,
    rootRef: F,
    inputRef: R,
    open: Se(ae)
  });
}
function XR(e, t) {
  switch (t.type) {
    case "focus":
      return Sn(Sn({}, e), {}, {
        isFocused: !0
      });
    case "blur":
      return Sn(Sn({}, e), {}, {
        isFocused: !1
      });
    case "openDialog":
      return Sn(Sn({}, hf), {}, {
        isFileDialogActive: !0
      });
    case "closeDialog":
      return Sn(Sn({}, e), {}, {
        isFileDialogActive: !1
      });
    case "setDraggedFiles":
      return Sn(Sn({}, e), {}, {
        isDragActive: t.isDragActive,
        isDragAccept: t.isDragAccept,
        isDragReject: t.isDragReject
      });
    case "setFiles":
      return Sn(Sn({}, e), {}, {
        acceptedFiles: t.acceptedFiles,
        fileRejections: t.fileRejections
      });
    case "reset":
      return Sn({}, hf);
    default:
      return e;
  }
}
function Ov() {
}
const Hn = {
  button: "pf-v5-c-button",
  dirRtl: "pf-v5-m-dir-rtl",
  jumpLinks: "pf-v5-c-jump-links",
  jumpLinksItem: "pf-v5-c-jump-links__item",
  jumpLinksLabel: "pf-v5-c-jump-links__label",
  jumpLinksLink: "pf-v5-c-jump-links__link",
  jumpLinksLinkText: "pf-v5-c-jump-links__link-text",
  jumpLinksList: "pf-v5-c-jump-links__list",
  jumpLinksMain: "pf-v5-c-jump-links__main",
  jumpLinksToggle: "pf-v5-c-jump-links__toggle",
  jumpLinksToggleIcon: "pf-v5-c-jump-links__toggle-icon",
  jumpLinksToggleText: "pf-v5-c-jump-links__toggle-text",
  modifiers: {
    center: "pf-m-center",
    vertical: "pf-m-vertical",
    expandable: "pf-m-expandable",
    nonExpandable: "pf-m-non-expandable",
    expandableOnSm: "pf-m-expandable-on-sm",
    nonExpandableOnSm: "pf-m-non-expandable-on-sm",
    expandableOnMd: "pf-m-expandable-on-md",
    nonExpandableOnMd: "pf-m-non-expandable-on-md",
    expandableOnLg: "pf-m-expandable-on-lg",
    nonExpandableOnLg: "pf-m-non-expandable-on-lg",
    expandableOnXl: "pf-m-expandable-on-xl",
    nonExpandableOnXl: "pf-m-non-expandable-on-xl",
    expandableOn_2xl: "pf-m-expandable-on-2xl",
    nonExpandableOn_2xl: "pf-m-non-expandable-on-2xl",
    expanded: "pf-m-expanded",
    current: "pf-m-current"
  }
}, YR = {
  modifiers: {
    gutter: "pf-m-gutter",
    panelRight: "pf-m-panel-right",
    stack: "pf-m-stack",
    split: "pf-m-split",
    border: "pf-m-border",
    padding: "pf-m-padding",
    sticky: "pf-m-sticky",
    static: "pf-m-static",
    noBackground: "pf-m-no-background",
    widthDefault: "pf-m-width-default",
    width_25: "pf-m-width-25",
    width_33: "pf-m-width-33",
    width_50: "pf-m-width-50",
    width_66: "pf-m-width-66",
    width_75: "pf-m-width-75",
    width_100: "pf-m-width-100",
    widthDefaultOnSm: "pf-m-width-default-on-sm",
    width_25OnSm: "pf-m-width-25-on-sm",
    width_33OnSm: "pf-m-width-33-on-sm",
    width_50OnSm: "pf-m-width-50-on-sm",
    width_66OnSm: "pf-m-width-66-on-sm",
    width_75OnSm: "pf-m-width-75-on-sm",
    width_100OnSm: "pf-m-width-100-on-sm",
    widthDefaultOnMd: "pf-m-width-default-on-md",
    width_25OnMd: "pf-m-width-25-on-md",
    width_33OnMd: "pf-m-width-33-on-md",
    width_50OnMd: "pf-m-width-50-on-md",
    width_66OnMd: "pf-m-width-66-on-md",
    width_75OnMd: "pf-m-width-75-on-md",
    width_100OnMd: "pf-m-width-100-on-md",
    widthDefaultOnLg: "pf-m-width-default-on-lg",
    width_25OnLg: "pf-m-width-25-on-lg",
    width_33OnLg: "pf-m-width-33-on-lg",
    width_50OnLg: "pf-m-width-50-on-lg",
    width_66OnLg: "pf-m-width-66-on-lg",
    width_75OnLg: "pf-m-width-75-on-lg",
    width_100OnLg: "pf-m-width-100-on-lg",
    widthDefaultOnXl: "pf-m-width-default-on-xl",
    width_25OnXl: "pf-m-width-25-on-xl",
    width_33OnXl: "pf-m-width-33-on-xl",
    width_50OnXl: "pf-m-width-50-on-xl",
    width_66OnXl: "pf-m-width-66-on-xl",
    width_75OnXl: "pf-m-width-75-on-xl",
    width_100OnXl: "pf-m-width-100-on-xl",
    widthDefaultOn_2xl: "pf-m-width-default-on-2xl",
    width_25On_2xl: "pf-m-width-25-on-2xl",
    width_33On_2xl: "pf-m-width-33-on-2xl",
    width_50On_2xl: "pf-m-width-50-on-2xl",
    width_66On_2xl: "pf-m-width-66-on-2xl",
    width_75On_2xl: "pf-m-width-75-on-2xl",
    width_100On_2xl: "pf-m-width-100-on-2xl"
  },
  sidebar: "pf-v5-c-sidebar",
  sidebarContent: "pf-v5-c-sidebar__content",
  sidebarMain: "pf-v5-c-sidebar__main",
  sidebarPanel: "pf-v5-c-sidebar__panel"
}, fc = (e) => {
  var { children: t, className: n } = e, r = se(e, ["children", "className"]);
  return h.createElement("ul", Object.assign({ className: j(Hn.jumpLinksList, n), role: "list" }, r), t);
};
fc.displayName = "JumpLinksList";
const hc = (e) => {
  var {
    isActive: t,
    href: n,
    // eslint-disable-next-line
    node: r,
    children: i,
    onClick: s,
    className: o
  } = e, l = se(e, ["isActive", "href", "node", "children", "onClick", "className"]);
  const c = h.Children.toArray(i), d = c.filter((u) => u.type === fc);
  return i = c.filter((u) => u.type !== fc), h.createElement(
    "li",
    Object.assign({ className: j(Hn.jumpLinksItem, t && Hn.modifiers.current, o) }, t && { "aria-current": "location" }, l),
    h.createElement(
      "a",
      { className: Hn.jumpLinksLink, href: n, onClick: s },
      h.createElement("span", { className: Hn.jumpLinksLinkText }, i)
    ),
    d
  );
};
hc.displayName = "JumpLinksItem";
const JR = {
  name: "--pf-v5-c-jump-links__toggle--Display",
  value: "none",
  var: "var(--pf-v5-c-jump-links__toggle--Display)"
}, Md = (e, t) => (h.Children.forEach(e, (n) => {
  if (wn && document.getElementById && document.querySelector && n.type === hc) {
    const r = n.props.node || n.props.href;
    typeof r == "string" ? r.startsWith("#") ? t.push(document.getElementById(r.substr(1))) : t.push(document.querySelector(r)) : r instanceof HTMLElement && t.push(r);
  }
  [h.Fragment, fc, hc].includes(n.type) && Md(n.props.children, t);
}), t);
function ZR(e) {
  return e && getComputedStyle(e).getPropertyValue(JR.name).includes("block");
}
const F0 = (e) => {
  var { isCentered: t, isVertical: n, children: r, label: i, "aria-label": s = typeof i == "string" ? i : null, scrollableRef: o, scrollableSelector: l, activeIndex: c = 0, offset: d = 0, expandable: u, isExpanded: p = !1, alwaysShowLabel: m = !0, toggleAriaLabel: f = "Toggle jump links", className: g } = e, b = se(e, ["isCentered", "isVertical", "children", "label", "aria-label", "scrollableRef", "scrollableSelector", "activeIndex", "offset", "expandable", "isExpanded", "alwaysShowLabel", "toggleAriaLabel", "className"]);
  const v = !!(o || l), [y, C] = h.useState(v ? Md(r, []) : []), [S, P] = h.useState(c), [w, A] = h.useState(p), k = h.useRef(!1), T = h.useRef();
  let O;
  const I = () => {
    if (o)
      return o instanceof HTMLElement ? o : typeof o == "function" ? o() : o.current;
    if (l)
      return document.querySelector(l);
  }, _ = h.useCallback(() => {
    if (!wn || !v || !(O instanceof HTMLElement))
      return;
    if (k.current) {
      k.current = !1;
      return;
    }
    const F = Math.ceil(O.scrollTop + d);
    window.requestAnimationFrame(() => {
      let R = y;
      (R.every((K) => !K?.offsetTop) || !R[0] || R.includes(null)) && (R = Md(r, []), C(R));
      const U = R.map((K, G) => ({
        y: K ? K.offsetTop : null,
        index: G
      })).filter(({ y: K }) => K !== null).sort((K, G) => G.y - K.y);
      for (const { y: K, index: G } of U)
        if (F >= K)
          return P(G);
    });
  }, [y, v, O, d]);
  h.useEffect(() => {
    if (O = I(), O instanceof HTMLElement)
      return O.addEventListener("scroll", _), () => O.removeEventListener("scroll", _);
  }, [O, _, I]), h.useEffect(() => {
    _();
  }, []);
  let E = 0;
  const L = (F) => v ? h.Children.map(F, (R) => {
    if (R.type === hc) {
      const { onClick: M, isActive: U } = R.props, K = E++, G = y[K];
      return h.cloneElement(R, {
        onClick(N) {
          k.current = !0;
          let $;
          G || ($ = Md(F, []), C($));
          const q = G || $[K];
          if (q) {
            const V = I();
            if (V instanceof HTMLElement) {
              if (ZR(T.current)) {
                T.current && T.current.classList.remove(Hn.modifiers.expanded);
                let B = T.current && T.current.parentElement;
                for (; B && !B.classList.contains(YR.modifiers.sticky); )
                  B = B.parentElement;
                A(!1), B && (d += B.scrollHeight);
              }
              V.scrollTo(0, q.offsetTop - d);
            }
            q.focus(), window.history.pushState("", "", N.currentTarget.href), N.preventDefault(), P(K);
          }
          M && M(N);
        },
        isActive: U || S === K,
        children: L(R.props.children)
      });
    } else {
      if (R.type === h.Fragment)
        return L(R.props.children);
      if (R.type === fc)
        return h.cloneElement(R, { children: L(R.props.children) });
    }
    return R;
  }) : F;
  return h.createElement(
    "nav",
    Object.assign({ className: j(Hn.jumpLinks, t && Hn.modifiers.center, n && Hn.modifiers.vertical, pt(u, Hn), w && Hn.modifiers.expanded, g), "aria-label": s, ref: T }, b),
    h.createElement(
      "div",
      { className: Hn.jumpLinksMain },
      h.createElement(
        "div",
        { className: j(`${Hn.jumpLinks}__header`) },
        u && h.createElement(
          "div",
          { className: Hn.jumpLinksToggle },
          h.createElement(
            z,
            { variant: "plain", onClick: () => A(!w), "aria-label": f, "aria-expanded": w },
            h.createElement(
              "span",
              { className: Hn.jumpLinksToggleIcon },
              h.createElement(Nn, null)
            ),
            i && h.createElement(
              "span",
              { className: j(Hn.jumpLinksToggleText) },
              " ",
              i,
              " "
            )
          )
        ),
        i && m && h.createElement("div", { className: j(Hn.jumpLinksLabel) }, i)
      ),
      h.createElement("ul", { className: Hn.jumpLinksList, role: "list" }, L(r))
    )
  );
};
F0.displayName = "JumpLinks";
const $n = {
  button: "pf-v5-c-button",
  label: "pf-v5-c-label",
  labelActions: "pf-v5-c-label__actions",
  labelContent: "pf-v5-c-label__content",
  labelIcon: "pf-v5-c-label__icon",
  labelText: "pf-v5-c-label__text",
  modifiers: {
    compact: "pf-m-compact",
    blue: "pf-m-blue",
    green: "pf-m-green",
    orange: "pf-m-orange",
    red: "pf-m-red",
    purple: "pf-m-purple",
    cyan: "pf-m-cyan",
    gold: "pf-m-gold",
    outline: "pf-m-outline",
    overflow: "pf-m-overflow",
    add: "pf-m-add",
    editable: "pf-m-editable",
    editableActive: "pf-m-editable-active",
    disabled: "pf-m-disabled"
  },
  themeDark: "pf-v5-theme-dark"
}, QR = {
  button: "pf-v5-c-button",
  labelGroup: "pf-v5-c-label-group",
  labelGroupClose: "pf-v5-c-label-group__close",
  labelGroupLabel: "pf-v5-c-label-group__label",
  labelGroupList: "pf-v5-c-label-group__list",
  labelGroupListItem: "pf-v5-c-label-group__list-item",
  labelGroupMain: "pf-v5-c-label-group__main",
  labelGroupTextarea: "pf-v5-c-label-group__textarea",
  modifiers: {
    category: "pf-m-category",
    vertical: "pf-m-vertical",
    editable: "pf-m-editable",
    textarea: "pf-m-textarea"
  }
}, eA = {
  name: "--pf-v5-c-label__text--MaxWidth",
  value: "100%",
  var: "var(--pf-v5-c-label__text--MaxWidth)"
}, tA = {
  blue: $n.modifiers.blue,
  cyan: $n.modifiers.cyan,
  green: $n.modifiers.green,
  orange: $n.modifiers.orange,
  purple: $n.modifiers.purple,
  red: $n.modifiers.red,
  gold: $n.modifiers.gold,
  grey: ""
}, pn = (e) => {
  var { children: t, className: n = "", color: r = "grey", variant: i = "filled", isCompact: s = !1, isDisabled: o = !1, isEditable: l = !1, editableProps: c, textMaxWidth: d, tooltipPosition: u, icon: p, onClose: m, onClick: f, onEditCancel: g, onEditComplete: b, closeBtn: v, closeBtnAriaLabel: y, closeBtnProps: C, href: S, isOverflowLabel: P, render: w } = e, A = se(e, ["children", "className", "color", "variant", "isCompact", "isDisabled", "isEditable", "editableProps", "textMaxWidth", "tooltipPosition", "icon", "onClose", "onClick", "onEditCancel", "onEditComplete", "closeBtn", "closeBtnAriaLabel", "closeBtnProps", "href", "isOverflowLabel", "render"]);
  const [k, T] = D(!1), [O, I] = D(t), _ = h.useRef(), E = h.useRef();
  h.useEffect(() => (document.addEventListener("mousedown", L), document.addEventListener("keydown", F), () => {
    document.removeEventListener("mousedown", L), document.removeEventListener("keydown", F);
  })), h.useEffect(() => {
    f && S ? console.warn("Link labels cannot have onClick passed, this results in invalid HTML. Please remove either the href or onClick prop.") : f && l && console.warn("Editable labels cannot have onClick passed, clicking starts the label edit process. Please remove either the isEditable or onClick prop.");
  }, [f, S, l]);
  const L = (ee) => {
    k && E && E.current && !E.current.contains(ee.target) && (E.current.value && b && b(ee, E.current.value), T(!1));
  }, F = (ee) => {
    var ce, ae;
    const Oe = ee.key;
    if (!(!k && (!_ || !_.current || !_.current.contains(ee.target)) || k && (!E || !E.current || !E.current.contains(ee.target))) && (k && (Oe === "Enter" || Oe === "Tab") && (ee.preventDefault(), ee.stopImmediatePropagation(), E.current.value && b && b(ee, E.current.value), T(!1), (ce = _?.current) === null || ce === void 0 || ce.focus()), k && Oe === "Escape" && (ee.preventDefault(), ee.stopImmediatePropagation(), E.current.value && (E.current.value = t, g && g(ee, t)), T(!1), (ae = _?.current) === null || ae === void 0 || ae.focus()), !k && Oe === "Enter")) {
      ee.preventDefault(), ee.stopImmediatePropagation(), T(!0);
      const Ie = ee.target, Me = document.createRange(), ge = window.getSelection();
      Me.selectNodeContents(Ie), Me.collapse(!1), ge.removeAllRanges(), ge.addRange(Me);
    }
  }, R = (S || f) && o, M = h.createElement(
    z,
    Object.assign({ type: "button", variant: "plain", onClick: m, "aria-label": y || `Close ${t}` }, R && { isDisabled: !0 }, C),
    h.createElement(fa, null)
  ), U = h.createElement("span", { className: j($n.labelActions) }, v || M), K = h.createRef(), G = h.useRef(), [N, $] = h.useState(!1);
  uc(() => {
    const ee = l ? _ : K;
    k || $(ee.current && ee.current.offsetWidth < ee.current.scrollWidth);
  }, [k]);
  const q = h.createElement(
    h.Fragment,
    null,
    p && h.createElement("span", { className: j($n.labelIcon) }, p),
    h.createElement("span", Object.assign({ ref: K, className: j($n.labelText) }, d && {
      style: {
        [eA.name]: d
      }
    }), t)
  );
  h.useEffect(() => {
    k && E && E.current && E.current.focus();
  }, [E, k]);
  const V = () => {
    I(E.current.value);
  };
  let B = "span";
  S ? B = "a" : (l || f && !P) && (B = "button");
  const Z = {
    type: "button",
    onClick: f
  }, X = B === "button", Q = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({ className: j($n.labelContent) }, N && { tabIndex: 0 }), S && { href: S }), S && o && { onClick: (ee) => ee.preventDefault() }), X && Z), l && Object.assign({ ref: _, onClick: (ee) => {
    T(!0), ee.stopPropagation();
  } }, c)), R && X && { disabled: !0 }), R && S && { tabIndex: -1, "aria-disabled": !0 });
  let ie = h.createElement(B, Object.assign({}, Q), q);
  w ? ie = h.createElement(
    h.Fragment,
    null,
    N && h.createElement(Ht, { triggerRef: G, content: t, position: u }),
    w({
      className: $n.labelContent,
      content: q,
      componentRef: G
    })
  ) : N && (ie = h.createElement(Ht, { content: t, position: u }, ie));
  const me = P ? "button" : "span";
  return h.createElement(
    me,
    Object.assign({}, A, { className: j($n.label, R && $n.modifiers.disabled, tA[r], i === "outline" && $n.modifiers.outline, P && $n.modifiers.overflow, s && $n.modifiers.compact, l && QR.modifiers.editable, k && $n.modifiers.editableActive, n), onClick: P ? f : void 0 }, me === "button" && { type: "button" }),
    !k && ie,
    !k && m && U,
    k && h.createElement("input", Object.assign({ className: j($n.labelContent), type: "text", id: "editable-input", ref: E, value: O, onChange: V }, c))
  );
};
pn.displayName = "Label";
const Za = {
  list: "pf-v5-c-list",
  listItem: "pf-v5-c-list__item",
  listItemIcon: "pf-v5-c-list__item-icon",
  modifiers: {
    iconLg: "pf-m-icon-lg",
    plain: "pf-m-plain",
    inline: "pf-m-inline",
    bordered: "pf-m-bordered"
  }
};
var gf;
(function(e) {
  e.number = "1", e.lowercaseLetter = "a", e.uppercaseLetter = "A", e.lowercaseRomanNumber = "i", e.uppercaseRomanNumber = "I";
})(gf || (gf = {}));
var gc;
(function(e) {
  e.inline = "inline";
})(gc || (gc = {}));
var nu;
(function(e) {
  e.ol = "ol", e.ul = "ul";
})(nu || (nu = {}));
const au = (e) => {
  var { className: t = "", children: n = null, variant: r = null, isBordered: i = !1, isPlain: s = !1, iconSize: o = "default", type: l = gf.number, ref: c = null, component: d = nu.ul } = e, u = se(e, ["className", "children", "variant", "isBordered", "isPlain", "iconSize", "type", "ref", "component"]);
  return d === nu.ol ? h.createElement("ol", Object.assign({ ref: c, type: l }, s && { role: "list" }, u, { className: j(Za.list, r && Za.modifiers[r], i && Za.modifiers.bordered, s && Za.modifiers.plain, o && o === "large" && Za.modifiers.iconLg, t) }), n) : h.createElement("ul", Object.assign({ ref: c }, s && { role: "list" }, u, { className: j(Za.list, r && Za.modifiers[r], i && Za.modifiers.bordered, s && Za.modifiers.plain, o && o === "large" && Za.modifiers.iconLg, t) }), n);
};
au.displayName = "List";
const Hh = (e) => {
  var { icon: t = null, children: n = null } = e, r = se(e, ["icon", "children"]);
  return h.createElement(
    "li",
    Object.assign({ className: j(t && Za.listItem) }, r),
    t && h.createElement("span", { className: j(Za.listItemIcon) }, t),
    n
  );
};
Hh.displayName = "ListItem";
const nA = {
  name: "EyeSlashIcon",
  height: 512,
  width: 640,
  svgPath: "M320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a144.13 144.13 0 0 1-26 2.61zm313.82 58.1l-110.55-85.44a331.25 331.25 0 0 0 81.25-102.07 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64a308.15 308.15 0 0 0-147.32 37.7L45.46 3.37A16 16 0 0 0 23 6.18L3.37 31.45A16 16 0 0 0 6.18 53.9l588.36 454.73a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zm-183.72-142l-39.3-30.38A94.75 94.75 0 0 0 416 256a94.76 94.76 0 0 0-121.31-92.21A47.65 47.65 0 0 1 304 192a46.64 46.64 0 0 1-1.54 10l-73.61-56.89A142.31 142.31 0 0 1 320 112a143.92 143.92 0 0 1 144 144c0 21.63-5.29 41.79-13.9 60.11z",
  yOffset: 0,
  xOffset: 0
}, aA = et(nA), rA = {
  name: "EyeIcon",
  height: 512,
  width: 576,
  svgPath: "M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z",
  yOffset: 0,
  xOffset: 0
}, iA = et(rA), Gi = {
  button: "pf-v5-c-button",
  contextSelector: "pf-v5-c-context-selector",
  dropdown: "pf-v5-c-dropdown",
  masthead: "pf-v5-c-masthead",
  mastheadBrand: "pf-v5-c-masthead__brand",
  mastheadContent: "pf-v5-c-masthead__content",
  mastheadMain: "pf-v5-c-masthead__main",
  mastheadToggle: "pf-v5-c-masthead__toggle",
  menuToggle: "pf-v5-c-menu-toggle",
  modifiers: {
    light_200: "pf-m-light-200",
    light: "pf-m-light",
    plain: "pf-m-plain",
    resizeObserver: "pf-m-resize-observer",
    fullHeight: "pf-m-full-height",
    horizontal: "pf-m-horizontal",
    displayStack: "pf-m-display-stack",
    displayInline: "pf-m-display-inline",
    insetNone: "pf-m-inset-none",
    insetSm: "pf-m-inset-sm",
    insetMd: "pf-m-inset-md",
    insetLg: "pf-m-inset-lg",
    insetXl: "pf-m-inset-xl",
    inset_2xl: "pf-m-inset-2xl",
    displayStackOnSm: "pf-m-display-stack-on-sm",
    displayInlineOnSm: "pf-m-display-inline-on-sm",
    insetNoneOnSm: "pf-m-inset-none-on-sm",
    insetSmOnSm: "pf-m-inset-sm-on-sm",
    insetMdOnSm: "pf-m-inset-md-on-sm",
    insetLgOnSm: "pf-m-inset-lg-on-sm",
    insetXlOnSm: "pf-m-inset-xl-on-sm",
    inset_2xlOnSm: "pf-m-inset-2xl-on-sm",
    displayStackOnMd: "pf-m-display-stack-on-md",
    displayInlineOnMd: "pf-m-display-inline-on-md",
    insetNoneOnMd: "pf-m-inset-none-on-md",
    insetSmOnMd: "pf-m-inset-sm-on-md",
    insetMdOnMd: "pf-m-inset-md-on-md",
    insetLgOnMd: "pf-m-inset-lg-on-md",
    insetXlOnMd: "pf-m-inset-xl-on-md",
    inset_2xlOnMd: "pf-m-inset-2xl-on-md",
    displayStackOnLg: "pf-m-display-stack-on-lg",
    displayInlineOnLg: "pf-m-display-inline-on-lg",
    insetNoneOnLg: "pf-m-inset-none-on-lg",
    insetSmOnLg: "pf-m-inset-sm-on-lg",
    insetMdOnLg: "pf-m-inset-md-on-lg",
    insetLgOnLg: "pf-m-inset-lg-on-lg",
    insetXlOnLg: "pf-m-inset-xl-on-lg",
    inset_2xlOnLg: "pf-m-inset-2xl-on-lg",
    displayStackOnXl: "pf-m-display-stack-on-xl",
    displayInlineOnXl: "pf-m-display-inline-on-xl",
    insetNoneOnXl: "pf-m-inset-none-on-xl",
    insetSmOnXl: "pf-m-inset-sm-on-xl",
    insetMdOnXl: "pf-m-inset-md-on-xl",
    insetLgOnXl: "pf-m-inset-lg-on-xl",
    insetXlOnXl: "pf-m-inset-xl-on-xl",
    inset_2xlOnXl: "pf-m-inset-2xl-on-xl",
    displayStackOn_2xl: "pf-m-display-stack-on-2xl",
    displayInlineOn_2xl: "pf-m-display-inline-on-2xl",
    insetNoneOn_2xl: "pf-m-inset-none-on-2xl",
    insetSmOn_2xl: "pf-m-inset-sm-on-2xl",
    insetMdOn_2xl: "pf-m-inset-md-on-2xl",
    insetLgOn_2xl: "pf-m-inset-lg-on-2xl",
    insetXlOn_2xl: "pf-m-inset-xl-on-2xl",
    inset_2xlOn_2xl: "pf-m-inset-2xl-on-2xl"
  },
  nav: "pf-v5-c-nav",
  page: "pf-v5-c-page",
  themeDark: "pf-v5-theme-dark",
  toolbar: "pf-v5-c-toolbar",
  toolbarContentSection: "pf-v5-c-toolbar__content-section",
  toolbarExpandableContent: "pf-v5-c-toolbar__expandable-content"
}, sA = {
  isManagedSidebar: !1,
  isSidebarOpen: !1,
  onSidebarToggle: () => null,
  width: null,
  height: null,
  getBreakpoint: pS,
  getVerticalBreakpoint: uS
}, Fi = h.createContext(sA), oA = Fi.Provider, $0 = Fi.Consumer, j0 = (e) => {
  var { children: t, className: n, backgroundColor: r = "dark", display: i = {
    md: "inline"
  }, inset: s } = e, o = se(e, ["children", "className", "backgroundColor", "display", "inset"]);
  const { width: l, getBreakpoint: c } = h.useContext(Fi);
  return h.createElement("header", Object.assign({ className: j(Gi.masthead, pt(i, Gi, "display-", c(l)), pt(s, Gi, "", c(l)), r === "light" && Gi.modifiers.light, r === "light200" && Gi.modifiers.light_200, n) }, o), t);
};
j0.displayName = "Masthead";
const B0 = (e) => {
  var { children: t, className: n, component: r } = e, i = se(e, ["children", "className", "component"]);
  let s = r;
  return r || (i?.href !== void 0 ? s = "a" : s = "span"), h.createElement(s, Object.assign({ className: j(Gi.mastheadBrand, n) }, s === "a" && { tabIndex: 0 }, i), t);
};
B0.displayName = "MastheadBrand";
const U0 = (e) => {
  var { children: t, className: n } = e, r = se(e, ["children", "className"]);
  return h.createElement("div", Object.assign({ className: j(Gi.mastheadContent, n) }, r), t);
};
U0.displayName = "MastheadContent";
const V0 = (e) => {
  var { children: t, className: n } = e, r = se(e, ["children", "className"]);
  return h.createElement("span", Object.assign({ className: j(Gi.mastheadToggle, n) }, r), t);
};
V0.displayName = "MastheadToggle";
const gn = {
  dirRtl: "pf-v5-m-dir-rtl",
  divider: "pf-v5-c-divider",
  menu: "pf-v5-c-menu",
  menuContent: "pf-v5-c-menu__content",
  menuItem: "pf-v5-c-menu__item",
  menuItemToggleIcon: "pf-v5-c-menu__item-toggle-icon",
  menuListItem: "pf-v5-c-menu__list-item",
  modifiers: {
    flyout: "pf-m-flyout",
    top: "pf-m-top",
    left: "pf-m-left",
    current: "pf-m-current",
    drillUp: "pf-m-drill-up",
    horizontal: "pf-m-horizontal",
    tertiary: "pf-m-tertiary",
    horizontalSubnav: "pf-m-horizontal-subnav",
    light: "pf-m-light",
    scrollable: "pf-m-scrollable",
    overflowHidden: "pf-m-overflow-hidden",
    expandable: "pf-m-expandable",
    expanded: "pf-m-expanded",
    drilldown: "pf-m-drilldown",
    hover: "pf-m-hover",
    start: "pf-m-start"
  },
  nav: "pf-v5-c-nav",
  navItem: "pf-v5-c-nav__item",
  navLink: "pf-v5-c-nav__link",
  navList: "pf-v5-c-nav__list",
  navScrollButton: "pf-v5-c-nav__scroll-button",
  navSection: "pf-v5-c-nav__section",
  navSectionTitle: "pf-v5-c-nav__section-title",
  navSubnav: "pf-v5-c-nav__subnav",
  navToggle: "pf-v5-c-nav__toggle",
  navToggleIcon: "pf-v5-c-nav__toggle-icon",
  themeDark: "pf-v5-theme-dark"
}, lA = {}, bc = h.createContext(lA);
class Uo extends h.Component {
  constructor() {
    super(...arguments), this.state = {
      isScrollable: !1,
      ouiaStateId: qa(Uo.displayName, this.props.variant),
      flyoutRef: null
    }, this.navRef = h.createRef();
  }
  // Callback from NavItem
  onSelect(t, n, r, i, s, o) {
    s && t.preventDefault(), this.props.onSelect(t, { groupId: n, itemId: r, to: i }), o && o(t, r, n, i);
  }
  // Callback from NavExpandable
  onToggle(t, n, r) {
    this.props.onToggle(t, {
      groupId: n,
      isExpanded: r
    });
  }
  render() {
    const t = this.props, {
      "aria-label": n,
      children: r,
      className: i,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onSelect: s,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onToggle: o,
      theme: l,
      ouiaId: c,
      ouiaSafe: d,
      variant: u
    } = t, p = se(t, ["aria-label", "children", "className", "onSelect", "onToggle", "theme", "ouiaId", "ouiaSafe", "variant"]), m = ["horizontal", "tertiary"].includes(u);
    return h.createElement(
      bc.Provider,
      { value: {
        onSelect: (f, g, b, v, y, C) => this.onSelect(f, g, b, v, y, C),
        onToggle: (f, g, b) => this.onToggle(f, g, b),
        updateIsScrollable: (f) => this.setState({ isScrollable: f }),
        isHorizontal: ["horizontal", "tertiary", "horizontal-subnav"].includes(u),
        flyoutRef: this.state.flyoutRef,
        setFlyoutRef: (f) => this.setState({ flyoutRef: f }),
        navRef: this.navRef
      } },
      h.createElement("nav", Object.assign({ className: j(gn.nav, l === "light" && gn.modifiers.light, m && gn.modifiers.horizontal, u === "tertiary" && gn.modifiers.tertiary, u === "horizontal-subnav" && gn.modifiers.horizontalSubnav, this.state.isScrollable && gn.modifiers.scrollable, i), "aria-label": n || (["tertiary", "horizontal-subnav"].includes(u) ? "Local" : "Global"), ref: this.navRef }, Gn(Uo.displayName, c !== void 0 ? c : this.state.ouiaStateId, d), p), r)
    );
  }
}
Uo.displayName = "Nav";
Uo.defaultProps = {
  onSelect: () => {
  },
  onToggle: () => {
  },
  theme: "dark",
  ouiaSafe: !0
};
const kt = {
  avatar: "pf-v5-c-avatar",
  brand: "pf-v5-c-brand",
  button: "pf-v5-c-button",
  contextSelector: "pf-v5-c-context-selector",
  dirRtl: "pf-v5-m-dir-rtl",
  drawer: "pf-v5-c-drawer",
  masthead: "pf-v5-c-masthead",
  modifiers: {
    light: "pf-m-light",
    menu: "pf-m-menu",
    hidden: "pf-m-hidden",
    hiddenOnSm: "pf-m-hidden-on-sm",
    visibleOnSm: "pf-m-visible-on-sm",
    hiddenOnMd: "pf-m-hidden-on-md",
    visibleOnMd: "pf-m-visible-on-md",
    hiddenOnLg: "pf-m-hidden-on-lg",
    visibleOnLg: "pf-m-visible-on-lg",
    hiddenOnXl: "pf-m-hidden-on-xl",
    visibleOnXl: "pf-m-visible-on-xl",
    hiddenOn_2xl: "pf-m-hidden-on-2xl",
    visibleOn_2xl: "pf-m-visible-on-2xl",
    read: "pf-m-read",
    selected: "pf-m-selected",
    unread: "pf-m-unread",
    attention: "pf-m-attention",
    expanded: "pf-m-expanded",
    collapsed: "pf-m-collapsed",
    pageInsets: "pf-m-page-insets",
    insetNone: "pf-m-inset-none",
    fill: "pf-m-fill",
    noFill: "pf-m-no-fill",
    limitWidth: "pf-m-limit-width",
    alignCenter: "pf-m-align-center",
    overflowScroll: "pf-m-overflow-scroll",
    shadowBottom: "pf-m-shadow-bottom",
    shadowTop: "pf-m-shadow-top",
    stickyTop: "pf-m-sticky-top",
    stickyBottom: "pf-m-sticky-bottom",
    stickyTopOnSmHeight: "pf-m-sticky-top-on-sm-height",
    stickyBottomOnSmHeight: "pf-m-sticky-bottom-on-sm-height",
    stickyTopOnMdHeight: "pf-m-sticky-top-on-md-height",
    stickyBottomOnMdHeight: "pf-m-sticky-bottom-on-md-height",
    stickyTopOnLgHeight: "pf-m-sticky-top-on-lg-height",
    stickyBottomOnLgHeight: "pf-m-sticky-bottom-on-lg-height",
    stickyTopOnXlHeight: "pf-m-sticky-top-on-xl-height",
    stickyBottomOnXlHeight: "pf-m-sticky-bottom-on-xl-height",
    stickyTopOn_2xlHeight: "pf-m-sticky-top-on-2xl-height",
    stickyBottomOn_2xlHeight: "pf-m-sticky-bottom-on-2xl-height",
    light_100: "pf-m-light-100",
    dark_100: "pf-m-dark-100",
    dark_200: "pf-m-dark-200",
    padding: "pf-m-padding",
    noPadding: "pf-m-no-padding",
    paddingOnSm: "pf-m-padding-on-sm",
    noPaddingOnSm: "pf-m-no-padding-on-sm",
    paddingOnMd: "pf-m-padding-on-md",
    noPaddingOnMd: "pf-m-no-padding-on-md",
    paddingOnLg: "pf-m-padding-on-lg",
    noPaddingOnLg: "pf-m-no-padding-on-lg",
    paddingOnXl: "pf-m-padding-on-xl",
    noPaddingOnXl: "pf-m-no-padding-on-xl",
    paddingOn_2xl: "pf-m-padding-on-2xl",
    noPaddingOn_2xl: "pf-m-no-padding-on-2xl",
    light_200: "pf-m-light-200"
  },
  nav: "pf-v5-c-nav",
  notificationBadge: "pf-v5-c-notification-badge",
  page: "pf-v5-c-page",
  pageDrawer: "pf-v5-c-page__drawer",
  pageHeader: "pf-v5-c-page__header",
  pageHeaderBrand: "pf-v5-c-page__header-brand",
  pageHeaderBrandLink: "pf-v5-c-page__header-brand-link",
  pageHeaderBrandToggle: "pf-v5-c-page__header-brand-toggle",
  pageHeaderNav: "pf-v5-c-page__header-nav",
  pageHeaderTools: "pf-v5-c-page__header-tools",
  pageHeaderToolsGroup: "pf-v5-c-page__header-tools-group",
  pageHeaderToolsItem: "pf-v5-c-page__header-tools-item",
  pageMain: "pf-v5-c-page__main",
  pageMainBody: "pf-v5-c-page__main-body",
  pageMainBreadcrumb: "pf-v5-c-page__main-breadcrumb",
  pageMainDrawer: "pf-v5-c-page__main-drawer",
  pageMainGroup: "pf-v5-c-page__main-group",
  pageMainNav: "pf-v5-c-page__main-nav",
  pageMainSection: "pf-v5-c-page__main-section",
  pageMainSubnav: "pf-v5-c-page__main-subnav",
  pageMainTabs: "pf-v5-c-page__main-tabs",
  pageMainWizard: "pf-v5-c-page__main-wizard",
  pageSidebar: "pf-v5-c-page__sidebar",
  pageSidebarBody: "pf-v5-c-page__sidebar-body",
  themeDark: "pf-v5-theme-dark"
}, cA = {
  isSidebarOpen: !0
}, zh = h.createContext(cA), K0 = (e) => {
  var { className: t = "", children: n, isSidebarOpen: r = !0, theme: i = "dark", id: s = "page-sidebar" } = e, o = se(e, ["className", "children", "isSidebarOpen", "theme", "id"]);
  return h.createElement($0, null, ({ isManagedSidebar: l, isSidebarOpen: c }) => {
    const d = l ? c : r;
    return h.createElement(
      "div",
      Object.assign({ id: s, className: j(kt.pageSidebar, i === "light" && kt.modifiers.light, d && kt.modifiers.expanded, !d && kt.modifiers.collapsed, t), "aria-hidden": !d }, o),
      h.createElement(zh.Provider, { value: { isSidebarOpen: d } }, n)
    );
  });
};
K0.displayName = "PageSidebar";
class Hu extends h.Component {
  constructor() {
    super(...arguments), this.direction = "ltr", this.state = {
      scrollViewAtStart: !1,
      scrollViewAtEnd: !1
    }, this.navList = h.createRef(), this.observer = () => {
    }, this.handleScrollButtons = () => {
      const t = this.navList.current;
      if (t) {
        const n = hi(t, t.firstChild), r = hi(t, t.lastChild);
        this.setState({
          scrollViewAtStart: n,
          scrollViewAtEnd: r
        }), this.context.updateIsScrollable(!n || !r);
      }
    }, this.scrollBack = () => {
      const t = this.navList.current;
      if (t) {
        const n = Array.from(t.children);
        let r, i;
        for (let s = 0; s < n.length && !r; s++)
          hi(t, n[s]) && (r = n[s], i = n[s - 1]);
        i && (this.direction === "ltr" ? t.scrollLeft -= i.scrollWidth : t.scrollLeft += i.scrollWidth), this.handleScrollButtons();
      }
    }, this.scrollForward = () => {
      const t = this.navList.current;
      if (t) {
        const n = Array.from(t.children);
        let r, i;
        for (let s = n.length - 1; s >= 0 && !r; s--)
          hi(t, n[s]) && (r = n[s], i = n[s + 1]);
        i && (this.direction === "ltr" ? t.scrollLeft += i.scrollWidth : t.scrollLeft -= i.scrollWidth), this.handleScrollButtons();
      }
    };
  }
  componentDidMount() {
    this.observer = tl(this.navList.current, this.handleScrollButtons, !0), this.direction = Zi(this.navList.current), this.handleScrollButtons();
  }
  componentWillUnmount() {
    this.observer();
  }
  componentDidUpdate() {
    this.direction = Zi(this.navList.current);
  }
  render() {
    const t = this.props, { children: n, className: r, ariaLeftScroll: i, ariaRightScroll: s, backScrollAriaLabel: o, forwardScrollAriaLabel: l } = t, c = se(t, ["children", "className", "ariaLeftScroll", "ariaRightScroll", "backScrollAriaLabel", "forwardScrollAriaLabel"]), { scrollViewAtStart: d, scrollViewAtEnd: u } = this.state;
    return h.createElement(bc.Consumer, null, ({ isHorizontal: p }) => h.createElement(zh.Consumer, null, ({ isSidebarOpen: m }) => h.createElement(
      h.Fragment,
      null,
      p && h.createElement(
        "button",
        { className: j(gn.navScrollButton), "aria-label": o || i, onClick: this.scrollBack, disabled: d, tabIndex: m ? null : -1 },
        h.createElement(Hs, null)
      ),
      h.createElement("ul", Object.assign({ ref: this.navList, className: j(gn.navList, r), onScroll: this.handleScrollButtons, role: "list" }, c), n),
      p && h.createElement(
        "button",
        { className: j(gn.navScrollButton), "aria-label": l || s, onClick: this.scrollForward, disabled: u, tabIndex: m ? null : -1 },
        h.createElement(Nn, null)
      )
    )));
  }
}
Hu.displayName = "NavList";
Hu.contextType = bc;
Hu.defaultProps = {
  ariaLeftScroll: "Scroll left",
  backScrollAriaLabel: "Scroll back",
  ariaRightScroll: "Scroll right",
  forwardScrollAriaLabel: "Scroll foward"
};
const bf = (e) => {
  var { title: t, children: n = null, className: r = "", id: i = Ti() } = e, s = se(e, ["title", "children", "className", "id"]);
  !t && !s["aria-label"] && console.warn("For accessibility reasons an aria-label should be specified on nav groups if a title isn't");
  const o = t ? i : void 0;
  return h.createElement(
    "section",
    Object.assign({ className: j(gn.navSection, r), "aria-labelledby": o }, s),
    t && h.createElement("h2", { className: j(gn.navSectionTitle), id: i }, t),
    h.createElement("ul", { className: j(gn.navList, r), role: "list" }, n)
  );
};
bf.displayName = "NavGroup";
const qh = (e) => {
  var { children: t, styleChildren: n = !0, className: r, to: i, isActive: s = !1, groupId: o = null, itemId: l = null, preventDefault: c = !1, onClick: d, component: u = "a", flyout: p, onShowFlyout: m, ouiaId: f, ouiaSafe: g, zIndex: b = 9999, hasNavLinkWrapper: v } = e, y = se(e, ["children", "styleChildren", "className", "to", "isActive", "groupId", "itemId", "preventDefault", "onClick", "component", "flyout", "onShowFlyout", "ouiaId", "ouiaSafe", "zIndex", "hasNavLinkWrapper"]);
  const { flyoutRef: C, setFlyoutRef: S, navRef: P } = h.useContext(bc), { isSidebarOpen: w } = h.useContext(zh), [A, k] = h.useState(null), [T, O] = h.useState(!1), I = h.useRef(), _ = I === C, E = h.useRef(), L = p !== void 0, F = L ? "button" : u;
  i && L && console.error('NavItem cannot have both "to" and "flyout" props.');
  const R = (me, ee) => {
    (!_ || ee) && me ? S(I) : (_ || ee) && !me && S(null), m && me && m();
  }, M = (me) => {
    const ee = me.target.closest(`.${gn.navItem}.pf-m-flyout`);
    L && !_ ? R(!0) : C !== null && !ee && S(null);
  }, U = (me) => {
    me.target.closest(".pf-m-flyout") || (L ? R(!1, !0) : C !== null && S(null));
  }, K = (me) => {
    var ee, ce;
    const ae = me.key, Oe = me.target;
    (ae === " " || ae === "Enter" || ae === "ArrowRight") && L && (!((ee = I?.current) === null || ee === void 0) && ee.contains(Oe)) && (me.stopPropagation(), me.preventDefault(), _ || (R(!0), k(Oe))), (ae === "Escape" || ae === "ArrowLeft") && ((ce = E?.current) === null || ce === void 0 ? void 0 : ce.querySelectorAll(`.${gn.menu}`).length) === 1 && _ && (me.stopPropagation(), me.preventDefault(), R(!1));
  };
  h.useEffect(() => (L && window.addEventListener("click", U), () => {
    L && window.removeEventListener("click", U);
  }), []), h.useEffect(() => {
    A && (_ ? Array.from(E.current.getElementsByTagName("UL")[0].children).filter((ee) => !(ee.classList.contains("pf-m-disabled") || ee.classList.contains(gn.divider)))[0].firstChild.focus() : A.focus());
  }, [_, A]);
  const G = h.createElement(
    "span",
    { className: j(gn.navToggle) },
    h.createElement(
      "span",
      { className: j(gn.navToggleIcon) },
      h.createElement(Nn, { "aria-hidden": !0 })
    )
  ), N = {
    "aria-haspopup": "menu",
    "aria-expanded": _
  }, $ = w ? null : -1, q = (me) => {
    const ee = c || !i;
    return h.createElement(
      F,
      Object.assign({ href: i, onClick: (ce) => me.onSelect(ce, o, l, i, ee, d), className: j(gn.navLink, s && gn.modifiers.current, T && gn.modifiers.hover, r), "aria-current": s ? "page" : null, tabIndex: $ }, L && Object.assign({}, N), y),
      v ? h.createElement("span", { className: j(`${gn.nav}__link-text`) }, t) : t,
      p && G
    );
  }, V = (me, ee) => h.cloneElement(ee, Object.assign(Object.assign({ onClick: (ce) => me.onSelect(ce, o, l, i, c, d), "aria-current": s ? "page" : null }, n && {
    className: j(gn.navLink, s && gn.modifiers.current, ee.props && ee.props.className)
  }), { tabIndex: ee.props.tabIndex || $, children: L ? h.createElement(
    h.Fragment,
    null,
    ee.props.children,
    G
  ) : ee.props.children })), B = za(qh.displayName, f, g), Z = () => {
    O(!0);
  }, X = () => {
    O(!1);
  }, Q = h.createElement(ei, { triggerRef: I, popper: h.createElement("div", { ref: E, onMouseEnter: Z, onMouseLeave: X }, p), popperRef: E, placement: "right-start", isVisible: _, onDocumentKeyDown: K, zIndex: b, appendTo: P?.current });
  return h.createElement(
    h.Fragment,
    null,
    h.createElement(
      "li",
      Object.assign({ onMouseOver: M, className: j(gn.navItem, L && gn.modifiers.flyout, r), ref: I }, B),
      h.createElement(bc.Consumer, null, (me) => h.isValidElement(t) ? V(me, t) : q(me))
    ),
    p && Q
  );
};
qh.displayName = "NavItem";
const Rt = (e) => {
  var { children: t, className: n = "", isVisited: r = !1 } = e, i = se(e, ["children", "className", "isVisited"]);
  return h.createElement("div", Object.assign({}, i, { className: j(Vd.content, r && Vd.modifiers.visited, n) }), t);
};
Rt.displayName = "TextContent";
var Qt;
(function(e) {
  e.h1 = "h1", e.h2 = "h2", e.h3 = "h3", e.h4 = "h4", e.h5 = "h5", e.h6 = "h6", e.p = "p", e.a = "a", e.small = "small", e.blockquote = "blockquote", e.pre = "pre";
})(Qt || (Qt = {}));
const tt = (e) => {
  var { children: t = null, className: n = "", component: r = Qt.p, isVisitedLink: i = !1, ouiaId: s, ouiaSafe: o = !0 } = e, l = se(e, ["children", "className", "component", "isVisitedLink", "ouiaId", "ouiaSafe"]);
  const c = r, d = za(tt.displayName, s, o);
  return h.createElement(c, Object.assign({}, d, l, { "data-pf-content": !0, className: j(i && r === Qt.a && Vd.modifiers.visited, n) }), t);
};
tt.displayName = "Text";
var vf;
(function(e) {
  e.ul = "ul", e.ol = "ol", e.dl = "dl";
})(vf || (vf = {}));
const H0 = (e) => {
  var { children: t = null, className: n = "", component: r = vf.ul, isPlain: i = !1 } = e, s = se(e, ["children", "className", "component", "isPlain"]);
  const o = r;
  return h.createElement(o, Object.assign({}, s, { className: j(i && Vd.modifiers.plain, n) }), t);
};
H0.displayName = "TextList";
var yf;
(function(e) {
  e.li = "li", e.dt = "dt", e.dd = "dd";
})(yf || (yf = {}));
const z0 = (e) => {
  var { children: t = null, className: n = "", component: r = yf.li } = e, i = se(e, ["children", "className", "component"]);
  const s = r;
  return h.createElement(s, Object.assign({}, i, { className: j(n) }), t);
};
z0.displayName = "TextListItem";
const q0 = (e) => {
  var { className: t = "", children: n, stickyOnBreakpoint: r, hasShadowTop: i = !1, hasShadowBottom: s = !1, hasOverflowScroll: o = !1, "aria-label": l } = e, c = se(e, ["className", "children", "stickyOnBreakpoint", "hasShadowTop", "hasShadowBottom", "hasOverflowScroll", "aria-label"]);
  const { height: d, getVerticalBreakpoint: u } = h.useContext(Fi);
  return h.useEffect(() => {
    o && !l && console.warn("PageGroup: An accessible aria-label is required when hasOverflowScroll is set to true.");
  }, [o, l]), h.createElement("div", Object.assign({}, c, { className: j(kt.pageMainGroup, pt(r, kt, "sticky-", u(d), !0), i && kt.modifiers.shadowTop, s && kt.modifiers.shadowBottom, o && kt.modifiers.overflowScroll, t) }, o && { tabIndex: 0, role: "region", "aria-label": l }), n);
};
q0.displayName = "PageGroup";
var kv;
(function(e) {
  e.vertical = "vertical", e.horizontal = "horizontal";
})(kv || (kv = {}));
let zu = class extends h.Component {
  constructor(t) {
    super(t), this.mainRef = h.createRef(), this.pageRef = h.createRef(), this.observer = () => {
    }, this.getWindowWidth = () => wn ? this.pageRef.current ? this.pageRef.current.clientWidth : window.innerWidth : 1200, this.isMobile = () => (
      // eslint-disable-next-line radix
      this.getWindowWidth() < Number.parseInt(lh.value, 10)
    ), this.resize = (s) => {
      var o;
      const { onPageResize: l } = this.props, c = this.isMobile();
      if (l && l(s, { mobileView: c, windowSize: this.getWindowWidth() }), c !== this.state.mobileView && this.setState({ mobileView: c }), !((o = this.pageRef) === null || o === void 0) && o.current) {
        const d = this.pageRef.current.clientWidth, u = this.pageRef.current.clientHeight;
        this.state.width !== d && this.setState({ width: d }), this.state.height !== u && this.setState({ height: u });
      }
    }, this.handleResize = ch(this.resize, 250), this.handleMainClick = () => {
      this.isMobile() && this.state.mobileIsSidebarOpen && this.mainRef.current && this.setState({ mobileIsSidebarOpen: !1 });
    }, this.onSidebarToggleMobile = () => {
      this.setState((s) => ({
        mobileIsSidebarOpen: !s.mobileIsSidebarOpen
      }));
    }, this.onSidebarToggleDesktop = () => {
      this.setState((s) => ({
        desktopIsSidebarOpen: !s.desktopIsSidebarOpen
      }));
    };
    const { isManagedSidebar: n, defaultManagedSidebarIsOpen: r } = t, i = n ? r : !0;
    this.state = {
      desktopIsSidebarOpen: i,
      mobileIsSidebarOpen: !1,
      mobileView: !1,
      width: null,
      height: null
    };
  }
  componentDidMount() {
    const { isManagedSidebar: t, onPageResize: n } = this.props;
    if (t || n) {
      this.observer = tl(this.pageRef.current, this.handleResize);
      const r = this.mainRef.current;
      r && (r.addEventListener("mousedown", this.handleMainClick), r.addEventListener("touchstart", this.handleMainClick)), this.resize();
    }
  }
  componentWillUnmount() {
    const { isManagedSidebar: t, onPageResize: n } = this.props;
    if (t || n) {
      this.observer();
      const r = this.mainRef.current;
      r && (r.removeEventListener("mousedown", this.handleMainClick), r.removeEventListener("touchstart", this.handleMainClick));
    }
  }
  render() {
    const t = this.props, {
      breadcrumb: n,
      isBreadcrumbWidthLimited: r,
      className: i,
      children: s,
      header: o,
      sidebar: l,
      notificationDrawer: c,
      isNotificationDrawerExpanded: d,
      onNotificationDrawerExpand: u,
      drawerDefaultSize: p,
      drawerMinSize: m,
      drawerMaxSize: f,
      isTertiaryNavWidthLimited: g,
      skipToContent: b,
      role: v,
      mainContainerId: y,
      isManagedSidebar: C,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      defaultManagedSidebarIsOpen: S,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onPageResize: P,
      getBreakpoint: w,
      getVerticalBreakpoint: A,
      mainAriaLabel: k,
      mainTabIndex: T,
      mainComponent: O,
      tertiaryNav: I,
      isTertiaryNavGrouped: _,
      isBreadcrumbGrouped: E,
      additionalGroupedContent: L,
      groupProps: F,
      breadcrumbProps: R
    } = t, M = se(t, ["breadcrumb", "isBreadcrumbWidthLimited", "className", "children", "header", "sidebar", "notificationDrawer", "isNotificationDrawerExpanded", "onNotificationDrawerExpand", "drawerDefaultSize", "drawerMinSize", "drawerMaxSize", "isTertiaryNavWidthLimited", "skipToContent", "role", "mainContainerId", "isManagedSidebar", "defaultManagedSidebarIsOpen", "onPageResize", "getBreakpoint", "getVerticalBreakpoint", "mainAriaLabel", "mainTabIndex", "mainComponent", "tertiaryNav", "isTertiaryNavGrouped", "isBreadcrumbGrouped", "additionalGroupedContent", "groupProps", "breadcrumbProps"]), { mobileView: U, mobileIsSidebarOpen: K, desktopIsSidebarOpen: G, width: N, height: $ } = this.state, q = {
      isManagedSidebar: C,
      onSidebarToggle: U ? this.onSidebarToggleMobile : this.onSidebarToggleDesktop,
      isSidebarOpen: U ? K : G,
      width: N,
      height: $,
      getBreakpoint: w,
      getVerticalBreakpoint: A
    };
    let V = null;
    I && g ? V = h.createElement(
      "div",
      { className: j(kt.pageMainNav, kt.modifiers.limitWidth) },
      h.createElement("div", { className: j(kt.pageMainBody) }, I)
    ) : I && (V = h.createElement("div", { className: j(kt.pageMainNav) }, I));
    const B = n ? h.createElement("section", { className: j(kt.pageMainBreadcrumb, r && kt.modifiers.limitWidth, pt(R?.stickyOnBreakpoint, kt, "sticky-", A($), !0)) }, r ? h.createElement("div", { className: j(kt.pageMainBody) }, n) : n) : null, X = _ || E || L ? h.createElement(
      q0,
      Object.assign({}, F),
      _ && V,
      E && B,
      L
    ) : null, Q = O, ie = h.createElement(
      Q,
      { ref: this.mainRef, role: v, id: y, className: j(kt.pageMain), tabIndex: T, "aria-label": k },
      X,
      !_ && V,
      !E && B,
      s
    ), me = h.createElement(Fh, { defaultSize: p, minSize: m, maxSize: f }, c);
    return h.createElement(
      oA,
      { value: q },
      h.createElement(
        "div",
        Object.assign({ ref: this.pageRef }, M, { className: j(kt.page, N !== null && $ !== null && "pf-m-resize-observer", N !== null && `pf-m-breakpoint-${w(N)}`, $ !== null && `pf-m-height-breakpoint-${A($)}`, i) }),
        b,
        o,
        l,
        c && h.createElement(
          "div",
          { className: j(kt.pageDrawer) },
          h.createElement(
            Nh,
            { isExpanded: d, onExpand: (ee) => u(ee) },
            h.createElement(
              Dh,
              { panelContent: me },
              h.createElement(Mh, null, ie)
            )
          )
        ),
        !c && ie
      )
    );
  }
};
zu.displayName = "Page";
zu.defaultProps = {
  isManagedSidebar: !1,
  isBreadcrumbWidthLimited: !1,
  defaultManagedSidebarIsOpen: !0,
  mainTabIndex: -1,
  isNotificationDrawerExpanded: !1,
  onNotificationDrawerExpand: () => null,
  mainComponent: "main",
  getBreakpoint: pS,
  getVerticalBreakpoint: uS
};
const G0 = (e) => {
  var { children: t, className: n, usePageInsets: r, isFilled: i } = e, s = se(e, ["children", "className", "usePageInsets", "isFilled"]);
  return h.createElement("div", Object.assign({ className: j(kt.pageSidebarBody, r && kt.modifiers.pageInsets, i === !1 && kt.modifiers.noFill, i === !0 && kt.modifiers.fill, n) }, s), t);
};
G0.displayName = "PageSidebarBody";
var Cr;
(function(e) {
  e.default = "default", e.light = "light", e.dark = "dark", e.darker = "darker";
})(Cr || (Cr = {}));
var fi;
(function(e) {
  e.default = "default", e.nav = "nav", e.subNav = "subnav", e.breadcrumb = "breadcrumb", e.tabs = "tabs", e.wizard = "wizard";
})(fi || (fi = {}));
const dA = {
  [fi.default]: kt.pageMainSection,
  [fi.nav]: kt.pageMainNav,
  [fi.subNav]: kt.pageMainSubnav,
  [fi.breadcrumb]: kt.pageMainBreadcrumb,
  [fi.tabs]: kt.pageMainTabs,
  [fi.wizard]: kt.pageMainWizard
}, uA = {
  [Cr.default]: "",
  [Cr.light]: kt.modifiers.light,
  [Cr.dark]: kt.modifiers.dark_200,
  [Cr.darker]: kt.modifiers.dark_100
}, Te = (e) => {
  var { className: t = "", children: n, variant: r = "default", type: i = "default", padding: s, isFilled: o, isWidthLimited: l = !1, isCenterAligned: c = !1, stickyOnBreakpoint: d, hasShadowTop: u = !1, hasShadowBottom: p = !1, hasOverflowScroll: m = !1, "aria-label": f, component: g = "section" } = e, b = se(e, ["className", "children", "variant", "type", "padding", "isFilled", "isWidthLimited", "isCenterAligned", "stickyOnBreakpoint", "hasShadowTop", "hasShadowBottom", "hasOverflowScroll", "aria-label", "component"]);
  const { height: v, getVerticalBreakpoint: y } = h.useContext(Fi);
  h.useEffect(() => {
    m && !f && console.warn("PageSection: An accessible aria-label is required when hasOverflowScroll is set to true.");
  }, [m, f]);
  const C = g;
  return h.createElement(
    C,
    Object.assign({}, b, { className: j(dA[i], pt(s, kt), pt(d, kt, "sticky-", y(v), !0), uA[r], o === !1 && kt.modifiers.noFill, o === !0 && kt.modifiers.fill, l && kt.modifiers.limitWidth, l && c && i !== fi.subNav && kt.modifiers.alignCenter, u && kt.modifiers.shadowTop, p && kt.modifiers.shadowBottom, m && kt.modifiers.overflowScroll, t) }, m && { tabIndex: 0 }, { "aria-label": f }),
    l && h.createElement("div", { className: j(kt.pageMainBody) }, n),
    !l && n
  );
};
Te.displayName = "PageSection";
const W0 = (e) => {
  var { children: t, isSidebarOpen: n = !0, onSidebarToggle: r = () => {
  }, id: i = "nav-toggle" } = e, s = se(e, ["children", "isSidebarOpen", "onSidebarToggle", "id"]);
  return h.createElement($0, null, ({ isManagedSidebar: o, onSidebarToggle: l, isSidebarOpen: c }) => {
    const d = o ? l : r, u = o ? c : n;
    return h.createElement(z, Object.assign({ id: i, onClick: d, "aria-label": "Side navigation toggle", "aria-expanded": u ? "true" : "false", variant: xe.plain }, s), t);
  });
};
W0.displayName = "PageToggleButton";
const Gh = ({ firstIndex: e = 0, lastIndex: t = 0, itemCount: n = 0, itemsTitle: r = "items", ofWord: i = "of" }) => h.createElement(
  h.Fragment,
  null,
  h.createElement(
    "b",
    null,
    e,
    " - ",
    t
  ),
  " ",
  i,
  " ",
  h.createElement("b", null, n),
  " ",
  r
);
Gh.displayName = "ToggleTemplate";
const ia = {
  button: "pf-v5-c-button",
  dirRtl: "pf-v5-m-dir-rtl",
  formControl: "pf-v5-c-form-control",
  menuToggle: "pf-v5-c-menu-toggle",
  modifiers: {
    bottom: "pf-m-bottom",
    static: "pf-m-static",
    first: "pf-m-first",
    last: "pf-m-last",
    sticky: "pf-m-sticky",
    compact: "pf-m-compact",
    pageInsets: "pf-m-page-insets",
    displaySummary: "pf-m-display-summary",
    displayFull: "pf-m-display-full",
    insetNone: "pf-m-inset-none",
    insetSm: "pf-m-inset-sm",
    insetMd: "pf-m-inset-md",
    insetLg: "pf-m-inset-lg",
    insetXl: "pf-m-inset-xl",
    inset_2xl: "pf-m-inset-2xl",
    displaySummaryOnSm: "pf-m-display-summary-on-sm",
    displayFullOnSm: "pf-m-display-full-on-sm",
    insetNoneOnSm: "pf-m-inset-none-on-sm",
    insetSmOnSm: "pf-m-inset-sm-on-sm",
    insetMdOnSm: "pf-m-inset-md-on-sm",
    insetLgOnSm: "pf-m-inset-lg-on-sm",
    insetXlOnSm: "pf-m-inset-xl-on-sm",
    inset_2xlOnSm: "pf-m-inset-2xl-on-sm",
    displaySummaryOnMd: "pf-m-display-summary-on-md",
    displayFullOnMd: "pf-m-display-full-on-md",
    insetNoneOnMd: "pf-m-inset-none-on-md",
    insetSmOnMd: "pf-m-inset-sm-on-md",
    insetMdOnMd: "pf-m-inset-md-on-md",
    insetLgOnMd: "pf-m-inset-lg-on-md",
    insetXlOnMd: "pf-m-inset-xl-on-md",
    inset_2xlOnMd: "pf-m-inset-2xl-on-md",
    displaySummaryOnLg: "pf-m-display-summary-on-lg",
    displayFullOnLg: "pf-m-display-full-on-lg",
    insetNoneOnLg: "pf-m-inset-none-on-lg",
    insetSmOnLg: "pf-m-inset-sm-on-lg",
    insetMdOnLg: "pf-m-inset-md-on-lg",
    insetLgOnLg: "pf-m-inset-lg-on-lg",
    insetXlOnLg: "pf-m-inset-xl-on-lg",
    inset_2xlOnLg: "pf-m-inset-2xl-on-lg",
    displaySummaryOnXl: "pf-m-display-summary-on-xl",
    displayFullOnXl: "pf-m-display-full-on-xl",
    insetNoneOnXl: "pf-m-inset-none-on-xl",
    insetSmOnXl: "pf-m-inset-sm-on-xl",
    insetMdOnXl: "pf-m-inset-md-on-xl",
    insetLgOnXl: "pf-m-inset-lg-on-xl",
    insetXlOnXl: "pf-m-inset-xl-on-xl",
    inset_2xlOnXl: "pf-m-inset-2xl-on-xl",
    displaySummaryOn_2xl: "pf-m-display-summary-on-2xl",
    displayFullOn_2xl: "pf-m-display-full-on-2xl",
    insetNoneOn_2xl: "pf-m-inset-none-on-2xl",
    insetSmOn_2xl: "pf-m-inset-sm-on-2xl",
    insetMdOn_2xl: "pf-m-inset-md-on-2xl",
    insetLgOn_2xl: "pf-m-inset-lg-on-2xl",
    insetXlOn_2xl: "pf-m-inset-xl-on-2xl",
    inset_2xlOn_2xl: "pf-m-inset-2xl-on-2xl"
  },
  pagination: "pf-v5-c-pagination",
  paginationNav: "pf-v5-c-pagination__nav",
  paginationNavControl: "pf-v5-c-pagination__nav-control",
  paginationNavPageSelect: "pf-v5-c-pagination__nav-page-select",
  paginationTotalItems: "pf-v5-c-pagination__total-items",
  themeDark: "pf-v5-theme-dark"
};
class Vo extends h.Component {
  constructor(t) {
    super(t), this.handleNewPage = (n, r) => {
      const { perPage: i, onSetPage: s } = this.props, o = (r - 1) * i, l = r * i;
      return s(n, r, i, o, l);
    }, this.state = { userInputPage: this.props.page };
  }
  static parseInteger(t, n) {
    let r = Number.parseInt(t, 10);
    return Number.isNaN(r) || (r = r > n ? n : r, r = r < 1 ? 1 : r), r;
  }
  onChange(t, n) {
    const r = Vo.parseInteger(t.currentTarget.value, n);
    this.setState({ userInputPage: Number.isNaN(r) ? t.currentTarget.value : r });
  }
  onKeyDown(t, n, r, i) {
    const s = [
      "Tab",
      "Backspace",
      "Delete",
      "ArrowLeft",
      "ArrowRight",
      "Home",
      "End",
      "ArrowUp",
      "ArrowDown"
    ];
    if (t.key === cn.Enter) {
      const o = Vo.parseInteger(this.state.userInputPage, r);
      i(t, Number.isNaN(o) ? n : o), this.handleNewPage(t, Number.isNaN(o) ? n : o);
    } else !/^\d*$/.test(t.key) && !s.includes(t.key) && t.preventDefault();
  }
  componentDidUpdate(t) {
    this.props.page !== t.page && this.props.page <= this.props.lastPage && this.state.userInputPage !== this.props.page && this.setState({ userInputPage: this.props.page });
  }
  render() {
    const t = this.props, {
      page: n,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      perPage: r,
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      onSetPage: i,
      isDisabled: s,
      itemCount: o,
      lastPage: l,
      firstPage: c,
      pagesTitle: d,
      pagesTitlePlural: u,
      toLastPageAriaLabel: p,
      toNextPageAriaLabel: m,
      toFirstPageAriaLabel: f,
      toPreviousPageAriaLabel: g,
      currPageAriaLabel: b,
      paginationAriaLabel: v,
      ofWord: y,
      onNextClick: C,
      onPreviousClick: S,
      onFirstClick: P,
      onLastClick: w,
      onPageInput: A,
      className: k,
      isCompact: T
    } = t, O = se(t, ["page", "perPage", "onSetPage", "isDisabled", "itemCount", "lastPage", "firstPage", "pagesTitle", "pagesTitlePlural", "toLastPageAriaLabel", "toNextPageAriaLabel", "toFirstPageAriaLabel", "toPreviousPageAriaLabel", "currPageAriaLabel", "paginationAriaLabel", "ofWord", "onNextClick", "onPreviousClick", "onFirstClick", "onLastClick", "onPageInput", "className", "isCompact"]), { userInputPage: I } = this.state;
    return h.createElement(
      "nav",
      Object.assign({ className: j(ia.paginationNav, k), "aria-label": v }, O),
      !T && h.createElement(
        "div",
        { className: j(ia.paginationNavControl, ia.modifiers.first) },
        h.createElement(
          z,
          { variant: xe.plain, isDisabled: s || n === c || n === 0, "aria-label": f, "data-action": "first", onClick: (_) => {
            P(_, 1), this.handleNewPage(_, 1), this.setState({ userInputPage: 1 });
          } },
          h.createElement(M_, null)
        )
      ),
      h.createElement(
        "div",
        { className: ia.paginationNavControl },
        h.createElement(
          z,
          { variant: xe.plain, isDisabled: s || n === c || n === 0, "data-action": "previous", onClick: (_) => {
            const E = n - 1 >= 1 ? n - 1 : 1;
            S(_, E), this.handleNewPage(_, E), this.setState({ userInputPage: E });
          }, "aria-label": g },
          h.createElement(Hs, null)
        )
      ),
      !T && h.createElement(
        "div",
        { className: ia.paginationNavPageSelect },
        h.createElement(gt, { "aria-label": b, type: "number", isDisabled: s || o && n === c && n === l && o >= 0 || n === 0, min: l <= 0 && c <= 0 ? 0 : 1, max: l, value: I, onKeyDown: (_) => this.onKeyDown(_, n, l, A), onChange: (_) => this.onChange(_, l) }),
        (o || o === 0) && h.createElement(
          "span",
          { "aria-hidden": "true" },
          y,
          " ",
          d ? l2(l, d, u) : l
        )
      ),
      h.createElement(
        "div",
        { className: ia.paginationNavControl },
        h.createElement(
          z,
          { variant: xe.plain, isDisabled: s || n === l, "aria-label": m, "data-action": "next", onClick: (_) => {
            const E = n + 1 <= l ? n + 1 : l;
            C(_, E), this.handleNewPage(_, E), this.setState({ userInputPage: E });
          } },
          h.createElement(Nn, null)
        )
      ),
      !T && h.createElement(
        "div",
        { className: j(ia.paginationNavControl, ia.modifiers.last) },
        h.createElement(
          z,
          { variant: xe.plain, isDisabled: s || n === l, "aria-label": p, "data-action": "last", onClick: (_) => {
            w(_, l), this.handleNewPage(_, l), this.setState({ userInputPage: l });
          } },
          h.createElement($_, null)
        )
      )
    );
  }
}
Vo.displayName = "Navigation";
Vo.defaultProps = {
  className: "",
  isDisabled: !1,
  isCompact: !1,
  lastPage: 0,
  firstPage: 0,
  pagesTitle: "",
  pagesTitlePlural: "",
  toLastPageAriaLabel: "Go to last page",
  toNextPageAriaLabel: "Go to next page",
  toFirstPageAriaLabel: "Go to first page",
  toPreviousPageAriaLabel: "Go to previous page",
  currPageAriaLabel: "Current page",
  paginationAriaLabel: "Pagination",
  ofWord: "of",
  onNextClick: () => {
  },
  onPreviousClick: () => {
  },
  onFirstClick: () => {
  },
  onLastClick: () => {
  },
  onPageInput: () => {
  }
};
const X0 = ({
  className: e,
  widgetId: t,
  page: n,
  itemCount: r,
  isDisabled: i = !1,
  minWidth: s,
  dropDirection: o = "down",
  perPageOptions: l = [],
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  itemsPerPageTitle: c = "Items per page",
  perPageSuffix: d = "per page",
  optionsToggleAriaLabel: u,
  ofWord: p = "of",
  perPage: m = 0,
  firstIndex: f = 0,
  lastIndex: g = 0,
  isLastFullPageShown: b = !1,
  itemsTitle: v = "",
  toggleTemplate: y,
  onPerPageSelect: C = () => null,
  containerRef: S,
  appendTo: P
}) => {
  const [w, A] = h.useState(!1), k = h.useRef(null), T = h.useRef(null), O = () => {
    A((M) => !M);
  }, I = () => {
    var M;
    A((U) => !U), (M = k.current) === null || M === void 0 || M.focus();
  }, _ = (M, U) => {
    let K = n;
    for (; Math.ceil(r / U) < K; )
      K--;
    if (b && r / U !== K)
      for (; K > 1 && r - U * K < 0; )
        K--;
    const G = (K - 1) * U, N = K * U;
    return C(M, U, K, G, N);
  };
  h.useEffect(() => {
    const M = (K) => {
      var G, N, $;
      (w && (!((G = T.current) === null || G === void 0) && G.contains(K.target)) || !((N = k.current) === null || N === void 0) && N.contains(K.target)) && (K.key === "Escape" || K.key === "Tab") && (A(!1), ($ = k.current) === null || $ === void 0 || $.focus());
    }, U = (K) => {
      var G, N, $;
      w && (!((G = k.current) === null || G === void 0) && G.contains(K.target)) && setTimeout(() => {
        var q;
        const V = (q = T?.current) === null || q === void 0 ? void 0 : q.querySelector("li button:not(:disabled)");
        V && V.focus();
      }, 0), w && !(!((N = k?.current) === null || N === void 0) && N.contains(K.target)) && !(!(($ = T.current) === null || $ === void 0) && $.contains(K.target)) && A(!1);
    };
    return window.addEventListener("keydown", M), window.addEventListener("click", U), () => {
      window.removeEventListener("keydown", M), window.removeEventListener("click", U);
    };
  }, [w, T]);
  const E = () => l.map(({ value: M, title: U }) => h.createElement(
    rl,
    { key: M, "data-action": `per-page-${M}`, isSelected: m === M, onClick: (K) => _(K, M) },
    U,
    ` ${d}`
  )), L = h.createElement(
    ut,
    Object.assign({ ref: k, onClick: O }, u && { "aria-label": u }, { isDisabled: i || r && r <= 0, isExpanded: w }, t && { id: `${t}-toggle` }, { variant: "plainText", "aria-haspopup": "listbox" }),
    y && typeof y == "string" && dh(y, { firstIndex: f, lastIndex: g, ofWord: p, itemCount: r, itemsTitle: v }),
    y && typeof y != "string" && y({
      firstIndex: f,
      lastIndex: g,
      ofWord: p,
      itemCount: r,
      itemsTitle: v
    }),
    !y && h.createElement(Gh, { firstIndex: f, lastIndex: g, ofWord: p, itemCount: r, itemsTitle: v })
  ), F = h.createElement(
    rs,
    { className: j(e), onSelect: I, ref: T },
    h.createElement(
      al,
      null,
      h.createElement(il, null, E())
    )
  ), R = P ?? (S?.current || void 0);
  return h.createElement(ei, { trigger: L, triggerRef: k, popper: F, popperRef: T, isVisible: w, direction: o, appendTo: R, minWidth: s !== void 0 ? s : "revert" });
};
X0.displayName = "PaginationOptionsMenu";
const Tv = {
  name: "--pf-v5-c-pagination__nav-page-select--c-form-control--width-chars",
  value: "2",
  var: "var(--pf-v5-c-pagination__nav-page-select--c-form-control--width-chars)"
};
var ql;
(function(e) {
  e.bottom = "bottom", e.top = "top";
})(ql || (ql = {}));
const Iv = [
  {
    title: "10",
    value: 10
  },
  {
    title: "20",
    value: 20
  },
  {
    title: "50",
    value: 50
  },
  {
    title: "100",
    value: 100
  }
], pA = (e, t) => {
  if (!t)
    return;
  const n = String(e).length;
  n >= 3 ? t.style.setProperty(Tv.name, `${n}`) : t.style.setProperty(Tv.name, "2");
}, Wh = (e) => {
  var { children: t, className: n = "", variant: r = ql.top, isDisabled: i = !1, isCompact: s = !1, isSticky: o = !1, isStatic: l = !1, dropDirection: c, toggleTemplate: d, perPage: u = Iv[0].value, titles: p = {
    items: "",
    page: "",
    pages: "",
    itemsPerPage: "Items per page",
    perPageSuffix: "per page",
    toFirstPageAriaLabel: "Go to first page",
    toPreviousPageAriaLabel: "Go to previous page",
    toLastPageAriaLabel: "Go to last page",
    toNextPageAriaLabel: "Go to next page",
    optionsToggleAriaLabel: "",
    currPageAriaLabel: "Current page",
    paginationAriaLabel: "Pagination",
    ofWord: "of"
  }, firstPage: m = 1, page: f = 1, offset: g = null, isLastFullPageShown: b = !1, itemsStart: v = null, itemsEnd: y = null, itemCount: C, perPageOptions: S = Iv, widgetId: P = "options-menu", onSetPage: w = () => {
  }, onPerPageSelect: A = () => {
  }, onFirstClick: k = () => {
  }, onPreviousClick: T = () => {
  }, onNextClick: O = () => {
  }, onPageInput: I = () => {
  }, onLastClick: _ = () => {
  }, ouiaId: E, ouiaSafe: L = !0, usePageInsets: F, inset: R, menuAppendTo: M } = e, U = se(e, ["children", "className", "variant", "isDisabled", "isCompact", "isSticky", "isStatic", "dropDirection", "toggleTemplate", "perPage", "titles", "firstPage", "page", "offset", "isLastFullPageShown", "itemsStart", "itemsEnd", "itemCount", "perPageOptions", "widgetId", "onSetPage", "onPerPageSelect", "onFirstClick", "onPreviousClick", "onNextClick", "onPageInput", "onLastClick", "ouiaId", "ouiaSafe", "usePageInsets", "inset", "menuAppendTo"]);
  const K = h.useRef(null), G = h.useRef(null), N = () => (
    // when itemCount is not known let's set lastPage as page+1 as we don't know the total count
    C || C === 0 ? Math.ceil(C / u) || 0 : q + 1
  );
  h.useEffect(() => {
    const Q = K.current;
    pA(N(), Q);
  }, [u, C]);
  const $ = c || (r === "bottom" && !l ? "up" : "down");
  let q = f;
  g !== null && (v = g + 1, q = Math.max(Math.ceil(v / u), 1), y = g + u);
  const V = N();
  let B = (q - 1) * u + 1, Z = q * u;
  (C || C === 0) && (B = C <= 0 ? 0 : (q - 1) * u + 1, q < m && C > 0 ? q = m : q > V && (q = V), C >= 0 && (Z = q === V || C === 0 ? C : q * u));
  const X = {
    firstIndex: B,
    lastIndex: Z,
    itemCount: C,
    itemsTitle: p.items,
    ofWord: p.ofWord
  };
  return h.createElement(
    "div",
    Object.assign({ ref: K, className: j(ia.pagination, r === ql.bottom && ia.modifiers.bottom, F && ia.modifiers.pageInsets, pt(R, ia), s && ia.modifiers.compact, l && ia.modifiers.static, o && ia.modifiers.sticky, n) }, P && { id: `${P}-${r}-pagination` }, za(Wh.displayName, E, L, r), U),
    r === ql.top && h.createElement(
      "div",
      { className: j(ia.paginationTotalItems) },
      d && typeof d == "string" && dh(d, X),
      d && typeof d != "string" && d(X),
      !d && h.createElement(Gh, { firstIndex: B, lastIndex: Z, itemCount: C, itemsTitle: p.items, ofWord: p.ofWord })
    ),
    S && S.length > 0 && h.createElement(X0, { itemsPerPageTitle: p.itemsPerPage, perPageSuffix: p.perPageSuffix, itemsTitle: s ? "" : p.items, optionsToggleAriaLabel: p.optionsToggleAriaLabel, perPageOptions: S, firstIndex: v !== null ? v : B, lastIndex: y !== null ? y : Z, ofWord: p.ofWord, isLastFullPageShown: b, itemCount: C, page: q, perPage: u, lastPage: V, onPerPageSelect: A, dropDirection: $, widgetId: `${P}-${r}`, toggleTemplate: d, isDisabled: i, containerRef: G, appendTo: M }),
    h.createElement(Vo, { pagesTitle: p.page, pagesTitlePlural: p.pages, toLastPageAriaLabel: p.toLastPageAriaLabel, toPreviousPageAriaLabel: p.toPreviousPageAriaLabel, toNextPageAriaLabel: p.toNextPageAriaLabel, toFirstPageAriaLabel: p.toFirstPageAriaLabel, currPageAriaLabel: p.currPageAriaLabel, paginationAriaLabel: p.paginationAriaLabel, ofWord: p.ofWord, page: C && C <= 0 ? 0 : q, perPage: u, itemCount: C, firstPage: v !== null ? v : 1, lastPage: V, onSetPage: w, onFirstClick: k, onPreviousClick: T, onNextClick: O, onLastClick: _, onPageInput: I, isDisabled: i, isCompact: s }),
    t
  );
};
Wh.displayName = "Pagination";
const br = {
  dirRtl: "pf-v5-m-dir-rtl",
  modifiers: {
    reverse: "pf-m-reverse",
    off: "pf-m-off",
    on: "pf-m-on"
  },
  switch: "pf-v5-c-switch",
  switchInput: "pf-v5-c-switch__input",
  switchLabel: "pf-v5-c-switch__label",
  switchToggle: "pf-v5-c-switch__toggle",
  switchToggleIcon: "pf-v5-c-switch__toggle-icon",
  themeDark: "pf-v5-theme-dark"
};
class Je extends h.Component {
  constructor(t) {
    super(t), !t.label && !t["aria-label"] && console.error("Switch: Switch requires either a label or an aria-label to be specified"), this.id = t.id || Ti(), this.state = {
      ouiaStateId: qa(Je.displayName)
    };
  }
  render() {
    const t = this.props, {
      // eslint-disable-next-line @typescript-eslint/no-unused-vars
      id: n,
      className: r,
      label: i,
      labelOff: s,
      isChecked: o,
      defaultChecked: l,
      hasCheckIcon: c,
      isDisabled: d,
      onChange: u,
      isReversed: p,
      ouiaId: m,
      ouiaSafe: f
    } = t, g = se(t, ["id", "className", "label", "labelOff", "isChecked", "defaultChecked", "hasCheckIcon", "isDisabled", "onChange", "isReversed", "ouiaId", "ouiaSafe"]), b = g["aria-label"] === "";
    return h.createElement(
      "label",
      Object.assign({ className: j(br.switch, p && br.modifiers.reverse, r), htmlFor: this.id }, Gn(Je.displayName, m !== void 0 ? m : this.state.ouiaStateId, f)),
      h.createElement("input", Object.assign({ id: this.id, className: j(br.switchInput), type: "checkbox", onChange: (v) => u(v, v.target.checked) }, l !== void 0 ? { defaultChecked: l } : { checked: o }, { disabled: d, "aria-labelledby": b ? `${this.id}-${o !== !0 ? "off" : "on"}` : null }, g)),
      i !== void 0 ? h.createElement(
        h.Fragment,
        null,
        h.createElement("span", { className: j(br.switchToggle) }, c && h.createElement(
          "span",
          { className: j(br.switchToggleIcon), "aria-hidden": "true" },
          h.createElement(Rs, null)
        )),
        h.createElement("span", { className: j(br.switchLabel, br.modifiers.on), id: b ? `${this.id}-on` : null, "aria-hidden": "true" }, i),
        h.createElement("span", { className: j(br.switchLabel, br.modifiers.off), id: b ? `${this.id}-off` : null, "aria-hidden": "true" }, s !== void 0 ? s : i)
      ) : h.createElement(
        "span",
        { className: j(br.switchToggle) },
        h.createElement(
          "div",
          { className: j(br.switchToggleIcon), "aria-hidden": "true" },
          h.createElement(Rs, null)
        )
      )
    );
  }
}
Je.displayName = "Switch";
Je.defaultProps = {
  isChecked: !0,
  isDisabled: !1,
  isReversed: !1,
  "aria-label": "",
  onChange: () => {
  }
};
const At = {
  button: "pf-v5-c-button",
  dirRtl: "pf-v5-m-dir-rtl",
  modifiers: {
    fill: "pf-m-fill",
    scrollable: "pf-m-scrollable",
    noBorderBottom: "pf-m-no-border-bottom",
    box: "pf-m-box",
    vertical: "pf-m-vertical",
    current: "pf-m-current",
    colorSchemeLight_300: "pf-m-color-scheme--light-300",
    expandable: "pf-m-expandable",
    nonExpandable: "pf-m-non-expandable",
    expandableOnSm: "pf-m-expandable-on-sm",
    nonExpandableOnSm: "pf-m-non-expandable-on-sm",
    expandableOnMd: "pf-m-expandable-on-md",
    nonExpandableOnMd: "pf-m-non-expandable-on-md",
    expandableOnLg: "pf-m-expandable-on-lg",
    nonExpandableOnLg: "pf-m-non-expandable-on-lg",
    expandableOnXl: "pf-m-expandable-on-xl",
    nonExpandableOnXl: "pf-m-non-expandable-on-xl",
    expandableOn_2xl: "pf-m-expandable-on-2xl",
    nonExpandableOn_2xl: "pf-m-non-expandable-on-2xl",
    expanded: "pf-m-expanded",
    secondary: "pf-m-secondary",
    pageInsets: "pf-m-page-insets",
    overflow: "pf-m-overflow",
    action: "pf-m-action",
    active: "pf-m-active",
    disabled: "pf-m-disabled",
    ariaDisabled: "pf-m-aria-disabled",
    insetNone: "pf-m-inset-none",
    insetSm: "pf-m-inset-sm",
    insetMd: "pf-m-inset-md",
    insetLg: "pf-m-inset-lg",
    insetXl: "pf-m-inset-xl",
    inset_2xl: "pf-m-inset-2xl",
    insetNoneOnSm: "pf-m-inset-none-on-sm",
    insetSmOnSm: "pf-m-inset-sm-on-sm",
    insetMdOnSm: "pf-m-inset-md-on-sm",
    insetLgOnSm: "pf-m-inset-lg-on-sm",
    insetXlOnSm: "pf-m-inset-xl-on-sm",
    inset_2xlOnSm: "pf-m-inset-2xl-on-sm",
    insetNoneOnMd: "pf-m-inset-none-on-md",
    insetSmOnMd: "pf-m-inset-sm-on-md",
    insetMdOnMd: "pf-m-inset-md-on-md",
    insetLgOnMd: "pf-m-inset-lg-on-md",
    insetXlOnMd: "pf-m-inset-xl-on-md",
    inset_2xlOnMd: "pf-m-inset-2xl-on-md",
    insetNoneOnLg: "pf-m-inset-none-on-lg",
    insetSmOnLg: "pf-m-inset-sm-on-lg",
    insetMdOnLg: "pf-m-inset-md-on-lg",
    insetLgOnLg: "pf-m-inset-lg-on-lg",
    insetXlOnLg: "pf-m-inset-xl-on-lg",
    inset_2xlOnLg: "pf-m-inset-2xl-on-lg",
    insetNoneOnXl: "pf-m-inset-none-on-xl",
    insetSmOnXl: "pf-m-inset-sm-on-xl",
    insetMdOnXl: "pf-m-inset-md-on-xl",
    insetLgOnXl: "pf-m-inset-lg-on-xl",
    insetXlOnXl: "pf-m-inset-xl-on-xl",
    inset_2xlOnXl: "pf-m-inset-2xl-on-xl",
    insetNoneOn_2xl: "pf-m-inset-none-on-2xl",
    insetSmOn_2xl: "pf-m-inset-sm-on-2xl",
    insetMdOn_2xl: "pf-m-inset-md-on-2xl",
    insetLgOn_2xl: "pf-m-inset-lg-on-2xl",
    insetXlOn_2xl: "pf-m-inset-xl-on-2xl",
    inset_2xlOn_2xl: "pf-m-inset-2xl-on-2xl"
  },
  tabs: "pf-v5-c-tabs",
  tabsAdd: "pf-v5-c-tabs__add",
  tabsItem: "pf-v5-c-tabs__item",
  tabsItemAction: "pf-v5-c-tabs__item-action",
  tabsItemActionIcon: "pf-v5-c-tabs__item-action-icon",
  tabsItemIcon: "pf-v5-c-tabs__item-icon",
  tabsItemText: "pf-v5-c-tabs__item-text",
  tabsLink: "pf-v5-c-tabs__link",
  tabsLinkToggleIcon: "pf-v5-c-tabs__link-toggle-icon",
  tabsList: "pf-v5-c-tabs__list",
  tabsScrollButton: "pf-v5-c-tabs__scroll-button",
  tabsToggle: "pf-v5-c-tabs__toggle",
  tabsToggleButton: "pf-v5-c-tabs__toggle-button",
  tabsToggleIcon: "pf-v5-c-tabs__toggle-icon",
  tabsToggleText: "pf-v5-c-tabs__toggle-text",
  themeDark: "pf-v5-theme-dark"
}, Xh = (e) => {
  var {
    children: t,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    tabContentRef: n,
    ouiaId: r,
    parentInnerRef: i,
    ouiaSafe: s
  } = e, o = se(e, ["children", "tabContentRef", "ouiaId", "parentInnerRef", "ouiaSafe"]);
  const l = o.href ? "a" : "button";
  return h.createElement(l, Object.assign({}, !o.href && { type: "button" }, { ref: i }, Gn(Xh.displayName, r, s), o), t);
};
Xh.displayName = "TabButton";
const qu = h.createContext({
  variant: "default",
  mountOnEnter: !1,
  unmountOnExit: !1,
  localActiveKey: "",
  uniqueId: "",
  handleTabClick: () => null,
  handleTabClose: void 0
}), mA = qu.Provider, fA = qu.Consumer, hA = (e) => {
  var { children: t, className: n, onClick: r, isDisabled: i, "aria-label": s = "Tab action", innerRef: o, ouiaId: l, ouiaSafe: c } = e, d = se(e, ["children", "className", "onClick", "isDisabled", "aria-label", "innerRef", "ouiaId", "ouiaSafe"]);
  return h.createElement(
    "span",
    { className: j(At.tabsItemAction, n) },
    h.createElement(
      z,
      Object.assign({ ref: o, type: "button", variant: "plain", "aria-label": s, onClick: r, isDisabled: i }, Gn(Yh.displayName, l, c), d),
      h.createElement("span", { className: j(At.tabsItemActionIcon) }, t)
    )
  );
}, Yh = h.forwardRef((e, t) => h.createElement(hA, Object.assign({}, e, { innerRef: t })));
Yh.displayName = "TabAction";
const gA = (e) => {
  var { title: t, eventKey: n, tabContentRef: r, id: i, tabContentId: s, className: o = "", ouiaId: l, isDisabled: c, isAriaDisabled: d, inoperableEvents: u = ["onClick", "onKeyPress"], href: p, innerRef: m, tooltip: f, closeButtonAriaLabel: g, isCloseDisabled: b = !1, actions: v } = e, y = se(e, ["title", "eventKey", "tabContentRef", "id", "tabContentId", "className", "ouiaId", "isDisabled", "isAriaDisabled", "inoperableEvents", "href", "innerRef", "tooltip", "closeButtonAriaLabel", "isCloseDisabled", "actions"]);
  const C = u.reduce((L, F) => Object.assign(Object.assign({}, L), { [F]: (R) => {
    R.preventDefault();
  } }), {}), { mountOnEnter: S, localActiveKey: P, unmountOnExit: w, uniqueId: A, handleTabClick: k, handleTabClose: T } = h.useContext(qu);
  let O = s ? `${s}` : `pf-tab-section-${n}-${i || A}`;
  (S || w) && n !== P && (O = void 0);
  const I = !p, _ = () => {
    if (c)
      return I ? null : -1;
    if (d)
      return null;
  }, E = h.createElement(Xh, Object.assign({ parentInnerRef: m, className: j(At.tabsLink, c && p && At.modifiers.disabled, d && At.modifiers.ariaDisabled), disabled: I ? c : null, "aria-disabled": c || d, tabIndex: _(), onClick: (L) => k(L, n, r) }, d ? C : null, { id: `pf-tab-${n}-${i || A}`, "aria-controls": O, tabContentRef: r, ouiaId: l, href: p, role: "tab", "aria-selected": n === P }, y), t);
  return h.createElement(
    "li",
    { className: j(At.tabsItem, n === P && At.modifiers.current, (T || v) && At.modifiers.action, (c || d) && At.modifiers.disabled, o), role: "presentation" },
    f ? h.createElement(Ht, Object.assign({}, f.props), E) : E,
    v && v,
    T !== void 0 && h.createElement(
      Yh,
      { "aria-label": g || "Close tab", onClick: (L) => T(L, n, r), isDisabled: b },
      h.createElement(fa, null)
    )
  );
}, Ee = h.forwardRef((e, t) => h.createElement(gA, Object.assign({ innerRef: t }, e)));
Ee.displayName = "Tab";
const bA = {
  name: "PlusIcon",
  height: 512,
  width: 448,
  svgPath: "M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z",
  yOffset: 0,
  xOffset: 0
}, Y0 = et(bA), Cf = {
  modifiers: {
    light_300: "pf-m-light-300",
    padding: "pf-m-padding"
  },
  tabContent: "pf-v5-c-tab-content",
  tabContentBody: "pf-v5-c-tab-content__body"
}, Ev = {
  default: "",
  light300: Cf.modifiers.light_300
}, vA = (e) => {
  var {
    id: t,
    activeKey: n,
    "aria-label": r,
    child: i,
    children: s,
    className: o,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    eventKey: l,
    innerRef: c,
    ouiaId: d,
    ouiaSafe: u
  } = e, p = se(e, ["id", "activeKey", "aria-label", "child", "children", "className", "eventKey", "innerRef", "ouiaId", "ouiaSafe"]);
  if (s || i) {
    let m;
    return r ? m = null : m = s ? `${t}` : `pf-tab-${i.props.eventKey}-${t}`, h.createElement(fA, null, ({ variant: f }) => h.createElement("section", Object.assign({ ref: c, hidden: s ? null : i.props.eventKey !== n, className: s ? j(Cf.tabContent, o, Ev[f]) : j(Cf.tabContent, i.props.className, Ev[f]), id: s ? t : `pf-tab-section-${i.props.eventKey}-${t}`, "aria-label": r, "aria-labelledby": m, role: "tabpanel", tabIndex: 0 }, Gn("TabContent", d, u), p), s || i.props.children));
  }
  return null;
}, vo = h.forwardRef((e, t) => h.createElement(vA, Object.assign({}, e, { innerRef: t }))), Pe = (e) => {
  var { children: t, className: n = "" } = e, r = se(e, ["children", "className"]);
  return h.createElement("span", Object.assign({ className: j(At.tabsItemText, n) }, r), t);
};
Pe.displayName = "TabTitleText";
const J0 = (e) => {
  var { className: t, overflowingTabs: n = [], showTabCount: r, defaultTitleText: i = "More", toggleAriaLabel: s, zIndex: o = 9999 } = e, l = se(e, ["className", "overflowingTabs", "showTabCount", "defaultTitleText", "toggleAriaLabel", "zIndex"]);
  const c = ne.useRef(), d = ne.useRef(), u = ne.useRef(), [p, m] = ne.useState(!1), { localActiveKey: f, handleTabClick: g } = ne.useContext(qu), b = () => {
    m(!1), d.current.focus();
  }, v = (O) => {
    var I;
    const _ = (I = c?.current) === null || I === void 0 ? void 0 : I.contains(O.target);
    p && _ && O.key === "Escape" && b();
  }, y = (O) => {
    var I, _;
    const E = !(!((I = c?.current) === null || I === void 0) && I.contains(O.target)), L = !(!((_ = d?.current) === null || _ === void 0) && _.contains(O.target));
    p && E && L && b();
  };
  ne.useEffect(() => (window.addEventListener("click", y), window.addEventListener("keydown", v), () => {
    window.removeEventListener("click", y), window.removeEventListener("keydown", v);
  }), [p, c, d]);
  const C = n.find((O) => O.eventKey === f), S = C?.title ? C.title : i, P = () => {
    m((O) => !O), setTimeout(() => {
      if (c?.current) {
        const O = c.current.querySelector("li > button,input:not(:disabled)");
        O && O.focus();
      }
    }, 0);
  }, w = ne.createElement(
    "li",
    Object.assign({ className: j(At.tabsItem, At.modifiers.overflow, C && At.modifiers.current, t), role: "presentation", ref: u }, l),
    ne.createElement(
      "button",
      { type: "button", className: j(At.tabsLink, p && At.modifiers.expanded), onClick: () => P(), "aria-label": s, "aria-haspopup": "menu", "aria-expanded": p, role: "tab", ref: d },
      ne.createElement(
        Pe,
        null,
        S,
        r && S === i && ` (${n.length})`
      ),
      ne.createElement(
        "span",
        { className: At.tabsLinkToggleIcon },
        ne.createElement(Nn, null)
      )
    )
  ), A = n.map((O) => ne.createElement(rl, { key: O.eventKey, itemId: O.eventKey, isSelected: f === O.eventKey }, O.title)), k = (O, I) => {
    b();
    const _ = n.find((E) => E.eventKey === I).tabContentRef;
    g(O, I, _);
  }, T = ne.createElement(
    rs,
    { ref: c, onSelect: (O, I) => k(O, I) },
    ne.createElement(
      al,
      null,
      ne.createElement(il, null, A)
    )
  );
  return ne.createElement(
    ne.Fragment,
    null,
    w,
    ne.createElement(ei, { triggerRef: d, popper: T, popperRef: c, isVisible: p, minWidth: "revert", appendTo: u.current, zIndex: o })
  );
};
J0.displayName = "OverflowTab";
var vc;
(function(e) {
  e.div = "div", e.nav = "nav";
})(vc || (vc = {}));
const yA = {
  default: "",
  light300: At.modifiers.colorSchemeLight_300
};
class Ka extends h.Component {
  constructor(t) {
    super(t), this.tabList = h.createRef(), this.leftScrollButtonRef = h.createRef(), this.direction = "ltr", this.scrollTimeout = null, this.countOverflowingElements = (n) => Array.from(n.children).filter((i) => !hi(n, i)).length, this.handleScrollButtons = () => {
      const { isOverflowHorizontal: n } = this.props;
      clearTimeout(this.scrollTimeout), this.scrollTimeout = setTimeout(() => {
        const r = this.tabList.current;
        let i = !0, s = !0, o = !1, l = 0;
        if (r && !this.props.isVertical && !n) {
          const c = !hi(r, r.firstChild), d = !hi(r, r.lastChild);
          o = c || d, i = !c, s = !d;
        }
        n && (l = this.countOverflowingElements(r)), this.setState({
          enableScrollButtons: o,
          disableBackScrollButton: i,
          disableForwardScrollButton: s,
          overflowingTabCount: l
        });
      }, 100);
    }, this.scrollBack = () => {
      if (this.tabList.current) {
        const n = this.tabList.current, r = Array.from(n.children);
        let i, s, o;
        for (o = 0; o < r.length && !i; o++)
          hi(n, r[o]) && (i = r[o], s = r[o - 1]);
        s && (this.direction === "ltr" ? n.scrollLeft -= s.scrollWidth : n.scrollLeft += s.scrollWidth);
      }
    }, this.scrollForward = () => {
      if (this.tabList.current) {
        const n = this.tabList.current, r = Array.from(n.children);
        let i, s;
        for (let o = r.length - 1; o >= 0 && !i; o--)
          hi(n, r[o]) && (i = r[o], s = r[o + 1]);
        s && (this.direction === "ltr" ? n.scrollLeft += s.scrollWidth : n.scrollLeft -= s.scrollWidth);
      }
    }, this.hideScrollButtons = () => {
      const { enableScrollButtons: n, renderScrollButtons: r, showScrollButtons: i } = this.state;
      !n && !i && r && this.setState({ renderScrollButtons: !1 });
    }, this.state = {
      enableScrollButtons: !1,
      showScrollButtons: !1,
      renderScrollButtons: !1,
      disableBackScrollButton: !0,
      disableForwardScrollButton: !0,
      shownKeys: this.props.defaultActiveKey !== void 0 ? [this.props.defaultActiveKey] : [this.props.activeKey],
      // only for mountOnEnter case
      uncontrolledActiveKey: this.props.defaultActiveKey,
      uncontrolledIsExpandedLocal: this.props.defaultIsExpanded,
      ouiaStateId: qa(Ka.displayName),
      overflowingTabCount: 0
    }, this.props.isVertical && this.props.expandable !== void 0 && !this.props.toggleAriaLabel && !this.props.toggleText && console.error("Tabs:", "toggleAriaLabel or the toggleText prop is required to make the toggle button accessible");
  }
  handleTabClick(t, n, r) {
    const { shownKeys: i } = this.state, { onSelect: s, defaultActiveKey: o } = this.props;
    o !== void 0 ? this.setState({
      uncontrolledActiveKey: n
    }) : s(t, n), r && (h.Children.toArray(this.props.children).filter((l) => h.isValidElement(l)).filter(({ props: l }) => l.tabContentRef && l.tabContentRef.current).forEach((l) => l.props.tabContentRef.current.hidden = !0), r.current && (r.current.hidden = !1)), this.props.mountOnEnter && this.setState({
      shownKeys: i.concat(n)
    });
  }
  componentDidMount() {
    this.props.isVertical || (wn && window.addEventListener("resize", this.handleScrollButtons, !1), this.direction = Zi(this.tabList.current), this.handleScrollButtons());
  }
  componentWillUnmount() {
    var t;
    this.props.isVertical || wn && window.removeEventListener("resize", this.handleScrollButtons, !1), clearTimeout(this.scrollTimeout), (t = this.leftScrollButtonRef.current) === null || t === void 0 || t.removeEventListener("transitionend", this.hideScrollButtons);
  }
  componentDidUpdate(t, n) {
    const { activeKey: r, mountOnEnter: i, isOverflowHorizontal: s, children: o } = this.props, { shownKeys: l, overflowingTabCount: c, enableScrollButtons: d } = this.state;
    t.activeKey !== r && i && l.indexOf(r) < 0 && this.setState({
      shownKeys: l.concat(r)
    }), t.children && o && h.Children.toArray(t.children).length !== h.Children.toArray(o).length && this.handleScrollButtons();
    const u = this.countOverflowingElements(this.tabList.current);
    s && u && this.setState({ overflowingTabCount: u + c }), !n.enableScrollButtons && d ? (this.setState({ renderScrollButtons: !0 }), setTimeout(() => {
      var p;
      (p = this.leftScrollButtonRef.current) === null || p === void 0 || p.addEventListener("transitionend", this.hideScrollButtons), this.setState({ showScrollButtons: !0 });
    }, 100)) : n.enableScrollButtons && !d && this.setState({ showScrollButtons: !1 }), this.direction = Zi(this.tabList.current);
  }
  static getDerivedStateFromProps(t, n) {
    return n.uncontrolledActiveKey === void 0 || h.Children.toArray(t.children).filter((i) => h.isValidElement(i)).some(({ props: i }) => i.eventKey === n.uncontrolledActiveKey) ? null : {
      uncontrolledActiveKey: t.defaultActiveKey,
      shownKeys: t.defaultActiveKey !== void 0 ? [t.defaultActiveKey] : [t.activeKey]
      // only for mountOnEnter case
    };
  }
  render() {
    const t = this.props, { className: n, children: r, activeKey: i, defaultActiveKey: s, id: o, isFilled: l, isSecondary: c, isVertical: d, isBox: u, hasNoBorderBottom: p, leftScrollAriaLabel: m, rightScrollAriaLabel: f, backScrollAriaLabel: g, forwardScrollAriaLabel: b, "aria-label": v, component: y, ouiaId: C, ouiaSafe: S, mountOnEnter: P, unmountOnExit: w, usePageInsets: A, inset: k, variant: T, expandable: O, isExpanded: I, defaultIsExpanded: _, toggleText: E, toggleAriaLabel: L, addButtonAriaLabel: F, onToggle: R, onClose: M, onAdd: U, isOverflowHorizontal: K } = t, G = se(t, ["className", "children", "activeKey", "defaultActiveKey", "id", "isFilled", "isSecondary", "isVertical", "isBox", "hasNoBorderBottom", "leftScrollAriaLabel", "rightScrollAriaLabel", "backScrollAriaLabel", "forwardScrollAriaLabel", "aria-label", "component", "ouiaId", "ouiaSafe", "mountOnEnter", "unmountOnExit", "usePageInsets", "inset", "variant", "expandable", "isExpanded", "defaultIsExpanded", "toggleText", "toggleAriaLabel", "addButtonAriaLabel", "onToggle", "onClose", "onAdd", "isOverflowHorizontal"]), { showScrollButtons: N, renderScrollButtons: $, disableBackScrollButton: q, disableForwardScrollButton: V, shownKeys: B, uncontrolledActiveKey: Z, uncontrolledIsExpandedLocal: X, overflowingTabCount: Q } = this.state, ie = h.Children.toArray(r).filter((W) => h.isValidElement(W)).filter(({ props: W }) => !W.isHidden), me = ie.slice(0, ie.length - Q), ce = ie.slice(ie.length - Q).map((W) => W.props), ae = o || Ti(), Oe = y === vc.nav ? "nav" : "div", Ie = s !== void 0 ? Z : i, Me = _ !== void 0 ? X : I, ge = (W, Y) => {
      I === void 0 ? this.setState({ uncontrolledIsExpandedLocal: Y }) : R(W, Y);
    }, Se = K && Q > 0, J = typeof K == "object" ? Object.assign({}, K) : {};
    return h.createElement(
      mA,
      { value: {
        variant: T,
        mountOnEnter: P,
        unmountOnExit: w,
        localActiveKey: Ie,
        uniqueId: ae,
        handleTabClick: (...W) => this.handleTabClick(...W),
        handleTabClose: M
      } },
      h.createElement(
        Oe,
        Object.assign({ "aria-label": v, className: j(At.tabs, l && At.modifiers.fill, c && At.modifiers.secondary, d && At.modifiers.vertical, d && O && pt(O, At), d && O && Me && At.modifiers.expanded, u && At.modifiers.box, N && At.modifiers.scrollable, A && At.modifiers.pageInsets, p && At.modifiers.noBorderBottom, pt(k, At), yA[T], Se && At.modifiers.overflow, n) }, Gn(Ka.displayName, C !== void 0 ? C : this.state.ouiaStateId, S), { id: o && o }, G),
        O && d && h.createElement(Ba, null, (W) => h.createElement(
          "div",
          { className: j(At.tabsToggle) },
          h.createElement(
            "div",
            { className: j(At.tabsToggleButton) },
            h.createElement(
              z,
              { onClick: (Y) => ge(Y, !Me), variant: "plain", "aria-label": L, "aria-expanded": Me, id: `${W}-button`, "aria-labelledby": `${W}-text ${W}-button` },
              h.createElement(
                "span",
                { className: j(At.tabsToggleIcon) },
                h.createElement(Nn, { "arian-hidden": "true" })
              ),
              E && h.createElement("span", { className: j(At.tabsToggleText), id: `${W}-text` }, E)
            )
          )
        )),
        $ && h.createElement(
          "button",
          { type: "button", className: j(At.tabsScrollButton, c && In.modifiers.secondary), "aria-label": g || m, onClick: this.scrollBack, disabled: q, "aria-hidden": q, ref: this.leftScrollButtonRef },
          h.createElement(Hs, null)
        ),
        h.createElement(
          "ul",
          { className: j(At.tabsList), ref: this.tabList, onScroll: this.handleScrollButtons, role: "tablist" },
          K ? me : ie,
          Se && h.createElement(J0, Object.assign({ overflowingTabs: ce }, J))
        ),
        $ && h.createElement(
          "button",
          { type: "button", className: j(At.tabsScrollButton, c && In.modifiers.secondary), "aria-label": b || f, onClick: this.scrollForward, disabled: V, "aria-hidden": V },
          h.createElement(Nn, null)
        ),
        U !== void 0 && h.createElement(
          "span",
          { className: j(At.tabsAdd) },
          h.createElement(
            z,
            { variant: "plain", "aria-label": F || "Add tab", onClick: U },
            h.createElement(Y0, null)
          )
        )
      ),
      ie.filter((W) => W.props.children && !(w && W.props.eventKey !== Ie) && !(P && B.indexOf(W.props.eventKey) === -1)).map((W) => h.createElement(vo, { key: W.props.eventKey, activeKey: Ie, child: W, id: W.props.id || ae, ouiaId: W.props.ouiaId }))
    );
  }
}
Ka.displayName = "Tabs";
Ka.defaultProps = {
  activeKey: 0,
  onSelect: () => {
  },
  isFilled: !1,
  isSecondary: !1,
  isVertical: !1,
  isBox: !1,
  hasNoBorderBottom: !1,
  leftScrollAriaLabel: "Scroll left",
  backScrollAriaLabel: "Scroll back",
  rightScrollAriaLabel: "Scroll right",
  forwardScrollAriaLabel: "Scroll forward",
  component: vc.div,
  mountOnEnter: !1,
  unmountOnExit: !1,
  ouiaSafe: !0,
  variant: "default",
  onToggle: (e, t) => {
  }
};
const gi = " AM", bi = " PM", CA = (e, t, n, r, i, s) => {
  const o = [], l = new Date((/* @__PURE__ */ new Date()).setHours(0, 0, 0, 0)), c = l.getDay();
  for (; l.getDay() === c; ) {
    let d = l.getHours(), u = gi;
    t && (d === 0 ? d = 12 : d >= 12 && (u = bi), d > 12 && (d %= 12)), d = t ? d.toString() : d.toString().padStart(2, "0");
    const p = l.getMinutes().toString().padStart(2, "0"), m = `${d}${n}${p}${t ? u : ""}`;
    Q0(r, i, m, n, s) && o.push(m), l.setMinutes(l.getMinutes() + e);
  }
  return o;
}, ci = (e, t, n, r, i) => {
  const s = new Date(e);
  if (!isNaN(s.getDate()) && (e instanceof Date || e.includes("T"))) {
    const o = r ? `${s.getHours() > 12 ? s.getHours() - 12 : s.getHours()}` : `${s.getHours()}`.padStart(2, "0"), l = `${s.getMinutes()}`.padStart(2, "0"), c = i ? `${s.getSeconds()}`.padStart(2, "0") : "", d = c ? `${n}${c}` : "";
    let u = "";
    return r && s.getHours() > 11 ? u = bi : r && (u = gi), `${o}${n}${l}${d}${u}`;
  } else if (typeof e == "string" && (e = e.trim(), e !== "" && Z0(e, t, n, r))) {
    const [, o, l, c, d = ""] = t.exec(e), u = i ? `${n}${c ?? "00"}` : "";
    let p = "";
    if (r) {
      const m = d.toUpperCase();
      m === gi.toUpperCase().trim() ? p = gi : m === bi.toUpperCase().trim() ? p = bi : p = (/* @__PURE__ */ new Date()).getHours() > 11 ? bi : gi;
    }
    return `${o}${n}${l}${u}${p}`;
  }
  return e.toString();
}, Z0 = (e, t, n, r) => {
  const i = new Date(e);
  if (!isNaN(i.getDate()) && e.includes("T"))
    return !0;
  const s = parseInt(e.split(n)[0]), o = s >= (r ? 1 : 0) && s <= (r ? 12 : 23);
  return e === "" || t.test(e) && o;
}, Pv = (e, t) => {
  const n = e.match(t);
  return n && n.length ? /pm/i.test(n[4]) ? parseInt(n[1]) === 12 ? parseInt(n[1]) : parseInt(n[1]) + 12 : /am/i.test(n[4]) && parseInt(n[1]) === 12 ? 0 : parseInt(n[1]) : null;
}, _v = (e, t) => {
  const n = e.match(t);
  return n && n.length ? parseInt(n[2]) : null;
}, Rv = (e, t) => {
  var n;
  const r = (n = e.match(t)) === null || n === void 0 ? void 0 : n[3];
  return r ? parseInt(r) : null;
}, Q0 = (e, t, n, r, i) => {
  if (n.trim() === "")
    return !0;
  const s = am(e, r, i), o = am(n, r, i), l = am(t, r, i);
  return s <= o && o <= l;
}, am = (e, t, n) => {
  const i = new RegExp(`^\\s*(\\d\\d?)${t}([0-5]\\d)${t}?([0-5]\\d)?\\s*([AaPp][Mm])?\\s*$`).exec(e);
  if (!i || !i.length)
    return;
  let s = i[1].padStart(2, "0");
  const o = i[2];
  let l = i[3] ? `${t}${i[3]}` : "";
  !l && n && (l = `${t}00`);
  const c = i[4] || "";
  return c.toUpperCase() === "PM" && s !== "12" ? s = `${parseInt(s) + 12}` : c.toUpperCase() === "AM" && s === "12" && (s = "00"), `${s}${t}${o}${l}`;
}, xA = {
  name: "OutlinedClockIcon",
  height: 512,
  width: 512,
  svgPath: "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm0 448c-110.5 0-200-89.5-200-200S145.5 56 256 56s200 89.5 200 200-89.5 200-200 200zm61.8-104.4l-84.9-61.7c-3.1-2.3-4.9-5.9-4.9-9.7V116c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v141.7l66.8 48.6c5.4 3.9 6.5 11.4 2.6 16.8L334.6 349c-3.9 5.3-11.4 6.5-16.8 2.6z",
  yOffset: 0,
  xOffset: 0
}, SA = et(xA), wA = {
  name: "--pf-v5-c-date-picker__input--c-form-control--Width",
  value: "calc(10 * 1ch + calc(2rem + 0.5rem))",
  var: "var(--pf-v5-c-date-picker__input--c-form-control--Width)"
};
class Jh extends h.Component {
  constructor(t) {
    super(t), this.baseComponentRef = h.createRef(), this.toggleRef = h.createRef(), this.inputRef = h.createRef(), this.menuRef = h.createRef(), this.onDocClick = (u) => {
      var p, m, f, g;
      const b = (m = (p = this.toggleRef) === null || p === void 0 ? void 0 : p.current) === null || m === void 0 ? void 0 : m.contains(u.target), v = (g = (f = this.menuRef) === null || f === void 0 ? void 0 : f.current) === null || g === void 0 ? void 0 : g.contains(u.target);
      this.state.isTimeOptionsOpen && !(b || v) && this.onToggle(!1);
    }, this.handleGlobalKeys = (u) => {
      var p, m, f, g;
      const { isTimeOptionsOpen: b, focusedIndex: v, scrollIndex: y } = this.state;
      !((m = (p = this.inputRef) === null || p === void 0 ? void 0 : p.current) === null || m === void 0) && m.contains(u.target) ? !b && u.key !== cn.Tab && u.key !== cn.Escape ? this.onToggle(!0) : b && (u.key === cn.Escape || u.key === cn.Tab ? this.onToggle(!1) : u.key === cn.Enter ? v !== null ? (this.focusSelection(v), u.stopPropagation()) : this.onToggle(!1) : (u.key === cn.ArrowDown || u.key === cn.ArrowUp) && (this.focusSelection(y), this.updateFocusedIndex(0), u.preventDefault())) : !((g = (f = this.menuRef) === null || f === void 0 ? void 0 : f.current) === null || g === void 0) && g.contains(u.target) && (u.key === cn.ArrowDown ? (this.updateFocusedIndex(1), u.preventDefault()) : u.key === cn.ArrowUp ? (this.updateFocusedIndex(-1), u.preventDefault()) : (u.key === cn.Escape || u.key === cn.Tab) && (this.inputRef.current.focus(), this.onToggle(!1)));
    }, this.updateFocusedIndex = (u) => {
      this.setState((p) => {
        const m = this.getOptions().length - 1;
        let f = p.focusedIndex !== null ? p.focusedIndex + u : p.scrollIndex + u;
        return f < 0 ? f = m : f > m && (f = 0), this.scrollToIndex(f), {
          focusedIndex: f
        };
      });
    }, this.getIndexToScroll = (u) => this.props.menuAppendTo === "inline" ? u > 0 ? u - 1 : 0 : u, this.scrollToIndex = (u) => {
      this.getOptions()[u].closest(`.${lt.menuContent}`).scrollTop = this.getOptions()[this.getIndexToScroll(u)].offsetTop;
    }, this.focusSelection = (u) => {
      var p;
      const m = u !== -1 ? u : 0;
      !((p = this.menuRef) === null || p === void 0) && p.current && this.getOptions()[m].querySelector(`.${lt.menuItem}`).focus();
    }, this.scrollToSelection = (u) => {
      const { delimiter: p, is24Hour: m } = this.props;
      let f = u.split(this.props.delimiter), g = null;
      if (f.length < 2 ? (u = `${u}${p}00`, f = u.split(p)) : f.length > 2 && (u = ci(u, this.state.timeRegex, p, !m, !1), f = u.split(p)), !m && f.length > 1 && f[1].length < 2) {
        const v = f[1].length === 0 ? "00" : f[1] + "0";
        u = `${f[0]}${p}${v}${(/* @__PURE__ */ new Date()).getHours() > 11 ? bi : gi}`;
      } else !m && f.length > 1 && f[1].length === 2 && !u.toUpperCase().includes(gi.toUpperCase().trim()) && !u.toUpperCase().includes(bi.toUpperCase().trim()) && (u = `${u}${(/* @__PURE__ */ new Date()).getHours() > 11 ? bi : gi}`);
      let b = this.getOptions().findIndex((v) => v.textContent === u);
      if (b !== -1)
        this.scrollToIndex(b), g = b;
      else if (f.length === 2) {
        let v = "";
        m || (f[1].toUpperCase().includes("P") ? v = bi : f[1].toUpperCase().includes("A") && (v = gi)), u = `${f[0]}${p}00${v}`, b = this.getOptions().findIndex((y) => y.textContent === u), b !== -1 && this.scrollToIndex(b);
      }
      this.setState({
        focusedIndex: g,
        scrollIndex: b
      });
    }, this.getRegExp = (u = !0) => {
      const { is24Hour: p, delimiter: m } = this.props;
      let f = `\\s*(\\d\\d?)${m}([0-5]\\d)`;
      return u && (f += `${m}?([0-5]\\d)?`), new RegExp(`^${f}${p ? "" : "\\s*([AaPp][Mm])?"}\\s*$`);
    }, this.getOptions = () => {
      var u;
      return !((u = this.menuRef) === null || u === void 0) && u.current ? Array.from(this.menuRef.current.querySelectorAll(`.${lt.menuListItem}`)) : [];
    }, this.isValidFormat = (u) => {
      if (this.props.validateTime)
        return this.props.validateTime(u);
      const { delimiter: p, is24Hour: m, includeSeconds: f } = this.props;
      return Z0(u, this.getRegExp(f), p, !m);
    }, this.isValidTime = (u) => {
      const { delimiter: p, includeSeconds: m } = this.props, { minTimeState: f, maxTimeState: g } = this.state;
      return Q0(f, g, u, p, m);
    }, this.isValid = (u) => this.isValidFormat(u) && this.isValidTime(u), this.onToggle = (u) => {
      this.setState((p) => {
        const { timeRegex: m, isInvalid: f, timeState: g } = p, { delimiter: b, is24Hour: v, includeSeconds: y, onChange: C } = this.props, S = ci(g, m, b, !v, y);
        return C && !u && S !== g && C(null, S, Pv(S, m), _v(S, m), Rv(S, m), this.isValid(S)), {
          isTimeOptionsOpen: u,
          timeState: S,
          isInvalid: u ? f : !this.isValid(S)
        };
      }), this.props.setIsOpen(u), u || this.inputRef.current.focus();
    }, this.onSelect = (u) => {
      const { timeRegex: p, timeState: m } = this.state, { delimiter: f, is24Hour: g, includeSeconds: b, setIsOpen: v } = this.props, y = ci(u.target.textContent, p, f, !g, b);
      y !== m && this.onInputChange(u, y), this.inputRef.current.focus(), this.setState({
        isTimeOptionsOpen: !1,
        isInvalid: !1
      }), v(!1);
    }, this.onInputClick = (u) => {
      this.state.isTimeOptionsOpen || this.onToggle(!0), u.stopPropagation();
    }, this.onInputChange = (u, p) => {
      const { onChange: m } = this.props, { timeRegex: f } = this.state;
      m && m(u, p, Pv(p, f), _v(p, f), Rv(p, f), this.isValid(p)), this.scrollToSelection(p), this.setState({
        timeState: p
      });
    };
    const { is24Hour: n, delimiter: r, time: i, includeSeconds: s, isOpen: o } = this.props;
    let { minTime: l, maxTime: c } = this.props;
    if (l === "") {
      const u = s ? `${r}00` : "";
      l = n ? `00${r}00${u}` : `12${r}00${u} AM`;
    }
    if (c === "") {
      const u = s ? `${r}59` : "";
      c = n ? `23${r}59${u}` : `11${r}59${u} PM`;
    }
    const d = this.getRegExp();
    this.state = {
      isInvalid: !1,
      isTimeOptionsOpen: o,
      timeState: ci(i, d, r, !n, s),
      focusedIndex: null,
      scrollIndex: 0,
      timeRegex: d,
      minTimeState: ci(l, d, r, !n, s),
      maxTimeState: ci(c, d, r, !n, s)
    };
  }
  componentDidMount() {
    document.addEventListener("mousedown", this.onDocClick), document.addEventListener("touchstart", this.onDocClick), document.addEventListener("keydown", this.handleGlobalKeys), this.setState({ isInvalid: !this.isValid(this.state.timeState) });
  }
  componentWillUnmount() {
    document.removeEventListener("mousedown", this.onDocClick), document.removeEventListener("touchstart", this.onDocClick), document.removeEventListener("keydown", this.handleGlobalKeys);
  }
  componentDidUpdate(t, n) {
    const { timeState: r, isTimeOptionsOpen: i, isInvalid: s, timeRegex: o } = this.state, { time: l, is24Hour: c, delimiter: d, includeSeconds: u, isOpen: p, minTime: m, maxTime: f } = this.props;
    if (t.isOpen !== p && this.onToggle(p), i && !n.isTimeOptionsOpen && r && !s && this.scrollToSelection(r), d !== t.delimiter && this.setState({
      timeRegex: this.getRegExp()
    }), l !== "" && l !== t.time) {
      const g = ci(l, o, d, !c, u);
      this.setState({
        timeState: g,
        isInvalid: !this.isValid(g)
      });
    }
    m !== "" && m !== t.minTime && this.setState({
      minTimeState: ci(m, o, d, !c, u)
    }), f !== "" && f !== t.maxTime && this.setState({
      maxTimeState: ci(f, o, d, !c, u)
    });
  }
  render() {
    const t = this.props, {
      "aria-label": n,
      isDisabled: r,
      className: i,
      placeholder: s,
      id: o,
      menuAppendTo: l,
      is24Hour: c,
      invalidFormatErrorMessage: d,
      invalidMinMaxErrorMessage: u,
      stepMinutes: p,
      width: m,
      delimiter: f,
      inputProps: g,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      onChange: b,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      setIsOpen: v,
      /* eslint-disable @typescript-eslint/no-unused-vars */
      isOpen: y,
      time: C,
      validateTime: S,
      minTime: P,
      maxTime: w,
      includeSeconds: A,
      zIndex: k
    } = t, T = se(t, ["aria-label", "isDisabled", "className", "placeholder", "id", "menuAppendTo", "is24Hour", "invalidFormatErrorMessage", "invalidMinMaxErrorMessage", "stepMinutes", "width", "delimiter", "inputProps", "onChange", "setIsOpen", "isOpen", "time", "validateTime", "minTime", "maxTime", "includeSeconds", "zIndex"]), { timeState: O, isTimeOptionsOpen: I, isInvalid: _, minTimeState: E, maxTimeState: L } = this.state, F = { [wA.name]: m }, R = CA(p, !c, f, E, L, A), M = this.isValidFormat(O), U = o || Ti("time-picker"), K = () => this.baseComponentRef && this.baseComponentRef.current ? this.baseComponentRef.current.parentElement : null, G = h.createElement(
      rs,
      { ref: this.menuRef, isScrollable: !0 },
      h.createElement(
        al,
        { maxMenuHeight: "200px" },
        h.createElement(il, { "aria-label": n }, R.map((q, V) => h.createElement(rl, { onClick: this.onSelect, key: q, id: `${U}-option-${V}` }, q)))
      )
    ), N = h.createElement(gt, Object.assign({ "aria-haspopup": "menu", id: `${U}-input`, "aria-label": n, validated: _ ? "error" : "default", placeholder: s, value: O || "", type: "text", customIcon: h.createElement(SA, null), onClick: this.onInputClick, onChange: this.onInputChange, autoComplete: "off", isDisabled: r, isExpanded: I, ref: this.inputRef }, g));
    let $;
    switch (l) {
      case "inline":
        $ = () => this.toggleRef.current;
        break;
      case "parent":
        $ = K;
        break;
      default:
        $ = l;
    }
    return h.createElement(
      "div",
      { ref: this.baseComponentRef, className: j(Oo.datePicker, i) },
      h.createElement(
        "div",
        Object.assign({ className: j(Oo.datePickerInput), style: F }, T),
        h.createElement(
          nn,
          null,
          h.createElement(
            dt,
            null,
            h.createElement(
              "div",
              { id: U },
              h.createElement(
                "div",
                { ref: this.toggleRef, style: { paddingLeft: "0" } },
                h.createElement(ei, { appendTo: $, trigger: N, triggerRef: this.toggleRef, popper: G, popperRef: this.menuRef, isVisible: I, zIndex: k })
              )
            )
          )
        ),
        _ && h.createElement(
          "div",
          { className: j(Oo.datePickerHelperText) },
          h.createElement(
            Yr,
            null,
            h.createElement(Jr, { variant: "error" }, M ? u : d)
          )
        )
      )
    );
  }
}
Jh.displayName = "TimePicker";
Jh.defaultProps = {
  className: "",
  isDisabled: !1,
  time: "",
  is24Hour: !1,
  invalidFormatErrorMessage: "Invalid time format",
  invalidMinMaxErrorMessage: "Invalid time entered",
  placeholder: "hh:mm",
  delimiter: ":",
  "aria-label": "Time picker",
  width: "150px",
  menuAppendTo: "inline",
  stepMinutes: 30,
  inputProps: {},
  minTime: "",
  maxTime: "",
  isOpen: !1,
  setIsOpen: () => {
  },
  zIndex: 9999
};
const yt = {
  button: "pf-v5-c-button",
  chipGroup: "pf-v5-c-chip-group",
  divider: "pf-v5-c-divider",
  modifiers: {
    hidden: "pf-m-hidden",
    hiddenOnSm: "pf-m-hidden-on-sm",
    visibleOnSm: "pf-m-visible-on-sm",
    hiddenOnMd: "pf-m-hidden-on-md",
    visibleOnMd: "pf-m-visible-on-md",
    hiddenOnLg: "pf-m-hidden-on-lg",
    visibleOnLg: "pf-m-visible-on-lg",
    hiddenOnXl: "pf-m-hidden-on-xl",
    visibleOnXl: "pf-m-visible-on-xl",
    hiddenOn_2xl: "pf-m-hidden-on-2xl",
    visibleOn_2xl: "pf-m-visible-on-2xl",
    pageInsets: "pf-m-page-insets",
    sticky: "pf-m-sticky",
    fullHeight: "pf-m-full-height",
    static: "pf-m-static",
    vertical: "pf-m-vertical",
    alignItemsStart: "pf-m-align-items-start",
    alignItemsCenter: "pf-m-align-items-center",
    alignItemsBaseline: "pf-m-align-items-baseline",
    alignSelfStart: "pf-m-align-self-start",
    alignSelfCenter: "pf-m-align-self-center",
    alignSelfBaseline: "pf-m-align-self-baseline",
    buttonGroup: "pf-m-button-group",
    iconButtonGroup: "pf-m-icon-button-group",
    filterGroup: "pf-m-filter-group",
    toggleGroup: "pf-m-toggle-group",
    overflowMenu: "pf-m-overflow-menu",
    bulkSelect: "pf-m-bulk-select",
    expandAll: "pf-m-expand-all",
    expanded: "pf-m-expanded",
    searchFilter: "pf-m-search-filter",
    chipGroup: "pf-m-chip-group",
    label: "pf-m-label",
    formElement: "pf-m-form-element",
    pagination: "pf-m-pagination",
    overflowContainer: "pf-m-overflow-container",
    chipContainer: "pf-m-chip-container",
    plain: "pf-m-plain",
    show: "pf-m-show",
    showOnSm: "pf-m-show-on-sm",
    showOnMd: "pf-m-show-on-md",
    showOnLg: "pf-m-show-on-lg",
    showOnXl: "pf-m-show-on-xl",
    showOn_2xl: "pf-m-show-on-2xl",
    alignRight: "pf-m-align-right",
    alignLeft: "pf-m-align-left",
    nowrap: "pf-m-nowrap",
    wrap: "pf-m-wrap",
    alignRightOnSm: "pf-m-align-right-on-sm",
    alignLeftOnSm: "pf-m-align-left-on-sm",
    nowrapOnSm: "pf-m-nowrap-on-sm",
    wrapOnSm: "pf-m-wrap-on-sm",
    alignRightOnMd: "pf-m-align-right-on-md",
    alignLeftOnMd: "pf-m-align-left-on-md",
    nowrapOnMd: "pf-m-nowrap-on-md",
    wrapOnMd: "pf-m-wrap-on-md",
    alignRightOnLg: "pf-m-align-right-on-lg",
    alignLeftOnLg: "pf-m-align-left-on-lg",
    nowrapOnLg: "pf-m-nowrap-on-lg",
    wrapOnLg: "pf-m-wrap-on-lg",
    alignRightOnXl: "pf-m-align-right-on-xl",
    alignLeftOnXl: "pf-m-align-left-on-xl",
    nowrapOnXl: "pf-m-nowrap-on-xl",
    wrapOnXl: "pf-m-wrap-on-xl",
    alignRightOn_2xl: "pf-m-align-right-on-2xl",
    alignLeftOn_2xl: "pf-m-align-left-on-2xl",
    nowrapOn_2xl: "pf-m-nowrap-on-2xl",
    wrapOn_2xl: "pf-m-wrap-on-2xl",
    spaceItemsNone: "pf-m-space-items-none",
    spaceItemsSm: "pf-m-space-items-sm",
    spaceItemsMd: "pf-m-space-items-md",
    spaceItemsLg: "pf-m-space-items-lg",
    spaceItemsNoneOnSm: "pf-m-space-items-none-on-sm",
    spaceItemsSmOnSm: "pf-m-space-items-sm-on-sm",
    spaceItemsMdOnSm: "pf-m-space-items-md-on-sm",
    spaceItemsLgOnSm: "pf-m-space-items-lg-on-sm",
    spaceItemsNoneOnMd: "pf-m-space-items-none-on-md",
    spaceItemsSmOnMd: "pf-m-space-items-sm-on-md",
    spaceItemsMdOnMd: "pf-m-space-items-md-on-md",
    spaceItemsLgOnMd: "pf-m-space-items-lg-on-md",
    spaceItemsNoneOnLg: "pf-m-space-items-none-on-lg",
    spaceItemsSmOnLg: "pf-m-space-items-sm-on-lg",
    spaceItemsMdOnLg: "pf-m-space-items-md-on-lg",
    spaceItemsLgOnLg: "pf-m-space-items-lg-on-lg",
    spaceItemsNoneOnXl: "pf-m-space-items-none-on-xl",
    spaceItemsSmOnXl: "pf-m-space-items-sm-on-xl",
    spaceItemsMdOnXl: "pf-m-space-items-md-on-xl",
    spaceItemsLgOnXl: "pf-m-space-items-lg-on-xl",
    spaceItemsNoneOn_2xl: "pf-m-space-items-none-on-2xl",
    spaceItemsSmOn_2xl: "pf-m-space-items-sm-on-2xl",
    spaceItemsMdOn_2xl: "pf-m-space-items-md-on-2xl",
    spaceItemsLgOn_2xl: "pf-m-space-items-lg-on-2xl",
    spacerNone: "pf-m-spacer-none",
    spacerSm: "pf-m-spacer-sm",
    spacerMd: "pf-m-spacer-md",
    spacerLg: "pf-m-spacer-lg",
    spacerNoneOnSm: "pf-m-spacer-none-on-sm",
    spacerSmOnSm: "pf-m-spacer-sm-on-sm",
    spacerMdOnSm: "pf-m-spacer-md-on-sm",
    spacerLgOnSm: "pf-m-spacer-lg-on-sm",
    spacerNoneOnMd: "pf-m-spacer-none-on-md",
    spacerSmOnMd: "pf-m-spacer-sm-on-md",
    spacerMdOnMd: "pf-m-spacer-md-on-md",
    spacerLgOnMd: "pf-m-spacer-lg-on-md",
    spacerNoneOnLg: "pf-m-spacer-none-on-lg",
    spacerSmOnLg: "pf-m-spacer-sm-on-lg",
    spacerMdOnLg: "pf-m-spacer-md-on-lg",
    spacerLgOnLg: "pf-m-spacer-lg-on-lg",
    spacerNoneOnXl: "pf-m-spacer-none-on-xl",
    spacerSmOnXl: "pf-m-spacer-sm-on-xl",
    spacerMdOnXl: "pf-m-spacer-md-on-xl",
    spacerLgOnXl: "pf-m-spacer-lg-on-xl",
    spacerNoneOn_2xl: "pf-m-spacer-none-on-2xl",
    spacerSmOn_2xl: "pf-m-spacer-sm-on-2xl",
    spacerMdOn_2xl: "pf-m-spacer-md-on-2xl",
    spacerLgOn_2xl: "pf-m-spacer-lg-on-2xl",
    insetNone: "pf-m-inset-none",
    insetSm: "pf-m-inset-sm",
    insetMd: "pf-m-inset-md",
    insetLg: "pf-m-inset-lg",
    insetXl: "pf-m-inset-xl",
    inset_2xl: "pf-m-inset-2xl",
    insetNoneOnSm: "pf-m-inset-none-on-sm",
    insetSmOnSm: "pf-m-inset-sm-on-sm",
    insetMdOnSm: "pf-m-inset-md-on-sm",
    insetLgOnSm: "pf-m-inset-lg-on-sm",
    insetXlOnSm: "pf-m-inset-xl-on-sm",
    inset_2xlOnSm: "pf-m-inset-2xl-on-sm",
    insetNoneOnMd: "pf-m-inset-none-on-md",
    insetSmOnMd: "pf-m-inset-sm-on-md",
    insetMdOnMd: "pf-m-inset-md-on-md",
    insetLgOnMd: "pf-m-inset-lg-on-md",
    insetXlOnMd: "pf-m-inset-xl-on-md",
    inset_2xlOnMd: "pf-m-inset-2xl-on-md",
    insetNoneOnLg: "pf-m-inset-none-on-lg",
    insetSmOnLg: "pf-m-inset-sm-on-lg",
    insetMdOnLg: "pf-m-inset-md-on-lg",
    insetLgOnLg: "pf-m-inset-lg-on-lg",
    insetXlOnLg: "pf-m-inset-xl-on-lg",
    inset_2xlOnLg: "pf-m-inset-2xl-on-lg",
    insetNoneOnXl: "pf-m-inset-none-on-xl",
    insetSmOnXl: "pf-m-inset-sm-on-xl",
    insetMdOnXl: "pf-m-inset-md-on-xl",
    insetLgOnXl: "pf-m-inset-lg-on-xl",
    insetXlOnXl: "pf-m-inset-xl-on-xl",
    inset_2xlOnXl: "pf-m-inset-2xl-on-xl",
    insetNoneOn_2xl: "pf-m-inset-none-on-2xl",
    insetSmOn_2xl: "pf-m-inset-sm-on-2xl",
    insetMdOn_2xl: "pf-m-inset-md-on-2xl",
    insetLgOn_2xl: "pf-m-inset-lg-on-2xl",
    insetXlOn_2xl: "pf-m-inset-xl-on-2xl",
    inset_2xlOn_2xl: "pf-m-inset-2xl-on-2xl"
  },
  pagination: "pf-v5-c-pagination",
  toolbar: "pf-v5-c-toolbar",
  toolbarContent: "pf-v5-c-toolbar__content",
  toolbarContentSection: "pf-v5-c-toolbar__content-section",
  toolbarExpandAllIcon: "pf-v5-c-toolbar__expand-all-icon",
  toolbarExpandableContent: "pf-v5-c-toolbar__expandable-content",
  toolbarGroup: "pf-v5-c-toolbar__group",
  toolbarItem: "pf-v5-c-toolbar__item",
  toolbarToggle: "pf-v5-c-toolbar__toggle"
}, ew = h.createContext({
  isExpanded: !1,
  toggleIsExpanded: () => {
  },
  chipGroupContentRef: null,
  updateNumberFilters: () => {
  },
  numberOfFilters: 0,
  clearAllFilters: () => {
  }
}), OA = h.createContext({
  expandableContentRef: null,
  expandableContentId: "",
  chipContainerRef: null,
  clearAllFilters: () => {
  }
}), kA = {
  md: parseInt(nS.value),
  lg: parseInt(aS.value),
  xl: parseInt(lh.value),
  "2xl": parseInt(rS.value)
}, TA = {
  name: "--pf-v5-c-toolbar__item--Width",
  value: "auto",
  var: "var(--pf-v5-c-toolbar__item--Width)"
};
var xf;
(function(e) {
  e.separator = "separator", e["bulk-select"] = "bulk-select", e["overflow-menu"] = "overflow-menu", e.pagination = "pagination", e["search-filter"] = "search-filter", e.label = "label", e["chip-group"] = "chip-group", e["expand-all"] = "expand-all";
})(xf || (xf = {}));
const Le = (e) => {
  var { className: t, variant: n, visibility: r, spacer: i, widths: s, align: o, alignSelf: l, alignItems: c, id: d, children: u, isAllExpanded: p, isOverflowContainer: m } = e, f = se(e, ["className", "variant", "visibility", "spacer", "widths", "align", "alignSelf", "alignItems", "id", "children", "isAllExpanded", "isOverflowContainer"]);
  if (n === xf.separator)
    return h.createElement(Pt, Object.assign({ className: j(yt.modifiers.vertical, t) }, f));
  const g = {};
  return s && Object.entries(s || {}).map(([b, v]) => g[`${TA.name}${b !== "default" ? `-on-${b}` : ""}`] = v), h.createElement(Fi.Consumer, null, ({ width: b, getBreakpoint: v }) => h.createElement("div", Object.assign({ className: j(yt.toolbarItem, n && yt.modifiers[Kl(n)], p && yt.modifiers.expanded, m && yt.modifiers.overflowContainer, pt(r, yt, "", v(b)), pt(o, yt, "", v(b)), pt(i, yt, "", v(b)), c === "start" && yt.modifiers.alignItemsStart, c === "center" && yt.modifiers.alignItemsCenter, c === "baseline" && yt.modifiers.alignItemsBaseline, l === "start" && yt.modifiers.alignSelfStart, l === "center" && yt.modifiers.alignSelfCenter, l === "baseline" && yt.modifiers.alignSelfBaseline, t) }, n === "label" && { "aria-hidden": !0 }, { id: d }, f, s && { style: Object.assign(Object.assign({}, g), f.style) }), u));
};
Le.displayName = "ToolbarItem";
var Av;
(function(e) {
  e["filter-group"] = "filter-group", e["icon-button-group"] = "icon-button-group", e["button-group"] = "button-group";
})(Av || (Av = {}));
class IA extends h.Component {
  render() {
    const t = this.props, { visibility: n, align: r, alignItems: i, alignSelf: s, spacer: o, spaceItems: l, className: c, variant: d, children: u, isOverflowContainer: p, innerRef: m } = t, f = se(t, ["visibility", "align", "alignItems", "alignSelf", "spacer", "spaceItems", "className", "variant", "children", "isOverflowContainer", "innerRef"]);
    return h.createElement(Fi.Consumer, null, ({ width: g, getBreakpoint: b }) => h.createElement("div", Object.assign({ className: j(yt.toolbarGroup, d && yt.modifiers[Kl(d)], pt(n, yt, "", b(g)), pt(r, yt, "", b(g)), pt(o, yt, "", b(g)), pt(l, yt, "", b(g)), i === "start" && yt.modifiers.alignItemsStart, i === "center" && yt.modifiers.alignItemsCenter, i === "baseline" && yt.modifiers.alignItemsBaseline, s === "start" && yt.modifiers.alignSelfStart, s === "center" && yt.modifiers.alignSelfCenter, s === "baseline" && yt.modifiers.alignSelfBaseline, p && yt.modifiers.overflowContainer, c) }, f, { ref: m }), u));
  }
}
const ru = h.forwardRef((e, t) => h.createElement(IA, Object.assign({}, e, { innerRef: t })));
class Zh extends h.Component {
  render() {
    const t = this.props, { className: n, isExpanded: r, chipGroupContentRef: i, clearAllFilters: s, showClearFiltersButton: o, clearFiltersButtonText: l, collapseListedFiltersBreakpoint: c, numberOfFilters: d, numberOfFiltersText: u, customChipGroupContent: p } = t, m = se(t, ["className", "isExpanded", "chipGroupContentRef", "clearAllFilters", "showClearFiltersButton", "clearFiltersButtonText", "collapseListedFiltersBreakpoint", "numberOfFilters", "numberOfFiltersText", "customChipGroupContent"]), f = () => {
      s();
    };
    let g = !1;
    c === "all" ? g = !0 : wn && (g = (wn ? window.innerWidth : 1200) < kA[c]);
    const b = d === 0 || r;
    return h.createElement(
      "div",
      Object.assign({ className: j(yt.toolbarContent, !b && !g && yt.modifiers.chipContainer, b && yt.modifiers.hidden, n) }, (d === 0 || r) && { hidden: !0 }, { ref: i }, m),
      h.createElement(ru, Object.assign({ className: j(g && yt.modifiers.hidden) }, g && { hidden: !0 }, g && { "aria-hidden": !0 })),
      g && d > 0 && !r && h.createElement(
        ru,
        null,
        h.createElement(Le, null, u(d))
      ),
      o && !r && !p && h.createElement(
        Le,
        null,
        h.createElement(z, { variant: "link", onClick: f, isInline: !0 }, l)
      ),
      p && p
    );
  }
}
Zh.displayName = "ToolbarChipGroupContent";
Zh.defaultProps = {
  clearFiltersButtonText: "Clear all filters",
  collapseListedFiltersBreakpoint: "lg",
  numberOfFiltersText: (e) => `${e} filters applied`
};
class Ta extends h.Component {
  constructor() {
    super(...arguments), this.chipGroupContentRef = h.createRef(), this.staticFilterInfo = {}, this.state = {
      isManagedToggleExpanded: !1,
      filterInfo: {},
      windowWidth: wn ? window.innerWidth : 1200,
      ouiaStateId: qa(Ta.displayName)
    }, this.isToggleManaged = () => !(this.props.isExpanded || this.props.toggleIsExpanded), this.toggleIsExpanded = () => {
      this.setState((t) => ({
        isManagedToggleExpanded: !t.isManagedToggleExpanded
      }));
    }, this.closeExpandableContent = (t) => {
      t.target.innerWidth !== this.state.windowWidth && this.setState(() => ({
        isManagedToggleExpanded: !1,
        windowWidth: t.target.innerWidth
      }));
    }, this.updateNumberFilters = (t, n) => {
      const r = Object.assign({}, this.staticFilterInfo);
      (!r.hasOwnProperty(t) || r[t] !== n) && (r[t] = n, this.staticFilterInfo = r, this.setState({ filterInfo: r }));
    }, this.getNumberOfFilters = () => Object.values(this.state.filterInfo).reduce((t, n) => t + n, 0), this.renderToolbar = (t) => {
      const n = this.props, { clearAllFilters: r, clearFiltersButtonText: i, collapseListedFiltersBreakpoint: s, isExpanded: o, toggleIsExpanded: l, className: c, children: d, isFullHeight: u, isStatic: p, inset: m, usePageInsets: f, isSticky: g, ouiaId: b, numberOfFiltersText: v, customChipGroupContent: y } = n, C = se(n, ["clearAllFilters", "clearFiltersButtonText", "collapseListedFiltersBreakpoint", "isExpanded", "toggleIsExpanded", "className", "children", "isFullHeight", "isStatic", "inset", "usePageInsets", "isSticky", "ouiaId", "numberOfFiltersText", "customChipGroupContent"]), { isManagedToggleExpanded: S } = this.state, P = this.isToggleManaged(), w = P ? S : o, A = this.getNumberOfFilters(), k = A > 0;
      return h.createElement(Fi.Consumer, null, ({ width: T, getBreakpoint: O }) => h.createElement(
        "div",
        Object.assign({ className: j(yt.toolbar, u && yt.modifiers.fullHeight, p && yt.modifiers.static, f && yt.modifiers.pageInsets, g && yt.modifiers.sticky, pt(m, yt, "", O(T)), c), id: t }, Gn(Ta.displayName, b !== void 0 ? b : this.state.ouiaStateId), C),
        h.createElement(
          ew.Provider,
          { value: {
            isExpanded: w,
            toggleIsExpanded: P ? this.toggleIsExpanded : l,
            chipGroupContentRef: this.chipGroupContentRef,
            updateNumberFilters: this.updateNumberFilters,
            numberOfFilters: A,
            clearAllFilters: r,
            clearFiltersButtonText: i,
            showClearFiltersButton: k,
            toolbarId: t,
            customChipGroupContent: y
          } },
          d,
          h.createElement(Zh, { isExpanded: w, chipGroupContentRef: this.chipGroupContentRef, clearAllFilters: r, showClearFiltersButton: k, clearFiltersButtonText: i, numberOfFilters: A, numberOfFiltersText: v, collapseListedFiltersBreakpoint: s, customChipGroupContent: y })
        )
      ));
    };
  }
  componentDidMount() {
    this.isToggleManaged() && wn && window.addEventListener("resize", this.closeExpandableContent);
  }
  componentWillUnmount() {
    this.isToggleManaged() && wn && window.removeEventListener("resize", this.closeExpandableContent);
  }
  render() {
    return this.props.id ? this.renderToolbar(this.props.id) : h.createElement(Ba, null, (t) => this.renderToolbar(t));
  }
}
Ta.displayName = "Toolbar";
class cr extends h.Component {
  constructor() {
    super(...arguments), this.expandableContentRef = h.createRef(), this.chipContainerRef = h.createRef();
  }
  render() {
    const t = this.props, { className: n, children: r, isExpanded: i, toolbarId: s, visibility: o, alignItems: l, clearAllFilters: c, showClearFiltersButton: d, clearFiltersButtonText: u, alignSelf: p } = t, m = se(t, ["className", "children", "isExpanded", "toolbarId", "visibility", "alignItems", "clearAllFilters", "showClearFiltersButton", "clearFiltersButtonText", "alignSelf"]);
    return h.createElement(Fi.Consumer, null, ({ width: f, getBreakpoint: g }) => h.createElement(
      "div",
      Object.assign({ className: j(yt.toolbarContent, pt(o, yt, "", g(f)), n), ref: this.expandableContentRef }, m),
      h.createElement(ew.Consumer, null, ({ clearAllFilters: b, clearFiltersButtonText: v, showClearFiltersButton: y, isExpanded: C, toolbarId: S }) => {
        const P = `${s || S}-expandable-content-${cr.currentId++}`;
        return h.createElement(
          OA.Provider,
          { value: {
            expandableContentRef: this.expandableContentRef,
            expandableContentId: P,
            chipContainerRef: this.chipContainerRef,
            isExpanded: i || C,
            clearAllFilters: c || b,
            clearFiltersButtonText: u || v,
            showClearFiltersButton: d || y
          } },
          h.createElement("div", { className: j(yt.toolbarContentSection, l === "center" && yt.modifiers.alignItemsCenter, l === "start" && yt.modifiers.alignItemsStart, l === "baseline" && yt.modifiers.alignItemsBaseline, p === "center" && yt.modifiers.alignSelfCenter, p === "start" && yt.modifiers.alignSelfStart, p === "baseline" && yt.modifiers.alignSelfBaseline) }, r)
        );
      })
    ));
  }
}
cr.displayName = "ToolbarContent";
cr.currentId = 0;
cr.defaultProps = {
  isExpanded: !1,
  showClearFiltersButton: !1
};
const Pl = {
  formControl: "pf-v5-c-form-control",
  inputGroup: "pf-v5-c-input-group",
  modifiers: {
    status: "pf-m-status"
  },
  numberInput: "pf-v5-c-number-input",
  numberInputIcon: "pf-v5-c-number-input__icon",
  numberInputUnit: "pf-v5-c-number-input__unit"
}, EA = {
  name: "--pf-v5-c-number-input--c-form-control--width-chars",
  value: "4",
  var: "var(--pf-v5-c-number-input--c-form-control--width-chars)"
}, PA = (e) => (t) => {
  cn.ArrowUp === t.key && e.onPlus && (t.preventDefault(), e.onPlus(null, e.inputName)), cn.ArrowDown === t.key && e.onMinus && (t.preventDefault(), e.onMinus(null, e.inputName));
}, rm = 0, os = (e) => {
  var { value: t = rm, className: n, widthChars: r, isDisabled: i = !1, validated: s = _n.default, onMinus: o = () => {
  }, onChange: l, onBlur: c, onPlus: d = () => {
  }, unit: u, unitPosition: p = "after", min: m, max: f, inputName: g, inputAriaLabel: b = "Input", minusBtnAriaLabel: v = "Minus", plusBtnAriaLabel: y = "Plus", inputProps: C, minusBtnProps: S, plusBtnProps: P } = e, w = se(e, ["value", "className", "widthChars", "isDisabled", "validated", "onMinus", "onChange", "onBlur", "onPlus", "unit", "unitPosition", "min", "max", "inputName", "inputAriaLabel", "minusBtnAriaLabel", "plusBtnAriaLabel", "inputProps", "minusBtnProps", "plusBtnProps"]);
  const A = h.createElement("div", { className: j(Pl.numberInputUnit) }, u), k = C && C.onKeyDown ? C.onKeyDown : PA({ inputName: g, onMinus: o, onPlus: d }), T = (O) => {
    O.target.value = Number(O.target.value).toString(), l && l(O), c && c(O);
  };
  return h.createElement(
    "div",
    Object.assign({ className: j(Pl.numberInput, s !== "default" && Pl.modifiers.status, n) }, r && {
      style: Object.assign({ [EA.name]: r }, w.style)
    }, w),
    u && p === "before" && A,
    h.createElement(
      nn,
      null,
      h.createElement(
        dt,
        null,
        h.createElement(
          z,
          Object.assign({ variant: "control", "aria-label": v, isDisabled: i || (typeof t == "number" ? t : rm) <= m, onClick: (O) => o(O, g) }, S),
          h.createElement(
            "span",
            { className: j(Pl.numberInputIcon) },
            h.createElement(u0, { "aria-hidden": "true" })
          )
        )
      ),
      h.createElement(
        dt,
        null,
        h.createElement(gt, Object.assign({}, C, { type: "number", value: t, name: g, "aria-label": b }, i && { isDisabled: i }, l && { onChange: (O, I) => l(O) }, { onBlur: T }, !l && { readOnlyVariant: "default" }, { onKeyDown: k, validated: s }))
      ),
      h.createElement(
        dt,
        null,
        h.createElement(
          z,
          Object.assign({ variant: "control", "aria-label": y, isDisabled: i || (typeof t == "number" ? t : rm) >= f, onClick: (O) => d(O, g) }, P),
          h.createElement(
            "span",
            { className: j(Pl.numberInputIcon) },
            h.createElement(Y0, { "aria-hidden": "true" })
          )
        )
      )
    ),
    u && p === "after" && A
  );
};
os.displayName = "NumberInput";
const Ut = {
  badge: "pf-v5-c-badge",
  dirRtl: "pf-v5-m-dir-rtl",
  modifiers: {
    compact: "pf-m-compact",
    guides: "pf-m-guides",
    expanded: "pf-m-expanded",
    noBackground: "pf-m-no-background",
    current: "pf-m-current",
    read: "pf-m-read",
    selectable: "pf-m-selectable",
    truncate: "pf-m-truncate"
  },
  themeDark: "pf-v5-theme-dark",
  treeView: "pf-v5-c-tree-view",
  treeViewAction: "pf-v5-c-tree-view__action",
  treeViewContent: "pf-v5-c-tree-view__content",
  treeViewListItem: "pf-v5-c-tree-view__list-item",
  treeViewNode: "pf-v5-c-tree-view__node",
  treeViewNodeCheck: "pf-v5-c-tree-view__node-check",
  treeViewNodeContainer: "pf-v5-c-tree-view__node-container",
  treeViewNodeContent: "pf-v5-c-tree-view__node-content",
  treeViewNodeCount: "pf-v5-c-tree-view__node-count",
  treeViewNodeIcon: "pf-v5-c-tree-view__node-icon",
  treeViewNodeText: "pf-v5-c-tree-view__node-text",
  treeViewNodeTitle: "pf-v5-c-tree-view__node-title",
  treeViewNodeToggle: "pf-v5-c-tree-view__node-toggle",
  treeViewNodeToggleIcon: "pf-v5-c-tree-view__node-toggle-icon",
  treeViewSearch: "pf-v5-c-tree-view__search"
}, tw = (e) => {
  var { isNested: t = !1, isMultiSelectable: n = !1, toolbar: r, children: i, "aria-label": s, "aria-labelledby": o } = e, l = se(e, ["isNested", "isMultiSelectable", "toolbar", "children", "aria-label", "aria-labelledby"]);
  return h.createElement(
    h.Fragment,
    null,
    r && h.createElement(
      h.Fragment,
      null,
      r,
      h.createElement(Pt, null)
    ),
    h.createElement("ul", Object.assign({ className: j(`${Ut.treeView}__list`), role: t ? "group" : "tree", "aria-multiselectable": t ? void 0 : n, "aria-label": s, "aria-labelledby": o }, l), i)
  );
};
tw.displayName = "TreeViewList";
const _A = ({
  name: e,
  title: t,
  id: n,
  isExpanded: r,
  defaultExpanded: i = !1,
  children: s = null,
  onSelect: o,
  onExpand: l,
  onCollapse: c,
  onCheck: d,
  hasCheckbox: u = !1,
  checkProps: p = {
    checked: !1
  },
  hasBadge: m = !1,
  customBadgeContent: f,
  badgeProps: g = { isRead: !0 },
  isSelectable: b = !1,
  isCompact: v,
  activeItems: y = [],
  itemData: C,
  parentItem: S,
  icon: P,
  expandedIcon: w,
  action: A,
  compareItems: k,
  // eslint-disable-next-line @typescript-eslint/no-unused-vars
  useMemo: T
}) => {
  const [O, I] = D(i);
  ze(() => {
    r != null ? I(r) : i != null && I(O || i);
  }, [r, i]);
  let _ = "button";
  u ? _ = "label" : b && (_ = "div");
  const E = u || b ? "button" : "span", L = (N) => ne.createElement(
    E,
    Object.assign({ className: j(Ut.treeViewNodeToggle), onClick: ($) => {
      (b || u) && (O ? c && c($, C, S) : l && l($, C, S), I(!O)), b && $.stopPropagation();
    } }, (u || b) && { "aria-labelledby": `label-${N}` }, E === "button" && { type: "button" }, { tabIndex: -1 }),
    ne.createElement(
      "span",
      { className: j(Ut.treeViewNodeToggleIcon) },
      ne.createElement(Nn, { "aria-hidden": "true" })
    )
  ), F = p.checked === null ? !1 : p.checked, R = (N) => ne.createElement(
    "span",
    { className: j(Ut.treeViewNodeCheck) },
    ne.createElement("input", Object.assign({ type: "checkbox", onChange: ($) => d && d($, C, S), onClick: ($) => $.stopPropagation(), ref: ($) => $ && ($.indeterminate = p.checked === null) }, p, { checked: F, id: N, tabIndex: -1 }))
  ), M = ne.createElement(
    "span",
    { className: j(Ut.treeViewNodeIcon) },
    !O && P,
    O && (w || P)
  ), U = () => {
    const N = ne.createElement(
      ne.Fragment,
      null,
      v && t && ne.createElement("span", { className: j(Ut.treeViewNodeTitle) }, t),
      b ? ne.createElement("button", { tabIndex: -1, className: j(Ut.treeViewNodeText), type: "button" }, e) : ne.createElement("span", { className: j(Ut.treeViewNodeText) }, e)
    );
    return v ? ne.createElement("span", { className: j(Ut.treeViewNodeContent) }, N) : N;
  }, K = ne.createElement(
    ne.Fragment,
    null,
    m && s && ne.createElement(
      "span",
      { className: j(Ut.treeViewNodeCount) },
      ne.createElement(Ir, Object.assign({}, g), f || s.props.data.length)
    ),
    m && !s && f !== void 0 && ne.createElement(
      "span",
      { className: j(Ut.treeViewNodeCount) },
      ne.createElement(Ir, Object.assign({}, g), f)
    )
  ), G = (!s || b) && y && y.length > 0 && y.some((N) => k && N && k(N, C));
  return ne.createElement(
    "li",
    Object.assign({ id: n, className: j(Ut.treeViewListItem, O && Ut.modifiers.expanded), "aria-expanded": O, role: "treeitem", tabIndex: -1 }, u && { "aria-checked": F }, !u && { "aria-selected": G }),
    ne.createElement(
      "div",
      { className: j(Ut.treeViewContent) },
      ne.createElement(Ba, { prefix: b ? "selectable-id" : "checkbox-id" }, (N) => ne.createElement(
        _,
        Object.assign({ className: j(Ut.treeViewNode, s && (b || u) && Ut.modifiers.selectable, G && Ut.modifiers.current), onClick: ($) => {
          u || (o && o($, C, S), !b && s && $.isDefaultPrevented() !== !0 && (O ? c && c($, C, S) : l && l($, C, S), I(!O)));
        } }, u && { htmlFor: N }, (u || b && s) && { id: `label-${N}` }, _ === "button" && { type: "button" }),
        ne.createElement(
          "span",
          { className: j(Ut.treeViewNodeContainer) },
          s && L(N),
          u && R(N),
          P && M,
          U(),
          K
        )
      )),
      A && ne.createElement("div", { className: j(Ut.treeViewAction) }, A)
    ),
    O && s
  );
}, nw = ne.memo(_A, (e, t) => {
  if (!t.useMemo)
    return !1;
  const n = e.activeItems && e.activeItems.length > 0 && e.activeItems.some((i) => e.compareItems && i && e.compareItems(i, e.itemData)), r = t.activeItems && t.activeItems.length > 0 && t.activeItems.some((i) => t.compareItems && i && t.compareItems(i, t.itemData));
  return !(n || r || e.name !== t.name || e.title !== t.title || e.id !== t.id || e.isExpanded !== t.isExpanded || e.defaultExpanded !== t.defaultExpanded || e.onSelect !== t.onSelect || e.onCheck !== t.onCheck || e.onExpand !== t.onExpand || e.onCollapse !== t.onCollapse || e.hasCheckbox !== t.hasCheckbox || e.checkProps !== t.checkProps || e.hasBadge !== t.hasBadge || e.customBadgeContent !== t.customBadgeContent || e.badgeProps !== t.badgeProps || e.isCompact !== t.isCompact || e.icon !== t.icon || e.expandedIcon !== t.expandedIcon || e.action !== t.action || e.parentItem !== t.parentItem || e.itemData !== t.itemData);
});
nw.displayName = "TreeViewListItem";
class RA extends h.Component {
  constructor() {
    super(...arguments), this.displayName = "TreeViewRoot", this.treeRef = h.createRef(), this.handleKeys = (t) => {
      var n, r, i, s, o, l, c;
      if (!this.treeRef.current.contains(t.target) || !t.target.classList.contains(Ut.treeViewNode))
        return;
      const d = document.activeElement, u = t.key, p = Array.from((n = this.treeRef.current) === null || n === void 0 ? void 0 : n.getElementsByClassName(Ut.treeViewNode)).filter((m) => !m.classList.contains("pf-m-disabled"));
      if (u === cn.Space && (d.click(), t.preventDefault()), Gd(t, p, (m) => d === m, void 0, [], void 0, !0, !0), ["ArrowLeft", "ArrowRight"].includes(u)) {
        const m = (i = (r = d?.firstElementChild) === null || r === void 0 ? void 0 : r.firstElementChild) === null || i === void 0 ? void 0 : i.classList.contains(Ut.treeViewNodeToggle), f = (s = d?.closest("li")) === null || s === void 0 ? void 0 : s.classList.contains("pf-m-expanded");
        if (u === "ArrowLeft")
          if (m && f)
            d.click();
          else {
            const g = (o = d?.closest("ul")) === null || o === void 0 ? void 0 : o.parentElement;
            if (g?.tagName !== "DIV") {
              const b = g?.querySelector("button");
              d.tabIndex = -1, b && (b.tabIndex = 0, b.focus());
            }
          }
        else if (m && !f) {
          d.tabIndex = -1, d.click();
          const g = (c = (l = d?.closest("li")) === null || l === void 0 ? void 0 : l.querySelector("ul > li")) === null || c === void 0 ? void 0 : c.querySelector("button");
          g && (g.tabIndex = 0, g.focus());
        }
        t.preventDefault();
      }
    }, this.handleKeysCheckbox = (t) => {
      var n, r, i, s, o;
      if (!this.treeRef.current.contains(t.target))
        return;
      const l = document.activeElement, c = t.key;
      c === cn.Space && (l.click(), t.preventDefault());
      const d = Array.from((n = this.treeRef.current) === null || n === void 0 ? void 0 : n.getElementsByClassName(Ut.treeViewNode));
      Gd(t, d, (u) => u.contains(l), (u) => u.querySelector("button,input"), [], void 0, !0, !0), ["ArrowLeft", "ArrowRight"].includes(c) && (c === "ArrowLeft" ? l?.tagName === "INPUT" ? !((r = l?.parentElement) === null || r === void 0) && r.previousSibling && l.parentElement.previousSibling.focus() : l?.previousSibling && (((i = l.previousElementSibling) === null || i === void 0 ? void 0 : i.tagName) === "SPAN" ? l.previousSibling.firstChild.focus() : l.previousSibling.focus()) : l?.tagName === "INPUT" ? !((s = l.parentElement) === null || s === void 0) && s.nextSibling && l.parentElement.nextSibling.focus() : l?.nextSibling && (((o = l.nextElementSibling) === null || o === void 0 ? void 0 : o.tagName) === "SPAN" ? l.nextSibling.firstChild.focus() : l.nextSibling.focus()), t.preventDefault());
    }, this.variantStyleModifiers = {
      default: "",
      compact: Ut.modifiers.compact,
      compactNoBackground: [Ut.modifiers.compact, Ut.modifiers.noBackground]
    };
  }
  componentDidMount() {
    var t;
    if (wn && window.addEventListener("keydown", this.props.hasCheckboxes || this.props.hasSelectableNodes ? this.handleKeysCheckbox : this.handleKeys), this.props.hasCheckboxes || this.props.hasSelectableNodes) {
      const n = this.treeRef.current.getElementsByClassName(Ut.treeViewNodeToggle)[0];
      if (n && (n.tabIndex = 0), this.props.hasCheckboxes) {
        const r = this.treeRef.current.getElementsByTagName("INPUT")[0];
        r && (r.tabIndex = 0);
      }
      if (this.props.hasSelectableNodes) {
        const r = this.treeRef.current.getElementsByClassName(Ut.treeViewNodeText)[0];
        r && (r.tabIndex = 0);
      }
    } else
      ((t = this.treeRef.current) === null || t === void 0 ? void 0 : t.getElementsByClassName(Ut.treeViewNode)[0]).tabIndex = 0;
  }
  componentWillUnmount() {
    wn && window.removeEventListener("keydown", this.props.hasCheckboxes || this.props.hasSelectableNodes ? this.handleKeysCheckbox : this.handleKeys);
  }
  render() {
    const t = this.props, { children: n, hasCheckboxes: r, hasGuides: i, variant: s, className: o, hasSelectableNodes: l } = t, c = se(t, ["children", "hasCheckboxes", "hasGuides", "variant", "className", "hasSelectableNodes"]);
    return h.createElement("div", Object.assign({ className: j(Ut.treeView, i && Ut.modifiers.guides, this.variantStyleModifiers[s], o), ref: this.treeRef }, c), n);
  }
}
const Gu = (e) => {
  var { data: t, isNested: n = !1, hasCheckboxes: r = !1, hasBadges: i = !1, hasGuides: s = !1, hasSelectableNodes: o = !1, variant: l = "default", defaultAllExpanded: c = !1, allExpanded: d, icon: u, isMultiSelectable: p = !1, expandedIcon: m, parentItem: f, onSelect: g, onCheck: b, onExpand: v, onCollapse: y, toolbar: C, activeItems: S, compareItems: P = (_, E) => _.id === E.id, className: w, useMemo: A, "aria-label": k, "aria-labelledby": T } = e, O = se(e, ["data", "isNested", "hasCheckboxes", "hasBadges", "hasGuides", "hasSelectableNodes", "variant", "defaultAllExpanded", "allExpanded", "icon", "isMultiSelectable", "expandedIcon", "parentItem", "onSelect", "onCheck", "onExpand", "onCollapse", "toolbar", "activeItems", "compareItems", "className", "useMemo", "aria-label", "aria-labelledby"]);
  const I = h.createElement(tw, { isNested: n, toolbar: C, isMultiSelectable: p, "aria-label": k, "aria-labelledby": T }, t.map((_) => {
    var E, L;
    return h.createElement(nw, Object.assign({ key: ((E = _.id) === null || E === void 0 ? void 0 : E.toString()) || ((L = _.name) === null || L === void 0 ? void 0 : L.toString()), name: _.name, title: _.title, id: _.id, isExpanded: d, isSelectable: o, defaultExpanded: _.defaultExpanded !== void 0 ? _.defaultExpanded : c, onSelect: g, onCheck: b, onExpand: v, onCollapse: y, hasCheckbox: _.hasCheckbox !== void 0 ? _.hasCheckbox : r, checkProps: _.checkProps, hasBadge: _.hasBadge !== void 0 ? _.hasBadge : i, customBadgeContent: _.customBadgeContent, badgeProps: _.badgeProps, activeItems: S, parentItem: f, itemData: _, icon: _.icon !== void 0 ? _.icon : u, expandedIcon: _.expandedIcon !== void 0 ? _.expandedIcon : m, action: _.action, compareItems: P, isCompact: l === "compact" || l === "compactNoBackground", useMemo: A }, _.children && {
      children: h.createElement(Gu, { data: _.children, isNested: !0, parentItem: _, hasCheckboxes: r, hasBadges: i, hasGuides: s, hasSelectableNodes: o, variant: l, allExpanded: d, defaultAllExpanded: c, onSelect: g, onCheck: b, onExpand: v, onCollapse: y, activeItems: S, icon: u, expandedIcon: m })
    }));
  }));
  return h.createElement(h.Fragment, null, f ? I : h.createElement(RA, Object.assign({ hasSelectableNodes: o, hasCheckboxes: r, hasGuides: s, variant: l, className: w }, O), I));
};
Gu.displayName = "TreeView";
const tn = {
  button: "pf-v5-c-button",
  dirRtl: "pf-v5-m-dir-rtl",
  drawer: "pf-v5-c-drawer",
  modalBox: "pf-v5-c-modal-box",
  modifiers: {
    finished: "pf-m-finished",
    expanded: "pf-m-expanded",
    current: "pf-m-current",
    expandable: "pf-m-expandable",
    disabled: "pf-m-disabled",
    noPadding: "pf-m-no-padding"
  },
  pageMainWizard: "pf-v5-c-page__main-wizard",
  themeDark: "pf-v5-theme-dark",
  wizard: "pf-v5-c-wizard",
  wizardClose: "pf-v5-c-wizard__close",
  wizardDescription: "pf-v5-c-wizard__description",
  wizardFooter: "pf-v5-c-wizard__footer",
  wizardFooterCancel: "pf-v5-c-wizard__footer-cancel",
  wizardHeader: "pf-v5-c-wizard__header",
  wizardInnerWrap: "pf-v5-c-wizard__inner-wrap",
  wizardMain: "pf-v5-c-wizard__main",
  wizardMainBody: "pf-v5-c-wizard__main-body",
  wizardNav: "pf-v5-c-wizard__nav",
  wizardNavItem: "pf-v5-c-wizard__nav-item",
  wizardNavLink: "pf-v5-c-wizard__nav-link",
  wizardNavLinkText: "pf-v5-c-wizard__nav-link-text",
  wizardNavLinkToggle: "pf-v5-c-wizard__nav-link-toggle",
  wizardNavLinkToggleIcon: "pf-v5-c-wizard__nav-link-toggle-icon",
  wizardNavList: "pf-v5-c-wizard__nav-list",
  wizardOuterWrap: "pf-v5-c-wizard__outer-wrap",
  wizardTitle: "pf-v5-c-wizard__title",
  wizardTitleText: "pf-v5-c-wizard__title-text",
  wizardToggle: "pf-v5-c-wizard__toggle",
  wizardToggleIcon: "pf-v5-c-wizard__toggle-icon",
  wizardToggleList: "pf-v5-c-wizard__toggle-list",
  wizardToggleListItem: "pf-v5-c-wizard__toggle-list-item",
  wizardToggleNum: "pf-v5-c-wizard__toggle-num",
  wizardToggleSeparator: "pf-v5-c-wizard__toggle-separator"
};
var Sf;
(function(e) {
  e.Default = "default", e.Error = "error";
})(Sf || (Sf = {}));
var Gl;
(function(e) {
  e.Next = "next", e.Back = "back", e.Nav = "nav";
})(Gl || (Gl = {}));
function AA(e) {
  return typeof e == "function" || ne.isValidElement(e);
}
function Lv(e) {
  return typeof e == "function" || ne.isValidElement(e);
}
function aw(e) {
  return typeof e == "function" || ne.isValidElement(e);
}
function LA(e) {
  return e?.subStepIds === void 0 && !yc(e);
}
function yc(e) {
  return e?.parentId !== void 0;
}
function Wu(e) {
  return e?.subStepIds !== void 0;
}
const Qh = (e) => {
  var { children: t, className: n } = e, r = se(e, ["children", "className"]);
  return ne.createElement("footer", Object.assign({ className: j(tn.wizardFooter, n) }, r), t);
}, Hc = (e) => {
  var { activeStep: t } = e, n = se(e, ["activeStep"]);
  const r = !aw(t?.footer) && t?.footer;
  return ne.createElement(NA, Object.assign({}, n, r));
}, NA = (e) => {
  var { onNext: t, onBack: n, onClose: r, isNextDisabled: i, isBackDisabled: s, isBackHidden: o, isCancelHidden: l, nextButtonText: c = "Next", backButtonText: d = "Back", cancelButtonText: u = "Cancel", nextButtonProps: p, backButtonProps: m, cancelButtonProps: f, className: g } = e, b = se(e, ["onNext", "onBack", "onClose", "isNextDisabled", "isBackDisabled", "isBackHidden", "isCancelHidden", "nextButtonText", "backButtonText", "cancelButtonText", "nextButtonProps", "backButtonProps", "cancelButtonProps", "className"]);
  return ne.createElement(
    Qh,
    Object.assign({ className: g }, b),
    !o && ne.createElement(z, Object.assign({ variant: xe.secondary, onClick: n, isDisabled: s }, m), d),
    ne.createElement(z, Object.assign({ variant: xe.primary, type: "submit", onClick: t, isDisabled: i }, p), c),
    !l && ne.createElement(
      "div",
      { className: tn.wizardFooterCancel },
      ne.createElement(z, Object.assign({ variant: xe.link, onClick: r }, f), u)
    )
  );
};
Qh.displayName = "WizardFooterWrapper";
Hc.displayName = "WizardFooter";
const eg = ne.createContext({}), rw = ({ steps: e, footer: t, activeStepIndex: n, children: r, onNext: i, onBack: s, onClose: o, goToStepById: l, goToStepByName: c, goToStepByIndex: d, shouldFocusContent: u, mainWrapperRef: p }) => {
  const [m, f] = ne.useState(e), [g, b] = ne.useState();
  ne.useEffect(() => {
    if (m.length !== e.length) {
      const T = e.map((O) => {
        const I = m.find((_) => _.id === O.id);
        return I ? Object.assign(Object.assign({}, I), O) : O;
      });
      f(T);
    }
  }, [m, e]);
  const v = ne.useMemo(() => m.map((T, O) => Object.assign(Object.assign({}, T), e[O])), [e, m]), y = ne.useMemo(() => v.find((T) => T.index === n), [n, v]), C = ne.useCallback(() => o?.(null), [o]), S = ne.useCallback(() => i(null, v), [i, v]), P = ne.useCallback(() => s(null, v), [s, v]), w = ne.useMemo(() => {
    const T = y?.footer || g || t;
    if (aw(T)) {
      const O = T;
      return typeof O == "function" ? O(y, S, P, C) : O;
    }
    return ne.createElement(Hc, Object.assign({ activeStep: y, onNext: S, onBack: P, onClose: C, isBackDisabled: y?.index === 1 || yc(y) && y?.index === 2 }, T));
  }, [g, t, y, S, P, C]), A = ne.useCallback((T) => v.find((O) => O.id === T), [v]), k = ne.useCallback((T) => f((O) => O.map((I) => I.id === T.id ? Object.assign(Object.assign({}, I), T) : I)), []);
  return ne.createElement(eg.Provider, { value: {
    steps: v,
    activeStep: y,
    footer: w,
    close: C,
    getStep: A,
    setStep: k,
    goToNextStep: S,
    goToPrevStep: P,
    setFooter: b,
    goToStepById: ne.useCallback((T) => l(v, T), [l, v]),
    goToStepByName: ne.useCallback((T) => c(v, T), [c, v]),
    goToStepByIndex: ne.useCallback((T) => d(null, v, T), [d, v]),
    shouldFocusContent: u,
    mainWrapperRef: p
  } }, r);
};
rw.displayName = "WizardContextProvider";
const Ws = () => ne.useContext(eg), pa = (e) => {
  var { children: t, steps: n } = e, r = se(e, ["children", "steps"]);
  const { activeStep: i, setStep: s } = Ws(), { id: o, name: l, body: c, isDisabled: d, isHidden: u, navItem: p, footer: m, status: f } = r, g = Wu(i);
  return ne.useEffect(() => {
    s(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({
      id: o,
      name: l
    }, c && { body: c }), d && { isDisabled: d }), u && { isHidden: u }), p && { navItem: p }), m && { footer: m }), f && { status: f }), !g && o === i?.id && !i?.isVisited && { isVisited: !0 }));
  }, [
    c,
    m,
    o,
    d,
    u,
    l,
    p,
    f,
    g,
    s,
    i?.id,
    i?.isVisited
  ]), ne.createElement(ne.Fragment, null, t);
};
pa.displayName = "WizardStep";
const DA = (e) => ne.Children.toArray(e).reduce((t, n, r) => {
  if (MA(n)) {
    const { props: i } = n, { steps: s, id: o } = i, l = t.length + 1, c = [];
    t.push(Object.assign(Object.assign(Object.assign({ index: l, component: n }, r === 0 && !s?.length && { isVisited: !0 }), s && {
      subStepIds: s?.map((d, u) => (c.push(Object.assign(Object.assign({ index: l + u + 1, component: d, parentId: o }, r === 0 && u === 0 && { isVisited: !0 }), Nv(d.props))), d.props.id))
    }), Nv(i)), ...c);
  } else
    throw new Error("Wizard only accepts children of type WizardStep.");
  return t;
}, []);
function MA(e) {
  return ne.isValidElement(e) && e.type === pa;
}
const Nv = (e) => {
  var t = se(e, ["children", "steps"]);
  return t;
}, Dv = (e, t) => {
  if (!Wu(t) && !t.isHidden && !t.isDisabled)
    if (yc(t)) {
      const n = e.find((r) => r.id === t.parentId);
      if (!n.isHidden && !n.isDisabled)
        return !0;
    } else
      return !0;
  return !1;
}, iw = (e) => {
  var { children: t, className: n, hasNoPadding: r = !1, "aria-label": i, "aria-labelledby": s, component: o = "div" } = e, l = se(e, ["children", "className", "hasNoPadding", "aria-label", "aria-labelledby", "component"]);
  const [c, d] = ne.useState(!1), [u, p] = ne.useState(void 0), m = o, { activeStep: f, shouldFocusContent: g, mainWrapperRef: b } = ne.useContext(eg), v = i || `${f?.name} content`;
  return ne.useEffect(() => {
    const C = ch(() => {
      if (b?.current) {
        const { offsetWidth: P, offsetHeight: w, scrollHeight: A } = b.current;
        u !== P && (p(P), d(w < A));
      }
    }, 250);
    let S = () => {
    };
    if (b?.current) {
      S = tl(b.current, C);
      const { offsetHeight: P, scrollHeight: w } = b.current;
      d(P < w), p(b.current.offsetWidth);
    }
    return () => {
      S();
    };
  }, [u]), ne.createElement(
    m,
    Object.assign({ ref: b }, g && { tabIndex: -1 }, o === "div" && c && { role: "region" }, c && { "aria-label": v, "aria-labelledby": s, tabIndex: 0 }, { className: j(tn.wizardMain, n) }, l),
    ne.createElement("div", { className: j(tn.wizardMainBody, r && tn.modifiers.noPadding) }, t)
  );
};
iw.displayName = "WizardBody";
const sw = ({ steps: e, activeStep: t, footer: n, nav: r, isNavExpanded: i, toggleNavExpanded: s, "aria-label": o = "Wizard toggle" }) => {
  const l = yc(t), c = l && e.find((f) => f.id === t.parentId), u = e.filter((f) => !yc(f)).indexOf(c || t) + 1, p = ne.useCallback((f) => {
    i && f.key === cn.Escape && s?.(f);
  }, [i, s]);
  ne.useEffect(() => {
    const f = typeof document < "u" ? document.body : null;
    return f?.addEventListener("keydown", p, !1), () => {
      f?.removeEventListener("keydown", p, !1);
    };
  }, [p]);
  const m = e.map((f) => {
    var g;
    const b = ((g = f.component) === null || g === void 0 ? void 0 : g.props) || {}, { children: v, body: y } = b, C = se(b, ["children", "body"]);
    return ne.createElement(
      ne.Fragment,
      { key: f.id },
      t?.id === f.id && (y || y === void 0 ? ne.createElement(iw, Object.assign({}, y), v) : v),
      ne.createElement(
        "div",
        { key: f.id, style: { display: "none" } },
        ne.createElement(pa, Object.assign({}, C))
      )
    );
  });
  return ne.createElement(
    ne.Fragment,
    null,
    ne.createElement(
      "button",
      { onClick: s, className: j(tn.wizardToggle, i && "pf-m-expanded"), "aria-label": o, "aria-expanded": i },
      ne.createElement(
        "span",
        { className: j(tn.wizardToggleList) },
        ne.createElement(
          "span",
          { className: j(tn.wizardToggleListItem) },
          ne.createElement("span", { className: j(tn.wizardToggleNum) }, u),
          " ",
          c?.name || t?.name,
          l && ne.createElement(Nn, { className: j(tn.wizardToggleSeparator), "aria-hidden": "true" })
        ),
        l && ne.createElement("span", { className: j(tn.wizardToggleListItem) }, t?.name)
      ),
      ne.createElement(
        "span",
        { className: j(tn.wizardToggleIcon) },
        ne.createElement(jo, { "aria-hidden": "true" })
      )
    ),
    ne.createElement(
      "div",
      { className: j(tn.wizardOuterWrap) },
      ne.createElement(
        "div",
        { className: j(tn.wizardInnerWrap) },
        r,
        m
      ),
      n
    )
  );
};
sw.displayName = "WizardToggle";
const wf = (e) => {
  var { children: t, "aria-label": n, "aria-labelledby": r, isExpanded: i = !1, isInnerList: s = !1, className: o } = e, l = se(e, ["children", "aria-label", "aria-labelledby", "isExpanded", "isInnerList", "className"]);
  return s ? h.createElement("ol", Object.assign({ className: j(tn.wizardNavList, o), role: "list" }, l), t) : h.createElement(
    "nav",
    Object.assign({ className: j(tn.wizardNav, i && tn.modifiers.expanded, o), "aria-label": n, "aria-labelledby": r }, l),
    h.createElement("ol", { className: j(tn.wizardNavList), role: "list" }, t)
  );
};
wf.displayName = "WizardNav";
const FA = {
  name: "--pf-v5-global--spacer--sm",
  value: "0.5rem",
  var: "var(--pf-v5-global--spacer--sm)"
}, $A = {
  name: "--pf-v5-global--danger-color--100",
  value: "#c9190b",
  var: "var(--pf-v5-global--danger-color--100)"
}, Wl = (e) => {
  var {
    children: t = null,
    content: n = "",
    isCurrent: r = !1,
    isDisabled: i = !1,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    isVisited: s = !1,
    stepIndex: o,
    onClick: l,
    component: c = "button",
    href: d,
    isExpandable: u = !1,
    id: p,
    status: m = "default",
    target: f,
    ouiaId: g,
    ouiaSafe: b = !0,
    className: v
  } = e, y = se(e, ["children", "content", "isCurrent", "isDisabled", "isVisited", "stepIndex", "onClick", "component", "href", "isExpandable", "id", "status", "target", "ouiaId", "ouiaSafe", "className"]);
  const [C, S] = h.useState(!1), P = za(Wl.displayName, g, b);
  return h.useEffect(() => {
    S(r);
  }, [r]), c === "a" && !d && process.env.NODE_ENV !== "production" && console.error("WizardNavItem: When using an anchor, please provide an href"), h.createElement(
    "li",
    Object.assign({ className: j(tn.wizardNavItem, u && tn.modifiers.expandable, u && C && tn.modifiers.expanded, v) }, y),
    h.createElement(c, Object.assign({}, c === "a" ? { tabIndex: i ? -1 : void 0, href: d, target: f } : { disabled: i }, p && { id: p.toString() }, { onClick: (w) => {
      w.stopPropagation(), u ? S(!C || r) : l?.(w, o);
    }, className: j(tn.wizardNavLink, r && tn.modifiers.current, i && tn.modifiers.disabled), "aria-disabled": i ? !0 : null, "aria-current": r && !t ? "step" : !1 }, u && { "aria-expanded": C }, P), u ? h.createElement(
      h.Fragment,
      null,
      h.createElement("span", { className: j(tn.wizardNavLinkText) }, n),
      h.createElement(
        "span",
        { className: j(tn.wizardNavLinkToggle) },
        h.createElement(
          "span",
          { className: j(tn.wizardNavLinkToggleIcon) },
          h.createElement(Nn, { "aria-label": `${r ? "Collapse" : "Expand"} step icon` })
        )
      )
    ) : h.createElement(
      h.Fragment,
      null,
      n,
      m === Sf.Error && h.createElement(
        h.Fragment,
        null,
        h.createElement(
          "span",
          { className: "pf-v5-screen-reader" },
          ", ",
          m
        ),
        h.createElement(
          "span",
          { style: { marginLeft: FA.var } },
          h.createElement(us, { color: $A.var })
        )
      )
    )),
    t
  );
};
Wl.displayName = "WizardNavItem";
const jA = ({ nav: e, navAriaLabel: t, isVisitRequired: n, isProgressive: r, isNavExpanded: i }) => {
  const { activeStep: s, steps: o, goToStepByIndex: l } = Ws(), c = Object.assign({ isExpanded: i, "aria-label": t || e?.["aria-label"] || "Wizard steps" }, e?.["aria-labelledby"] && {
    "aria-labelledby": e["aria-labelledby"]
  });
  return ne.createElement(wf, Object.assign({}, c), o.map((d, u) => {
    var p;
    const m = o.some((b) => b.index > u + 1 && b.isVisited), f = d.isDisabled || n && !d.isVisited && !m, g = Lv(d.navItem) && ne.createElement(ne.Fragment, { key: d.id }, typeof d.navItem == "function" ? d.navItem(d, s, o, l) : d.navItem);
    if (Wu(d) && !d.isHidden) {
      let b, v = !1;
      const y = (p = d.subStepIds) === null || p === void 0 ? void 0 : p.map((S, P) => {
        const w = o.find((O) => O.id === S), A = o.some((O) => O.index > w.index && O.isVisited), k = w.isDisabled || n && !w.isVisited && !A, T = Lv(w.navItem) && ne.createElement(ne.Fragment, { key: w.id }, typeof w.navItem == "function" ? w.navItem(w, s, o, l) : w.navItem);
        if (!w.isHidden && (P === 0 && (b = w.index), s?.id === w.id && (v = !0), !r || r && w.index <= s.index))
          return T || ne.createElement(Wl, Object.assign({ key: w.id, id: w.id, content: w.name, isCurrent: s?.id === w.id, isDisabled: k || f, isVisited: w.isVisited, stepIndex: w.index, onClick: () => l(w.index), status: w.status }, w.navItem));
      }), C = ne.Children.toArray(y).some((S) => ne.isValidElement(S) && !S.props.isDisabled);
      if (!r || r && d.index <= s.index)
        return g || ne.createElement(
          Wl,
          Object.assign({ key: d.id, id: d.id, content: d.name, isExpandable: d.isExpandable, isCurrent: v, isDisabled: !C || f, isVisited: d.isVisited, stepIndex: b, onClick: () => l(b), status: d.status }, d.navItem),
          ne.createElement(wf, Object.assign({}, c, { isInnerList: !0 }), y)
        );
    }
    if (LA(d) && !d.isHidden && (!r || r && d.index <= s.index))
      return g || ne.createElement(Wl, Object.assign({ key: d.id, id: d.id, content: d.name, isCurrent: s?.id === d.id, isDisabled: f, isVisited: d.isVisited, stepIndex: d.index, onClick: () => l(d.index), status: d.status }, d.navItem));
  }));
}, Xu = (e) => {
  var { children: t, footer: n, height: r, width: i, className: s, header: o, nav: l, navAriaLabel: c, startIndex: d = 1, isVisitRequired: u = !1, isProgressive: p = !1, onStepChange: m, onSave: f, onClose: g, shouldFocusContent: b = !1 } = e, v = se(e, ["children", "footer", "height", "width", "className", "header", "nav", "navAriaLabel", "startIndex", "isVisitRequired", "isProgressive", "onStepChange", "onSave", "onClose", "shouldFocusContent"]);
  const [y, C] = ne.useState(d), S = DA(t), P = ne.useRef(S[d - 1]), w = ne.useRef(null);
  ne.useEffect(() => {
    Wu(P.current) && C(d + 1);
  }, [d]), ne.useEffect(() => {
    y > S.length && C(d);
  }, [S, y, d]);
  const A = () => setTimeout(() => {
    var E;
    !((E = w?.current) === null || E === void 0) && E.focus && w.current.focus();
  }, 0), k = (E, L = S) => {
    const F = L.find((R) => R.index > y && Dv(L, R));
    if (y >= L.length || !F?.index)
      return f ? f(E) : g?.(E);
    C(F?.index), m?.(E, F, L[y - 1], Gl.Next), b && A();
  }, T = (E, L = S) => {
    const F = [...L].reverse().find((R) => R.index < y && Dv(L, R));
    C(F?.index), m?.(E, F, L[y - 1], Gl.Back), b && A();
  }, O = (E, L = S, F) => {
    const R = L.length + 1;
    F < 1 ? F = 1 : F > R && (F = R);
    const M = L[F - 1], U = L[y - 1];
    C(F), m?.(E, M, U, Gl.Nav);
  }, I = (E = S, L) => {
    const F = E.find((U) => U.id === L), R = F?.index, M = E.length + 1;
    R > 0 && R < M && !F.isDisabled && !F.isHidden && C(R);
  }, _ = (E = S, L) => {
    const F = E.find((U) => U.name === L), R = F?.index, M = E.length + 1;
    R > 0 && R < M && !F.isDisabled && !F.isHidden && C(R);
  };
  return ne.createElement(
    rw,
    { steps: S, activeStepIndex: y, footer: n, onNext: k, onBack: T, onClose: g, goToStepById: I, goToStepByName: _, goToStepByIndex: O, shouldFocusContent: b, mainWrapperRef: w },
    ne.createElement(
      "div",
      Object.assign({ className: j(tn.wizard, s), style: Object.assign(Object.assign({}, r ? { height: r } : {}), i ? { width: i } : {}) }, v),
      o,
      ne.createElement(BA, { nav: l, navAriaLabel: c, isVisitRequired: u, isProgressive: p })
    )
  );
}, BA = ({ nav: e, navAriaLabel: t, isVisitRequired: n, isProgressive: r }) => {
  const { activeStep: i, steps: s, footer: o, goToStepByIndex: l } = Ws(), [c, d] = ne.useState(!1), u = ne.useMemo(() => AA(e) ? typeof e == "function" ? e(c, s, i, l) : e : ne.createElement(jA, { nav: e, navAriaLabel: t, isNavExpanded: c, isVisitRequired: n, isProgressive: r }), [i, n, r, l, c, e, t, s]);
  return ne.createElement(sw, { nav: u, footer: o, steps: s, activeStep: i, isNavExpanded: c, toggleNavExpanded: () => d((p) => !p) });
};
Xu.displayName = "Wizard";
const ow = (e) => {
  var { children: t = null, className: n = "", component: r = "div" } = e, i = se(e, ["children", "className", "component"]);
  const s = r;
  return h.createElement(s, Object.assign({ className: j(SS.bullseye, n) }, i), t);
};
ow.displayName = "Bullseye";
const mn = {
  flex: "pf-v5-l-flex",
  modifiers: {
    flex: "pf-m-flex",
    inlineFlex: "pf-m-inline-flex",
    column: "pf-m-column",
    columnReverse: "pf-m-column-reverse",
    row: "pf-m-row",
    rowReverse: "pf-m-row-reverse",
    wrap: "pf-m-wrap",
    wrapReverse: "pf-m-wrap-reverse",
    nowrap: "pf-m-nowrap",
    justifyContentFlexStart: "pf-m-justify-content-flex-start",
    justifyContentFlexEnd: "pf-m-justify-content-flex-end",
    justifyContentCenter: "pf-m-justify-content-center",
    justifyContentSpaceBetween: "pf-m-justify-content-space-between",
    justifyContentSpaceAround: "pf-m-justify-content-space-around",
    justifyContentSpaceEvenly: "pf-m-justify-content-space-evenly",
    alignItemsFlexStart: "pf-m-align-items-flex-start",
    alignItemsFlexEnd: "pf-m-align-items-flex-end",
    alignItemsCenter: "pf-m-align-items-center",
    alignItemsStretch: "pf-m-align-items-stretch",
    alignItemsBaseline: "pf-m-align-items-baseline",
    alignContentFlexStart: "pf-m-align-content-flex-start",
    alignContentFlexEnd: "pf-m-align-content-flex-end",
    alignContentCenter: "pf-m-align-content-center",
    alignContentStretch: "pf-m-align-content-stretch",
    alignContentSpaceBetween: "pf-m-align-content-space-between",
    alignContentSpaceAround: "pf-m-align-content-space-around",
    alignRight: "pf-m-align-right",
    alignLeft: "pf-m-align-left",
    grow: "pf-m-grow",
    shrink: "pf-m-shrink",
    fullWidth: "pf-m-full-width",
    flex_1: "pf-m-flex-1",
    flex_2: "pf-m-flex-2",
    flex_3: "pf-m-flex-3",
    flex_4: "pf-m-flex-4",
    flexDefault: "pf-m-flex-default",
    flexNone: "pf-m-flex-none",
    alignSelfFlexStart: "pf-m-align-self-flex-start",
    alignSelfFlexEnd: "pf-m-align-self-flex-end",
    alignSelfCenter: "pf-m-align-self-center",
    alignSelfBaseline: "pf-m-align-self-baseline",
    alignSelfStretch: "pf-m-align-self-stretch",
    flexOnSm: "pf-m-flex-on-sm",
    inlineFlexOnSm: "pf-m-inline-flex-on-sm",
    columnOnSm: "pf-m-column-on-sm",
    columnReverseOnSm: "pf-m-column-reverse-on-sm",
    rowOnSm: "pf-m-row-on-sm",
    rowReverseOnSm: "pf-m-row-reverse-on-sm",
    wrapOnSm: "pf-m-wrap-on-sm",
    wrapReverseOnSm: "pf-m-wrap-reverse-on-sm",
    nowrapOnSm: "pf-m-nowrap-on-sm",
    justifyContentFlexStartOnSm: "pf-m-justify-content-flex-start-on-sm",
    justifyContentFlexEndOnSm: "pf-m-justify-content-flex-end-on-sm",
    justifyContentCenterOnSm: "pf-m-justify-content-center-on-sm",
    justifyContentSpaceBetweenOnSm: "pf-m-justify-content-space-between-on-sm",
    justifyContentSpaceAroundOnSm: "pf-m-justify-content-space-around-on-sm",
    justifyContentSpaceEvenlyOnSm: "pf-m-justify-content-space-evenly-on-sm",
    alignItemsFlexStartOnSm: "pf-m-align-items-flex-start-on-sm",
    alignItemsFlexEndOnSm: "pf-m-align-items-flex-end-on-sm",
    alignItemsCenterOnSm: "pf-m-align-items-center-on-sm",
    alignItemsStretchOnSm: "pf-m-align-items-stretch-on-sm",
    alignItemsBaselineOnSm: "pf-m-align-items-baseline-on-sm",
    alignContentFlexStartOnSm: "pf-m-align-content-flex-start-on-sm",
    alignContentFlexEndOnSm: "pf-m-align-content-flex-end-on-sm",
    alignContentCenterOnSm: "pf-m-align-content-center-on-sm",
    alignContentStretchOnSm: "pf-m-align-content-stretch-on-sm",
    alignContentSpaceBetweenOnSm: "pf-m-align-content-space-between-on-sm",
    alignContentSpaceAroundOnSm: "pf-m-align-content-space-around-on-sm",
    alignRightOnSm: "pf-m-align-right-on-sm",
    alignLeftOnSm: "pf-m-align-left-on-sm",
    growOnSm: "pf-m-grow-on-sm",
    shrinkOnSm: "pf-m-shrink-on-sm",
    fullWidthOnSm: "pf-m-full-width-on-sm",
    flex_1OnSm: "pf-m-flex-1-on-sm",
    flex_2OnSm: "pf-m-flex-2-on-sm",
    flex_3OnSm: "pf-m-flex-3-on-sm",
    flex_4OnSm: "pf-m-flex-4-on-sm",
    flexDefaultOnSm: "pf-m-flex-default-on-sm",
    flexNoneOnSm: "pf-m-flex-none-on-sm",
    alignSelfFlexStartOnSm: "pf-m-align-self-flex-start-on-sm",
    alignSelfFlexEndOnSm: "pf-m-align-self-flex-end-on-sm",
    alignSelfCenterOnSm: "pf-m-align-self-center-on-sm",
    alignSelfBaselineOnSm: "pf-m-align-self-baseline-on-sm",
    alignSelfStretchOnSm: "pf-m-align-self-stretch-on-sm",
    flexOnMd: "pf-m-flex-on-md",
    inlineFlexOnMd: "pf-m-inline-flex-on-md",
    columnOnMd: "pf-m-column-on-md",
    columnReverseOnMd: "pf-m-column-reverse-on-md",
    rowOnMd: "pf-m-row-on-md",
    rowReverseOnMd: "pf-m-row-reverse-on-md",
    wrapOnMd: "pf-m-wrap-on-md",
    wrapReverseOnMd: "pf-m-wrap-reverse-on-md",
    nowrapOnMd: "pf-m-nowrap-on-md",
    justifyContentFlexStartOnMd: "pf-m-justify-content-flex-start-on-md",
    justifyContentFlexEndOnMd: "pf-m-justify-content-flex-end-on-md",
    justifyContentCenterOnMd: "pf-m-justify-content-center-on-md",
    justifyContentSpaceBetweenOnMd: "pf-m-justify-content-space-between-on-md",
    justifyContentSpaceAroundOnMd: "pf-m-justify-content-space-around-on-md",
    justifyContentSpaceEvenlyOnMd: "pf-m-justify-content-space-evenly-on-md",
    alignItemsFlexStartOnMd: "pf-m-align-items-flex-start-on-md",
    alignItemsFlexEndOnMd: "pf-m-align-items-flex-end-on-md",
    alignItemsCenterOnMd: "pf-m-align-items-center-on-md",
    alignItemsStretchOnMd: "pf-m-align-items-stretch-on-md",
    alignItemsBaselineOnMd: "pf-m-align-items-baseline-on-md",
    alignContentFlexStartOnMd: "pf-m-align-content-flex-start-on-md",
    alignContentFlexEndOnMd: "pf-m-align-content-flex-end-on-md",
    alignContentCenterOnMd: "pf-m-align-content-center-on-md",
    alignContentStretchOnMd: "pf-m-align-content-stretch-on-md",
    alignContentSpaceBetweenOnMd: "pf-m-align-content-space-between-on-md",
    alignContentSpaceAroundOnMd: "pf-m-align-content-space-around-on-md",
    alignRightOnMd: "pf-m-align-right-on-md",
    alignLeftOnMd: "pf-m-align-left-on-md",
    growOnMd: "pf-m-grow-on-md",
    shrinkOnMd: "pf-m-shrink-on-md",
    fullWidthOnMd: "pf-m-full-width-on-md",
    flex_1OnMd: "pf-m-flex-1-on-md",
    flex_2OnMd: "pf-m-flex-2-on-md",
    flex_3OnMd: "pf-m-flex-3-on-md",
    flex_4OnMd: "pf-m-flex-4-on-md",
    flexDefaultOnMd: "pf-m-flex-default-on-md",
    flexNoneOnMd: "pf-m-flex-none-on-md",
    alignSelfFlexStartOnMd: "pf-m-align-self-flex-start-on-md",
    alignSelfFlexEndOnMd: "pf-m-align-self-flex-end-on-md",
    alignSelfCenterOnMd: "pf-m-align-self-center-on-md",
    alignSelfBaselineOnMd: "pf-m-align-self-baseline-on-md",
    alignSelfStretchOnMd: "pf-m-align-self-stretch-on-md",
    flexOnLg: "pf-m-flex-on-lg",
    inlineFlexOnLg: "pf-m-inline-flex-on-lg",
    columnOnLg: "pf-m-column-on-lg",
    columnReverseOnLg: "pf-m-column-reverse-on-lg",
    rowOnLg: "pf-m-row-on-lg",
    rowReverseOnLg: "pf-m-row-reverse-on-lg",
    wrapOnLg: "pf-m-wrap-on-lg",
    wrapReverseOnLg: "pf-m-wrap-reverse-on-lg",
    nowrapOnLg: "pf-m-nowrap-on-lg",
    justifyContentFlexStartOnLg: "pf-m-justify-content-flex-start-on-lg",
    justifyContentFlexEndOnLg: "pf-m-justify-content-flex-end-on-lg",
    justifyContentCenterOnLg: "pf-m-justify-content-center-on-lg",
    justifyContentSpaceBetweenOnLg: "pf-m-justify-content-space-between-on-lg",
    justifyContentSpaceAroundOnLg: "pf-m-justify-content-space-around-on-lg",
    justifyContentSpaceEvenlyOnLg: "pf-m-justify-content-space-evenly-on-lg",
    alignItemsFlexStartOnLg: "pf-m-align-items-flex-start-on-lg",
    alignItemsFlexEndOnLg: "pf-m-align-items-flex-end-on-lg",
    alignItemsCenterOnLg: "pf-m-align-items-center-on-lg",
    alignItemsStretchOnLg: "pf-m-align-items-stretch-on-lg",
    alignItemsBaselineOnLg: "pf-m-align-items-baseline-on-lg",
    alignContentFlexStartOnLg: "pf-m-align-content-flex-start-on-lg",
    alignContentFlexEndOnLg: "pf-m-align-content-flex-end-on-lg",
    alignContentCenterOnLg: "pf-m-align-content-center-on-lg",
    alignContentStretchOnLg: "pf-m-align-content-stretch-on-lg",
    alignContentSpaceBetweenOnLg: "pf-m-align-content-space-between-on-lg",
    alignContentSpaceAroundOnLg: "pf-m-align-content-space-around-on-lg",
    alignRightOnLg: "pf-m-align-right-on-lg",
    alignLeftOnLg: "pf-m-align-left-on-lg",
    growOnLg: "pf-m-grow-on-lg",
    shrinkOnLg: "pf-m-shrink-on-lg",
    fullWidthOnLg: "pf-m-full-width-on-lg",
    flex_1OnLg: "pf-m-flex-1-on-lg",
    flex_2OnLg: "pf-m-flex-2-on-lg",
    flex_3OnLg: "pf-m-flex-3-on-lg",
    flex_4OnLg: "pf-m-flex-4-on-lg",
    flexDefaultOnLg: "pf-m-flex-default-on-lg",
    flexNoneOnLg: "pf-m-flex-none-on-lg",
    alignSelfFlexStartOnLg: "pf-m-align-self-flex-start-on-lg",
    alignSelfFlexEndOnLg: "pf-m-align-self-flex-end-on-lg",
    alignSelfCenterOnLg: "pf-m-align-self-center-on-lg",
    alignSelfBaselineOnLg: "pf-m-align-self-baseline-on-lg",
    alignSelfStretchOnLg: "pf-m-align-self-stretch-on-lg",
    flexOnXl: "pf-m-flex-on-xl",
    inlineFlexOnXl: "pf-m-inline-flex-on-xl",
    columnOnXl: "pf-m-column-on-xl",
    columnReverseOnXl: "pf-m-column-reverse-on-xl",
    rowOnXl: "pf-m-row-on-xl",
    rowReverseOnXl: "pf-m-row-reverse-on-xl",
    wrapOnXl: "pf-m-wrap-on-xl",
    wrapReverseOnXl: "pf-m-wrap-reverse-on-xl",
    nowrapOnXl: "pf-m-nowrap-on-xl",
    justifyContentFlexStartOnXl: "pf-m-justify-content-flex-start-on-xl",
    justifyContentFlexEndOnXl: "pf-m-justify-content-flex-end-on-xl",
    justifyContentCenterOnXl: "pf-m-justify-content-center-on-xl",
    justifyContentSpaceBetweenOnXl: "pf-m-justify-content-space-between-on-xl",
    justifyContentSpaceAroundOnXl: "pf-m-justify-content-space-around-on-xl",
    justifyContentSpaceEvenlyOnXl: "pf-m-justify-content-space-evenly-on-xl",
    alignItemsFlexStartOnXl: "pf-m-align-items-flex-start-on-xl",
    alignItemsFlexEndOnXl: "pf-m-align-items-flex-end-on-xl",
    alignItemsCenterOnXl: "pf-m-align-items-center-on-xl",
    alignItemsStretchOnXl: "pf-m-align-items-stretch-on-xl",
    alignItemsBaselineOnXl: "pf-m-align-items-baseline-on-xl",
    alignContentFlexStartOnXl: "pf-m-align-content-flex-start-on-xl",
    alignContentFlexEndOnXl: "pf-m-align-content-flex-end-on-xl",
    alignContentCenterOnXl: "pf-m-align-content-center-on-xl",
    alignContentStretchOnXl: "pf-m-align-content-stretch-on-xl",
    alignContentSpaceBetweenOnXl: "pf-m-align-content-space-between-on-xl",
    alignContentSpaceAroundOnXl: "pf-m-align-content-space-around-on-xl",
    alignRightOnXl: "pf-m-align-right-on-xl",
    alignLeftOnXl: "pf-m-align-left-on-xl",
    growOnXl: "pf-m-grow-on-xl",
    shrinkOnXl: "pf-m-shrink-on-xl",
    fullWidthOnXl: "pf-m-full-width-on-xl",
    flex_1OnXl: "pf-m-flex-1-on-xl",
    flex_2OnXl: "pf-m-flex-2-on-xl",
    flex_3OnXl: "pf-m-flex-3-on-xl",
    flex_4OnXl: "pf-m-flex-4-on-xl",
    flexDefaultOnXl: "pf-m-flex-default-on-xl",
    flexNoneOnXl: "pf-m-flex-none-on-xl",
    alignSelfFlexStartOnXl: "pf-m-align-self-flex-start-on-xl",
    alignSelfFlexEndOnXl: "pf-m-align-self-flex-end-on-xl",
    alignSelfCenterOnXl: "pf-m-align-self-center-on-xl",
    alignSelfBaselineOnXl: "pf-m-align-self-baseline-on-xl",
    alignSelfStretchOnXl: "pf-m-align-self-stretch-on-xl",
    flexOn_2xl: "pf-m-flex-on-2xl",
    inlineFlexOn_2xl: "pf-m-inline-flex-on-2xl",
    columnOn_2xl: "pf-m-column-on-2xl",
    columnReverseOn_2xl: "pf-m-column-reverse-on-2xl",
    rowOn_2xl: "pf-m-row-on-2xl",
    rowReverseOn_2xl: "pf-m-row-reverse-on-2xl",
    wrapOn_2xl: "pf-m-wrap-on-2xl",
    wrapReverseOn_2xl: "pf-m-wrap-reverse-on-2xl",
    nowrapOn_2xl: "pf-m-nowrap-on-2xl",
    justifyContentFlexStartOn_2xl: "pf-m-justify-content-flex-start-on-2xl",
    justifyContentFlexEndOn_2xl: "pf-m-justify-content-flex-end-on-2xl",
    justifyContentCenterOn_2xl: "pf-m-justify-content-center-on-2xl",
    justifyContentSpaceBetweenOn_2xl: "pf-m-justify-content-space-between-on-2xl",
    justifyContentSpaceAroundOn_2xl: "pf-m-justify-content-space-around-on-2xl",
    justifyContentSpaceEvenlyOn_2xl: "pf-m-justify-content-space-evenly-on-2xl",
    alignItemsFlexStartOn_2xl: "pf-m-align-items-flex-start-on-2xl",
    alignItemsFlexEndOn_2xl: "pf-m-align-items-flex-end-on-2xl",
    alignItemsCenterOn_2xl: "pf-m-align-items-center-on-2xl",
    alignItemsStretchOn_2xl: "pf-m-align-items-stretch-on-2xl",
    alignItemsBaselineOn_2xl: "pf-m-align-items-baseline-on-2xl",
    alignContentFlexStartOn_2xl: "pf-m-align-content-flex-start-on-2xl",
    alignContentFlexEndOn_2xl: "pf-m-align-content-flex-end-on-2xl",
    alignContentCenterOn_2xl: "pf-m-align-content-center-on-2xl",
    alignContentStretchOn_2xl: "pf-m-align-content-stretch-on-2xl",
    alignContentSpaceBetweenOn_2xl: "pf-m-align-content-space-between-on-2xl",
    alignContentSpaceAroundOn_2xl: "pf-m-align-content-space-around-on-2xl",
    alignRightOn_2xl: "pf-m-align-right-on-2xl",
    alignLeftOn_2xl: "pf-m-align-left-on-2xl",
    growOn_2xl: "pf-m-grow-on-2xl",
    shrinkOn_2xl: "pf-m-shrink-on-2xl",
    fullWidthOn_2xl: "pf-m-full-width-on-2xl",
    flex_1On_2xl: "pf-m-flex-1-on-2xl",
    flex_2On_2xl: "pf-m-flex-2-on-2xl",
    flex_3On_2xl: "pf-m-flex-3-on-2xl",
    flex_4On_2xl: "pf-m-flex-4-on-2xl",
    flexDefaultOn_2xl: "pf-m-flex-default-on-2xl",
    flexNoneOn_2xl: "pf-m-flex-none-on-2xl",
    alignSelfFlexStartOn_2xl: "pf-m-align-self-flex-start-on-2xl",
    alignSelfFlexEndOn_2xl: "pf-m-align-self-flex-end-on-2xl",
    alignSelfCenterOn_2xl: "pf-m-align-self-center-on-2xl",
    alignSelfBaselineOn_2xl: "pf-m-align-self-baseline-on-2xl",
    alignSelfStretchOn_2xl: "pf-m-align-self-stretch-on-2xl",
    spaceItemsNone: "pf-m-space-items-none",
    spaceItemsXs: "pf-m-space-items-xs",
    spaceItemsSm: "pf-m-space-items-sm",
    spaceItemsMd: "pf-m-space-items-md",
    spaceItemsLg: "pf-m-space-items-lg",
    spaceItemsXl: "pf-m-space-items-xl",
    spaceItems_2xl: "pf-m-space-items-2xl",
    spaceItems_3xl: "pf-m-space-items-3xl",
    spaceItems_4xl: "pf-m-space-items-4xl",
    spaceItemsNoneOnSm: "pf-m-space-items-none-on-sm",
    spaceItemsXsOnSm: "pf-m-space-items-xs-on-sm",
    spaceItemsSmOnSm: "pf-m-space-items-sm-on-sm",
    spaceItemsMdOnSm: "pf-m-space-items-md-on-sm",
    spaceItemsLgOnSm: "pf-m-space-items-lg-on-sm",
    spaceItemsXlOnSm: "pf-m-space-items-xl-on-sm",
    spaceItems_2xlOnSm: "pf-m-space-items-2xl-on-sm",
    spaceItems_3xlOnSm: "pf-m-space-items-3xl-on-sm",
    spaceItems_4xlOnSm: "pf-m-space-items-4xl-on-sm",
    spaceItemsNoneOnMd: "pf-m-space-items-none-on-md",
    spaceItemsXsOnMd: "pf-m-space-items-xs-on-md",
    spaceItemsSmOnMd: "pf-m-space-items-sm-on-md",
    spaceItemsMdOnMd: "pf-m-space-items-md-on-md",
    spaceItemsLgOnMd: "pf-m-space-items-lg-on-md",
    spaceItemsXlOnMd: "pf-m-space-items-xl-on-md",
    spaceItems_2xlOnMd: "pf-m-space-items-2xl-on-md",
    spaceItems_3xlOnMd: "pf-m-space-items-3xl-on-md",
    spaceItems_4xlOnMd: "pf-m-space-items-4xl-on-md",
    spaceItemsNoneOnLg: "pf-m-space-items-none-on-lg",
    spaceItemsXsOnLg: "pf-m-space-items-xs-on-lg",
    spaceItemsSmOnLg: "pf-m-space-items-sm-on-lg",
    spaceItemsMdOnLg: "pf-m-space-items-md-on-lg",
    spaceItemsLgOnLg: "pf-m-space-items-lg-on-lg",
    spaceItemsXlOnLg: "pf-m-space-items-xl-on-lg",
    spaceItems_2xlOnLg: "pf-m-space-items-2xl-on-lg",
    spaceItems_3xlOnLg: "pf-m-space-items-3xl-on-lg",
    spaceItems_4xlOnLg: "pf-m-space-items-4xl-on-lg",
    spaceItemsNoneOnXl: "pf-m-space-items-none-on-xl",
    spaceItemsXsOnXl: "pf-m-space-items-xs-on-xl",
    spaceItemsSmOnXl: "pf-m-space-items-sm-on-xl",
    spaceItemsMdOnXl: "pf-m-space-items-md-on-xl",
    spaceItemsLgOnXl: "pf-m-space-items-lg-on-xl",
    spaceItemsXlOnXl: "pf-m-space-items-xl-on-xl",
    spaceItems_2xlOnXl: "pf-m-space-items-2xl-on-xl",
    spaceItems_3xlOnXl: "pf-m-space-items-3xl-on-xl",
    spaceItems_4xlOnXl: "pf-m-space-items-4xl-on-xl",
    spaceItemsNoneOn_2xl: "pf-m-space-items-none-on-2xl",
    spaceItemsXsOn_2xl: "pf-m-space-items-xs-on-2xl",
    spaceItemsSmOn_2xl: "pf-m-space-items-sm-on-2xl",
    spaceItemsMdOn_2xl: "pf-m-space-items-md-on-2xl",
    spaceItemsLgOn_2xl: "pf-m-space-items-lg-on-2xl",
    spaceItemsXlOn_2xl: "pf-m-space-items-xl-on-2xl",
    spaceItems_2xlOn_2xl: "pf-m-space-items-2xl-on-2xl",
    spaceItems_3xlOn_2xl: "pf-m-space-items-3xl-on-2xl",
    spaceItems_4xlOn_2xl: "pf-m-space-items-4xl-on-2xl",
    spacerNone: "pf-m-spacer-none",
    spacerXs: "pf-m-spacer-xs",
    spacerSm: "pf-m-spacer-sm",
    spacerMd: "pf-m-spacer-md",
    spacerLg: "pf-m-spacer-lg",
    spacerXl: "pf-m-spacer-xl",
    spacer_2xl: "pf-m-spacer-2xl",
    spacer_3xl: "pf-m-spacer-3xl",
    spacer_4xl: "pf-m-spacer-4xl",
    spacerNoneOnSm: "pf-m-spacer-none-on-sm",
    spacerXsOnSm: "pf-m-spacer-xs-on-sm",
    spacerSmOnSm: "pf-m-spacer-sm-on-sm",
    spacerMdOnSm: "pf-m-spacer-md-on-sm",
    spacerLgOnSm: "pf-m-spacer-lg-on-sm",
    spacerXlOnSm: "pf-m-spacer-xl-on-sm",
    spacer_2xlOnSm: "pf-m-spacer-2xl-on-sm",
    spacer_3xlOnSm: "pf-m-spacer-3xl-on-sm",
    spacer_4xlOnSm: "pf-m-spacer-4xl-on-sm",
    spacerNoneOnMd: "pf-m-spacer-none-on-md",
    spacerXsOnMd: "pf-m-spacer-xs-on-md",
    spacerSmOnMd: "pf-m-spacer-sm-on-md",
    spacerMdOnMd: "pf-m-spacer-md-on-md",
    spacerLgOnMd: "pf-m-spacer-lg-on-md",
    spacerXlOnMd: "pf-m-spacer-xl-on-md",
    spacer_2xlOnMd: "pf-m-spacer-2xl-on-md",
    spacer_3xlOnMd: "pf-m-spacer-3xl-on-md",
    spacer_4xlOnMd: "pf-m-spacer-4xl-on-md",
    spacerNoneOnLg: "pf-m-spacer-none-on-lg",
    spacerXsOnLg: "pf-m-spacer-xs-on-lg",
    spacerSmOnLg: "pf-m-spacer-sm-on-lg",
    spacerMdOnLg: "pf-m-spacer-md-on-lg",
    spacerLgOnLg: "pf-m-spacer-lg-on-lg",
    spacerXlOnLg: "pf-m-spacer-xl-on-lg",
    spacer_2xlOnLg: "pf-m-spacer-2xl-on-lg",
    spacer_3xlOnLg: "pf-m-spacer-3xl-on-lg",
    spacer_4xlOnLg: "pf-m-spacer-4xl-on-lg",
    spacerNoneOnXl: "pf-m-spacer-none-on-xl",
    spacerXsOnXl: "pf-m-spacer-xs-on-xl",
    spacerSmOnXl: "pf-m-spacer-sm-on-xl",
    spacerMdOnXl: "pf-m-spacer-md-on-xl",
    spacerLgOnXl: "pf-m-spacer-lg-on-xl",
    spacerXlOnXl: "pf-m-spacer-xl-on-xl",
    spacer_2xlOnXl: "pf-m-spacer-2xl-on-xl",
    spacer_3xlOnXl: "pf-m-spacer-3xl-on-xl",
    spacer_4xlOnXl: "pf-m-spacer-4xl-on-xl",
    spacerNoneOn_2xl: "pf-m-spacer-none-on-2xl",
    spacerXsOn_2xl: "pf-m-spacer-xs-on-2xl",
    spacerSmOn_2xl: "pf-m-spacer-sm-on-2xl",
    spacerMdOn_2xl: "pf-m-spacer-md-on-2xl",
    spacerLgOn_2xl: "pf-m-spacer-lg-on-2xl",
    spacerXlOn_2xl: "pf-m-spacer-xl-on-2xl",
    spacer_2xlOn_2xl: "pf-m-spacer-2xl-on-2xl",
    spacer_3xlOn_2xl: "pf-m-spacer-3xl-on-2xl",
    spacer_4xlOn_2xl: "pf-m-spacer-4xl-on-2xl",
    gap: "pf-m-gap",
    gapNone: "pf-m-gap-none",
    gapXs: "pf-m-gap-xs",
    gapSm: "pf-m-gap-sm",
    gapMd: "pf-m-gap-md",
    gapLg: "pf-m-gap-lg",
    gapXl: "pf-m-gap-xl",
    gap_2xl: "pf-m-gap-2xl",
    gap_3xl: "pf-m-gap-3xl",
    gap_4xl: "pf-m-gap-4xl",
    gapOnSm: "pf-m-gap-on-sm",
    gapNoneOnSm: "pf-m-gap-none-on-sm",
    gapXsOnSm: "pf-m-gap-xs-on-sm",
    gapSmOnSm: "pf-m-gap-sm-on-sm",
    gapMdOnSm: "pf-m-gap-md-on-sm",
    gapLgOnSm: "pf-m-gap-lg-on-sm",
    gapXlOnSm: "pf-m-gap-xl-on-sm",
    gap_2xlOnSm: "pf-m-gap-2xl-on-sm",
    gap_3xlOnSm: "pf-m-gap-3xl-on-sm",
    gap_4xlOnSm: "pf-m-gap-4xl-on-sm",
    gapOnMd: "pf-m-gap-on-md",
    gapNoneOnMd: "pf-m-gap-none-on-md",
    gapXsOnMd: "pf-m-gap-xs-on-md",
    gapSmOnMd: "pf-m-gap-sm-on-md",
    gapMdOnMd: "pf-m-gap-md-on-md",
    gapLgOnMd: "pf-m-gap-lg-on-md",
    gapXlOnMd: "pf-m-gap-xl-on-md",
    gap_2xlOnMd: "pf-m-gap-2xl-on-md",
    gap_3xlOnMd: "pf-m-gap-3xl-on-md",
    gap_4xlOnMd: "pf-m-gap-4xl-on-md",
    gapOnLg: "pf-m-gap-on-lg",
    gapNoneOnLg: "pf-m-gap-none-on-lg",
    gapXsOnLg: "pf-m-gap-xs-on-lg",
    gapSmOnLg: "pf-m-gap-sm-on-lg",
    gapMdOnLg: "pf-m-gap-md-on-lg",
    gapLgOnLg: "pf-m-gap-lg-on-lg",
    gapXlOnLg: "pf-m-gap-xl-on-lg",
    gap_2xlOnLg: "pf-m-gap-2xl-on-lg",
    gap_3xlOnLg: "pf-m-gap-3xl-on-lg",
    gap_4xlOnLg: "pf-m-gap-4xl-on-lg",
    gapOnXl: "pf-m-gap-on-xl",
    gapNoneOnXl: "pf-m-gap-none-on-xl",
    gapXsOnXl: "pf-m-gap-xs-on-xl",
    gapSmOnXl: "pf-m-gap-sm-on-xl",
    gapMdOnXl: "pf-m-gap-md-on-xl",
    gapLgOnXl: "pf-m-gap-lg-on-xl",
    gapXlOnXl: "pf-m-gap-xl-on-xl",
    gap_2xlOnXl: "pf-m-gap-2xl-on-xl",
    gap_3xlOnXl: "pf-m-gap-3xl-on-xl",
    gap_4xlOnXl: "pf-m-gap-4xl-on-xl",
    gapOn_2xl: "pf-m-gap-on-2xl",
    gapNoneOn_2xl: "pf-m-gap-none-on-2xl",
    gapXsOn_2xl: "pf-m-gap-xs-on-2xl",
    gapSmOn_2xl: "pf-m-gap-sm-on-2xl",
    gapMdOn_2xl: "pf-m-gap-md-on-2xl",
    gapLgOn_2xl: "pf-m-gap-lg-on-2xl",
    gapXlOn_2xl: "pf-m-gap-xl-on-2xl",
    gap_2xlOn_2xl: "pf-m-gap-2xl-on-2xl",
    gap_3xlOn_2xl: "pf-m-gap-3xl-on-2xl",
    gap_4xlOn_2xl: "pf-m-gap-4xl-on-2xl",
    rowGap: "pf-m-row-gap",
    rowGapNone: "pf-m-row-gap-none",
    rowGapXs: "pf-m-row-gap-xs",
    rowGapSm: "pf-m-row-gap-sm",
    rowGapMd: "pf-m-row-gap-md",
    rowGapLg: "pf-m-row-gap-lg",
    rowGapXl: "pf-m-row-gap-xl",
    rowGap_2xl: "pf-m-row-gap-2xl",
    rowGap_3xl: "pf-m-row-gap-3xl",
    rowGap_4xl: "pf-m-row-gap-4xl",
    rowGapOnSm: "pf-m-row-gap-on-sm",
    rowGapNoneOnSm: "pf-m-row-gap-none-on-sm",
    rowGapXsOnSm: "pf-m-row-gap-xs-on-sm",
    rowGapSmOnSm: "pf-m-row-gap-sm-on-sm",
    rowGapMdOnSm: "pf-m-row-gap-md-on-sm",
    rowGapLgOnSm: "pf-m-row-gap-lg-on-sm",
    rowGapXlOnSm: "pf-m-row-gap-xl-on-sm",
    rowGap_2xlOnSm: "pf-m-row-gap-2xl-on-sm",
    rowGap_3xlOnSm: "pf-m-row-gap-3xl-on-sm",
    rowGap_4xlOnSm: "pf-m-row-gap-4xl-on-sm",
    rowGapOnMd: "pf-m-row-gap-on-md",
    rowGapNoneOnMd: "pf-m-row-gap-none-on-md",
    rowGapXsOnMd: "pf-m-row-gap-xs-on-md",
    rowGapSmOnMd: "pf-m-row-gap-sm-on-md",
    rowGapMdOnMd: "pf-m-row-gap-md-on-md",
    rowGapLgOnMd: "pf-m-row-gap-lg-on-md",
    rowGapXlOnMd: "pf-m-row-gap-xl-on-md",
    rowGap_2xlOnMd: "pf-m-row-gap-2xl-on-md",
    rowGap_3xlOnMd: "pf-m-row-gap-3xl-on-md",
    rowGap_4xlOnMd: "pf-m-row-gap-4xl-on-md",
    rowGapOnLg: "pf-m-row-gap-on-lg",
    rowGapNoneOnLg: "pf-m-row-gap-none-on-lg",
    rowGapXsOnLg: "pf-m-row-gap-xs-on-lg",
    rowGapSmOnLg: "pf-m-row-gap-sm-on-lg",
    rowGapMdOnLg: "pf-m-row-gap-md-on-lg",
    rowGapLgOnLg: "pf-m-row-gap-lg-on-lg",
    rowGapXlOnLg: "pf-m-row-gap-xl-on-lg",
    rowGap_2xlOnLg: "pf-m-row-gap-2xl-on-lg",
    rowGap_3xlOnLg: "pf-m-row-gap-3xl-on-lg",
    rowGap_4xlOnLg: "pf-m-row-gap-4xl-on-lg",
    rowGapOnXl: "pf-m-row-gap-on-xl",
    rowGapNoneOnXl: "pf-m-row-gap-none-on-xl",
    rowGapXsOnXl: "pf-m-row-gap-xs-on-xl",
    rowGapSmOnXl: "pf-m-row-gap-sm-on-xl",
    rowGapMdOnXl: "pf-m-row-gap-md-on-xl",
    rowGapLgOnXl: "pf-m-row-gap-lg-on-xl",
    rowGapXlOnXl: "pf-m-row-gap-xl-on-xl",
    rowGap_2xlOnXl: "pf-m-row-gap-2xl-on-xl",
    rowGap_3xlOnXl: "pf-m-row-gap-3xl-on-xl",
    rowGap_4xlOnXl: "pf-m-row-gap-4xl-on-xl",
    rowGapOn_2xl: "pf-m-row-gap-on-2xl",
    rowGapNoneOn_2xl: "pf-m-row-gap-none-on-2xl",
    rowGapXsOn_2xl: "pf-m-row-gap-xs-on-2xl",
    rowGapSmOn_2xl: "pf-m-row-gap-sm-on-2xl",
    rowGapMdOn_2xl: "pf-m-row-gap-md-on-2xl",
    rowGapLgOn_2xl: "pf-m-row-gap-lg-on-2xl",
    rowGapXlOn_2xl: "pf-m-row-gap-xl-on-2xl",
    rowGap_2xlOn_2xl: "pf-m-row-gap-2xl-on-2xl",
    rowGap_3xlOn_2xl: "pf-m-row-gap-3xl-on-2xl",
    rowGap_4xlOn_2xl: "pf-m-row-gap-4xl-on-2xl",
    columnGap: "pf-m-column-gap",
    columnGapNone: "pf-m-column-gap-none",
    columnGapXs: "pf-m-column-gap-xs",
    columnGapSm: "pf-m-column-gap-sm",
    columnGapMd: "pf-m-column-gap-md",
    columnGapLg: "pf-m-column-gap-lg",
    columnGapXl: "pf-m-column-gap-xl",
    columnGap_2xl: "pf-m-column-gap-2xl",
    columnGap_3xl: "pf-m-column-gap-3xl",
    columnGap_4xl: "pf-m-column-gap-4xl",
    columnGapOnSm: "pf-m-column-gap-on-sm",
    columnGapNoneOnSm: "pf-m-column-gap-none-on-sm",
    columnGapXsOnSm: "pf-m-column-gap-xs-on-sm",
    columnGapSmOnSm: "pf-m-column-gap-sm-on-sm",
    columnGapMdOnSm: "pf-m-column-gap-md-on-sm",
    columnGapLgOnSm: "pf-m-column-gap-lg-on-sm",
    columnGapXlOnSm: "pf-m-column-gap-xl-on-sm",
    columnGap_2xlOnSm: "pf-m-column-gap-2xl-on-sm",
    columnGap_3xlOnSm: "pf-m-column-gap-3xl-on-sm",
    columnGap_4xlOnSm: "pf-m-column-gap-4xl-on-sm",
    columnGapOnMd: "pf-m-column-gap-on-md",
    columnGapNoneOnMd: "pf-m-column-gap-none-on-md",
    columnGapXsOnMd: "pf-m-column-gap-xs-on-md",
    columnGapSmOnMd: "pf-m-column-gap-sm-on-md",
    columnGapMdOnMd: "pf-m-column-gap-md-on-md",
    columnGapLgOnMd: "pf-m-column-gap-lg-on-md",
    columnGapXlOnMd: "pf-m-column-gap-xl-on-md",
    columnGap_2xlOnMd: "pf-m-column-gap-2xl-on-md",
    columnGap_3xlOnMd: "pf-m-column-gap-3xl-on-md",
    columnGap_4xlOnMd: "pf-m-column-gap-4xl-on-md",
    columnGapOnLg: "pf-m-column-gap-on-lg",
    columnGapNoneOnLg: "pf-m-column-gap-none-on-lg",
    columnGapXsOnLg: "pf-m-column-gap-xs-on-lg",
    columnGapSmOnLg: "pf-m-column-gap-sm-on-lg",
    columnGapMdOnLg: "pf-m-column-gap-md-on-lg",
    columnGapLgOnLg: "pf-m-column-gap-lg-on-lg",
    columnGapXlOnLg: "pf-m-column-gap-xl-on-lg",
    columnGap_2xlOnLg: "pf-m-column-gap-2xl-on-lg",
    columnGap_3xlOnLg: "pf-m-column-gap-3xl-on-lg",
    columnGap_4xlOnLg: "pf-m-column-gap-4xl-on-lg",
    columnGapOnXl: "pf-m-column-gap-on-xl",
    columnGapNoneOnXl: "pf-m-column-gap-none-on-xl",
    columnGapXsOnXl: "pf-m-column-gap-xs-on-xl",
    columnGapSmOnXl: "pf-m-column-gap-sm-on-xl",
    columnGapMdOnXl: "pf-m-column-gap-md-on-xl",
    columnGapLgOnXl: "pf-m-column-gap-lg-on-xl",
    columnGapXlOnXl: "pf-m-column-gap-xl-on-xl",
    columnGap_2xlOnXl: "pf-m-column-gap-2xl-on-xl",
    columnGap_3xlOnXl: "pf-m-column-gap-3xl-on-xl",
    columnGap_4xlOnXl: "pf-m-column-gap-4xl-on-xl",
    columnGapOn_2xl: "pf-m-column-gap-on-2xl",
    columnGapNoneOn_2xl: "pf-m-column-gap-none-on-2xl",
    columnGapXsOn_2xl: "pf-m-column-gap-xs-on-2xl",
    columnGapSmOn_2xl: "pf-m-column-gap-sm-on-2xl",
    columnGapMdOn_2xl: "pf-m-column-gap-md-on-2xl",
    columnGapLgOn_2xl: "pf-m-column-gap-lg-on-2xl",
    columnGapXlOn_2xl: "pf-m-column-gap-xl-on-2xl",
    columnGap_2xlOn_2xl: "pf-m-column-gap-2xl-on-2xl",
    columnGap_3xlOn_2xl: "pf-m-column-gap-3xl-on-2xl",
    columnGap_4xlOn_2xl: "pf-m-column-gap-4xl-on-2xl"
  }
}, lw = {
  name: "--pf-v5-l-flex--item--Order",
  value: "0",
  var: "var(--pf-v5-l-flex--item--Order)"
}, Qn = (e) => {
  var { children: t = null, className: n = "", component: r = "div", spacer: i, spaceItems: s, gap: o, rowGap: l, columnGap: c, grow: d, shrink: u, flex: p, direction: m, alignItems: f, alignContent: g, alignSelf: b, align: v, justifyContent: y, display: C, fullWidth: S, flexWrap: P, order: w, style: A } = e, k = se(e, ["children", "className", "component", "spacer", "spaceItems", "gap", "rowGap", "columnGap", "grow", "shrink", "flex", "direction", "alignItems", "alignContent", "alignSelf", "align", "justifyContent", "display", "fullWidth", "flexWrap", "order", "style"]);
  const T = r;
  return h.createElement(T, Object.assign({ className: j(mn.flex, pt(i, mn), pt(s, mn), pt(d, mn), pt(u, mn), pt(p, mn), pt(m, mn), pt(f, mn), pt(g, mn), pt(b, mn), pt(v, mn), pt(y, mn), pt(C, mn), pt(S, mn), pt(P, mn), pt(o, mn), pt(l, mn), pt(c, mn), n), style: A || w ? Object.assign(Object.assign({}, A), Mo(w, lw.name)) : void 0 }, k), t);
};
Qn.displayName = "Flex";
const Dt = (e) => {
  var { children: t = null, className: n = "", component: r = "div", spacer: i, grow: s, shrink: o, flex: l, alignSelf: c, align: d, fullWidth: u, order: p, style: m } = e, f = se(e, ["children", "className", "component", "spacer", "grow", "shrink", "flex", "alignSelf", "align", "fullWidth", "order", "style"]);
  const g = r;
  return h.createElement(g, Object.assign({}, f, { className: j(pt(i, mn), pt(s, mn), pt(o, mn), pt(l, mn), pt(c, mn), pt(d, mn), pt(u, mn), n), style: m || p ? Object.assign(Object.assign({}, m), Mo(p, lw.name)) : void 0 }), t);
};
Dt.displayName = "FlexItem";
const Mv = {
  gallery: "pf-v5-l-gallery",
  modifiers: {
    gutter: "pf-m-gutter"
  }
}, UA = {
  name: "--pf-v5-l-gallery--GridTemplateColumns--min",
  value: "250px",
  var: "var(--pf-v5-l-gallery--GridTemplateColumns--min)"
}, VA = {
  name: "--pf-v5-l-gallery--GridTemplateColumns--max",
  value: "1fr",
  var: "var(--pf-v5-l-gallery--GridTemplateColumns--max)"
}, iu = (e) => {
  var { children: t = null, className: n = "", component: r = "div", hasGutter: i = !1, minWidths: s, maxWidths: o } = e, l = se(e, ["children", "className", "component", "hasGutter", "minWidths", "maxWidths"]);
  const c = {}, d = r;
  s && Object.entries(s || {}).map(([m, f]) => c[`${UA.name}${m !== "default" ? `-on-${m}` : ""}`] = f);
  const u = {};
  o && Object.entries(o || {}).map(([m, f]) => u[`${VA.name}${m !== "default" ? `-on-${m}` : ""}`] = f);
  const p = Object.assign(Object.assign({}, c), u);
  return h.createElement(d, Object.assign({ className: j(Mv.gallery, i && Mv.modifiers.gutter, n) }, l, (s || o) && { style: Object.assign(Object.assign({}, p), l.style) }), t);
};
iu.displayName = "Gallery";
const cw = (e) => {
  var { children: t = null, component: n = "div" } = e, r = se(e, ["children", "component"]);
  const i = n;
  return h.createElement(i, Object.assign({}, r), t);
};
cw.displayName = "GalleryItem";
const yr = {
  grid: "pf-v5-l-grid",
  gridItem: "pf-v5-l-grid__item",
  modifiers: {
    all_1Col: "pf-m-all-1-col",
    all_2Col: "pf-m-all-2-col",
    all_3Col: "pf-m-all-3-col",
    all_4Col: "pf-m-all-4-col",
    all_5Col: "pf-m-all-5-col",
    all_6Col: "pf-m-all-6-col",
    all_7Col: "pf-m-all-7-col",
    all_8Col: "pf-m-all-8-col",
    all_9Col: "pf-m-all-9-col",
    all_10Col: "pf-m-all-10-col",
    all_11Col: "pf-m-all-11-col",
    all_12Col: "pf-m-all-12-col",
    all_1ColOnSm: "pf-m-all-1-col-on-sm",
    all_2ColOnSm: "pf-m-all-2-col-on-sm",
    all_3ColOnSm: "pf-m-all-3-col-on-sm",
    all_4ColOnSm: "pf-m-all-4-col-on-sm",
    all_5ColOnSm: "pf-m-all-5-col-on-sm",
    all_6ColOnSm: "pf-m-all-6-col-on-sm",
    all_7ColOnSm: "pf-m-all-7-col-on-sm",
    all_8ColOnSm: "pf-m-all-8-col-on-sm",
    all_9ColOnSm: "pf-m-all-9-col-on-sm",
    all_10ColOnSm: "pf-m-all-10-col-on-sm",
    all_11ColOnSm: "pf-m-all-11-col-on-sm",
    all_12ColOnSm: "pf-m-all-12-col-on-sm",
    all_1ColOnMd: "pf-m-all-1-col-on-md",
    all_2ColOnMd: "pf-m-all-2-col-on-md",
    all_3ColOnMd: "pf-m-all-3-col-on-md",
    all_4ColOnMd: "pf-m-all-4-col-on-md",
    all_5ColOnMd: "pf-m-all-5-col-on-md",
    all_6ColOnMd: "pf-m-all-6-col-on-md",
    all_7ColOnMd: "pf-m-all-7-col-on-md",
    all_8ColOnMd: "pf-m-all-8-col-on-md",
    all_9ColOnMd: "pf-m-all-9-col-on-md",
    all_10ColOnMd: "pf-m-all-10-col-on-md",
    all_11ColOnMd: "pf-m-all-11-col-on-md",
    all_12ColOnMd: "pf-m-all-12-col-on-md",
    all_1ColOnLg: "pf-m-all-1-col-on-lg",
    all_2ColOnLg: "pf-m-all-2-col-on-lg",
    all_3ColOnLg: "pf-m-all-3-col-on-lg",
    all_4ColOnLg: "pf-m-all-4-col-on-lg",
    all_5ColOnLg: "pf-m-all-5-col-on-lg",
    all_6ColOnLg: "pf-m-all-6-col-on-lg",
    all_7ColOnLg: "pf-m-all-7-col-on-lg",
    all_8ColOnLg: "pf-m-all-8-col-on-lg",
    all_9ColOnLg: "pf-m-all-9-col-on-lg",
    all_10ColOnLg: "pf-m-all-10-col-on-lg",
    all_11ColOnLg: "pf-m-all-11-col-on-lg",
    all_12ColOnLg: "pf-m-all-12-col-on-lg",
    all_1ColOnXl: "pf-m-all-1-col-on-xl",
    all_2ColOnXl: "pf-m-all-2-col-on-xl",
    all_3ColOnXl: "pf-m-all-3-col-on-xl",
    all_4ColOnXl: "pf-m-all-4-col-on-xl",
    all_5ColOnXl: "pf-m-all-5-col-on-xl",
    all_6ColOnXl: "pf-m-all-6-col-on-xl",
    all_7ColOnXl: "pf-m-all-7-col-on-xl",
    all_8ColOnXl: "pf-m-all-8-col-on-xl",
    all_9ColOnXl: "pf-m-all-9-col-on-xl",
    all_10ColOnXl: "pf-m-all-10-col-on-xl",
    all_11ColOnXl: "pf-m-all-11-col-on-xl",
    all_12ColOnXl: "pf-m-all-12-col-on-xl",
    all_1ColOn_2xl: "pf-m-all-1-col-on-2xl",
    all_2ColOn_2xl: "pf-m-all-2-col-on-2xl",
    all_3ColOn_2xl: "pf-m-all-3-col-on-2xl",
    all_4ColOn_2xl: "pf-m-all-4-col-on-2xl",
    all_5ColOn_2xl: "pf-m-all-5-col-on-2xl",
    all_6ColOn_2xl: "pf-m-all-6-col-on-2xl",
    all_7ColOn_2xl: "pf-m-all-7-col-on-2xl",
    all_8ColOn_2xl: "pf-m-all-8-col-on-2xl",
    all_9ColOn_2xl: "pf-m-all-9-col-on-2xl",
    all_10ColOn_2xl: "pf-m-all-10-col-on-2xl",
    all_11ColOn_2xl: "pf-m-all-11-col-on-2xl",
    all_12ColOn_2xl: "pf-m-all-12-col-on-2xl",
    "1Col": "pf-m-1-col",
    "2Col": "pf-m-2-col",
    "3Col": "pf-m-3-col",
    "4Col": "pf-m-4-col",
    "5Col": "pf-m-5-col",
    "6Col": "pf-m-6-col",
    "7Col": "pf-m-7-col",
    "8Col": "pf-m-8-col",
    "9Col": "pf-m-9-col",
    "10Col": "pf-m-10-col",
    "11Col": "pf-m-11-col",
    "12Col": "pf-m-12-col",
    offset_1Col: "pf-m-offset-1-col",
    offset_2Col: "pf-m-offset-2-col",
    offset_3Col: "pf-m-offset-3-col",
    offset_4Col: "pf-m-offset-4-col",
    offset_5Col: "pf-m-offset-5-col",
    offset_6Col: "pf-m-offset-6-col",
    offset_7Col: "pf-m-offset-7-col",
    offset_8Col: "pf-m-offset-8-col",
    offset_9Col: "pf-m-offset-9-col",
    offset_10Col: "pf-m-offset-10-col",
    offset_11Col: "pf-m-offset-11-col",
    offset_12Col: "pf-m-offset-12-col",
    "1Row": "pf-m-1-row",
    "2Row": "pf-m-2-row",
    "3Row": "pf-m-3-row",
    "4Row": "pf-m-4-row",
    "5Row": "pf-m-5-row",
    "6Row": "pf-m-6-row",
    "7Row": "pf-m-7-row",
    "8Row": "pf-m-8-row",
    "9Row": "pf-m-9-row",
    "10Row": "pf-m-10-row",
    "11Row": "pf-m-11-row",
    "12Row": "pf-m-12-row",
    "1ColOnSm": "pf-m-1-col-on-sm",
    "2ColOnSm": "pf-m-2-col-on-sm",
    "3ColOnSm": "pf-m-3-col-on-sm",
    "4ColOnSm": "pf-m-4-col-on-sm",
    "5ColOnSm": "pf-m-5-col-on-sm",
    "6ColOnSm": "pf-m-6-col-on-sm",
    "7ColOnSm": "pf-m-7-col-on-sm",
    "8ColOnSm": "pf-m-8-col-on-sm",
    "9ColOnSm": "pf-m-9-col-on-sm",
    "10ColOnSm": "pf-m-10-col-on-sm",
    "11ColOnSm": "pf-m-11-col-on-sm",
    "12ColOnSm": "pf-m-12-col-on-sm",
    offset_1ColOnSm: "pf-m-offset-1-col-on-sm",
    offset_2ColOnSm: "pf-m-offset-2-col-on-sm",
    offset_3ColOnSm: "pf-m-offset-3-col-on-sm",
    offset_4ColOnSm: "pf-m-offset-4-col-on-sm",
    offset_5ColOnSm: "pf-m-offset-5-col-on-sm",
    offset_6ColOnSm: "pf-m-offset-6-col-on-sm",
    offset_7ColOnSm: "pf-m-offset-7-col-on-sm",
    offset_8ColOnSm: "pf-m-offset-8-col-on-sm",
    offset_9ColOnSm: "pf-m-offset-9-col-on-sm",
    offset_10ColOnSm: "pf-m-offset-10-col-on-sm",
    offset_11ColOnSm: "pf-m-offset-11-col-on-sm",
    offset_12ColOnSm: "pf-m-offset-12-col-on-sm",
    "1RowOnSm": "pf-m-1-row-on-sm",
    "2RowOnSm": "pf-m-2-row-on-sm",
    "3RowOnSm": "pf-m-3-row-on-sm",
    "4RowOnSm": "pf-m-4-row-on-sm",
    "5RowOnSm": "pf-m-5-row-on-sm",
    "6RowOnSm": "pf-m-6-row-on-sm",
    "7RowOnSm": "pf-m-7-row-on-sm",
    "8RowOnSm": "pf-m-8-row-on-sm",
    "9RowOnSm": "pf-m-9-row-on-sm",
    "10RowOnSm": "pf-m-10-row-on-sm",
    "11RowOnSm": "pf-m-11-row-on-sm",
    "12RowOnSm": "pf-m-12-row-on-sm",
    "1ColOnMd": "pf-m-1-col-on-md",
    "2ColOnMd": "pf-m-2-col-on-md",
    "3ColOnMd": "pf-m-3-col-on-md",
    "4ColOnMd": "pf-m-4-col-on-md",
    "5ColOnMd": "pf-m-5-col-on-md",
    "6ColOnMd": "pf-m-6-col-on-md",
    "7ColOnMd": "pf-m-7-col-on-md",
    "8ColOnMd": "pf-m-8-col-on-md",
    "9ColOnMd": "pf-m-9-col-on-md",
    "10ColOnMd": "pf-m-10-col-on-md",
    "11ColOnMd": "pf-m-11-col-on-md",
    "12ColOnMd": "pf-m-12-col-on-md",
    offset_1ColOnMd: "pf-m-offset-1-col-on-md",
    offset_2ColOnMd: "pf-m-offset-2-col-on-md",
    offset_3ColOnMd: "pf-m-offset-3-col-on-md",
    offset_4ColOnMd: "pf-m-offset-4-col-on-md",
    offset_5ColOnMd: "pf-m-offset-5-col-on-md",
    offset_6ColOnMd: "pf-m-offset-6-col-on-md",
    offset_7ColOnMd: "pf-m-offset-7-col-on-md",
    offset_8ColOnMd: "pf-m-offset-8-col-on-md",
    offset_9ColOnMd: "pf-m-offset-9-col-on-md",
    offset_10ColOnMd: "pf-m-offset-10-col-on-md",
    offset_11ColOnMd: "pf-m-offset-11-col-on-md",
    offset_12ColOnMd: "pf-m-offset-12-col-on-md",
    "1RowOnMd": "pf-m-1-row-on-md",
    "2RowOnMd": "pf-m-2-row-on-md",
    "3RowOnMd": "pf-m-3-row-on-md",
    "4RowOnMd": "pf-m-4-row-on-md",
    "5RowOnMd": "pf-m-5-row-on-md",
    "6RowOnMd": "pf-m-6-row-on-md",
    "7RowOnMd": "pf-m-7-row-on-md",
    "8RowOnMd": "pf-m-8-row-on-md",
    "9RowOnMd": "pf-m-9-row-on-md",
    "10RowOnMd": "pf-m-10-row-on-md",
    "11RowOnMd": "pf-m-11-row-on-md",
    "12RowOnMd": "pf-m-12-row-on-md",
    "1ColOnLg": "pf-m-1-col-on-lg",
    "2ColOnLg": "pf-m-2-col-on-lg",
    "3ColOnLg": "pf-m-3-col-on-lg",
    "4ColOnLg": "pf-m-4-col-on-lg",
    "5ColOnLg": "pf-m-5-col-on-lg",
    "6ColOnLg": "pf-m-6-col-on-lg",
    "7ColOnLg": "pf-m-7-col-on-lg",
    "8ColOnLg": "pf-m-8-col-on-lg",
    "9ColOnLg": "pf-m-9-col-on-lg",
    "10ColOnLg": "pf-m-10-col-on-lg",
    "11ColOnLg": "pf-m-11-col-on-lg",
    "12ColOnLg": "pf-m-12-col-on-lg",
    offset_1ColOnLg: "pf-m-offset-1-col-on-lg",
    offset_2ColOnLg: "pf-m-offset-2-col-on-lg",
    offset_3ColOnLg: "pf-m-offset-3-col-on-lg",
    offset_4ColOnLg: "pf-m-offset-4-col-on-lg",
    offset_5ColOnLg: "pf-m-offset-5-col-on-lg",
    offset_6ColOnLg: "pf-m-offset-6-col-on-lg",
    offset_7ColOnLg: "pf-m-offset-7-col-on-lg",
    offset_8ColOnLg: "pf-m-offset-8-col-on-lg",
    offset_9ColOnLg: "pf-m-offset-9-col-on-lg",
    offset_10ColOnLg: "pf-m-offset-10-col-on-lg",
    offset_11ColOnLg: "pf-m-offset-11-col-on-lg",
    offset_12ColOnLg: "pf-m-offset-12-col-on-lg",
    "1RowOnLg": "pf-m-1-row-on-lg",
    "2RowOnLg": "pf-m-2-row-on-lg",
    "3RowOnLg": "pf-m-3-row-on-lg",
    "4RowOnLg": "pf-m-4-row-on-lg",
    "5RowOnLg": "pf-m-5-row-on-lg",
    "6RowOnLg": "pf-m-6-row-on-lg",
    "7RowOnLg": "pf-m-7-row-on-lg",
    "8RowOnLg": "pf-m-8-row-on-lg",
    "9RowOnLg": "pf-m-9-row-on-lg",
    "10RowOnLg": "pf-m-10-row-on-lg",
    "11RowOnLg": "pf-m-11-row-on-lg",
    "12RowOnLg": "pf-m-12-row-on-lg",
    "1ColOnXl": "pf-m-1-col-on-xl",
    "2ColOnXl": "pf-m-2-col-on-xl",
    "3ColOnXl": "pf-m-3-col-on-xl",
    "4ColOnXl": "pf-m-4-col-on-xl",
    "5ColOnXl": "pf-m-5-col-on-xl",
    "6ColOnXl": "pf-m-6-col-on-xl",
    "7ColOnXl": "pf-m-7-col-on-xl",
    "8ColOnXl": "pf-m-8-col-on-xl",
    "9ColOnXl": "pf-m-9-col-on-xl",
    "10ColOnXl": "pf-m-10-col-on-xl",
    "11ColOnXl": "pf-m-11-col-on-xl",
    "12ColOnXl": "pf-m-12-col-on-xl",
    offset_1ColOnXl: "pf-m-offset-1-col-on-xl",
    offset_2ColOnXl: "pf-m-offset-2-col-on-xl",
    offset_3ColOnXl: "pf-m-offset-3-col-on-xl",
    offset_4ColOnXl: "pf-m-offset-4-col-on-xl",
    offset_5ColOnXl: "pf-m-offset-5-col-on-xl",
    offset_6ColOnXl: "pf-m-offset-6-col-on-xl",
    offset_7ColOnXl: "pf-m-offset-7-col-on-xl",
    offset_8ColOnXl: "pf-m-offset-8-col-on-xl",
    offset_9ColOnXl: "pf-m-offset-9-col-on-xl",
    offset_10ColOnXl: "pf-m-offset-10-col-on-xl",
    offset_11ColOnXl: "pf-m-offset-11-col-on-xl",
    offset_12ColOnXl: "pf-m-offset-12-col-on-xl",
    "1RowOnXl": "pf-m-1-row-on-xl",
    "2RowOnXl": "pf-m-2-row-on-xl",
    "3RowOnXl": "pf-m-3-row-on-xl",
    "4RowOnXl": "pf-m-4-row-on-xl",
    "5RowOnXl": "pf-m-5-row-on-xl",
    "6RowOnXl": "pf-m-6-row-on-xl",
    "7RowOnXl": "pf-m-7-row-on-xl",
    "8RowOnXl": "pf-m-8-row-on-xl",
    "9RowOnXl": "pf-m-9-row-on-xl",
    "10RowOnXl": "pf-m-10-row-on-xl",
    "11RowOnXl": "pf-m-11-row-on-xl",
    "12RowOnXl": "pf-m-12-row-on-xl",
    "1ColOn_2xl": "pf-m-1-col-on-2xl",
    "2ColOn_2xl": "pf-m-2-col-on-2xl",
    "3ColOn_2xl": "pf-m-3-col-on-2xl",
    "4ColOn_2xl": "pf-m-4-col-on-2xl",
    "5ColOn_2xl": "pf-m-5-col-on-2xl",
    "6ColOn_2xl": "pf-m-6-col-on-2xl",
    "7ColOn_2xl": "pf-m-7-col-on-2xl",
    "8ColOn_2xl": "pf-m-8-col-on-2xl",
    "9ColOn_2xl": "pf-m-9-col-on-2xl",
    "10ColOn_2xl": "pf-m-10-col-on-2xl",
    "11ColOn_2xl": "pf-m-11-col-on-2xl",
    "12ColOn_2xl": "pf-m-12-col-on-2xl",
    offset_1ColOn_2xl: "pf-m-offset-1-col-on-2xl",
    offset_2ColOn_2xl: "pf-m-offset-2-col-on-2xl",
    offset_3ColOn_2xl: "pf-m-offset-3-col-on-2xl",
    offset_4ColOn_2xl: "pf-m-offset-4-col-on-2xl",
    offset_5ColOn_2xl: "pf-m-offset-5-col-on-2xl",
    offset_6ColOn_2xl: "pf-m-offset-6-col-on-2xl",
    offset_7ColOn_2xl: "pf-m-offset-7-col-on-2xl",
    offset_8ColOn_2xl: "pf-m-offset-8-col-on-2xl",
    offset_9ColOn_2xl: "pf-m-offset-9-col-on-2xl",
    offset_10ColOn_2xl: "pf-m-offset-10-col-on-2xl",
    offset_11ColOn_2xl: "pf-m-offset-11-col-on-2xl",
    offset_12ColOn_2xl: "pf-m-offset-12-col-on-2xl",
    "1RowOn_2xl": "pf-m-1-row-on-2xl",
    "2RowOn_2xl": "pf-m-2-row-on-2xl",
    "3RowOn_2xl": "pf-m-3-row-on-2xl",
    "4RowOn_2xl": "pf-m-4-row-on-2xl",
    "5RowOn_2xl": "pf-m-5-row-on-2xl",
    "6RowOn_2xl": "pf-m-6-row-on-2xl",
    "7RowOn_2xl": "pf-m-7-row-on-2xl",
    "8RowOn_2xl": "pf-m-8-row-on-2xl",
    "9RowOn_2xl": "pf-m-9-row-on-2xl",
    "10RowOn_2xl": "pf-m-10-row-on-2xl",
    "11RowOn_2xl": "pf-m-11-row-on-2xl",
    "12RowOn_2xl": "pf-m-12-row-on-2xl",
    gutter: "pf-m-gutter"
  }
};
var Fv;
(function(e) {
  e.xs = "xs", e.sm = "sm", e.md = "md", e.lg = "lg", e.xl = "xl", e["2xl"] = "2xl", e["3xl"] = "3xl", e["4xl"] = "4xl";
})(Fv || (Fv = {}));
var su;
(function(e) {
  e.sm = "Sm", e.md = "Md", e.lg = "Lg", e.xl = "Xl", e.xl2 = "_2xl";
})(su || (su = {}));
const dw = {
  name: "--pf-v5-l-grid--item--Order",
  value: "0",
  var: "var(--pf-v5-l-grid--item--Order)"
}, Ha = (e) => {
  var { children: t = null, className: n = "", component: r = "div", hasGutter: i, span: s = null, order: o, style: l } = e, c = se(e, ["children", "className", "component", "hasGutter", "span", "order", "style"]);
  const d = [yr.grid, s && yr.modifiers[`all_${s}Col`]], u = r;
  return Object.entries(su).forEach(([p, m]) => {
    const f = p, g = c[f];
    g && d.push(yr.modifiers[`all_${g}ColOn${m}`]), delete c[f];
  }), h.createElement(u, Object.assign({ className: j(...d, i && yr.modifiers.gutter, n), style: l || o ? Object.assign(Object.assign({}, l), Mo(o, dw.name)) : void 0 }, c), t);
};
Ha.displayName = "Grid";
const Wt = (e) => {
  var { children: t = null, className: n = "", component: r = "div", span: i = null, rowSpan: s = null, offset: o = null, order: l, style: c } = e, d = se(e, ["children", "className", "component", "span", "rowSpan", "offset", "order", "style"]);
  const u = [
    yr.gridItem,
    i && yr.modifiers[`${i}Col`],
    s && yr.modifiers[`${s}Row`],
    o && yr.modifiers[`offset_${o}Col`]
  ], p = r;
  return Object.entries(su).forEach(([m, f]) => {
    const g = m, b = `${g}RowSpan`, v = `${g}Offset`, y = d[g], C = d[b], S = d[v];
    y && u.push(yr.modifiers[`${y}ColOn${f}`]), C && u.push(yr.modifiers[`${C}RowOn${f}`]), S && u.push(yr.modifiers[`offset_${S}ColOn${f}`]), delete d[g], delete d[b], delete d[v];
  }), h.createElement(p, Object.assign({ className: j(...u, n), style: c || l ? Object.assign(Object.assign({}, c), Mo(l, dw.name)) : void 0 }, d), t);
};
Wt.displayName = "GridItem";
const $v = {
  level: "pf-v5-l-level",
  modifiers: {
    gutter: "pf-m-gutter"
  }
}, Of = (e) => {
  var { hasGutter: t, className: n = "", children: r = null } = e, i = se(e, ["hasGutter", "className", "children"]);
  return h.createElement("div", Object.assign({}, i, { className: j($v.level, t && $v.modifiers.gutter, n) }), r);
};
Of.displayName = "Level";
const Fl = (e) => {
  var { children: t = null } = e, n = se(e, ["children"]);
  return h.createElement("div", Object.assign({}, n), t);
};
Fl.displayName = "LevelItem";
const Xl = {
  modifiers: {
    wrap: "pf-m-wrap",
    fill: "pf-m-fill",
    gutter: "pf-m-gutter"
  },
  split: "pf-v5-l-split",
  splitItem: "pf-v5-l-split__item"
}, ca = (e) => {
  var { hasGutter: t = !1, isWrappable: n = !1, className: r = "", children: i = null, component: s = "div" } = e, o = se(e, ["hasGutter", "isWrappable", "className", "children", "component"]);
  const l = s;
  return h.createElement(l, Object.assign({}, o, { className: j(Xl.split, t && Xl.modifiers.gutter, n && Xl.modifiers.wrap, r) }), i);
};
ca.displayName = "Split";
const $t = (e) => {
  var { isFilled: t = !1, className: n = "", children: r = null } = e, i = se(e, ["isFilled", "className", "children"]);
  return h.createElement("div", Object.assign({}, i, { className: j(Xl.splitItem, t && Xl.modifiers.fill, n) }), r);
};
$t.displayName = "SplitItem";
const ou = {
  modifiers: {
    fill: "pf-m-fill",
    gutter: "pf-m-gutter"
  },
  stack: "pf-v5-l-stack",
  stackItem: "pf-v5-l-stack__item"
}, Xs = (e) => {
  var { hasGutter: t = !1, className: n = "", children: r = null, component: i = "div" } = e, s = se(e, ["hasGutter", "className", "children", "component"]);
  const o = i;
  return h.createElement(o, Object.assign({}, s, { className: j(ou.stack, t && ou.modifiers.gutter, n) }), r);
};
Xs.displayName = "Stack";
const Jn = (e) => {
  var { isFilled: t = !1, className: n = "", children: r = null } = e, i = se(e, ["isFilled", "className", "children"]);
  return h.createElement("div", Object.assign({}, i, { className: j(ou.stackItem, t && ou.modifiers.fill, n) }), r);
};
Jn.displayName = "StackItem";
function uw(e) {
  if (!(this instanceof uw))
    throw new Error("The 'Keycloak' constructor must be invoked with 'new'.");
  if (typeof e != "string" && !sm(e))
    throw new Error("The 'Keycloak' constructor must be provided with a configuration object, or a URL to a JSON configuration file.");
  if (sm(e)) {
    const N = "oidcProvider" in e ? ["clientId"] : ["url", "realm", "clientId"];
    for (const $ of N)
      if (!e[$])
        throw new Error(`The configuration object is missing the required '${$}' property.`);
  }
  var t = this, n, r = [], i, s = {
    enable: !0,
    callbackList: [],
    interval: 5
  };
  t.didInitialize = !1;
  var o = !0, l = G(console.info), c = G(console.warn);
  globalThis.isSecureContext || c(
    `[KEYCLOAK] Keycloak JS must be used in a 'secure context' to function properly as it relies on browser APIs that are otherwise not available.
Continuing to run your application insecurely will lead to unexpected behavior and breakage.

For more information see: https://developer.mozilla.org/en-US/docs/Web/Security/Secure_Contexts`
  ), t.init = function(N = {}) {
    if (t.didInitialize)
      throw new Error("A 'Keycloak' instance can only be initialized once.");
    t.didInitialize = !0, t.authenticated = !1, i = K();
    var $ = ["default", "cordova", "cordova-native"];
    if ($.indexOf(N.adapter) > -1 ? n = F(N.adapter) : typeof N.adapter == "object" ? n = N.adapter : window.Cordova || window.cordova ? n = F("cordova") : n = F(), typeof N.useNonce < "u" && (o = N.useNonce), typeof N.checkLoginIframe < "u" && (s.enable = N.checkLoginIframe), N.checkLoginIframeInterval && (s.interval = N.checkLoginIframeInterval), N.onLoad === "login-required" && (t.loginRequired = !0), N.responseMode)
      if (N.responseMode === "query" || N.responseMode === "fragment")
        t.responseMode = N.responseMode;
      else
        throw "Invalid value for responseMode";
    if (N.flow) {
      switch (N.flow) {
        case "standard":
          t.responseType = "code";
          break;
        case "implicit":
          t.responseType = "id_token token";
          break;
        case "hybrid":
          t.responseType = "code id_token token";
          break;
        default:
          throw "Invalid value for flow";
      }
      t.flow = N.flow;
    }
    if (N.timeSkew != null && (t.timeSkew = N.timeSkew), N.redirectUri && (t.redirectUri = N.redirectUri), N.silentCheckSsoRedirectUri && (t.silentCheckSsoRedirectUri = N.silentCheckSsoRedirectUri), typeof N.silentCheckSsoFallback == "boolean" ? t.silentCheckSsoFallback = N.silentCheckSsoFallback : t.silentCheckSsoFallback = !0, typeof N.pkceMethod < "u") {
      if (N.pkceMethod !== "S256" && N.pkceMethod !== !1)
        throw new TypeError(`Invalid value for pkceMethod', expected 'S256' or false but got ${N.pkceMethod}.`);
      t.pkceMethod = N.pkceMethod;
    } else
      t.pkceMethod = "S256";
    typeof N.enableLogging == "boolean" ? t.enableLogging = N.enableLogging : t.enableLogging = !1, N.logoutMethod === "POST" ? t.logoutMethod = "POST" : t.logoutMethod = "GET", typeof N.scope == "string" && (t.scope = N.scope), typeof N.acrValues == "string" && (t.acrValues = N.acrValues), typeof N.messageReceiveTimeout == "number" && N.messageReceiveTimeout > 0 ? t.messageReceiveTimeout = N.messageReceiveTimeout : t.messageReceiveTimeout = 1e4, t.responseMode || (t.responseMode = "fragment"), t.responseType || (t.responseType = "code", t.flow = "standard");
    var q = T(), V = T();
    V.promise.then(function() {
      t.onReady && t.onReady(t.authenticated), q.setSuccess(t.authenticated);
    }).catch(function(Q) {
      q.setError(Q);
    });
    var B = y();
    function Z() {
      var Q = function(ee) {
        ee || (me.prompt = "none"), N.locale && (me.locale = N.locale), t.login(me).then(function() {
          V.setSuccess();
        }).catch(function(ce) {
          V.setError(ce);
        });
      }, ie = async function() {
        var ee = document.createElement("iframe"), ce = await t.createLoginUrl({ prompt: "none", redirectUri: t.silentCheckSsoRedirectUri });
        ee.setAttribute("src", ce), ee.setAttribute("sandbox", "allow-storage-access-by-user-activation allow-scripts allow-same-origin"), ee.setAttribute("title", "keycloak-silent-check-sso"), ee.style.display = "none", document.body.appendChild(ee);
        var ae = function(Oe) {
          if (!(Oe.origin !== window.location.origin || ee.contentWindow !== Oe.source)) {
            var Ie = w(Oe.data);
            v(Ie, V), document.body.removeChild(ee), window.removeEventListener("message", ae);
          }
        };
        window.addEventListener("message", ae);
      }, me = {};
      switch (N.onLoad) {
        case "check-sso":
          s.enable ? I().then(function() {
            E().then(function(ee) {
              ee ? V.setSuccess() : t.silentCheckSsoRedirectUri ? ie() : Q(!1);
            }).catch(function(ee) {
              V.setError(ee);
            });
          }) : t.silentCheckSsoRedirectUri ? ie() : Q(!1);
          break;
        case "login-required":
          Q(!0);
          break;
        default:
          throw "Invalid value for onLoad";
      }
    }
    function X() {
      var Q = w(window.location.href);
      if (Q && window.history.replaceState(window.history.state, null, Q.newUrl), Q && Q.valid)
        return I().then(function() {
          v(Q, V);
        }).catch(function(ie) {
          V.setError(ie);
        });
      N.token && N.refreshToken ? (S(N.token, N.refreshToken, N.idToken), s.enable ? I().then(function() {
        E().then(function(ie) {
          ie ? (t.onAuthSuccess && t.onAuthSuccess(), V.setSuccess(), _()) : V.setSuccess();
        }).catch(function(ie) {
          V.setError(ie);
        });
      }) : t.updateToken(-1).then(function() {
        t.onAuthSuccess && t.onAuthSuccess(), V.setSuccess();
      }).catch(function(ie) {
        t.onAuthError && t.onAuthError(), N.onLoad ? Z() : V.setError(ie);
      })) : N.onLoad ? Z() : V.setSuccess();
    }
    return B.then(function() {
      L().then(X).catch(function(Q) {
        q.setError(Q);
      });
    }), B.catch(function(Q) {
      q.setError(Q);
    }), q.promise;
  }, t.login = function(N) {
    return n.login(N);
  };
  function d(N) {
    if (typeof crypto > "u" || typeof crypto.getRandomValues > "u")
      throw new Error("Web Crypto API is not available.");
    return crypto.getRandomValues(new Uint8Array(N));
  }
  function u(N) {
    return p(N, "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789");
  }
  function p(N, $) {
    for (var q = d(N), V = new Array(N), B = 0; B < N; B++)
      V[B] = $.charCodeAt(q[B] % $.length);
    return String.fromCharCode.apply(null, V);
  }
  async function m(N, $) {
    if (N !== "S256")
      throw new TypeError(`Invalid value for 'pkceMethod', expected 'S256' but got '${N}'.`);
    const q = new Uint8Array(await HA($));
    return KA(q).replace(/\+/g, "-").replace(/\//g, "_").replace(/\=/g, "");
  }
  function f(N) {
    var $ = {
      id_token: {
        acr: N
      }
    };
    return JSON.stringify($);
  }
  t.createLoginUrl = async function(N) {
    var $ = P(), q = P(), V = n.redirectUri(N), B = {
      state: $,
      nonce: q,
      redirectUri: encodeURIComponent(V),
      loginOptions: N
    };
    N && N.prompt && (B.prompt = N.prompt);
    var Z;
    N && N.action == "register" ? Z = t.endpoints.register() : Z = t.endpoints.authorize();
    var X = N && N.scope || t.scope;
    X ? X.indexOf("openid") === -1 && (X = "openid " + X) : X = "openid";
    var Q = Z + "?client_id=" + encodeURIComponent(t.clientId) + "&redirect_uri=" + encodeURIComponent(V) + "&state=" + encodeURIComponent($) + "&response_mode=" + encodeURIComponent(t.responseMode) + "&response_type=" + encodeURIComponent(t.responseType) + "&scope=" + encodeURIComponent(X);
    if (o && (Q = Q + "&nonce=" + encodeURIComponent(q)), N && N.prompt && (Q += "&prompt=" + encodeURIComponent(N.prompt)), N && typeof N.maxAge == "number" && (Q += "&max_age=" + encodeURIComponent(N.maxAge)), N && N.loginHint && (Q += "&login_hint=" + encodeURIComponent(N.loginHint)), N && N.idpHint && (Q += "&kc_idp_hint=" + encodeURIComponent(N.idpHint)), N && N.action && N.action != "register" && (Q += "&kc_action=" + encodeURIComponent(N.action)), N && N.locale && (Q += "&ui_locales=" + encodeURIComponent(N.locale)), N && N.acr) {
      var ie = f(N.acr);
      Q += "&claims=" + encodeURIComponent(ie);
    }
    if ((N && N.acrValues || t.acrValues) && (Q += "&acr_values=" + encodeURIComponent(N.acrValues || t.acrValues)), t.pkceMethod)
      try {
        const me = u(96), ee = await m(t.pkceMethod, me);
        B.pkceCodeVerifier = me, Q += "&code_challenge=" + ee, Q += "&code_challenge_method=" + t.pkceMethod;
      } catch (me) {
        throw new Error("Failed to generate PKCE challenge.", { cause: me });
      }
    return i.add(B), Q;
  }, t.logout = function(N) {
    return n.logout(N);
  }, t.createLogoutUrl = function(N) {
    if ((N?.logoutMethod ?? t.logoutMethod) === "POST")
      return t.endpoints.logout();
    var q = t.endpoints.logout() + "?client_id=" + encodeURIComponent(t.clientId) + "&post_logout_redirect_uri=" + encodeURIComponent(n.redirectUri(N, !1));
    return t.idToken && (q += "&id_token_hint=" + encodeURIComponent(t.idToken)), q;
  }, t.register = function(N) {
    return n.register(N);
  }, t.createRegisterUrl = async function(N) {
    return N || (N = {}), N.action = "register", await t.createLoginUrl(N);
  }, t.createAccountUrl = function(N) {
    var $ = g(), q = void 0;
    return typeof $ < "u" && (q = $ + "/account?referrer=" + encodeURIComponent(t.clientId) + "&referrer_uri=" + encodeURIComponent(n.redirectUri(N))), q;
  }, t.accountManagement = function() {
    return n.accountManagement();
  }, t.hasRealmRole = function(N) {
    var $ = t.realmAccess;
    return !!$ && $.roles.indexOf(N) >= 0;
  }, t.hasResourceRole = function(N, $) {
    if (!t.resourceAccess)
      return !1;
    var q = t.resourceAccess[$ || t.clientId];
    return !!q && q.roles.indexOf(N) >= 0;
  }, t.loadUserProfile = function() {
    var N = g() + "/account", $ = new XMLHttpRequest();
    $.open("GET", N, !0), $.setRequestHeader("Accept", "application/json"), $.setRequestHeader("Authorization", "bearer " + t.token);
    var q = T();
    return $.onreadystatechange = function() {
      $.readyState == 4 && ($.status == 200 ? (t.profile = JSON.parse($.responseText), q.setSuccess(t.profile)) : q.setError());
    }, $.send(), q.promise;
  }, t.loadUserInfo = function() {
    var N = t.endpoints.userinfo(), $ = new XMLHttpRequest();
    $.open("GET", N, !0), $.setRequestHeader("Accept", "application/json"), $.setRequestHeader("Authorization", "bearer " + t.token);
    var q = T();
    return $.onreadystatechange = function() {
      $.readyState == 4 && ($.status == 200 ? (t.userInfo = JSON.parse($.responseText), q.setSuccess(t.userInfo)) : q.setError());
    }, $.send(), q.promise;
  }, t.isTokenExpired = function(N) {
    if (!t.tokenParsed || !t.refreshToken && t.flow != "implicit")
      throw "Not authenticated";
    if (t.timeSkew == null)
      return l("[KEYCLOAK] Unable to determine if token is expired as timeskew is not set"), !0;
    var $ = t.tokenParsed.exp - Math.ceil((/* @__PURE__ */ new Date()).getTime() / 1e3) + t.timeSkew;
    if (N) {
      if (isNaN(N))
        throw "Invalid minValidity";
      $ -= N;
    }
    return $ < 0;
  }, t.updateToken = function(N) {
    var $ = T();
    if (!t.refreshToken)
      return $.setError(), $.promise;
    N = N || 5;
    var q = function() {
      var B = !1;
      if (N == -1 ? (B = !0, l("[KEYCLOAK] Refreshing token: forced refresh")) : (!t.tokenParsed || t.isTokenExpired(N)) && (B = !0, l("[KEYCLOAK] Refreshing token: token expired")), !B)
        $.setSuccess(!1);
      else {
        var Z = "grant_type=refresh_token&refresh_token=" + t.refreshToken, X = t.endpoints.token();
        if (r.push($), r.length == 1) {
          var Q = new XMLHttpRequest();
          Q.open("POST", X, !0), Q.setRequestHeader("Content-type", "application/x-www-form-urlencoded"), Q.withCredentials = !0, Z += "&client_id=" + encodeURIComponent(t.clientId);
          var ie = (/* @__PURE__ */ new Date()).getTime();
          Q.onreadystatechange = function() {
            if (Q.readyState == 4)
              if (Q.status == 200) {
                l("[KEYCLOAK] Token refreshed"), ie = (ie + (/* @__PURE__ */ new Date()).getTime()) / 2;
                var me = JSON.parse(Q.responseText);
                S(me.access_token, me.refresh_token, me.id_token, ie), t.onAuthRefreshSuccess && t.onAuthRefreshSuccess();
                for (var ee = r.pop(); ee != null; ee = r.pop())
                  ee.setSuccess(!0);
              } else {
                c("[KEYCLOAK] Failed to refresh token"), Q.status == 400 && t.clearToken(), t.onAuthRefreshError && t.onAuthRefreshError();
                for (var ee = r.pop(); ee != null; ee = r.pop())
                  ee.setError(!0);
              }
          }, Q.send(Z);
        }
      }
    };
    if (s.enable) {
      var V = E();
      V.then(function() {
        q();
      }).catch(function(B) {
        $.setError(B);
      });
    } else
      q();
    return $.promise;
  }, t.clearToken = function() {
    t.token && (S(null, null, null), t.onAuthLogout && t.onAuthLogout(), t.loginRequired && t.login());
  };
  function g() {
    if (typeof t.authServerUrl < "u")
      return t.authServerUrl.charAt(t.authServerUrl.length - 1) == "/" ? t.authServerUrl + "realms/" + encodeURIComponent(t.realm) : t.authServerUrl + "/realms/" + encodeURIComponent(t.realm);
  }
  function b() {
    return window.location.origin ? window.location.origin : window.location.protocol + "//" + window.location.hostname + (window.location.port ? ":" + window.location.port : "");
  }
  function v(N, $) {
    var q = N.code, V = N.error, B = N.prompt, Z = (/* @__PURE__ */ new Date()).getTime();
    if (N.kc_action_status && t.onActionUpdate && t.onActionUpdate(N.kc_action_status, N.kc_action), V) {
      if (B != "none")
        if (N.error_description && N.error_description === "authentication_expired")
          t.login(N.loginOptions);
        else {
          var X = { error: V, error_description: N.error_description };
          t.onAuthError && t.onAuthError(X), $ && $.setError(X);
        }
      else
        $ && $.setSuccess();
      return;
    } else t.flow != "standard" && (N.access_token || N.id_token) && ee(N.access_token, null, N.id_token, !0);
    if (t.flow != "implicit" && q) {
      var Q = "code=" + q + "&grant_type=authorization_code", ie = t.endpoints.token(), me = new XMLHttpRequest();
      me.open("POST", ie, !0), me.setRequestHeader("Content-type", "application/x-www-form-urlencoded"), Q += "&client_id=" + encodeURIComponent(t.clientId), Q += "&redirect_uri=" + N.redirectUri, N.pkceCodeVerifier && (Q += "&code_verifier=" + N.pkceCodeVerifier), me.withCredentials = !0, me.onreadystatechange = function() {
        if (me.readyState == 4)
          if (me.status == 200) {
            var ce = JSON.parse(me.responseText);
            ee(ce.access_token, ce.refresh_token, ce.id_token, t.flow === "standard"), _();
          } else
            t.onAuthError && t.onAuthError(), $ && $.setError();
      }, me.send(Q);
    }
    function ee(ce, ae, Oe, Ie) {
      Z = (Z + (/* @__PURE__ */ new Date()).getTime()) / 2, S(ce, ae, Oe, Z), o && t.idTokenParsed && t.idTokenParsed.nonce != N.storedNonce ? (l("[KEYCLOAK] Invalid nonce, clearing token"), t.clearToken(), $ && $.setError()) : Ie && (t.onAuthSuccess && t.onAuthSuccess(), $ && $.setSuccess());
    }
  }
  function y() {
    var N = T(), $;
    typeof e == "string" && ($ = e);
    function q(X) {
      X ? t.endpoints = {
        authorize: function() {
          return X.authorization_endpoint;
        },
        token: function() {
          return X.token_endpoint;
        },
        logout: function() {
          if (!X.end_session_endpoint)
            throw "Not supported by the OIDC server";
          return X.end_session_endpoint;
        },
        checkSessionIframe: function() {
          if (!X.check_session_iframe)
            throw "Not supported by the OIDC server";
          return X.check_session_iframe;
        },
        register: function() {
          throw 'Redirection to "Register user" page not supported in standard OIDC mode';
        },
        userinfo: function() {
          if (!X.userinfo_endpoint)
            throw "Not supported by the OIDC server";
          return X.userinfo_endpoint;
        }
      } : t.endpoints = {
        authorize: function() {
          return g() + "/protocol/openid-connect/auth";
        },
        token: function() {
          return g() + "/protocol/openid-connect/token";
        },
        logout: function() {
          return g() + "/protocol/openid-connect/logout";
        },
        checkSessionIframe: function() {
          return g() + "/protocol/openid-connect/login-status-iframe.html";
        },
        thirdPartyCookiesIframe: function() {
          return g() + "/protocol/openid-connect/3p-cookies/step1.html";
        },
        register: function() {
          return g() + "/protocol/openid-connect/registrations";
        },
        userinfo: function() {
          return g() + "/protocol/openid-connect/userinfo";
        }
      };
    }
    if ($) {
      var V = new XMLHttpRequest();
      V.open("GET", $, !0), V.setRequestHeader("Accept", "application/json"), V.onreadystatechange = function() {
        if (V.readyState == 4)
          if (V.status == 200 || C(V)) {
            var X = JSON.parse(V.responseText);
            t.authServerUrl = X["auth-server-url"], t.realm = X.realm, t.clientId = X.resource, q(null), N.setSuccess();
          } else
            N.setError();
      }, V.send();
    } else {
      t.clientId = e.clientId;
      var B = e.oidcProvider;
      if (!B)
        t.authServerUrl = e.url, t.realm = e.realm, q(null), N.setSuccess();
      else if (typeof B == "string") {
        var Z;
        B.charAt(B.length - 1) == "/" ? Z = B + ".well-known/openid-configuration" : Z = B + "/.well-known/openid-configuration";
        var V = new XMLHttpRequest();
        V.open("GET", Z, !0), V.setRequestHeader("Accept", "application/json"), V.onreadystatechange = function() {
          if (V.readyState == 4)
            if (V.status == 200 || C(V)) {
              var Q = JSON.parse(V.responseText);
              q(Q), N.setSuccess();
            } else
              N.setError();
        }, V.send();
      } else
        q(B), N.setSuccess();
    }
    return N.promise;
  }
  function C(N) {
    return N.status == 0 && N.responseText && N.responseURL.startsWith("file:");
  }
  function S(N, $, q, V) {
    if (t.tokenTimeoutHandle && (clearTimeout(t.tokenTimeoutHandle), t.tokenTimeoutHandle = null), $ ? (t.refreshToken = $, t.refreshTokenParsed = im($)) : (delete t.refreshToken, delete t.refreshTokenParsed), q ? (t.idToken = q, t.idTokenParsed = im(q)) : (delete t.idToken, delete t.idTokenParsed), N) {
      if (t.token = N, t.tokenParsed = im(N), t.sessionId = t.tokenParsed.sid, t.authenticated = !0, t.subject = t.tokenParsed.sub, t.realmAccess = t.tokenParsed.realm_access, t.resourceAccess = t.tokenParsed.resource_access, V && (t.timeSkew = Math.floor(V / 1e3) - t.tokenParsed.iat), t.timeSkew != null && (l("[KEYCLOAK] Estimated time difference between browser and server is " + t.timeSkew + " seconds"), t.onTokenExpired)) {
        var B = (t.tokenParsed.exp - (/* @__PURE__ */ new Date()).getTime() / 1e3 + t.timeSkew) * 1e3;
        l("[KEYCLOAK] Token expires in " + Math.round(B / 1e3) + " s"), B <= 0 ? t.onTokenExpired() : t.tokenTimeoutHandle = setTimeout(t.onTokenExpired, B);
      }
    } else
      delete t.token, delete t.tokenParsed, delete t.subject, delete t.realmAccess, delete t.resourceAccess, t.authenticated = !1;
  }
  function P() {
    if (typeof crypto > "u" || typeof crypto.randomUUID > "u")
      throw new Error("Web Crypto API is not available.");
    return crypto.randomUUID();
  }
  function w(N) {
    var $ = A(N);
    if ($) {
      var q = i.get($.state);
      return q && ($.valid = !0, $.redirectUri = q.redirectUri, $.storedNonce = q.nonce, $.prompt = q.prompt, $.pkceCodeVerifier = q.pkceCodeVerifier, $.loginOptions = q.loginOptions), $;
    }
  }
  function A(N) {
    var $;
    switch (t.flow) {
      case "standard":
        $ = ["code", "state", "session_state", "kc_action_status", "kc_action", "iss"];
        break;
      case "implicit":
        $ = ["access_token", "token_type", "id_token", "state", "session_state", "expires_in", "kc_action_status", "kc_action", "iss"];
        break;
      case "hybrid":
        $ = ["access_token", "token_type", "id_token", "code", "state", "session_state", "expires_in", "kc_action_status", "kc_action", "iss"];
        break;
    }
    $.push("error"), $.push("error_description"), $.push("error_uri");
    var q = N.indexOf("?"), V = N.indexOf("#"), B, Z;
    if (t.responseMode === "query" && q !== -1 ? (B = N.substring(0, q), Z = k(N.substring(q + 1, V !== -1 ? V : N.length), $), Z.paramsString !== "" && (B += "?" + Z.paramsString), V !== -1 && (B += N.substring(V))) : t.responseMode === "fragment" && V !== -1 && (B = N.substring(0, V), Z = k(N.substring(V + 1), $), Z.paramsString !== "" && (B += "#" + Z.paramsString)), Z && Z.oauthParams) {
      if (t.flow === "standard" || t.flow === "hybrid") {
        if ((Z.oauthParams.code || Z.oauthParams.error) && Z.oauthParams.state)
          return Z.oauthParams.newUrl = B, Z.oauthParams;
      } else if (t.flow === "implicit" && (Z.oauthParams.access_token || Z.oauthParams.error) && Z.oauthParams.state)
        return Z.oauthParams.newUrl = B, Z.oauthParams;
    }
  }
  function k(N, $) {
    for (var q = N.split("&"), V = {
      paramsString: "",
      oauthParams: {}
    }, B = 0; B < q.length; B++) {
      var Z = q[B].indexOf("="), X = q[B].slice(0, Z);
      $.indexOf(X) !== -1 ? V.oauthParams[X] = q[B].slice(Z + 1) : (V.paramsString !== "" && (V.paramsString += "&"), V.paramsString += q[B]);
    }
    return V;
  }
  function T() {
    var N = {
      setSuccess: function($) {
        N.resolve($);
      },
      setError: function($) {
        N.reject($);
      }
    };
    return N.promise = new Promise(function($, q) {
      N.resolve = $, N.reject = q;
    }), N;
  }
  function O(N, $, q) {
    var V = null, B = new Promise(function(Z, X) {
      V = setTimeout(function() {
        X({ error: q });
      }, $);
    });
    return Promise.race([N, B]).finally(function() {
      clearTimeout(V);
    });
  }
  function I() {
    var N = T();
    if (!s.enable || s.iframe)
      return N.setSuccess(), N.promise;
    var $ = document.createElement("iframe");
    s.iframe = $, $.onload = function() {
      var B = t.endpoints.authorize();
      B.charAt(0) === "/" ? s.iframeOrigin = b() : s.iframeOrigin = B.substring(0, B.indexOf("/", 8)), N.setSuccess();
    };
    var q = t.endpoints.checkSessionIframe();
    $.setAttribute("src", q), $.setAttribute("sandbox", "allow-storage-access-by-user-activation allow-scripts allow-same-origin"), $.setAttribute("title", "keycloak-session-iframe"), $.style.display = "none", document.body.appendChild($);
    var V = function(B) {
      if (!(B.origin !== s.iframeOrigin || s.iframe.contentWindow !== B.source) && (B.data == "unchanged" || B.data == "changed" || B.data == "error")) {
        B.data != "unchanged" && t.clearToken();
        for (var Z = s.callbackList.splice(0, s.callbackList.length), X = Z.length - 1; X >= 0; --X) {
          var Q = Z[X];
          B.data == "error" ? Q.setError() : Q.setSuccess(B.data == "unchanged");
        }
      }
    };
    return window.addEventListener("message", V, !1), N.promise;
  }
  function _() {
    s.enable && t.token && setTimeout(function() {
      E().then(function(N) {
        N && _();
      });
    }, s.interval * 1e3);
  }
  function E() {
    var N = T();
    if (s.iframe && s.iframeOrigin) {
      var $ = t.clientId + " " + (t.sessionId ? t.sessionId : "");
      s.callbackList.push(N);
      var q = s.iframeOrigin;
      s.callbackList.length == 1 && s.iframe.contentWindow.postMessage($, q);
    } else
      N.setSuccess();
    return N.promise;
  }
  function L() {
    var N = T();
    if ((s.enable || t.silentCheckSsoRedirectUri) && typeof t.endpoints.thirdPartyCookiesIframe == "function") {
      var $ = document.createElement("iframe");
      $.setAttribute("src", t.endpoints.thirdPartyCookiesIframe()), $.setAttribute("sandbox", "allow-storage-access-by-user-activation allow-scripts allow-same-origin"), $.setAttribute("title", "keycloak-3p-check-iframe"), $.style.display = "none", document.body.appendChild($);
      var q = function(V) {
        $.contentWindow === V.source && (V.data !== "supported" && V.data !== "unsupported" || (V.data === "unsupported" && (c(
          `[KEYCLOAK] Your browser is blocking access to 3rd-party cookies, this means:

 - It is not possible to retrieve tokens without redirecting to the Keycloak server (a.k.a. no support for silent authentication).
 - It is not possible to automatically detect changes to the session status (such as the user logging out in another tab).

For more information see: https://www.keycloak.org/docs/latest/securing_apps/#_modern_browsers`
        ), s.enable = !1, t.silentCheckSsoFallback && (t.silentCheckSsoRedirectUri = !1)), document.body.removeChild($), window.removeEventListener("message", q), N.setSuccess()));
      };
      window.addEventListener("message", q, !1);
    } else
      N.setSuccess();
    return O(N.promise, t.messageReceiveTimeout, "Timeout when waiting for 3rd party check iframe message.");
  }
  function F(N) {
    if (!N || N == "default")
      return {
        login: async function(X) {
          return window.location.assign(await t.createLoginUrl(X)), T().promise;
        },
        logout: async function(X) {
          if ((X?.logoutMethod ?? t.logoutMethod) === "GET") {
            window.location.replace(t.createLogoutUrl(X));
            return;
          }
          const ie = document.createElement("form");
          ie.setAttribute("method", "POST"), ie.setAttribute("action", t.createLogoutUrl(X)), ie.style.display = "none";
          const me = {
            id_token_hint: t.idToken,
            client_id: t.clientId,
            post_logout_redirect_uri: n.redirectUri(X, !1)
          };
          for (const [ee, ce] of Object.entries(me)) {
            const ae = document.createElement("input");
            ae.setAttribute("type", "hidden"), ae.setAttribute("name", ee), ae.setAttribute("value", ce), ie.appendChild(ae);
          }
          document.body.appendChild(ie), ie.submit();
        },
        register: async function(X) {
          return window.location.assign(await t.createRegisterUrl(X)), T().promise;
        },
        accountManagement: function() {
          var X = t.createAccountUrl();
          if (typeof X < "u")
            window.location.href = X;
          else
            throw "Not supported by the OIDC server";
          return T().promise;
        },
        redirectUri: function(X, Q) {
          return X && X.redirectUri ? X.redirectUri : t.redirectUri ? t.redirectUri : location.href;
        }
      };
    if (N == "cordova") {
      s.enable = !1;
      var $ = function(X, Q, ie) {
        return window.cordova && window.cordova.InAppBrowser ? window.cordova.InAppBrowser.open(X, Q, ie) : window.open(X, Q, ie);
      }, q = function(X) {
        return X && X.cordovaOptions ? Object.keys(X.cordovaOptions).reduce(function(Q, ie) {
          return Q[ie] = X.cordovaOptions[ie], Q;
        }, {}) : {};
      }, V = function(X) {
        return Object.keys(X).reduce(function(Q, ie) {
          return Q.push(ie + "=" + X[ie]), Q;
        }, []).join(",");
      }, B = function(X) {
        var Q = q(X);
        return Q.location = "no", X && X.prompt == "none" && (Q.hidden = "yes"), V(Q);
      }, Z = function() {
        return t.redirectUri || "http://localhost";
      };
      return {
        login: async function(X) {
          var Q = T(), ie = B(X), me = await t.createLoginUrl(X), ee = $(me, "_blank", ie), ce = !1, ae = !1, Oe = function() {
            ae = !0, ee.close();
          };
          return ee.addEventListener("loadstart", function(Ie) {
            if (Ie.url.indexOf(Z()) == 0) {
              var Me = w(Ie.url);
              v(Me, Q), Oe(), ce = !0;
            }
          }), ee.addEventListener("loaderror", function(Ie) {
            if (!ce)
              if (Ie.url.indexOf(Z()) == 0) {
                var Me = w(Ie.url);
                v(Me, Q), Oe(), ce = !0;
              } else
                Q.setError(), Oe();
          }), ee.addEventListener("exit", function(Ie) {
            ae || Q.setError({
              reason: "closed_by_user"
            });
          }), Q.promise;
        },
        logout: function(X) {
          var Q = T(), ie = t.createLogoutUrl(X), me = $(ie, "_blank", "location=no,hidden=yes,clearcache=yes"), ee;
          return me.addEventListener("loadstart", function(ce) {
            ce.url.indexOf(Z()) == 0 && me.close();
          }), me.addEventListener("loaderror", function(ce) {
            ce.url.indexOf(Z()) == 0 || (ee = !0), me.close();
          }), me.addEventListener("exit", function(ce) {
            ee ? Q.setError() : (t.clearToken(), Q.setSuccess());
          }), Q.promise;
        },
        register: async function(X) {
          var Q = T(), ie = await t.createRegisterUrl(), me = B(X), ee = $(ie, "_blank", me);
          return ee.addEventListener("loadstart", function(ce) {
            if (ce.url.indexOf(Z()) == 0) {
              ee.close();
              var ae = w(ce.url);
              v(ae, Q);
            }
          }), Q.promise;
        },
        accountManagement: function() {
          var X = t.createAccountUrl();
          if (typeof X < "u") {
            var Q = $(X, "_blank", "location=no");
            Q.addEventListener("loadstart", function(ie) {
              ie.url.indexOf(Z()) == 0 && Q.close();
            });
          } else
            throw "Not supported by the OIDC server";
        },
        redirectUri: function(X) {
          return Z();
        }
      };
    }
    if (N == "cordova-native")
      return s.enable = !1, {
        login: async function(X) {
          var Q = T(), ie = await t.createLoginUrl(X);
          return universalLinks.subscribe("keycloak", function(me) {
            universalLinks.unsubscribe("keycloak"), window.cordova.plugins.browsertab.close();
            var ee = w(me.url);
            v(ee, Q);
          }), window.cordova.plugins.browsertab.openUrl(ie), Q.promise;
        },
        logout: function(X) {
          var Q = T(), ie = t.createLogoutUrl(X);
          return universalLinks.subscribe("keycloak", function(me) {
            universalLinks.unsubscribe("keycloak"), window.cordova.plugins.browsertab.close(), t.clearToken(), Q.setSuccess();
          }), window.cordova.plugins.browsertab.openUrl(ie), Q.promise;
        },
        register: async function(X) {
          var Q = T(), ie = await t.createRegisterUrl(X);
          return universalLinks.subscribe("keycloak", function(me) {
            universalLinks.unsubscribe("keycloak"), window.cordova.plugins.browsertab.close();
            var ee = w(me.url);
            v(ee, Q);
          }), window.cordova.plugins.browsertab.openUrl(ie), Q.promise;
        },
        accountManagement: function() {
          var X = t.createAccountUrl();
          if (typeof X < "u")
            window.cordova.plugins.browsertab.openUrl(X);
          else
            throw "Not supported by the OIDC server";
        },
        redirectUri: function(X) {
          return X && X.redirectUri ? X.redirectUri : t.redirectUri ? t.redirectUri : "http://localhost";
        }
      };
    throw "invalid adapter type: " + N;
  }
  const R = "kc-callback-";
  var M = function() {
    if (!(this instanceof M))
      return new M();
    localStorage.setItem("kc-test", "test"), localStorage.removeItem("kc-test");
    var N = this;
    function $() {
      const Z = Date.now();
      for (const [X, Q] of V()) {
        const ie = B(Q);
        (ie === null || ie < Z) && localStorage.removeItem(X);
      }
    }
    function q() {
      for (const [Z] of V())
        localStorage.removeItem(Z);
    }
    function V() {
      return Object.entries(localStorage).filter(([Z]) => Z.startsWith(R));
    }
    function B(Z) {
      let X;
      try {
        X = JSON.parse(Z);
      } catch {
        return null;
      }
      return sm(X) && "expires" in X && typeof X.expires == "number" ? X.expires : null;
    }
    N.get = function(Z) {
      if (Z) {
        var X = R + Z, Q = localStorage.getItem(X);
        return Q && (localStorage.removeItem(X), Q = JSON.parse(Q)), $(), Q;
      }
    }, N.add = function(Z) {
      $();
      const X = R + Z.state, Q = JSON.stringify({
        ...Z,
        // Set the expiry time to 1 hour from now.
        expires: Date.now() + 60 * 60 * 1e3
      });
      try {
        localStorage.setItem(X, Q);
      } catch {
        q(), localStorage.setItem(X, Q);
      }
    };
  }, U = function() {
    if (!(this instanceof U))
      return new U();
    var N = this;
    N.get = function(B) {
      if (B) {
        var Z = q(R + B);
        if (V(R + B, "", $(-100)), Z)
          return JSON.parse(Z);
      }
    }, N.add = function(B) {
      V(R + B.state, JSON.stringify(B), $(60));
    }, N.removeItem = function(B) {
      V(B, "", $(-100));
    };
    var $ = function(B) {
      var Z = /* @__PURE__ */ new Date();
      return Z.setTime(Z.getTime() + B * 60 * 1e3), Z;
    }, q = function(B) {
      for (var Z = B + "=", X = document.cookie.split(";"), Q = 0; Q < X.length; Q++) {
        for (var ie = X[Q]; ie.charAt(0) == " "; )
          ie = ie.substring(1);
        if (ie.indexOf(Z) == 0)
          return ie.substring(Z.length, ie.length);
      }
      return "";
    }, V = function(B, Z, X) {
      var Q = B + "=" + Z + "; expires=" + X.toUTCString() + "; ";
      document.cookie = Q;
    };
  };
  function K() {
    try {
      return new M();
    } catch {
    }
    return new U();
  }
  function G(N) {
    return function() {
      t.enableLogging && N.apply(console, Array.prototype.slice.call(arguments));
    };
  }
}
function KA(e) {
  const t = String.fromCodePoint(...e);
  return btoa(t);
}
async function HA(e) {
  const n = new TextEncoder().encode(e);
  if (typeof crypto > "u" || typeof crypto.subtle > "u")
    throw new Error("Web Crypto API is not available.");
  return await crypto.subtle.digest("SHA-256", n);
}
function im(e) {
  const [t, n] = e.split(".");
  if (typeof n != "string")
    throw new Error("Unable to decode token, payload not found.");
  let r;
  try {
    r = zA(n);
  } catch (i) {
    throw new Error("Unable to decode token, payload is not a valid Base64URL value.", { cause: i });
  }
  try {
    return JSON.parse(r);
  } catch (i) {
    throw new Error("Unable to decode token, payload is not a valid JSON value.", { cause: i });
  }
}
function zA(e) {
  let t = e.replaceAll("-", "+").replaceAll("_", "/");
  switch (t.length % 4) {
    case 0:
      break;
    case 2:
      t += "==";
      break;
    case 3:
      t += "=";
      break;
    default:
      throw new Error("Input is not of the correct length.");
  }
  try {
    return qA(t);
  } catch {
    return atob(t);
  }
}
function qA(e) {
  return decodeURIComponent(atob(e).replace(/(.)/g, (t, n) => {
    let r = n.charCodeAt(0).toString(16).toUpperCase();
    return r.length < 2 && (r = "0" + r), "%" + r;
  }));
}
function sm(e) {
  return typeof e == "object" && e !== null;
}
const GA = {
  name: "ArrowsAltVIcon",
  height: 512,
  width: 256,
  svgPath: "M214.059 377.941H168V134.059h46.059c21.382 0 32.09-25.851 16.971-40.971L144.971 7.029c-9.373-9.373-24.568-9.373-33.941 0L24.971 93.088c-15.119 15.119-4.411 40.971 16.971 40.971H88v243.882H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.568 9.373 33.941 0l86.059-86.059c15.12-15.119 4.412-40.971-16.97-40.971z",
  yOffset: 0,
  xOffset: 0
}, WA = et(GA), XA = {
  name: "BarsIcon",
  height: 512,
  width: 448,
  svgPath: "M16 132h416c8.837 0 16-7.163 16-16V76c0-8.837-7.163-16-16-16H16C7.163 60 0 67.163 0 76v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16zm0 160h416c8.837 0 16-7.163 16-16v-40c0-8.837-7.163-16-16-16H16c-8.837 0-16 7.163-16 16v40c0 8.837 7.163 16 16 16z",
  yOffset: 0,
  xOffset: 0
}, YA = et(XA), JA = {
  name: "BitbucketIcon",
  height: 512,
  width: 512,
  svgPath: "M22.2 32A16 16 0 0 0 6 47.8a26.35 26.35 0 0 0 .2 2.8l67.9 412.1a21.77 21.77 0 0 0 21.3 18.2h325.7a16 16 0 0 0 16-13.4L505 50.7a16 16 0 0 0-13.2-18.3 24.58 24.58 0 0 0-2.8-.2L22.2 32zm285.9 297.8h-104l-28.1-147h157.3l-25.2 147z",
  yOffset: 0,
  xOffset: 0
}, ZA = et(JA), QA = {
  name: "CaretUpIcon",
  height: 512,
  width: 320,
  svgPath: "M288.662 352H31.338c-17.818 0-26.741-21.543-14.142-34.142l128.662-128.662c7.81-7.81 20.474-7.81 28.284 0l128.662 128.662c12.6 12.599 3.676 34.142-14.142 34.142z",
  yOffset: 0,
  xOffset: 0
}, eL = et(QA), tL = {
  name: "CodeIcon",
  height: 512,
  width: 640,
  svgPath: "M278.9 511.5l-61-17.7c-6.4-1.8-10-8.5-8.2-14.9L346.2 8.7c1.8-6.4 8.5-10 14.9-8.2l61 17.7c6.4 1.8 10 8.5 8.2 14.9L293.8 503.3c-1.9 6.4-8.5 10.1-14.9 8.2zm-114-112.2l43.5-46.4c4.6-4.9 4.3-12.7-.8-17.2L117 256l90.6-79.7c5.1-4.5 5.5-12.3.8-17.2l-43.5-46.4c-4.5-4.8-12.1-5.1-17-.5L3.8 247.2c-5.1 4.7-5.1 12.8 0 17.5l144.1 135.1c4.9 4.6 12.5 4.4 17-.5zm327.2.6l144.1-135.1c5.1-4.7 5.1-12.8 0-17.5L492.1 112.1c-4.8-4.5-12.4-4.3-17 .5L431.6 159c-4.6 4.9-4.3 12.7.8 17.2L523 256l-90.6 79.7c-5.1 4.5-5.5 12.3-.8 17.2l43.5 46.4c4.5 4.9 12.1 5.1 17 .6z",
  yOffset: 0,
  xOffset: 0
}, om = et(tL), nL = {
  name: "CogIcon",
  height: 512,
  width: 512,
  svgPath: "M487.4 315.7l-42.6-24.6c4.3-23.2 4.3-47 0-70.2l42.6-24.6c4.9-2.8 7.1-8.6 5.5-14-11.1-35.6-30-67.8-54.7-94.6-3.8-4.1-10-5.1-14.8-2.3L380.8 110c-17.9-15.4-38.5-27.3-60.8-35.1V25.8c0-5.6-3.9-10.5-9.4-11.7-36.7-8.2-74.3-7.8-109.2 0-5.5 1.2-9.4 6.1-9.4 11.7V75c-22.2 7.9-42.8 19.8-60.8 35.1L88.7 85.5c-4.9-2.8-11-1.9-14.8 2.3-24.7 26.7-43.6 58.9-54.7 94.6-1.7 5.4.6 11.2 5.5 14L67.3 221c-4.3 23.2-4.3 47 0 70.2l-42.6 24.6c-4.9 2.8-7.1 8.6-5.5 14 11.1 35.6 30 67.8 54.7 94.6 3.8 4.1 10 5.1 14.8 2.3l42.6-24.6c17.9 15.4 38.5 27.3 60.8 35.1v49.2c0 5.6 3.9 10.5 9.4 11.7 36.7 8.2 74.3 7.8 109.2 0 5.5-1.2 9.4-6.1 9.4-11.7v-49.2c22.2-7.9 42.8-19.8 60.8-35.1l42.6 24.6c4.9 2.8 11 1.9 14.8-2.3 24.7-26.7 43.6-58.9 54.7-94.6 1.5-5.5-.7-11.3-5.6-14.1zM256 336c-44.1 0-80-35.9-80-80s35.9-80 80-80 80 35.9 80 80-35.9 80-80 80z",
  yOffset: 0,
  xOffset: 0
}, aL = et(nL), rL = {
  name: "CubeIcon",
  height: 512,
  width: 512,
  svgPath: "M239.1 6.3l-208 78c-18.7 7-31.1 25-31.1 45v225.1c0 18.2 10.3 34.8 26.5 42.9l208 104c13.5 6.8 29.4 6.8 42.9 0l208-104c16.3-8.1 26.5-24.8 26.5-42.9V129.3c0-20-12.4-37.9-31.1-44.9l-208-78C262 2.2 250 2.2 239.1 6.3zM256 68.4l192 72v1.1l-192 78-192-78v-1.1l192-72zm32 356V275.5l160-65v133.9l-160 80z",
  yOffset: 0,
  xOffset: 0
}, iL = et(rL), sL = {
  name: "CubesIcon",
  height: 512,
  width: 512,
  svgPath: "M488.6 250.2L392 214V105.5c0-15-9.3-28.4-23.4-33.7l-100-37.5c-8.1-3.1-17.1-3.1-25.3 0l-100 37.5c-14.1 5.3-23.4 18.7-23.4 33.7V214l-96.6 36.2C9.3 255.5 0 268.9 0 283.9V394c0 13.6 7.7 26.1 19.9 32.2l100 50c10.1 5.1 22.1 5.1 32.2 0l103.9-52 103.9 52c10.1 5.1 22.1 5.1 32.2 0l100-50c12.2-6.1 19.9-18.6 19.9-32.2V283.9c0-15-9.3-28.4-23.4-33.7zM358 214.8l-85 31.9v-68.2l85-37v73.3zM154 104.1l102-38.2 102 38.2v.6l-102 41.4-102-41.4v-.6zm84 291.1l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6zm240 112l-85 42.5v-79.1l85-38.8v75.4zm0-112l-102 41.4-102-41.4v-.6l102-38.2 102 38.2v.6z",
  yOffset: 0,
  xOffset: 0
}, pw = et(sL), oL = {
  name: "DatabaseIcon",
  height: 512,
  width: 448,
  svgPath: "M448 73.143v45.714C448 159.143 347.667 192 224 192S0 159.143 0 118.857V73.143C0 32.857 100.333 0 224 0s224 32.857 224 73.143zM448 176v102.857C448 319.143 347.667 352 224 352S0 319.143 0 278.857V176c48.125 33.143 136.208 48.572 224 48.572S399.874 209.143 448 176zm0 160v102.857C448 479.143 347.667 512 224 512S0 479.143 0 438.857V336c48.125 33.143 136.208 48.572 224 48.572S399.874 369.143 448 336z",
  yOffset: 0,
  xOffset: 0
}, lL = et(oL), cL = {
  name: "DownloadIcon",
  height: 512,
  width: 512,
  svgPath: "M216 0h80c13.3 0 24 10.7 24 24v168h87.7c17.8 0 26.7 21.5 14.1 34.1L269.7 378.3c-7.5 7.5-19.8 7.5-27.3 0L90.1 226.1c-12.6-12.6-3.7-34.1 14.1-34.1H192V24c0-13.3 10.7-24 24-24zm296 376v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h146.7l49 49c20.1 20.1 52.5 20.1 72.6 0l49-49H488c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z",
  yOffset: 0,
  xOffset: 0
}, dL = et(cL), uL = {
  name: "EllipsisHIcon",
  height: 512,
  width: 512,
  svgPath: "M328 256c0 39.8-32.2 72-72 72s-72-32.2-72-72 32.2-72 72-72 72 32.2 72 72zm104-72c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72zm-352 0c-39.8 0-72 32.2-72 72s32.2 72 72 72 72-32.2 72-72-32.2-72-72-72z",
  yOffset: 0,
  xOffset: 0
}, pL = et(uL), mL = {
  name: "EllipsisVIcon",
  height: 512,
  width: 192,
  svgPath: "M96 184c39.8 0 72 32.2 72 72s-32.2 72-72 72-72-32.2-72-72 32.2-72 72-72zM24 80c0 39.8 32.2 72 72 72s72-32.2 72-72S135.8 8 96 8 24 40.2 24 80zm0 352c0 39.8 32.2 72 72 72s72-32.2 72-72-32.2-72-72-72-72 32.2-72 72z",
  yOffset: 0,
  xOffset: 0
}, hr = et(mL), fL = {
  name: "FacebookSquareIcon",
  height: 512,
  width: 448,
  svgPath: "M400 32H48A48 48 0 0 0 0 80v352a48 48 0 0 0 48 48h137.25V327.69h-63V256h63v-54.64c0-62.15 37-96.48 93.67-96.48 27.14 0 55.52 4.84 55.52 4.84v61h-31.27c-30.81 0-40.42 19.12-40.42 38.73V256h68.78l-11 71.69h-57.78V480H400a48 48 0 0 0 48-48V80a48 48 0 0 0-48-48z",
  yOffset: 0,
  xOffset: 0
}, hL = et(fL), gL = {
  name: "FilterIcon",
  height: 512,
  width: 512,
  svgPath: "M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z",
  yOffset: 0,
  xOffset: 0
}, ls = et(gL), bL = {
  name: "GithubIcon",
  height: 512,
  width: 496,
  svgPath: "M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z",
  yOffset: 0,
  xOffset: 0
}, vL = et(bL), yL = {
  name: "GitlabIcon",
  height: 512,
  width: 512,
  svgPath: "M105.2 24.9c-3.1-8.9-15.7-8.9-18.9 0L29.8 199.7h132c-.1 0-56.6-174.8-56.6-174.8zM.9 287.7c-2.6 8 .3 16.9 7.1 22l247.9 184-226.2-294zm160.8-88l94.3 294 94.3-294zm349.4 88l-28.8-88-226.3 294 247.9-184c6.9-5.1 9.7-14 7.2-22zM425.7 24.9c-3.1-8.9-15.7-8.9-18.9 0l-56.6 174.8h132z",
  yOffset: 0,
  xOffset: 0
}, CL = et(yL), xL = {
  name: "GlobeRouteIcon",
  height: 1024,
  width: 1306,
  svgPath: "M1300.9,363.7 L1179,485.8 C1169,495.9 1151.7,488.8 1151.7,474.5 L1151.7,416 L816.4,416 C812.4,416 809,413.8 808.5,409.8 C805.3,386 801,362.733333 795.6,340 C792.3,326 788.5,312.4 784.4,299.2 C782.8,294 786.6,288 792,288 L1151.5,288 L1151.5,230.6 C1151.5,216.4 1168.7,209.2 1178.8,219.3 L1300.8,341 C1303.9,344.1 1306,348.2 1306,352.3 C1306,356.4 1303.9,360.5 1300.9,363.7 Z M469.2,746.7 L347.3,868.8 C337.3,878.9 320,871.8 320,857.5 L320,800 L16,800 C7.2,800 0,792.3 0,783.5 L0,687.5 C0,678.7 7.2,672 16,672 L320,672 L320,613.8 C320,599.6 337.2,592.4 347.3,602.5 L469.2,724.1 C475.430133,730.34524 475.430133,740.45476 469.2,746.7 Z M1087.6,495.6 C1087.38293,486.920039 1080.28267,479.997286 1071.6,480 L640,480 L640,352 L722.2,352 C727.4,352 731.3,346.5 729.9,341.5 C725.605596,325.013205 720.465463,308.75837 714.5,292.8 C713.258024,289.782121 710.260604,287.863772 707,288 L640,288 L640,101.7 C652.442178,106.259896 664.111225,112.70148 674.6,120.8 C699.3,139.4 723,168.1 743.1,203.9 C746.5,210 751.7,218.7 761.1,218.7 L809.4,218.7 C812.128705,218.672447 814.65964,217.271114 816.131205,214.973053 C817.602771,212.674992 817.816638,209.789922 816.7,207.3 C804.114384,179.721505 788.769504,153.487791 770.9,129 C818.290474,149.304728 861.543068,178.15109 898.5,214.1 C901.47783,216.980555 905.45693,218.593703 909.6,218.6 L971.4,218.6 C974.505675,218.614157 977.338903,216.829582 978.667492,214.022401 C979.996082,211.21522 979.579921,207.892766 977.6,205.5 C889.8,100 757.8,32.6 609.9,32 L605.5,32 C342.5,33.4 128,251.4 128,514.8 L128,528 C128,538.8 132.7,582.4 136.2,601 C136.9,604.8 140.2,608 144.1,608 L193,608 C198.1,608 201.9,602.8 200.8,597.8 C197.100285,580.050867 194.561569,562.079428 193.2,544 L576,544 L576,672 L533.4,672 C530.21925,671.879321 527.2913,673.725708 526.029429,676.647935 C524.767558,679.570163 525.43119,682.96746 527.7,685.2 L566.6,724.2 C572.610093,730.186212 575.992058,738.317319 576,746.8 L576,922.3 C563.557822,917.740104 551.888775,911.29852 541.4,903.2 C521.8,888.5 502.9,867.3 485.8,841.4 C484.483494,839.398843 482.339547,838.092908 479.95744,837.84114 C477.575334,837.589373 475.205755,838.418269 473.5,840.1 L438.9,874.7 C436.17839,877.437565 435.799809,881.728158 438,884.9 C440.4,888.3 442.8,891.7 445.2,895 C440.7,893.1 436.3,891.1 431.9,889.1 C428.86068,887.698101 425.269908,888.336461 422.9,890.7 L387,926.5 C385.206339,928.31874 384.380991,930.880062 384.775333,933.403854 C385.169676,935.927646 386.737022,938.11511 389,939.3 C456.763878,974.049946 531.84563,992.117563 608,992.00057 C862.3,992.00057 1070.5,794.3 1087,544.1 C1087.7,533.5 1088,522.9 1088,512.1 L1087.6,495.6 Z M338.6,480 L193.2,480 C196.476568,435.937781 206.913411,392.704253 224.1,352 L353.5,352 C345.141453,394.203188 340.159019,437.005305 338.6,480 L338.6,480 Z M257.8,288 C273.983601,262.695367 292.787318,239.165581 313.9,217.8 C351.55,180.03315 396.130875,149.88249 445.2,129 C413.9,171.2 387.8,225.9 369.3,288 L257.8,288 Z M576,480 L402.6,480 C404.246384,436.941681 409.667166,394.110815 418.8,352 L576,352 L576,480 Z M576,288 L436.4,288 C446.6,257.5 458.8,229.1 472.9,204 C493,168.2 516.7,139.5 541.4,120.9 C551.888775,112.80148 563.557822,106.359896 576,101.8 L576,288 Z M575.8,87.6 L576.7,87.6 L576.7,86.7 L575.8,86.7 L575.8,87.6 Z M640,544 L813.4,544 C811.819116,587.052386 806.465269,629.883162 797.4,672 L640,672 L640,544 Z M674.6,903.1 C664.111225,911.19852 652.442178,917.640104 640,922.2 L640,736 L779.9,736 C770.41424,765.137744 758.088355,793.272917 743.1,820 C723,855.8 699.3,884.6 674.6,903.1 L674.6,903.1 Z M902.2,806.2 C864.55,843.96685 819.969125,874.11751 770.9,895 C802.3,852.5 828.4,798.1 847,735.5 L959,735.5 C942.666041,761.042003 923.622375,784.746003 902.2,806.2 L902.2,806.2 Z M992.3,671.5 L862.7,671.5 C870.9358,629.451226 875.850963,586.819718 877.4,544 L1022.8,544 C1019.55195,587.863016 1009.25313,630.915455 992.3,671.5 L992.3,671.5 Z",
  yOffset: 0,
  xOffset: 0
}, kf = et(xL), SL = {
  name: "GoogleIcon",
  height: 512,
  width: 488,
  svgPath: "M488 261.8C488 403.3 391.1 504 248 504 110.8 504 0 393.2 0 256S110.8 8 248 8c66.8 0 123 24.5 166.3 64.9l-67.5 64.9C258.5 52.6 94.3 116.6 94.3 256c0 86.5 69.1 156.6 153.7 156.6 98.2 0 135-70.4 140.8-106.9H248v-85.3h236.1c2.3 12.7 3.9 24.9 3.9 41.4z",
  yOffset: 0,
  xOffset: 0
}, wL = et(SL), OL = {
  name: "HelpIcon",
  height: 1024,
  width: 1024,
  svgPath: "M521.3,576 C627.5,576 713.7,502 713.7,413.7 C713.7,325.4 627.6,253.6 521.3,253.6 C366,253.6 334.5,337.7 329.2,407.2 C329.2,414.3 335.2,416 343.5,416 L445,416 C450.5,416 458,415.5 460.8,406.5 C460.8,362.6 582.9,357.1 582.9,413.6 C582.9,441.9 556.2,470.9 521.3,473 C486.4,475.1 447.3,479.8 447.3,521.7 L447.3,553.8 C447.3,570.8 456.1,576 472,576 C487.9,576 521.3,576 521.3,576 M575.3,751.3 L575.3,655.3 C575.313862,651.055109 573.620137,646.982962 570.6,644 C567.638831,640.947672 563.552355,639.247987 559.3,639.29884 L463.3,639.29884 C459.055109,639.286138 454.982962,640.979863 452,644 C448.947672,646.961169 447.247987,651.047645 447.29884,655.3 L447.29884,751.3 C447.286138,755.544891 448.979863,759.617038 452,762.6 C454.961169,765.652328 459.047645,767.352013 463.3,767.30116 L559.3,767.30116 C563.544891,767.313862 567.617038,765.620137 570.6,762.6 C573.659349,759.643612 575.360354,755.553963 575.3,751.3 M512,896 C300.2,896 128,723.9 128,512 C128,300.3 300.2,128 512,128 C723.8,128 896,300.2 896,512 C896,723.8 723.7,896 512,896 M512.1,0 C229.7,0 0,229.8 0,512 C0,794.2 229.8,1024 512.1,1024 C794.4,1024 1024,794.3 1024,512 C1024,229.7 794.4,0 512.1,0",
  yOffset: 0,
  xOffset: 0
}, Ls = et(OL), kL = {
  name: "InstagramIcon",
  height: 512,
  width: 448,
  svgPath: "M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z",
  yOffset: 0,
  xOffset: 0
}, TL = et(kL), IL = {
  name: "LinkedinIcon",
  height: 512,
  width: 448,
  svgPath: "M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z",
  yOffset: 0,
  xOffset: 0
}, EL = et(IL), PL = {
  name: "LongArrowAltDownIcon",
  height: 512,
  width: 256,
  svgPath: "M168 345.941V44c0-6.627-5.373-12-12-12h-56c-6.627 0-12 5.373-12 12v301.941H41.941c-21.382 0-32.09 25.851-16.971 40.971l86.059 86.059c9.373 9.373 24.569 9.373 33.941 0l86.059-86.059c15.119-15.119 4.411-40.971-16.971-40.971H168z",
  yOffset: 0,
  xOffset: 0
}, _L = et(PL), RL = {
  name: "LongArrowAltUpIcon",
  height: 512,
  width: 256,
  svgPath: "M88 166.059V468c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12V166.059h46.059c21.382 0 32.09-25.851 16.971-40.971l-86.059-86.059c-9.373-9.373-24.569-9.373-33.941 0l-86.059 86.059c-15.119 15.119-4.411 40.971 16.971 40.971H88z",
  yOffset: 0,
  xOffset: 0
}, AL = et(RL), LL = {
  name: "MicrosoftIcon",
  height: 512,
  width: 448,
  svgPath: "M0 32h214.6v214.6H0V32zm233.4 0H448v214.6H233.4V32zM0 265.4h214.6V480H0V265.4zm233.4 0H448V480H233.4V265.4z",
  yOffset: 0,
  xOffset: 0
}, NL = et(LL), DL = {
  name: "MinusCircleIcon",
  height: 512,
  width: 512,
  svgPath: "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zM124 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H124z",
  yOffset: 0,
  xOffset: 0
}, $i = et(DL), ML = {
  name: "OpenshiftIcon",
  height: 100,
  width: 100,
  svgPath: "M145.7,45.3l-16.1,5.8c0.2,2.6,0.6,5.1,1.3,7.6l15.3-5.6C145.7,50.6,145.5,47.9,145.7,45.3M216.7,27.5c-1.1-2.3-2.4-4.5-3.9-6.6l-16.1,5.8c1.9,1.9,3.4,4.1,4.7,6.4L216.7,27.5zM181.4,23c3.3,1.6,6.2,3.7,8.7,6.2l16.1-5.8c-4.4-6.2-10.5-11.5-17.9-14.9c-22.9-10.7-50.3-0.7-61,22.2c-3.5,7.4-4.8,15.3-4.1,23l16.1-5.8c0.3-3.5,1.1-7,2.7-10.3C148.7,22.5,166.4,16,181.4,23M131.9,58.4l-15.3,5.6c1.4,5.6,3.8,10.8,7.2,15.5l16-5.8C135.8,69.4,133,64.1,131.9,58.4M198.5,52.3c-0.3,3.5-1.1,7-2.7,10.3C188.8,77.5,171,84,156.1,77c-3.3-1.6-6.3-3.7-8.7-6.2l-16,5.8c4.4,6.2,10.5,11.5,17.9,14.9c22.9,10.7,50.3,0.7,61-22.2c3.5-7.4,4.7-15.3,4.1-22.9L198.5,52.3zM202.4,32.7l-15.3,5.6c2.8,5.1,4.2,10.9,3.7,16.8l16-5.8C206.5,43.5,204.9,37.9,202.4,32.7",
  yOffset: 0,
  xOffset: 116
}, FL = et(ML), $L = {
  name: "PaypalIcon",
  height: 512,
  width: 384,
  svgPath: "M111.4 295.9c-3.5 19.2-17.4 108.7-21.5 134-.3 1.8-1 2.5-3 2.5H12.3c-7.6 0-13.1-6.6-12.1-13.9L58.8 46.6c1.5-9.6 10.1-16.9 20-16.9 152.3 0 165.1-3.7 204 11.4 60.1 23.3 65.6 79.5 44 140.3-21.5 62.6-72.5 89.5-140.1 90.3-43.4.7-69.5-7-75.3 24.2zM357.1 152c-1.8-1.3-2.5-1.8-3 1.3-2 11.4-5.1 22.5-8.8 33.6-39.9 113.8-150.5 103.9-204.5 103.9-6.1 0-10.1 3.3-10.9 9.4-22.6 140.4-27.1 169.7-27.1 169.7-1 7.1 3.5 12.9 10.6 12.9h63.5c8.6 0 15.7-6.3 17.4-14.9.7-5.4-1.1 6.1 14.4-91.3 4.6-22 14.3-19.7 29.3-19.7 71 0 126.4-28.8 142.9-112.3 6.5-34.8 4.6-71.4-23.8-92.6z",
  yOffset: 0,
  xOffset: 0
}, jL = et($L), BL = {
  name: "PencilAltIcon",
  height: 512,
  width: 512,
  svgPath: "M497.9 142.1l-46.1 46.1c-4.7 4.7-12.3 4.7-17 0l-111-111c-4.7-4.7-4.7-12.3 0-17l46.1-46.1c18.7-18.7 49.1-18.7 67.9 0l60.1 60.1c18.8 18.7 18.8 49.1 0 67.9zM284.2 99.8L21.6 362.4.4 483.9c-2.9 16.4 11.4 30.6 27.8 27.8l121.5-21.3 262.6-262.6c4.7-4.7 4.7-12.3 0-17l-111-111c-4.8-4.7-12.4-4.7-17.1 0zM124.1 339.9c-5.5-5.5-5.5-14.3 0-19.8l154-154c5.5-5.5 14.3-5.5 19.8 0s5.5 14.3 0 19.8l-154 154c-5.5 5.5-14.3 5.5-19.8 0zM88 424h48v36.3l-64.5 11.3-31.1-31.1L51.7 376H88v48z",
  yOffset: 0,
  xOffset: 0
}, mw = et(BL), UL = {
  name: "PlusCircleIcon",
  height: 512,
  width: 512,
  svgPath: "M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z",
  yOffset: 0,
  xOffset: 0
}, _a = et(UL), VL = {
  name: "QuestionCircleIcon",
  height: 512,
  width: 512,
  svgPath: "M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z",
  yOffset: 0,
  xOffset: 0
}, zc = et(VL), KL = {
  name: "StackOverflowIcon",
  height: 512,
  width: 384,
  svgPath: "M290.7 311L95 269.7 86.8 309l195.7 41zm51-87L188.2 95.7l-25.5 30.8 153.5 128.3zm-31.2 39.7L129.2 179l-16.7 36.5L293.7 300zM262 32l-32 24 119.3 160.3 32-24zm20.5 328h-200v39.7h200zm39.7 80H42.7V320h-40v160h359.5V320h-40z",
  yOffset: 0,
  xOffset: 0
}, HL = et(KL), zL = {
  name: "SyncAltIcon",
  height: 512,
  width: 512,
  svgPath: "M370.72 133.28C339.458 104.008 298.888 87.962 255.848 88c-77.458.068-144.328 53.178-162.791 126.85-1.344 5.363-6.122 9.15-11.651 9.15H24.103c-7.498 0-13.194-6.807-11.807-14.176C33.933 94.924 134.813 8 256 8c66.448 0 126.791 26.136 171.315 68.685L463.03 40.97C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.749zM32 296h134.059c21.382 0 32.09 25.851 16.971 40.971l-41.75 41.75c31.262 29.273 71.835 45.319 114.876 45.28 77.418-.07 144.315-53.144 162.787-126.849 1.344-5.363 6.122-9.15 11.651-9.15h57.304c7.498 0 13.194 6.807 11.807 14.176C478.067 417.076 377.187 504 256 504c-66.448 0-126.791-26.136-171.315-68.685L48.97 471.03C33.851 486.149 8 475.441 8 454.059V320c0-13.255 10.745-24 24-24z",
  yOffset: 0,
  xOffset: 0
}, qL = et(zL), GL = {
  name: "TrashIcon",
  height: 512,
  width: 448,
  svgPath: "M432 32H312l-9.4-18.7A24 24 0 0 0 281.1 0H166.8a23.72 23.72 0 0 0-21.4 13.3L136 32H16A16 16 0 0 0 0 48v32a16 16 0 0 0 16 16h416a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16zM53.2 467a48 48 0 0 0 47.9 45h245.8a48 48 0 0 0 47.9-45L416 128H32z",
  yOffset: 0,
  xOffset: 0
}, lu = et(GL), WL = {
  name: "TreeIcon",
  height: 512,
  width: 384,
  svgPath: "M378.31 378.49L298.42 288h30.63c9.01 0 16.98-5 20.78-13.06 3.8-8.04 2.55-17.26-3.28-24.05L268.42 160h28.89c9.1 0 17.3-5.35 20.86-13.61 3.52-8.13 1.86-17.59-4.24-24.08L203.66 4.83c-6.03-6.45-17.28-6.45-23.32 0L70.06 122.31c-6.1 6.49-7.75 15.95-4.24 24.08C69.38 154.65 77.59 160 86.69 160h28.89l-78.14 90.91c-5.81 6.78-7.06 15.99-3.27 24.04C37.97 283 45.93 288 54.95 288h30.63L5.69 378.49c-6 6.79-7.36 16.09-3.56 24.26 3.75 8.05 12 13.25 21.01 13.25H160v24.45l-30.29 48.4c-5.32 10.64 2.42 23.16 14.31 23.16h95.96c11.89 0 19.63-12.52 14.31-23.16L224 440.45V416h136.86c9.01 0 17.26-5.2 21.01-13.25 3.8-8.17 2.44-17.47-3.56-24.26z",
  yOffset: 0,
  xOffset: 0
}, XL = et(WL), YL = {
  name: "TwitterIcon",
  height: 512,
  width: 512,
  svgPath: "M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z",
  yOffset: 0,
  xOffset: 0
}, JL = et(YL), ZL = {
  name: "UploadIcon",
  height: 512,
  width: 512,
  svgPath: "M296 384h-80c-13.3 0-24-10.7-24-24V192h-87.7c-17.8 0-26.7-21.5-14.1-34.1L242.3 5.7c7.5-7.5 19.8-7.5 27.3 0l152.2 152.2c12.6 12.6 3.7 34.1-14.1 34.1H320v168c0 13.3-10.7 24-24 24zm216-8v112c0 13.3-10.7 24-24 24H24c-13.3 0-24-10.7-24-24V376c0-13.3 10.7-24 24-24h136v8c0 30.9 25.1 56 56 56h80c30.9 0 56-25.1 56-56v-8h136c13.3 0 24 10.7 24 24zm-124 88c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20zm64 0c0-11-9-20-20-20s-20 9-20 20 9 20 20 20 20-9 20-20z",
  yOffset: 0,
  xOffset: 0
}, QL = et(ZL), eN = {
  name: "WarningTriangleIcon",
  height: 1024,
  width: 1088,
  svgPath: "M1057.10141,663.5 L845.101405,215.4 C787.101405,71.8 665.401405,0 542.901405,0 C420.201405,0 296.701405,71.9 235.001405,215.6 L31.7014051,648.5 C10.4014051,700 -0.0985948775,752.3 0.000697596367,800.8 C0.301405123,924.8 70.2014051,1024 209.101405,1024 L868.401405,1024 C1005.80141,1024 1087.70141,918.6 1088.00215,795.5 C1088.10141,752.4 1078.20141,707.2 1057.10141,663.5 Z M959.401405,800.3 C958.701405,822.9 952.901405,843.5 942.601405,859.7 C926.801405,884.6 902.601405,896.7 868.301405,896.7 L209.101405,896.7 C191.201405,896.7 176.601405,893.8 165.401405,888.2 C157.301405,884 150.801405,878.4 145.401405,870.3 C135.101405,855 129.101405,832 128.401405,805.6 C127.601405,772.8 134.901405,736.5 149.401405,700.5 L353.001405,266.7 C363.201405,242.9 376.101405,221.5 391.101405,203.2 C404.801405,186.6 420.301405,172.4 437.401405,161.1 C469.201405,139.9 505.701405,128.8 542.901405,128.8 C579.701405,128.8 615.401405,139.8 646.001405,160.5 C662.401405,171.6 677.101405,185.4 690.101405,201.6 C704.501405,219.6 716.401405,240.6 725.901405,264 L940.901405,718.9 L941.101405,719.3 L941.301405,719.7 C953.901405,746 960.201405,773.9 959.401405,800.3 Z M586.601405,832 L501.301405,832 C489.501405,831.8 480.201405,821.5 480.001405,808.7 L480.001405,727.3 C480.201405,714.5 489.601405,704.3 501.301405,704 L586.601405,704 C598.401405,704.2 607.701405,714.5 607.901405,727.3 L607.901405,808.7 L608.001405,808.7 C607.701405,821.5 598.301405,831.8 586.601405,832 M639.901405,290.7 L613.201405,610.4 C611.801405,626.9 598.001405,640 581.301405,640 L506.601405,640 C490.001405,640 476.101405,627.2 474.701405,610.7 L448.101405,291 C446.501405,272.3 461.301405,256.3 480.001405,256.3 L608.001405,256 C626.701405,256 641.401405,272 639.901405,290.7",
  yOffset: 0,
  xOffset: 0
}, Yu = et(eN);
var qc = (e) => e.type === "checkbox", xo = (e) => e instanceof Date, ua = (e) => e == null;
const fw = (e) => typeof e == "object";
var Mn = (e) => !ua(e) && !Array.isArray(e) && fw(e) && !xo(e), hw = (e) => Mn(e) && e.target ? qc(e.target) ? e.target.checked : e.target.value : e, tN = (e) => e.substring(0, e.search(/\.\d+(\.|$)/)) || e, gw = (e, t) => e.has(tN(t)), nN = (e) => {
  const t = e.constructor && e.constructor.prototype;
  return Mn(t) && t.hasOwnProperty("isPrototypeOf");
}, tg = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
function jn(e) {
  let t;
  const n = Array.isArray(e);
  if (e instanceof Date)
    t = new Date(e);
  else if (e instanceof Set)
    t = new Set(e);
  else if (!(tg && (e instanceof Blob || e instanceof FileList)) && (n || Mn(e)))
    if (t = n ? [] : {}, !n && !nN(e))
      t = e;
    else
      for (const r in e)
        e.hasOwnProperty(r) && (t[r] = jn(e[r]));
  else
    return e;
  return t;
}
var Gc = (e) => Array.isArray(e) ? e.filter(Boolean) : [], dn = (e) => e === void 0, $e = (e, t, n) => {
  if (!t || !Mn(e))
    return n;
  const r = Gc(t.split(/[,[\].]+?/)).reduce((i, s) => ua(i) ? i : i[s], e);
  return dn(r) || r === e ? dn(e[t]) ? n : e[t] : r;
}, er = (e) => typeof e == "boolean", ng = (e) => /^\w*$/.test(e), bw = (e) => Gc(e.replace(/["|']|\]/g, "").split(/\.|\[/)), en = (e, t, n) => {
  let r = -1;
  const i = ng(t) ? [t] : bw(t), s = i.length, o = s - 1;
  for (; ++r < s; ) {
    const l = i[r];
    let c = n;
    if (r !== o) {
      const d = e[l];
      c = Mn(d) || Array.isArray(d) ? d : isNaN(+i[r + 1]) ? {} : [];
    }
    if (l === "__proto__")
      return;
    e[l] = c, e = e[l];
  }
  return e;
};
const cu = {
  BLUR: "blur",
  FOCUS_OUT: "focusout",
  CHANGE: "change"
}, rr = {
  onBlur: "onBlur",
  onChange: "onChange",
  onSubmit: "onSubmit",
  onTouched: "onTouched",
  all: "all"
}, di = {
  max: "max",
  min: "min",
  maxLength: "maxLength",
  minLength: "minLength",
  pattern: "pattern",
  required: "required",
  validate: "validate"
}, vw = ne.createContext(null), De = () => ne.useContext(vw), He = (e) => {
  const { children: t, ...n } = e;
  return ne.createElement(vw.Provider, { value: n }, t);
};
var yw = (e, t, n, r = !0) => {
  const i = {
    defaultValues: t._defaultValues
  };
  for (const s in e)
    Object.defineProperty(i, s, {
      get: () => {
        const o = s;
        return t._proxyFormState[o] !== rr.all && (t._proxyFormState[o] = !r || rr.all), n && (n[o] = !0), e[o];
      }
    });
  return i;
}, da = (e) => Mn(e) && !Object.keys(e).length, Cw = (e, t, n, r) => {
  n(e);
  const { name: i, ...s } = e;
  return da(s) || Object.keys(s).length >= Object.keys(t).length || Object.keys(s).find((o) => t[o] === (!r || rr.all));
}, wa = (e) => Array.isArray(e) ? e : [e], xw = (e, t, n) => !e || !t || e === t || wa(e).some((r) => r && (n ? r === t : r.startsWith(t) || t.startsWith(r)));
function Ju(e) {
  const t = ne.useRef(e);
  t.current = e, ne.useEffect(() => {
    const n = !e.disabled && t.current.subject && t.current.subject.subscribe({
      next: t.current.next
    });
    return () => {
      n && n.unsubscribe();
    };
  }, [e.disabled]);
}
function aN(e) {
  const t = De(), { control: n = t.control, disabled: r, name: i, exact: s } = e || {}, [o, l] = ne.useState(n._formState), c = ne.useRef(!0), d = ne.useRef({
    isDirty: !1,
    isLoading: !1,
    dirtyFields: !1,
    touchedFields: !1,
    validatingFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  }), u = ne.useRef(i);
  return u.current = i, Ju({
    disabled: r,
    next: (p) => c.current && xw(u.current, p.name, s) && Cw(p, d.current, n._updateFormState) && l({
      ...n._formState,
      ...p
    }),
    subject: n._subjects.state
  }), ne.useEffect(() => (c.current = !0, d.current.isValid && n._updateValid(!0), () => {
    c.current = !1;
  }), [n]), yw(o, n, d.current, !1);
}
var Kr = (e) => typeof e == "string", Sw = (e, t, n, r, i) => Kr(e) ? (r && t.watch.add(e), $e(n, e, i)) : Array.isArray(e) ? e.map((s) => (r && t.watch.add(s), $e(n, s))) : (r && (t.watchAll = !0), n);
function rt(e) {
  const t = De(), { control: n = t.control, name: r, defaultValue: i, disabled: s, exact: o } = e || {}, l = ne.useRef(r);
  l.current = r, Ju({
    disabled: s,
    subject: n._subjects.values,
    next: (u) => {
      xw(l.current, u.name, o) && d(jn(Sw(l.current, n._names, u.values || n._formValues, !1, i)));
    }
  });
  const [c, d] = ne.useState(n._getWatch(r, i));
  return ne.useEffect(() => n._removeUnmounted()), c;
}
function Ys(e) {
  const t = De(), { name: n, disabled: r, control: i = t.control, shouldUnregister: s } = e, o = gw(i._names.array, n), l = rt({
    control: i,
    name: n,
    defaultValue: $e(i._formValues, n, $e(i._defaultValues, n, e.defaultValue)),
    exact: !0
  }), c = aN({
    control: i,
    name: n,
    exact: !0
  }), d = ne.useRef(i.register(n, {
    ...e.rules,
    value: l,
    ...er(e.disabled) ? { disabled: e.disabled } : {}
  }));
  return ne.useEffect(() => {
    const u = i._options.shouldUnregister || s, p = (m, f) => {
      const g = $e(i._fields, m);
      g && g._f && (g._f.mount = f);
    };
    if (p(n, !0), u) {
      const m = jn($e(i._options.defaultValues, n));
      en(i._defaultValues, n, m), dn($e(i._formValues, n)) && en(i._formValues, n, m);
    }
    return () => {
      (o ? u && !i._state.action : u) ? i.unregister(n) : p(n, !1);
    };
  }, [n, i, o, s]), ne.useEffect(() => {
    $e(i._fields, n) && i._updateDisabledField({
      disabled: r,
      fields: i._fields,
      name: n,
      value: $e(i._fields, n)._f.value
    });
  }, [r, n, i]), {
    field: {
      name: n,
      value: l,
      ...er(r) || c.disabled ? { disabled: c.disabled || r } : {},
      onChange: ne.useCallback((u) => d.current.onChange({
        target: {
          value: hw(u),
          name: n
        },
        type: cu.CHANGE
      }), [n]),
      onBlur: ne.useCallback(() => d.current.onBlur({
        target: {
          value: $e(i._formValues, n),
          name: n
        },
        type: cu.BLUR
      }), [n, i]),
      ref: ne.useCallback((u) => {
        const p = $e(i._fields, n);
        p && u && (p._f.ref = {
          focus: () => u.focus(),
          select: () => u.select(),
          setCustomValidity: (m) => u.setCustomValidity(m),
          reportValidity: () => u.reportValidity()
        });
      }, [i._fields, n])
    },
    formState: c,
    fieldState: Object.defineProperties({}, {
      invalid: {
        enumerable: !0,
        get: () => !!$e(c.errors, n)
      },
      isDirty: {
        enumerable: !0,
        get: () => !!$e(c.dirtyFields, n)
      },
      isTouched: {
        enumerable: !0,
        get: () => !!$e(c.touchedFields, n)
      },
      isValidating: {
        enumerable: !0,
        get: () => !!$e(c.validatingFields, n)
      },
      error: {
        enumerable: !0,
        get: () => $e(c.errors, n)
      }
    })
  };
}
const be = (e) => e.render(Ys(e));
var rN = (e, t, n, r, i) => t ? {
  ...n[e],
  types: {
    ...n[e] && n[e].types ? n[e].types : {},
    [r]: i || !0
  }
} : {}, zi = () => {
  const e = typeof performance > "u" ? Date.now() : performance.now() * 1e3;
  return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (t) => {
    const n = (Math.random() * 16 + e) % 16 | 0;
    return (t == "x" ? n : n & 3 | 8).toString(16);
  });
}, lm = (e, t, n = {}) => n.shouldFocus || dn(n.shouldFocus) ? n.focusName || `${e}.${dn(n.focusIndex) ? t : n.focusIndex}.` : "", Yl = (e) => ({
  isOnSubmit: !e || e === rr.onSubmit,
  isOnBlur: e === rr.onBlur,
  isOnChange: e === rr.onChange,
  isOnAll: e === rr.all,
  isOnTouch: e === rr.onTouched
}), Tf = (e, t, n) => !n && (t.watchAll || t.watch.has(e) || [...t.watch].some((r) => e.startsWith(r) && /^\.\w+/.test(e.slice(r.length))));
const To = (e, t, n, r) => {
  for (const i of n || Object.keys(e)) {
    const s = $e(e, i);
    if (s) {
      const { _f: o, ...l } = s;
      if (o) {
        if (o.refs && o.refs[0] && t(o.refs[0], i) && !r)
          return !0;
        if (o.ref && t(o.ref, o.name) && !r)
          return !0;
        if (To(l, t))
          break;
      } else if (Mn(l) && To(l, t))
        break;
    }
  }
};
var ww = (e, t, n) => {
  const r = wa($e(e, n));
  return en(r, "root", t[n]), en(e, n, r), e;
}, ag = (e) => e.type === "file", vi = (e) => typeof e == "function", du = (e) => {
  if (!tg)
    return !1;
  const t = e ? e.ownerDocument : 0;
  return e instanceof (t && t.defaultView ? t.defaultView.HTMLElement : HTMLElement);
}, Fd = (e) => Kr(e), rg = (e) => e.type === "radio", uu = (e) => e instanceof RegExp;
const jv = {
  value: !1,
  isValid: !1
}, Bv = { value: !0, isValid: !0 };
var Ow = (e) => {
  if (Array.isArray(e)) {
    if (e.length > 1) {
      const t = e.filter((n) => n && n.checked && !n.disabled).map((n) => n.value);
      return { value: t, isValid: !!t.length };
    }
    return e[0].checked && !e[0].disabled ? (
      // @ts-expect-error expected to work in the browser
      e[0].attributes && !dn(e[0].attributes.value) ? dn(e[0].value) || e[0].value === "" ? Bv : { value: e[0].value, isValid: !0 } : Bv
    ) : jv;
  }
  return jv;
};
const Uv = {
  isValid: !1,
  value: null
};
var kw = (e) => Array.isArray(e) ? e.reduce((t, n) => n && n.checked && !n.disabled ? {
  isValid: !0,
  value: n.value
} : t, Uv) : Uv;
function Vv(e, t, n = "validate") {
  if (Fd(e) || Array.isArray(e) && e.every(Fd) || er(e) && !e)
    return {
      type: n,
      message: Fd(e) ? e : "",
      ref: t
    };
}
var po = (e) => Mn(e) && !uu(e) ? e : {
  value: e,
  message: ""
}, If = async (e, t, n, r, i) => {
  const { ref: s, refs: o, required: l, maxLength: c, minLength: d, min: u, max: p, pattern: m, validate: f, name: g, valueAsNumber: b, mount: v, disabled: y } = e._f, C = $e(t, g);
  if (!v || y)
    return {};
  const S = o ? o[0] : s, P = (E) => {
    r && S.reportValidity && (S.setCustomValidity(er(E) ? "" : E || ""), S.reportValidity());
  }, w = {}, A = rg(s), k = qc(s), T = A || k, O = (b || ag(s)) && dn(s.value) && dn(C) || du(s) && s.value === "" || C === "" || Array.isArray(C) && !C.length, I = rN.bind(null, g, n, w), _ = (E, L, F, R = di.maxLength, M = di.minLength) => {
    const U = E ? L : F;
    w[g] = {
      type: E ? R : M,
      message: U,
      ref: s,
      ...I(E ? R : M, U)
    };
  };
  if (i ? !Array.isArray(C) || !C.length : l && (!T && (O || ua(C)) || er(C) && !C || k && !Ow(o).isValid || A && !kw(o).isValid)) {
    const { value: E, message: L } = Fd(l) ? { value: !!l, message: l } : po(l);
    if (E && (w[g] = {
      type: di.required,
      message: L,
      ref: S,
      ...I(di.required, L)
    }, !n))
      return P(L), w;
  }
  if (!O && (!ua(u) || !ua(p))) {
    let E, L;
    const F = po(p), R = po(u);
    if (!ua(C) && !isNaN(C)) {
      const M = s.valueAsNumber || C && +C;
      ua(F.value) || (E = M > F.value), ua(R.value) || (L = M < R.value);
    } else {
      const M = s.valueAsDate || new Date(C), U = (N) => /* @__PURE__ */ new Date((/* @__PURE__ */ new Date()).toDateString() + " " + N), K = s.type == "time", G = s.type == "week";
      Kr(F.value) && C && (E = K ? U(C) > U(F.value) : G ? C > F.value : M > new Date(F.value)), Kr(R.value) && C && (L = K ? U(C) < U(R.value) : G ? C < R.value : M < new Date(R.value));
    }
    if ((E || L) && (_(!!E, F.message, R.message, di.max, di.min), !n))
      return P(w[g].message), w;
  }
  if ((c || d) && !O && (Kr(C) || i && Array.isArray(C))) {
    const E = po(c), L = po(d), F = !ua(E.value) && C.length > +E.value, R = !ua(L.value) && C.length < +L.value;
    if ((F || R) && (_(F, E.message, L.message), !n))
      return P(w[g].message), w;
  }
  if (m && !O && Kr(C)) {
    const { value: E, message: L } = po(m);
    if (uu(E) && !C.match(E) && (w[g] = {
      type: di.pattern,
      message: L,
      ref: s,
      ...I(di.pattern, L)
    }, !n))
      return P(L), w;
  }
  if (f) {
    if (vi(f)) {
      const E = await f(C, t), L = Vv(E, S);
      if (L && (w[g] = {
        ...L,
        ...I(di.validate, L.message)
      }, !n))
        return P(L.message), w;
    } else if (Mn(f)) {
      let E = {};
      for (const L in f) {
        if (!da(E) && !n)
          break;
        const F = Vv(await f[L](C, t), S, L);
        F && (E = {
          ...F,
          ...I(L, F.message)
        }, P(F.message), n && (w[g] = E));
      }
      if (!da(E) && (w[g] = {
        ref: S,
        ...E
      }, !n))
        return w;
    }
  }
  return P(!0), w;
}, cm = (e, t) => [
  ...e,
  ...wa(t)
], dm = (e) => Array.isArray(e) ? e.map(() => {
}) : void 0;
function um(e, t, n) {
  return [
    ...e.slice(0, t),
    ...wa(n),
    ...e.slice(t)
  ];
}
var pm = (e, t, n) => Array.isArray(e) ? (dn(e[n]) && (e[n] = void 0), e.splice(n, 0, e.splice(t, 1)[0]), e) : [], mm = (e, t) => [
  ...wa(t),
  ...wa(e)
];
function iN(e, t) {
  let n = 0;
  const r = [...e];
  for (const i of t)
    r.splice(i - n, 1), n++;
  return Gc(r).length ? r : [];
}
var fm = (e, t) => dn(t) ? [] : iN(e, wa(t).sort((n, r) => n - r)), hm = (e, t, n) => {
  [e[t], e[n]] = [e[n], e[t]];
};
function sN(e, t) {
  const n = t.slice(0, -1).length;
  let r = 0;
  for (; r < n; )
    e = dn(e) ? r++ : e[t[r++]];
  return e;
}
function oN(e) {
  for (const t in e)
    if (e.hasOwnProperty(t) && !dn(e[t]))
      return !1;
  return !0;
}
function Rn(e, t) {
  const n = Array.isArray(t) ? t : ng(t) ? [t] : bw(t), r = n.length === 1 ? e : sN(e, n), i = n.length - 1, s = n[i];
  return r && delete r[s], i !== 0 && (Mn(r) && da(r) || Array.isArray(r) && oN(r)) && Rn(e, n.slice(0, -1)), e;
}
var Kv = (e, t, n) => (e[t] = n, e);
function ig(e) {
  const t = De(), { control: n = t.control, name: r, keyName: i = "id", shouldUnregister: s } = e, [o, l] = ne.useState(n._getFieldArray(r)), c = ne.useRef(n._getFieldArray(r).map(zi)), d = ne.useRef(o), u = ne.useRef(r), p = ne.useRef(!1);
  u.current = r, d.current = o, n._names.array.add(r), e.rules && n.register(r, e.rules), Ju({
    next: ({ values: w, name: A }) => {
      if (A === u.current || !A) {
        const k = $e(w, u.current);
        Array.isArray(k) && (l(k), c.current = k.map(zi));
      }
    },
    subject: n._subjects.array
  });
  const m = ne.useCallback((w) => {
    p.current = !0, n._updateFieldArray(r, w);
  }, [n, r]), f = (w, A) => {
    const k = wa(jn(w)), T = cm(n._getFieldArray(r), k);
    n._names.focus = lm(r, T.length - 1, A), c.current = cm(c.current, k.map(zi)), m(T), l(T), n._updateFieldArray(r, T, cm, {
      argA: dm(w)
    });
  }, g = (w, A) => {
    const k = wa(jn(w)), T = mm(n._getFieldArray(r), k);
    n._names.focus = lm(r, 0, A), c.current = mm(c.current, k.map(zi)), m(T), l(T), n._updateFieldArray(r, T, mm, {
      argA: dm(w)
    });
  }, b = (w) => {
    const A = fm(n._getFieldArray(r), w);
    c.current = fm(c.current, w), m(A), l(A), n._updateFieldArray(r, A, fm, {
      argA: w
    });
  }, v = (w, A, k) => {
    const T = wa(jn(A)), O = um(n._getFieldArray(r), w, T);
    n._names.focus = lm(r, w, k), c.current = um(c.current, w, T.map(zi)), m(O), l(O), n._updateFieldArray(r, O, um, {
      argA: w,
      argB: dm(A)
    });
  }, y = (w, A) => {
    const k = n._getFieldArray(r);
    hm(k, w, A), hm(c.current, w, A), m(k), l(k), n._updateFieldArray(r, k, hm, {
      argA: w,
      argB: A
    }, !1);
  }, C = (w, A) => {
    const k = n._getFieldArray(r);
    pm(k, w, A), pm(c.current, w, A), m(k), l(k), n._updateFieldArray(r, k, pm, {
      argA: w,
      argB: A
    }, !1);
  }, S = (w, A) => {
    const k = jn(A), T = Kv(n._getFieldArray(r), w, k);
    c.current = [...T].map((O, I) => !O || I === w ? zi() : c.current[I]), m(T), l([...T]), n._updateFieldArray(r, T, Kv, {
      argA: w,
      argB: k
    }, !0, !1);
  }, P = (w) => {
    const A = wa(jn(w));
    c.current = A.map(zi), m([...A]), l([...A]), n._updateFieldArray(r, [...A], (k) => k, {}, !0, !1);
  };
  return ne.useEffect(() => {
    if (n._state.action = !1, Tf(r, n._names) && n._subjects.state.next({
      ...n._formState
    }), p.current && (!Yl(n._options.mode).isOnSubmit || n._formState.isSubmitted))
      if (n._options.resolver)
        n._executeSchema([r]).then((w) => {
          const A = $e(w.errors, r), k = $e(n._formState.errors, r);
          (k ? !A && k.type || A && (k.type !== A.type || k.message !== A.message) : A && A.type) && (A ? en(n._formState.errors, r, A) : Rn(n._formState.errors, r), n._subjects.state.next({
            errors: n._formState.errors
          }));
        });
      else {
        const w = $e(n._fields, r);
        w && w._f && !(Yl(n._options.reValidateMode).isOnSubmit && Yl(n._options.mode).isOnSubmit) && If(w, n._formValues, n._options.criteriaMode === rr.all, n._options.shouldUseNativeValidation, !0).then((A) => !da(A) && n._subjects.state.next({
          errors: ww(n._formState.errors, A, r)
        }));
      }
    n._subjects.values.next({
      name: r,
      values: { ...n._formValues }
    }), n._names.focus && To(n._fields, (w, A) => {
      if (n._names.focus && A.startsWith(n._names.focus) && w.focus)
        return w.focus(), 1;
    }), n._names.focus = "", n._updateValid(), p.current = !1;
  }, [o, r, n]), ne.useEffect(() => (!$e(n._formValues, r) && n._updateFieldArray(r), () => {
    (n._options.shouldUnregister || s) && n.unregister(r);
  }), [r, n, i, s]), {
    swap: ne.useCallback(y, [m, r, n]),
    move: ne.useCallback(C, [m, r, n]),
    prepend: ne.useCallback(g, [m, r, n]),
    append: ne.useCallback(f, [m, r, n]),
    remove: ne.useCallback(b, [m, r, n]),
    insert: ne.useCallback(v, [m, r, n]),
    update: ne.useCallback(S, [m, r, n]),
    replace: ne.useCallback(P, [m, r, n]),
    fields: ne.useMemo(() => o.map((w, A) => ({
      ...w,
      [i]: c.current[A] || zi()
    })), [o, i])
  };
}
var gm = () => {
  let e = [];
  return {
    get observers() {
      return e;
    },
    next: (i) => {
      for (const s of e)
        s.next && s.next(i);
    },
    subscribe: (i) => (e.push(i), {
      unsubscribe: () => {
        e = e.filter((s) => s !== i);
      }
    }),
    unsubscribe: () => {
      e = [];
    }
  };
}, pu = (e) => ua(e) || !fw(e);
function Wi(e, t) {
  if (pu(e) || pu(t))
    return e === t;
  if (xo(e) && xo(t))
    return e.getTime() === t.getTime();
  const n = Object.keys(e), r = Object.keys(t);
  if (n.length !== r.length)
    return !1;
  for (const i of n) {
    const s = e[i];
    if (!r.includes(i))
      return !1;
    if (i !== "ref") {
      const o = t[i];
      if (xo(s) && xo(o) || Mn(s) && Mn(o) || Array.isArray(s) && Array.isArray(o) ? !Wi(s, o) : s !== o)
        return !1;
    }
  }
  return !0;
}
var Tw = (e) => e.type === "select-multiple", lN = (e) => rg(e) || qc(e), bm = (e) => du(e) && e.isConnected, Iw = (e) => {
  for (const t in e)
    if (vi(e[t]))
      return !0;
  return !1;
};
function mu(e, t = {}) {
  const n = Array.isArray(e);
  if (Mn(e) || n)
    for (const r in e)
      Array.isArray(e[r]) || Mn(e[r]) && !Iw(e[r]) ? (t[r] = Array.isArray(e[r]) ? [] : {}, mu(e[r], t[r])) : ua(e[r]) || (t[r] = !0);
  return t;
}
function Ew(e, t, n) {
  const r = Array.isArray(e);
  if (Mn(e) || r)
    for (const i in e)
      Array.isArray(e[i]) || Mn(e[i]) && !Iw(e[i]) ? dn(t) || pu(n[i]) ? n[i] = Array.isArray(e[i]) ? mu(e[i], []) : { ...mu(e[i]) } : Ew(e[i], ua(t) ? {} : t[i], n[i]) : n[i] = !Wi(e[i], t[i]);
  return n;
}
var bd = (e, t) => Ew(e, t, mu(t)), Pw = (e, { valueAsNumber: t, valueAsDate: n, setValueAs: r }) => dn(e) ? e : t ? e === "" ? NaN : e && +e : n && Kr(e) ? new Date(e) : r ? r(e) : e;
function vm(e) {
  const t = e.ref;
  if (!(e.refs ? e.refs.every((n) => n.disabled) : t.disabled))
    return ag(t) ? t.files : rg(t) ? kw(e.refs).value : Tw(t) ? [...t.selectedOptions].map(({ value: n }) => n) : qc(t) ? Ow(e.refs).value : Pw(dn(t.value) ? e.ref.value : t.value, e);
}
var cN = (e, t, n, r) => {
  const i = {};
  for (const s of e) {
    const o = $e(t, s);
    o && en(i, s, o._f);
  }
  return {
    criteriaMode: n,
    names: [...e],
    fields: i,
    shouldUseNativeValidation: r
  };
}, _l = (e) => dn(e) ? e : uu(e) ? e.source : Mn(e) ? uu(e.value) ? e.value.source : e.value : e;
const Hv = "AsyncFunction";
var dN = (e) => (!e || !e.validate) && !!(vi(e.validate) && e.validate.constructor.name === Hv || Mn(e.validate) && Object.values(e.validate).find((t) => t.constructor.name === Hv)), uN = (e) => e.mount && (e.required || e.min || e.max || e.maxLength || e.minLength || e.pattern || e.validate);
function zv(e, t, n) {
  const r = $e(e, n);
  if (r || ng(n))
    return {
      error: r,
      name: n
    };
  const i = n.split(".");
  for (; i.length; ) {
    const s = i.join("."), o = $e(t, s), l = $e(e, s);
    if (o && !Array.isArray(o) && n !== s)
      return { name: n };
    if (l && l.type)
      return {
        name: s,
        error: l
      };
    i.pop();
  }
  return {
    name: n
  };
}
var pN = (e, t, n, r, i) => i.isOnAll ? !1 : !n && i.isOnTouch ? !(t || e) : (n ? r.isOnBlur : i.isOnBlur) ? !e : (n ? r.isOnChange : i.isOnChange) ? e : !0, mN = (e, t) => !Gc($e(e, t)).length && Rn(e, t);
const fN = {
  mode: rr.onSubmit,
  reValidateMode: rr.onChange,
  shouldFocusError: !0
};
function hN(e = {}) {
  let t = {
    ...fN,
    ...e
  }, n = {
    submitCount: 0,
    isDirty: !1,
    isLoading: vi(t.defaultValues),
    isValidating: !1,
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    touchedFields: {},
    dirtyFields: {},
    validatingFields: {},
    errors: t.errors || {},
    disabled: t.disabled || !1
  }, r = {}, i = Mn(t.defaultValues) || Mn(t.values) ? jn(t.defaultValues || t.values) || {} : {}, s = t.shouldUnregister ? {} : jn(i), o = {
    action: !1,
    mount: !1,
    watch: !1
  }, l = {
    mount: /* @__PURE__ */ new Set(),
    unMount: /* @__PURE__ */ new Set(),
    array: /* @__PURE__ */ new Set(),
    watch: /* @__PURE__ */ new Set()
  }, c, d = 0;
  const u = {
    isDirty: !1,
    dirtyFields: !1,
    validatingFields: !1,
    touchedFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  }, p = {
    values: gm(),
    array: gm(),
    state: gm()
  }, m = Yl(t.mode), f = Yl(t.reValidateMode), g = t.criteriaMode === rr.all, b = (J) => (W) => {
    clearTimeout(d), d = setTimeout(J, W);
  }, v = async (J) => {
    if (u.isValid || J) {
      const W = t.resolver ? da((await T()).errors) : await I(r, !0);
      W !== n.isValid && p.state.next({
        isValid: W
      });
    }
  }, y = (J, W) => {
    (u.isValidating || u.validatingFields) && ((J || Array.from(l.mount)).forEach((Y) => {
      Y && (W ? en(n.validatingFields, Y, W) : Rn(n.validatingFields, Y));
    }), p.state.next({
      validatingFields: n.validatingFields,
      isValidating: !da(n.validatingFields)
    }));
  }, C = (J, W = [], Y, oe, he = !0, ue = !0) => {
    if (oe && Y) {
      if (o.action = !0, ue && Array.isArray($e(r, J))) {
        const fe = Y($e(r, J), oe.argA, oe.argB);
        he && en(r, J, fe);
      }
      if (ue && Array.isArray($e(n.errors, J))) {
        const fe = Y($e(n.errors, J), oe.argA, oe.argB);
        he && en(n.errors, J, fe), mN(n.errors, J);
      }
      if (u.touchedFields && ue && Array.isArray($e(n.touchedFields, J))) {
        const fe = Y($e(n.touchedFields, J), oe.argA, oe.argB);
        he && en(n.touchedFields, J, fe);
      }
      u.dirtyFields && (n.dirtyFields = bd(i, s)), p.state.next({
        name: J,
        isDirty: E(J, W),
        dirtyFields: n.dirtyFields,
        errors: n.errors,
        isValid: n.isValid
      });
    } else
      en(s, J, W);
  }, S = (J, W) => {
    en(n.errors, J, W), p.state.next({
      errors: n.errors
    });
  }, P = (J) => {
    n.errors = J, p.state.next({
      errors: n.errors,
      isValid: !1
    });
  }, w = (J, W, Y, oe) => {
    const he = $e(r, J);
    if (he) {
      const ue = $e(s, J, dn(Y) ? $e(i, J) : Y);
      dn(ue) || oe && oe.defaultChecked || W ? en(s, J, W ? ue : vm(he._f)) : R(J, ue), o.mount && v();
    }
  }, A = (J, W, Y, oe, he) => {
    let ue = !1, fe = !1;
    const Ce = {
      name: J
    }, Ge = !!($e(r, J) && $e(r, J)._f && $e(r, J)._f.disabled);
    if (!Y || oe) {
      u.isDirty && (fe = n.isDirty, n.isDirty = Ce.isDirty = E(), ue = fe !== Ce.isDirty);
      const Qe = Ge || Wi($e(i, J), W);
      fe = !!(!Ge && $e(n.dirtyFields, J)), Qe || Ge ? Rn(n.dirtyFields, J) : en(n.dirtyFields, J, !0), Ce.dirtyFields = n.dirtyFields, ue = ue || u.dirtyFields && fe !== !Qe;
    }
    if (Y) {
      const Qe = $e(n.touchedFields, J);
      Qe || (en(n.touchedFields, J, Y), Ce.touchedFields = n.touchedFields, ue = ue || u.touchedFields && Qe !== Y);
    }
    return ue && he && p.state.next(Ce), ue ? Ce : {};
  }, k = (J, W, Y, oe) => {
    const he = $e(n.errors, J), ue = u.isValid && er(W) && n.isValid !== W;
    if (e.delayError && Y ? (c = b(() => S(J, Y)), c(e.delayError)) : (clearTimeout(d), c = null, Y ? en(n.errors, J, Y) : Rn(n.errors, J)), (Y ? !Wi(he, Y) : he) || !da(oe) || ue) {
      const fe = {
        ...oe,
        ...ue && er(W) ? { isValid: W } : {},
        errors: n.errors,
        name: J
      };
      n = {
        ...n,
        ...fe
      }, p.state.next(fe);
    }
  }, T = async (J) => {
    y(J, !0);
    const W = await t.resolver(s, t.context, cN(J || l.mount, r, t.criteriaMode, t.shouldUseNativeValidation));
    return y(J), W;
  }, O = async (J) => {
    const { errors: W } = await T(J);
    if (J)
      for (const Y of J) {
        const oe = $e(W, Y);
        oe ? en(n.errors, Y, oe) : Rn(n.errors, Y);
      }
    else
      n.errors = W;
    return W;
  }, I = async (J, W, Y = {
    valid: !0
  }) => {
    for (const oe in J) {
      const he = J[oe];
      if (he) {
        const { _f: ue, ...fe } = he;
        if (ue) {
          const Ce = l.array.has(ue.name), Ge = he._f && dN(he._f);
          Ge && u.validatingFields && y([oe], !0);
          const Qe = await If(he, s, g, t.shouldUseNativeValidation && !W, Ce);
          if (Ge && u.validatingFields && y([oe]), Qe[ue.name] && (Y.valid = !1, W))
            break;
          !W && ($e(Qe, ue.name) ? Ce ? ww(n.errors, Qe, ue.name) : en(n.errors, ue.name, Qe[ue.name]) : Rn(n.errors, ue.name));
        }
        !da(fe) && await I(fe, W, Y);
      }
    }
    return Y.valid;
  }, _ = () => {
    for (const J of l.unMount) {
      const W = $e(r, J);
      W && (W._f.refs ? W._f.refs.every((Y) => !bm(Y)) : !bm(W._f.ref)) && X(J);
    }
    l.unMount = /* @__PURE__ */ new Set();
  }, E = (J, W) => (J && W && en(s, J, W), !Wi($(), i)), L = (J, W, Y) => Sw(J, l, {
    ...o.mount ? s : dn(W) ? i : Kr(J) ? { [J]: W } : W
  }, Y, W), F = (J) => Gc($e(o.mount ? s : i, J, e.shouldUnregister ? $e(i, J, []) : [])), R = (J, W, Y = {}) => {
    const oe = $e(r, J);
    let he = W;
    if (oe) {
      const ue = oe._f;
      ue && (!ue.disabled && en(s, J, Pw(W, ue)), he = du(ue.ref) && ua(W) ? "" : W, Tw(ue.ref) ? [...ue.ref.options].forEach((fe) => fe.selected = he.includes(fe.value)) : ue.refs ? qc(ue.ref) ? ue.refs.length > 1 ? ue.refs.forEach((fe) => (!fe.defaultChecked || !fe.disabled) && (fe.checked = Array.isArray(he) ? !!he.find((Ce) => Ce === fe.value) : he === fe.value)) : ue.refs[0] && (ue.refs[0].checked = !!he) : ue.refs.forEach((fe) => fe.checked = fe.value === he) : ag(ue.ref) ? ue.ref.value = "" : (ue.ref.value = he, ue.ref.type || p.values.next({
        name: J,
        values: { ...s }
      })));
    }
    (Y.shouldDirty || Y.shouldTouch) && A(J, he, Y.shouldTouch, Y.shouldDirty, !0), Y.shouldValidate && N(J);
  }, M = (J, W, Y) => {
    for (const oe in W) {
      const he = W[oe], ue = `${J}.${oe}`, fe = $e(r, ue);
      (l.array.has(J) || !pu(he) || fe && !fe._f) && !xo(he) ? M(ue, he, Y) : R(ue, he, Y);
    }
  }, U = (J, W, Y = {}) => {
    const oe = $e(r, J), he = l.array.has(J), ue = jn(W);
    en(s, J, ue), he ? (p.array.next({
      name: J,
      values: { ...s }
    }), (u.isDirty || u.dirtyFields) && Y.shouldDirty && p.state.next({
      name: J,
      dirtyFields: bd(i, s),
      isDirty: E(J, ue)
    })) : oe && !oe._f && !ua(ue) ? M(J, ue, Y) : R(J, ue, Y), Tf(J, l) && p.state.next({ ...n }), p.values.next({
      name: o.mount ? J : void 0,
      values: { ...s }
    });
  }, K = async (J) => {
    o.mount = !0;
    const W = J.target;
    let Y = W.name, oe = !0;
    const he = $e(r, Y), ue = () => W.type ? vm(he._f) : hw(J), fe = (Ce) => {
      oe = Number.isNaN(Ce) || Wi(Ce, $e(s, Y, Ce));
    };
    if (he) {
      let Ce, Ge;
      const Qe = ue(), qe = J.type === cu.BLUR || J.type === cu.FOCUS_OUT, Ot = !uN(he._f) && !t.resolver && !$e(n.errors, Y) && !he._f.deps || pN(qe, $e(n.touchedFields, Y), n.isSubmitted, f, m), Bt = Tf(Y, l, qe);
      en(s, Y, Qe), qe ? (he._f.onBlur && he._f.onBlur(J), c && c(0)) : he._f.onChange && he._f.onChange(J);
      const Ye = A(Y, Qe, qe, !1), _t = !da(Ye) || Bt;
      if (!qe && p.values.next({
        name: Y,
        type: J.type,
        values: { ...s }
      }), Ot)
        return u.isValid && (e.mode === "onBlur" ? qe && v() : v()), _t && p.state.next({ name: Y, ...Bt ? {} : Ye });
      if (!qe && Bt && p.state.next({ ...n }), t.resolver) {
        const { errors: Mt } = await T([Y]);
        if (fe(Qe), oe) {
          const Wn = zv(n.errors, r, Y), Na = zv(Mt, r, Wn.name || Y);
          Ce = Na.error, Y = Na.name, Ge = da(Mt);
        }
      } else
        y([Y], !0), Ce = (await If(he, s, g, t.shouldUseNativeValidation))[Y], y([Y]), fe(Qe), oe && (Ce ? Ge = !1 : u.isValid && (Ge = await I(r, !0)));
      oe && (he._f.deps && N(he._f.deps), k(Y, Ge, Ce, Ye));
    }
  }, G = (J, W) => {
    if ($e(n.errors, W) && J.focus)
      return J.focus(), 1;
  }, N = async (J, W = {}) => {
    let Y, oe;
    const he = wa(J);
    if (t.resolver) {
      const ue = await O(dn(J) ? J : he);
      Y = da(ue), oe = J ? !he.some((fe) => $e(ue, fe)) : Y;
    } else J ? (oe = (await Promise.all(he.map(async (ue) => {
      const fe = $e(r, ue);
      return await I(fe && fe._f ? { [ue]: fe } : fe);
    }))).every(Boolean), !(!oe && !n.isValid) && v()) : oe = Y = await I(r);
    return p.state.next({
      ...!Kr(J) || u.isValid && Y !== n.isValid ? {} : { name: J },
      ...t.resolver || !J ? { isValid: Y } : {},
      errors: n.errors
    }), W.shouldFocus && !oe && To(r, G, J ? he : l.mount), oe;
  }, $ = (J) => {
    const W = {
      ...o.mount ? s : i
    };
    return dn(J) ? W : Kr(J) ? $e(W, J) : J.map((Y) => $e(W, Y));
  }, q = (J, W) => ({
    invalid: !!$e((W || n).errors, J),
    isDirty: !!$e((W || n).dirtyFields, J),
    error: $e((W || n).errors, J),
    isValidating: !!$e(n.validatingFields, J),
    isTouched: !!$e((W || n).touchedFields, J)
  }), V = (J) => {
    J && wa(J).forEach((W) => Rn(n.errors, W)), p.state.next({
      errors: J ? n.errors : {}
    });
  }, B = (J, W, Y) => {
    const oe = ($e(r, J, { _f: {} })._f || {}).ref, he = $e(n.errors, J) || {}, { ref: ue, message: fe, type: Ce, ...Ge } = he;
    en(n.errors, J, {
      ...Ge,
      ...W,
      ref: oe
    }), p.state.next({
      name: J,
      errors: n.errors,
      isValid: !1
    }), Y && Y.shouldFocus && oe && oe.focus && oe.focus();
  }, Z = (J, W) => vi(J) ? p.values.subscribe({
    next: (Y) => J(L(void 0, W), Y)
  }) : L(J, W, !0), X = (J, W = {}) => {
    for (const Y of J ? wa(J) : l.mount)
      l.mount.delete(Y), l.array.delete(Y), W.keepValue || (Rn(r, Y), Rn(s, Y)), !W.keepError && Rn(n.errors, Y), !W.keepDirty && Rn(n.dirtyFields, Y), !W.keepTouched && Rn(n.touchedFields, Y), !W.keepIsValidating && Rn(n.validatingFields, Y), !t.shouldUnregister && !W.keepDefaultValue && Rn(i, Y);
    p.values.next({
      values: { ...s }
    }), p.state.next({
      ...n,
      ...W.keepDirty ? { isDirty: E() } : {}
    }), !W.keepIsValid && v();
  }, Q = ({ disabled: J, name: W, field: Y, fields: oe, value: he }) => {
    if (er(J) && o.mount || J) {
      const ue = J ? void 0 : dn(he) ? vm(Y ? Y._f : $e(oe, W)._f) : he;
      en(s, W, ue), A(W, ue, !1, !1, !0);
    }
  }, ie = (J, W = {}) => {
    let Y = $e(r, J);
    const oe = er(W.disabled) || er(e.disabled);
    return en(r, J, {
      ...Y || {},
      _f: {
        ...Y && Y._f ? Y._f : { ref: { name: J } },
        name: J,
        mount: !0,
        ...W
      }
    }), l.mount.add(J), Y ? Q({
      field: Y,
      disabled: er(W.disabled) ? W.disabled : e.disabled,
      name: J,
      value: W.value
    }) : w(J, !0, W.value), {
      ...oe ? { disabled: W.disabled || e.disabled } : {},
      ...t.progressive ? {
        required: !!W.required,
        min: _l(W.min),
        max: _l(W.max),
        minLength: _l(W.minLength),
        maxLength: _l(W.maxLength),
        pattern: _l(W.pattern)
      } : {},
      name: J,
      onChange: K,
      onBlur: K,
      ref: (he) => {
        if (he) {
          ie(J, W), Y = $e(r, J);
          const ue = dn(he.value) && he.querySelectorAll && he.querySelectorAll("input,select,textarea")[0] || he, fe = lN(ue), Ce = Y._f.refs || [];
          if (fe ? Ce.find((Ge) => Ge === ue) : ue === Y._f.ref)
            return;
          en(r, J, {
            _f: {
              ...Y._f,
              ...fe ? {
                refs: [
                  ...Ce.filter(bm),
                  ue,
                  ...Array.isArray($e(i, J)) ? [{}] : []
                ],
                ref: { type: ue.type, name: J }
              } : { ref: ue }
            }
          }), w(J, !1, void 0, ue);
        } else
          Y = $e(r, J, {}), Y._f && (Y._f.mount = !1), (t.shouldUnregister || W.shouldUnregister) && !(gw(l.array, J) && o.action) && l.unMount.add(J);
      }
    };
  }, me = () => t.shouldFocusError && To(r, G, l.mount), ee = (J) => {
    er(J) && (p.state.next({ disabled: J }), To(r, (W, Y) => {
      const oe = $e(r, Y);
      oe && (W.disabled = oe._f.disabled || J, Array.isArray(oe._f.refs) && oe._f.refs.forEach((he) => {
        he.disabled = oe._f.disabled || J;
      }));
    }, 0, !1));
  }, ce = (J, W) => async (Y) => {
    let oe;
    Y && (Y.preventDefault && Y.preventDefault(), Y.persist && Y.persist());
    let he = jn(s);
    if (p.state.next({
      isSubmitting: !0
    }), t.resolver) {
      const { errors: ue, values: fe } = await T();
      n.errors = ue, he = fe;
    } else
      await I(r);
    if (Rn(n.errors, "root"), da(n.errors)) {
      p.state.next({
        errors: {}
      });
      try {
        await J(he, Y);
      } catch (ue) {
        oe = ue;
      }
    } else
      W && await W({ ...n.errors }, Y), me(), setTimeout(me);
    if (p.state.next({
      isSubmitted: !0,
      isSubmitting: !1,
      isSubmitSuccessful: da(n.errors) && !oe,
      submitCount: n.submitCount + 1,
      errors: n.errors
    }), oe)
      throw oe;
  }, ae = (J, W = {}) => {
    $e(r, J) && (dn(W.defaultValue) ? U(J, jn($e(i, J))) : (U(J, W.defaultValue), en(i, J, jn(W.defaultValue))), W.keepTouched || Rn(n.touchedFields, J), W.keepDirty || (Rn(n.dirtyFields, J), n.isDirty = W.defaultValue ? E(J, jn($e(i, J))) : E()), W.keepError || (Rn(n.errors, J), u.isValid && v()), p.state.next({ ...n }));
  }, Oe = (J, W = {}) => {
    const Y = J ? jn(J) : i, oe = jn(Y), he = da(J), ue = he ? i : oe;
    if (W.keepDefaultValues || (i = Y), !W.keepValues) {
      if (W.keepDirtyValues)
        for (const fe of l.mount)
          $e(n.dirtyFields, fe) ? en(ue, fe, $e(s, fe)) : U(fe, $e(ue, fe));
      else {
        if (tg && dn(J))
          for (const fe of l.mount) {
            const Ce = $e(r, fe);
            if (Ce && Ce._f) {
              const Ge = Array.isArray(Ce._f.refs) ? Ce._f.refs[0] : Ce._f.ref;
              if (du(Ge)) {
                const Qe = Ge.closest("form");
                if (Qe) {
                  Qe.reset();
                  break;
                }
              }
            }
          }
        r = {};
      }
      s = e.shouldUnregister ? W.keepDefaultValues ? jn(i) : {} : jn(ue), p.array.next({
        values: { ...ue }
      }), p.values.next({
        values: { ...ue }
      });
    }
    l = {
      mount: W.keepDirtyValues ? l.mount : /* @__PURE__ */ new Set(),
      unMount: /* @__PURE__ */ new Set(),
      array: /* @__PURE__ */ new Set(),
      watch: /* @__PURE__ */ new Set(),
      watchAll: !1,
      focus: ""
    }, o.mount = !u.isValid || !!W.keepIsValid || !!W.keepDirtyValues, o.watch = !!e.shouldUnregister, p.state.next({
      submitCount: W.keepSubmitCount ? n.submitCount : 0,
      isDirty: he ? !1 : W.keepDirty ? n.isDirty : !!(W.keepDefaultValues && !Wi(J, i)),
      isSubmitted: W.keepIsSubmitted ? n.isSubmitted : !1,
      dirtyFields: he ? {} : W.keepDirtyValues ? W.keepDefaultValues && s ? bd(i, s) : n.dirtyFields : W.keepDefaultValues && J ? bd(i, J) : W.keepDirty ? n.dirtyFields : {},
      touchedFields: W.keepTouched ? n.touchedFields : {},
      errors: W.keepErrors ? n.errors : {},
      isSubmitSuccessful: W.keepIsSubmitSuccessful ? n.isSubmitSuccessful : !1,
      isSubmitting: !1
    });
  }, Ie = (J, W) => Oe(vi(J) ? J(s) : J, W);
  return {
    control: {
      register: ie,
      unregister: X,
      getFieldState: q,
      handleSubmit: ce,
      setError: B,
      _executeSchema: T,
      _getWatch: L,
      _getDirty: E,
      _updateValid: v,
      _removeUnmounted: _,
      _updateFieldArray: C,
      _updateDisabledField: Q,
      _getFieldArray: F,
      _reset: Oe,
      _resetDefaultValues: () => vi(t.defaultValues) && t.defaultValues().then((J) => {
        Ie(J, t.resetOptions), p.state.next({
          isLoading: !1
        });
      }),
      _updateFormState: (J) => {
        n = {
          ...n,
          ...J
        };
      },
      _disableForm: ee,
      _subjects: p,
      _proxyFormState: u,
      _setErrors: P,
      get _fields() {
        return r;
      },
      get _formValues() {
        return s;
      },
      get _state() {
        return o;
      },
      set _state(J) {
        o = J;
      },
      get _defaultValues() {
        return i;
      },
      get _names() {
        return l;
      },
      set _names(J) {
        l = J;
      },
      get _formState() {
        return n;
      },
      set _formState(J) {
        n = J;
      },
      get _options() {
        return t;
      },
      set _options(J) {
        t = {
          ...t,
          ...J
        };
      }
    },
    trigger: N,
    register: ie,
    handleSubmit: ce,
    watch: Z,
    setValue: U,
    getValues: $,
    reset: Ie,
    resetField: ae,
    clearErrors: V,
    unregister: X,
    setError: B,
    setFocus: (J, W = {}) => {
      const Y = $e(r, J), oe = Y && Y._f;
      if (oe) {
        const he = oe.refs ? oe.refs[0] : oe.ref;
        he.focus && (he.focus(), W.shouldSelect && he.select());
      }
    },
    getFieldState: q
  };
}
function Ke(e = {}) {
  const t = ne.useRef(), n = ne.useRef(), [r, i] = ne.useState({
    isDirty: !1,
    isValidating: !1,
    isLoading: vi(e.defaultValues),
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    submitCount: 0,
    dirtyFields: {},
    touchedFields: {},
    validatingFields: {},
    errors: e.errors || {},
    disabled: e.disabled || !1,
    defaultValues: vi(e.defaultValues) ? void 0 : e.defaultValues
  });
  t.current || (t.current = {
    ...hN(e),
    formState: r
  });
  const s = t.current.control;
  return s._options = e, Ju({
    subject: s._subjects.state,
    next: (o) => {
      Cw(o, s._proxyFormState, s._updateFormState, !0) && i({ ...s._formState });
    }
  }), ne.useEffect(() => s._disableForm(e.disabled), [s, e.disabled]), ne.useEffect(() => {
    if (s._proxyFormState.isDirty) {
      const o = s._getDirty();
      o !== r.isDirty && s._subjects.state.next({
        isDirty: o
      });
    }
  }, [s, r.isDirty]), ne.useEffect(() => {
    e.values && !Wi(e.values, n.current) ? (s._reset(e.values, s._options.resetOptions), n.current = e.values, i((o) => ({ ...o }))) : s._resetDefaultValues();
  }, [e.values, s]), ne.useEffect(() => {
    e.errors && s._setErrors(e.errors);
  }, [e.errors, s]), ne.useEffect(() => {
    s._state.mount || (s._updateValid(), s._state.mount = !0), s._state.watch && (s._state.watch = !1, s._subjects.state.next({ ...s._formState })), s._removeUnmounted();
  }), ne.useEffect(() => {
    e.shouldUnregister && s._subjects.values.next({
      values: s._getWatch()
    });
  }, [e.shouldUnregister, s]), t.current.formState = yw(r, s), t.current;
}
var _w = typeof global == "object" && global && global.Object === Object && global, gN = typeof self == "object" && self && self.Object === Object && self, Ar = _w || gN || Function("return this")(), dr = Ar.Symbol, Rw = Object.prototype, bN = Rw.hasOwnProperty, vN = Rw.toString, Rl = dr ? dr.toStringTag : void 0;
function yN(e) {
  var t = bN.call(e, Rl), n = e[Rl];
  try {
    e[Rl] = void 0;
    var r = !0;
  } catch {
  }
  var i = vN.call(e);
  return r && (t ? e[Rl] = n : delete e[Rl]), i;
}
var CN = Object.prototype, xN = CN.toString;
function SN(e) {
  return xN.call(e);
}
var wN = "[object Null]", ON = "[object Undefined]", qv = dr ? dr.toStringTag : void 0;
function Js(e) {
  return e == null ? e === void 0 ? ON : wN : qv && qv in Object(e) ? yN(e) : SN(e);
}
function Zr(e) {
  return e != null && typeof e == "object";
}
var kN = "[object Symbol]";
function Ko(e) {
  return typeof e == "symbol" || Zr(e) && Js(e) == kN;
}
function Si(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, i = Array(r); ++n < r; )
    i[n] = t(e[n], n, e);
  return i;
}
var Ra = Array.isArray, TN = 1 / 0, Gv = dr ? dr.prototype : void 0, Wv = Gv ? Gv.toString : void 0;
function Aw(e) {
  if (typeof e == "string")
    return e;
  if (Ra(e))
    return Si(e, Aw) + "";
  if (Ko(e))
    return Wv ? Wv.call(e) : "";
  var t = e + "";
  return t == "0" && 1 / e == -TN ? "-0" : t;
}
var IN = /\s/;
function EN(e) {
  for (var t = e.length; t-- && IN.test(e.charAt(t)); )
    ;
  return t;
}
var PN = /^\s+/;
function _N(e) {
  return e && e.slice(0, EN(e) + 1).replace(PN, "");
}
function ur(e) {
  var t = typeof e;
  return e != null && (t == "object" || t == "function");
}
var Xv = NaN, RN = /^[-+]0x[0-9a-f]+$/i, AN = /^0b[01]+$/i, LN = /^0o[0-7]+$/i, NN = parseInt;
function Yv(e) {
  if (typeof e == "number")
    return e;
  if (Ko(e))
    return Xv;
  if (ur(e)) {
    var t = typeof e.valueOf == "function" ? e.valueOf() : e;
    e = ur(t) ? t + "" : t;
  }
  if (typeof e != "string")
    return e === 0 ? e : +e;
  e = _N(e);
  var n = AN.test(e);
  return n || LN.test(e) ? NN(e.slice(2), n ? 2 : 8) : RN.test(e) ? Xv : +e;
}
function Zu(e) {
  return e;
}
var DN = "[object AsyncFunction]", MN = "[object Function]", FN = "[object GeneratorFunction]", $N = "[object Proxy]";
function Lw(e) {
  if (!ur(e))
    return !1;
  var t = Js(e);
  return t == MN || t == FN || t == DN || t == $N;
}
var ym = Ar["__core-js_shared__"], Jv = function() {
  var e = /[^.]+$/.exec(ym && ym.keys && ym.keys.IE_PROTO || "");
  return e ? "Symbol(src)_1." + e : "";
}();
function jN(e) {
  return !!Jv && Jv in e;
}
var BN = Function.prototype, UN = BN.toString;
function Zs(e) {
  if (e != null) {
    try {
      return UN.call(e);
    } catch {
    }
    try {
      return e + "";
    } catch {
    }
  }
  return "";
}
var VN = /[\\^$.*+?()[\]{}|]/g, KN = /^\[object .+?Constructor\]$/, HN = Function.prototype, zN = Object.prototype, qN = HN.toString, GN = zN.hasOwnProperty, WN = RegExp(
  "^" + qN.call(GN).replace(VN, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function XN(e) {
  if (!ur(e) || jN(e))
    return !1;
  var t = Lw(e) ? WN : KN;
  return t.test(Zs(e));
}
function YN(e, t) {
  return e?.[t];
}
function Qs(e, t) {
  var n = YN(e, t);
  return XN(n) ? n : void 0;
}
var Ef = Qs(Ar, "WeakMap"), Zv = Object.create, JN = /* @__PURE__ */ function() {
  function e() {
  }
  return function(t) {
    if (!ur(t))
      return {};
    if (Zv)
      return Zv(t);
    e.prototype = t;
    var n = new e();
    return e.prototype = void 0, n;
  };
}();
function ZN(e, t, n) {
  switch (n.length) {
    case 0:
      return e.call(t);
    case 1:
      return e.call(t, n[0]);
    case 2:
      return e.call(t, n[0], n[1]);
    case 3:
      return e.call(t, n[0], n[1], n[2]);
  }
  return e.apply(t, n);
}
function QN() {
}
function e5(e, t) {
  var n = -1, r = e.length;
  for (t || (t = Array(r)); ++n < r; )
    t[n] = e[n];
  return t;
}
var t5 = 800, n5 = 16, a5 = Date.now;
function r5(e) {
  var t = 0, n = 0;
  return function() {
    var r = a5(), i = n5 - (r - n);
    if (n = r, i > 0) {
      if (++t >= t5)
        return arguments[0];
    } else
      t = 0;
    return e.apply(void 0, arguments);
  };
}
function i5(e) {
  return function() {
    return e;
  };
}
var fu = function() {
  try {
    var e = Qs(Object, "defineProperty");
    return e({}, "", {}), e;
  } catch {
  }
}(), s5 = fu ? function(e, t) {
  return fu(e, "toString", {
    configurable: !0,
    enumerable: !1,
    value: i5(t),
    writable: !0
  });
} : Zu, Nw = r5(s5);
function o5(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r && t(e[n], n, e) !== !1; )
    ;
  return e;
}
function l5(e, t, n, r) {
  for (var i = e.length, s = n + -1; ++s < i; )
    if (t(e[s], s, e))
      return s;
  return -1;
}
function c5(e) {
  return e !== e;
}
function d5(e, t, n) {
  for (var r = n - 1, i = e.length; ++r < i; )
    if (e[r] === t)
      return r;
  return -1;
}
function u5(e, t, n) {
  return t === t ? d5(e, t, n) : l5(e, c5, n);
}
function sg(e, t) {
  var n = e == null ? 0 : e.length;
  return !!n && u5(e, t, 0) > -1;
}
var p5 = 9007199254740991, m5 = /^(?:0|[1-9]\d*)$/;
function Qu(e, t) {
  var n = typeof e;
  return t = t ?? p5, !!t && (n == "number" || n != "symbol" && m5.test(e)) && e > -1 && e % 1 == 0 && e < t;
}
function og(e, t, n) {
  t == "__proto__" && fu ? fu(e, t, {
    configurable: !0,
    enumerable: !0,
    value: n,
    writable: !0
  }) : e[t] = n;
}
function ep(e, t) {
  return e === t || e !== e && t !== t;
}
var f5 = Object.prototype, h5 = f5.hasOwnProperty;
function lg(e, t, n) {
  var r = e[t];
  (!(h5.call(e, t) && ep(r, n)) || n === void 0 && !(t in e)) && og(e, t, n);
}
function Wc(e, t, n, r) {
  var i = !n;
  n || (n = {});
  for (var s = -1, o = t.length; ++s < o; ) {
    var l = t[s], c = void 0;
    c === void 0 && (c = e[l]), i ? og(n, l, c) : lg(n, l, c);
  }
  return n;
}
var Qv = Math.max;
function Dw(e, t, n) {
  return t = Qv(t === void 0 ? e.length - 1 : t, 0), function() {
    for (var r = arguments, i = -1, s = Qv(r.length - t, 0), o = Array(s); ++i < s; )
      o[i] = r[t + i];
    i = -1;
    for (var l = Array(t + 1); ++i < t; )
      l[i] = r[i];
    return l[t] = n(o), ZN(e, this, l);
  };
}
function tp(e, t) {
  return Nw(Dw(e, t, Zu), e + "");
}
var g5 = 9007199254740991;
function cg(e) {
  return typeof e == "number" && e > -1 && e % 1 == 0 && e <= g5;
}
function eo(e) {
  return e != null && cg(e.length) && !Lw(e);
}
function ey(e, t, n) {
  if (!ur(n))
    return !1;
  var r = typeof t;
  return (r == "number" ? eo(n) && Qu(t, n.length) : r == "string" && t in n) ? ep(n[t], e) : !1;
}
var b5 = Object.prototype;
function np(e) {
  var t = e && e.constructor, n = typeof t == "function" && t.prototype || b5;
  return e === n;
}
function v5(e, t) {
  for (var n = -1, r = Array(e); ++n < e; )
    r[n] = t(n);
  return r;
}
var y5 = "[object Arguments]";
function ty(e) {
  return Zr(e) && Js(e) == y5;
}
var Mw = Object.prototype, C5 = Mw.hasOwnProperty, x5 = Mw.propertyIsEnumerable, ap = ty(/* @__PURE__ */ function() {
  return arguments;
}()) ? ty : function(e) {
  return Zr(e) && C5.call(e, "callee") && !x5.call(e, "callee");
};
function S5() {
  return !1;
}
var Fw = typeof exports == "object" && exports && !exports.nodeType && exports, ny = Fw && typeof module == "object" && module && !module.nodeType && module, w5 = ny && ny.exports === Fw, ay = w5 ? Ar.Buffer : void 0, O5 = ay ? ay.isBuffer : void 0, Cc = O5 || S5, k5 = "[object Arguments]", T5 = "[object Array]", I5 = "[object Boolean]", E5 = "[object Date]", P5 = "[object Error]", _5 = "[object Function]", R5 = "[object Map]", A5 = "[object Number]", L5 = "[object Object]", N5 = "[object RegExp]", D5 = "[object Set]", M5 = "[object String]", F5 = "[object WeakMap]", $5 = "[object ArrayBuffer]", j5 = "[object DataView]", B5 = "[object Float32Array]", U5 = "[object Float64Array]", V5 = "[object Int8Array]", K5 = "[object Int16Array]", H5 = "[object Int32Array]", z5 = "[object Uint8Array]", q5 = "[object Uint8ClampedArray]", G5 = "[object Uint16Array]", W5 = "[object Uint32Array]", fn = {};
fn[B5] = fn[U5] = fn[V5] = fn[K5] = fn[H5] = fn[z5] = fn[q5] = fn[G5] = fn[W5] = !0;
fn[k5] = fn[T5] = fn[$5] = fn[I5] = fn[j5] = fn[E5] = fn[P5] = fn[_5] = fn[R5] = fn[A5] = fn[L5] = fn[N5] = fn[D5] = fn[M5] = fn[F5] = !1;
function X5(e) {
  return Zr(e) && cg(e.length) && !!fn[Js(e)];
}
function ol(e) {
  return function(t) {
    return e(t);
  };
}
var $w = typeof exports == "object" && exports && !exports.nodeType && exports, Jl = $w && typeof module == "object" && module && !module.nodeType && module, Y5 = Jl && Jl.exports === $w, Cm = Y5 && _w.process, Ho = function() {
  try {
    var e = Jl && Jl.require && Jl.require("util").types;
    return e || Cm && Cm.binding && Cm.binding("util");
  } catch {
  }
}(), ry = Ho && Ho.isTypedArray, dg = ry ? ol(ry) : X5, J5 = Object.prototype, Z5 = J5.hasOwnProperty;
function jw(e, t) {
  var n = Ra(e), r = !n && ap(e), i = !n && !r && Cc(e), s = !n && !r && !i && dg(e), o = n || r || i || s, l = o ? v5(e.length, String) : [], c = l.length;
  for (var d in e)
    (t || Z5.call(e, d)) && !(o && // Safari 9 has enumerable `arguments.length` in strict mode.
    (d == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    i && (d == "offset" || d == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    s && (d == "buffer" || d == "byteLength" || d == "byteOffset") || // Skip index properties.
    Qu(d, c))) && l.push(d);
  return l;
}
function Bw(e, t) {
  return function(n) {
    return e(t(n));
  };
}
var Q5 = Bw(Object.keys, Object), eD = Object.prototype, tD = eD.hasOwnProperty;
function Uw(e) {
  if (!np(e))
    return Q5(e);
  var t = [];
  for (var n in Object(e))
    tD.call(e, n) && n != "constructor" && t.push(n);
  return t;
}
function Xc(e) {
  return eo(e) ? jw(e) : Uw(e);
}
function nD(e) {
  var t = [];
  if (e != null)
    for (var n in Object(e))
      t.push(n);
  return t;
}
var aD = Object.prototype, rD = aD.hasOwnProperty;
function iD(e) {
  if (!ur(e))
    return nD(e);
  var t = np(e), n = [];
  for (var r in e)
    r == "constructor" && (t || !rD.call(e, r)) || n.push(r);
  return n;
}
function ug(e) {
  return eo(e) ? jw(e, !0) : iD(e);
}
var sD = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, oD = /^\w*$/;
function pg(e, t) {
  if (Ra(e))
    return !1;
  var n = typeof e;
  return n == "number" || n == "symbol" || n == "boolean" || e == null || Ko(e) ? !0 : oD.test(e) || !sD.test(e) || t != null && e in Object(t);
}
var xc = Qs(Object, "create");
function lD() {
  this.__data__ = xc ? xc(null) : {}, this.size = 0;
}
function cD(e) {
  var t = this.has(e) && delete this.__data__[e];
  return this.size -= t ? 1 : 0, t;
}
var dD = "__lodash_hash_undefined__", uD = Object.prototype, pD = uD.hasOwnProperty;
function mD(e) {
  var t = this.__data__;
  if (xc) {
    var n = t[e];
    return n === dD ? void 0 : n;
  }
  return pD.call(t, e) ? t[e] : void 0;
}
var fD = Object.prototype, hD = fD.hasOwnProperty;
function gD(e) {
  var t = this.__data__;
  return xc ? t[e] !== void 0 : hD.call(t, e);
}
var bD = "__lodash_hash_undefined__";
function vD(e, t) {
  var n = this.__data__;
  return this.size += this.has(e) ? 0 : 1, n[e] = xc && t === void 0 ? bD : t, this;
}
function Ns(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
Ns.prototype.clear = lD;
Ns.prototype.delete = cD;
Ns.prototype.get = mD;
Ns.prototype.has = gD;
Ns.prototype.set = vD;
function yD() {
  this.__data__ = [], this.size = 0;
}
function rp(e, t) {
  for (var n = e.length; n--; )
    if (ep(e[n][0], t))
      return n;
  return -1;
}
var CD = Array.prototype, xD = CD.splice;
function SD(e) {
  var t = this.__data__, n = rp(t, e);
  if (n < 0)
    return !1;
  var r = t.length - 1;
  return n == r ? t.pop() : xD.call(t, n, 1), --this.size, !0;
}
function wD(e) {
  var t = this.__data__, n = rp(t, e);
  return n < 0 ? void 0 : t[n][1];
}
function OD(e) {
  return rp(this.__data__, e) > -1;
}
function kD(e, t) {
  var n = this.__data__, r = rp(n, e);
  return r < 0 ? (++this.size, n.push([e, t])) : n[r][1] = t, this;
}
function ji(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
ji.prototype.clear = yD;
ji.prototype.delete = SD;
ji.prototype.get = wD;
ji.prototype.has = OD;
ji.prototype.set = kD;
var Sc = Qs(Ar, "Map");
function TD() {
  this.size = 0, this.__data__ = {
    hash: new Ns(),
    map: new (Sc || ji)(),
    string: new Ns()
  };
}
function ID(e) {
  var t = typeof e;
  return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
}
function ip(e, t) {
  var n = e.__data__;
  return ID(t) ? n[typeof t == "string" ? "string" : "hash"] : n.map;
}
function ED(e) {
  var t = ip(this, e).delete(e);
  return this.size -= t ? 1 : 0, t;
}
function PD(e) {
  return ip(this, e).get(e);
}
function _D(e) {
  return ip(this, e).has(e);
}
function RD(e, t) {
  var n = ip(this, e), r = n.size;
  return n.set(e, t), this.size += n.size == r ? 0 : 1, this;
}
function Bi(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
Bi.prototype.clear = TD;
Bi.prototype.delete = ED;
Bi.prototype.get = PD;
Bi.prototype.has = _D;
Bi.prototype.set = RD;
var AD = "Expected a function";
function mg(e, t) {
  if (typeof e != "function" || t != null && typeof t != "function")
    throw new TypeError(AD);
  var n = function() {
    var r = arguments, i = t ? t.apply(this, r) : r[0], s = n.cache;
    if (s.has(i))
      return s.get(i);
    var o = e.apply(this, r);
    return n.cache = s.set(i, o) || s, o;
  };
  return n.cache = new (mg.Cache || Bi)(), n;
}
mg.Cache = Bi;
var LD = 500;
function ND(e) {
  var t = mg(e, function(r) {
    return n.size === LD && n.clear(), r;
  }), n = t.cache;
  return t;
}
var DD = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, MD = /\\(\\)?/g, FD = ND(function(e) {
  var t = [];
  return e.charCodeAt(0) === 46 && t.push(""), e.replace(DD, function(n, r, i, s) {
    t.push(i ? s.replace(MD, "$1") : r || n);
  }), t;
});
function Yc(e) {
  return e == null ? "" : Aw(e);
}
function ll(e, t) {
  return Ra(e) ? e : pg(e, t) ? [e] : FD(Yc(e));
}
var $D = 1 / 0;
function cl(e) {
  if (typeof e == "string" || Ko(e))
    return e;
  var t = e + "";
  return t == "0" && 1 / e == -$D ? "-0" : t;
}
function Jc(e, t) {
  t = ll(t, e);
  for (var n = 0, r = t.length; e != null && n < r; )
    e = e[cl(t[n++])];
  return n && n == r ? e : void 0;
}
function Un(e, t, n) {
  var r = e == null ? void 0 : Jc(e, t);
  return r === void 0 ? n : r;
}
function fg(e, t) {
  for (var n = -1, r = t.length, i = e.length; ++n < r; )
    e[i + n] = t[n];
  return e;
}
var iy = dr ? dr.isConcatSpreadable : void 0;
function jD(e) {
  return Ra(e) || ap(e) || !!(iy && e && e[iy]);
}
function sp(e, t, n, r, i) {
  var s = -1, o = e.length;
  for (n || (n = jD), i || (i = []); ++s < o; ) {
    var l = e[s];
    n(l) ? fg(i, l) : r || (i[i.length] = l);
  }
  return i;
}
function BD(e) {
  var t = e == null ? 0 : e.length;
  return t ? sp(e) : [];
}
function UD(e) {
  return Nw(Dw(e, void 0, BD), e + "");
}
var hg = Bw(Object.getPrototypeOf, Object), VD = "[object Object]", KD = Function.prototype, HD = Object.prototype, Vw = KD.toString, zD = HD.hasOwnProperty, qD = Vw.call(Object);
function GD(e) {
  if (!Zr(e) || Js(e) != VD)
    return !1;
  var t = hg(e);
  if (t === null)
    return !0;
  var n = zD.call(t, "constructor") && t.constructor;
  return typeof n == "function" && n instanceof n && Vw.call(n) == qD;
}
function Kw(e, t, n) {
  var r = -1, i = e.length;
  t < 0 && (t = -t > i ? 0 : i + t), n = n > i ? i : n, n < 0 && (n += i), i = t > n ? 0 : n - t >>> 0, t >>>= 0;
  for (var s = Array(i); ++r < i; )
    s[r] = e[r + t];
  return s;
}
function WD(e, t, n) {
  var r = e.length;
  return n = n === void 0 ? r : n, !t && n >= r ? e : Kw(e, t, n);
}
var XD = "\\ud800-\\udfff", YD = "\\u0300-\\u036f", JD = "\\ufe20-\\ufe2f", ZD = "\\u20d0-\\u20ff", QD = YD + JD + ZD, e3 = "\\ufe0e\\ufe0f", t3 = "\\u200d", n3 = RegExp("[" + t3 + XD + QD + e3 + "]");
function Hw(e) {
  return n3.test(e);
}
function a3(e) {
  return e.split("");
}
var zw = "\\ud800-\\udfff", r3 = "\\u0300-\\u036f", i3 = "\\ufe20-\\ufe2f", s3 = "\\u20d0-\\u20ff", o3 = r3 + i3 + s3, l3 = "\\ufe0e\\ufe0f", c3 = "[" + zw + "]", Pf = "[" + o3 + "]", _f = "\\ud83c[\\udffb-\\udfff]", d3 = "(?:" + Pf + "|" + _f + ")", qw = "[^" + zw + "]", Gw = "(?:\\ud83c[\\udde6-\\uddff]){2}", Ww = "[\\ud800-\\udbff][\\udc00-\\udfff]", u3 = "\\u200d", Xw = d3 + "?", Yw = "[" + l3 + "]?", p3 = "(?:" + u3 + "(?:" + [qw, Gw, Ww].join("|") + ")" + Yw + Xw + ")*", m3 = Yw + Xw + p3, f3 = "(?:" + [qw + Pf + "?", Pf, Gw, Ww, c3].join("|") + ")", h3 = RegExp(_f + "(?=" + _f + ")|" + f3 + m3, "g");
function g3(e) {
  return e.match(h3) || [];
}
function b3(e) {
  return Hw(e) ? g3(e) : a3(e);
}
function v3(e) {
  return function(t) {
    t = Yc(t);
    var n = Hw(t) ? b3(t) : void 0, r = n ? n[0] : t.charAt(0), i = n ? WD(n, 1).join("") : t.slice(1);
    return r[e]() + i;
  };
}
var y3 = v3("toUpperCase");
function ks(e) {
  return y3(Yc(e).toLowerCase());
}
function C3(e, t, n, r) {
  for (var i = -1, s = e == null ? 0 : e.length; ++i < s; )
    n = t(n, e[i], i, e);
  return n;
}
function x3(e) {
  return function(t) {
    return e?.[t];
  };
}
var S3 = {
  // Latin-1 Supplement block.
  À: "A",
  Á: "A",
  Â: "A",
  Ã: "A",
  Ä: "A",
  Å: "A",
  à: "a",
  á: "a",
  â: "a",
  ã: "a",
  ä: "a",
  å: "a",
  Ç: "C",
  ç: "c",
  Ð: "D",
  ð: "d",
  È: "E",
  É: "E",
  Ê: "E",
  Ë: "E",
  è: "e",
  é: "e",
  ê: "e",
  ë: "e",
  Ì: "I",
  Í: "I",
  Î: "I",
  Ï: "I",
  ì: "i",
  í: "i",
  î: "i",
  ï: "i",
  Ñ: "N",
  ñ: "n",
  Ò: "O",
  Ó: "O",
  Ô: "O",
  Õ: "O",
  Ö: "O",
  Ø: "O",
  ò: "o",
  ó: "o",
  ô: "o",
  õ: "o",
  ö: "o",
  ø: "o",
  Ù: "U",
  Ú: "U",
  Û: "U",
  Ü: "U",
  ù: "u",
  ú: "u",
  û: "u",
  ü: "u",
  Ý: "Y",
  ý: "y",
  ÿ: "y",
  Æ: "Ae",
  æ: "ae",
  Þ: "Th",
  þ: "th",
  ß: "ss",
  // Latin Extended-A block.
  Ā: "A",
  Ă: "A",
  Ą: "A",
  ā: "a",
  ă: "a",
  ą: "a",
  Ć: "C",
  Ĉ: "C",
  Ċ: "C",
  Č: "C",
  ć: "c",
  ĉ: "c",
  ċ: "c",
  č: "c",
  Ď: "D",
  Đ: "D",
  ď: "d",
  đ: "d",
  Ē: "E",
  Ĕ: "E",
  Ė: "E",
  Ę: "E",
  Ě: "E",
  ē: "e",
  ĕ: "e",
  ė: "e",
  ę: "e",
  ě: "e",
  Ĝ: "G",
  Ğ: "G",
  Ġ: "G",
  Ģ: "G",
  ĝ: "g",
  ğ: "g",
  ġ: "g",
  ģ: "g",
  Ĥ: "H",
  Ħ: "H",
  ĥ: "h",
  ħ: "h",
  Ĩ: "I",
  Ī: "I",
  Ĭ: "I",
  Į: "I",
  İ: "I",
  ĩ: "i",
  ī: "i",
  ĭ: "i",
  į: "i",
  ı: "i",
  Ĵ: "J",
  ĵ: "j",
  Ķ: "K",
  ķ: "k",
  ĸ: "k",
  Ĺ: "L",
  Ļ: "L",
  Ľ: "L",
  Ŀ: "L",
  Ł: "L",
  ĺ: "l",
  ļ: "l",
  ľ: "l",
  ŀ: "l",
  ł: "l",
  Ń: "N",
  Ņ: "N",
  Ň: "N",
  Ŋ: "N",
  ń: "n",
  ņ: "n",
  ň: "n",
  ŋ: "n",
  Ō: "O",
  Ŏ: "O",
  Ő: "O",
  ō: "o",
  ŏ: "o",
  ő: "o",
  Ŕ: "R",
  Ŗ: "R",
  Ř: "R",
  ŕ: "r",
  ŗ: "r",
  ř: "r",
  Ś: "S",
  Ŝ: "S",
  Ş: "S",
  Š: "S",
  ś: "s",
  ŝ: "s",
  ş: "s",
  š: "s",
  Ţ: "T",
  Ť: "T",
  Ŧ: "T",
  ţ: "t",
  ť: "t",
  ŧ: "t",
  Ũ: "U",
  Ū: "U",
  Ŭ: "U",
  Ů: "U",
  Ű: "U",
  Ų: "U",
  ũ: "u",
  ū: "u",
  ŭ: "u",
  ů: "u",
  ű: "u",
  ų: "u",
  Ŵ: "W",
  ŵ: "w",
  Ŷ: "Y",
  ŷ: "y",
  Ÿ: "Y",
  Ź: "Z",
  Ż: "Z",
  Ž: "Z",
  ź: "z",
  ż: "z",
  ž: "z",
  Ĳ: "IJ",
  ĳ: "ij",
  Œ: "Oe",
  œ: "oe",
  ŉ: "'n",
  ſ: "s"
}, w3 = x3(S3), O3 = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, k3 = "\\u0300-\\u036f", T3 = "\\ufe20-\\ufe2f", I3 = "\\u20d0-\\u20ff", E3 = k3 + T3 + I3, P3 = "[" + E3 + "]", _3 = RegExp(P3, "g");
function R3(e) {
  return e = Yc(e), e && e.replace(O3, w3).replace(_3, "");
}
var A3 = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
function L3(e) {
  return e.match(A3) || [];
}
var N3 = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
function D3(e) {
  return N3.test(e);
}
var Jw = "\\ud800-\\udfff", M3 = "\\u0300-\\u036f", F3 = "\\ufe20-\\ufe2f", $3 = "\\u20d0-\\u20ff", j3 = M3 + F3 + $3, Zw = "\\u2700-\\u27bf", Qw = "a-z\\xdf-\\xf6\\xf8-\\xff", B3 = "\\xac\\xb1\\xd7\\xf7", U3 = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", V3 = "\\u2000-\\u206f", K3 = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", e1 = "A-Z\\xc0-\\xd6\\xd8-\\xde", H3 = "\\ufe0e\\ufe0f", t1 = B3 + U3 + V3 + K3, n1 = "['’]", sy = "[" + t1 + "]", z3 = "[" + j3 + "]", a1 = "\\d+", q3 = "[" + Zw + "]", r1 = "[" + Qw + "]", i1 = "[^" + Jw + t1 + a1 + Zw + Qw + e1 + "]", G3 = "\\ud83c[\\udffb-\\udfff]", W3 = "(?:" + z3 + "|" + G3 + ")", X3 = "[^" + Jw + "]", s1 = "(?:\\ud83c[\\udde6-\\uddff]){2}", o1 = "[\\ud800-\\udbff][\\udc00-\\udfff]", yo = "[" + e1 + "]", Y3 = "\\u200d", oy = "(?:" + r1 + "|" + i1 + ")", J3 = "(?:" + yo + "|" + i1 + ")", ly = "(?:" + n1 + "(?:d|ll|m|re|s|t|ve))?", cy = "(?:" + n1 + "(?:D|LL|M|RE|S|T|VE))?", l1 = W3 + "?", c1 = "[" + H3 + "]?", Z3 = "(?:" + Y3 + "(?:" + [X3, s1, o1].join("|") + ")" + c1 + l1 + ")*", Q3 = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", e4 = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", t4 = c1 + l1 + Z3, n4 = "(?:" + [q3, s1, o1].join("|") + ")" + t4, a4 = RegExp([
  yo + "?" + r1 + "+" + ly + "(?=" + [sy, yo, "$"].join("|") + ")",
  J3 + "+" + cy + "(?=" + [sy, yo + oy, "$"].join("|") + ")",
  yo + "?" + oy + "+" + ly,
  yo + "+" + cy,
  e4,
  Q3,
  a1,
  n4
].join("|"), "g");
function r4(e) {
  return e.match(a4) || [];
}
function i4(e, t, n) {
  return e = Yc(e), t = t, t === void 0 ? D3(e) ? r4(e) : L3(e) : e.match(t) || [];
}
var s4 = "['’]", o4 = RegExp(s4, "g");
function l4(e) {
  return function(t) {
    return C3(i4(R3(t).replace(o4, "")), e, "");
  };
}
var Rf = l4(function(e, t, n) {
  return t = t.toLowerCase(), e + (n ? ks(t) : t);
});
function c4() {
  this.__data__ = new ji(), this.size = 0;
}
function d4(e) {
  var t = this.__data__, n = t.delete(e);
  return this.size = t.size, n;
}
function u4(e) {
  return this.__data__.get(e);
}
function p4(e) {
  return this.__data__.has(e);
}
var m4 = 200;
function f4(e, t) {
  var n = this.__data__;
  if (n instanceof ji) {
    var r = n.__data__;
    if (!Sc || r.length < m4 - 1)
      return r.push([e, t]), this.size = ++n.size, this;
    n = this.__data__ = new Bi(r);
  }
  return n.set(e, t), this.size = n.size, this;
}
function Gr(e) {
  var t = this.__data__ = new ji(e);
  this.size = t.size;
}
Gr.prototype.clear = c4;
Gr.prototype.delete = d4;
Gr.prototype.get = u4;
Gr.prototype.has = p4;
Gr.prototype.set = f4;
function h4(e, t) {
  return e && Wc(t, Xc(t), e);
}
function g4(e, t) {
  return e && Wc(t, ug(t), e);
}
var d1 = typeof exports == "object" && exports && !exports.nodeType && exports, dy = d1 && typeof module == "object" && module && !module.nodeType && module, b4 = dy && dy.exports === d1, uy = b4 ? Ar.Buffer : void 0, py = uy ? uy.allocUnsafe : void 0;
function v4(e, t) {
  if (t)
    return e.slice();
  var n = e.length, r = py ? py(n) : new e.constructor(n);
  return e.copy(r), r;
}
function y4(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length, i = 0, s = []; ++n < r; ) {
    var o = e[n];
    t(o, n, e) && (s[i++] = o);
  }
  return s;
}
function u1() {
  return [];
}
var C4 = Object.prototype, x4 = C4.propertyIsEnumerable, my = Object.getOwnPropertySymbols, gg = my ? function(e) {
  return e == null ? [] : (e = Object(e), y4(my(e), function(t) {
    return x4.call(e, t);
  }));
} : u1;
function S4(e, t) {
  return Wc(e, gg(e), t);
}
var w4 = Object.getOwnPropertySymbols, p1 = w4 ? function(e) {
  for (var t = []; e; )
    fg(t, gg(e)), e = hg(e);
  return t;
} : u1;
function O4(e, t) {
  return Wc(e, p1(e), t);
}
function m1(e, t, n) {
  var r = t(e);
  return Ra(e) ? r : fg(r, n(e));
}
function Af(e) {
  return m1(e, Xc, gg);
}
function bg(e) {
  return m1(e, ug, p1);
}
var Lf = Qs(Ar, "DataView"), Nf = Qs(Ar, "Promise"), Io = Qs(Ar, "Set"), fy = "[object Map]", k4 = "[object Object]", hy = "[object Promise]", gy = "[object Set]", by = "[object WeakMap]", vy = "[object DataView]", T4 = Zs(Lf), I4 = Zs(Sc), E4 = Zs(Nf), P4 = Zs(Io), _4 = Zs(Ef), ar = Js;
(Lf && ar(new Lf(new ArrayBuffer(1))) != vy || Sc && ar(new Sc()) != fy || Nf && ar(Nf.resolve()) != hy || Io && ar(new Io()) != gy || Ef && ar(new Ef()) != by) && (ar = function(e) {
  var t = Js(e), n = t == k4 ? e.constructor : void 0, r = n ? Zs(n) : "";
  if (r)
    switch (r) {
      case T4:
        return vy;
      case I4:
        return fy;
      case E4:
        return hy;
      case P4:
        return gy;
      case _4:
        return by;
    }
  return t;
});
var R4 = Object.prototype, A4 = R4.hasOwnProperty;
function L4(e) {
  var t = e.length, n = new e.constructor(t);
  return t && typeof e[0] == "string" && A4.call(e, "index") && (n.index = e.index, n.input = e.input), n;
}
var hu = Ar.Uint8Array;
function vg(e) {
  var t = new e.constructor(e.byteLength);
  return new hu(t).set(new hu(e)), t;
}
function N4(e, t) {
  var n = t ? vg(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.byteLength);
}
var D4 = /\w*$/;
function M4(e) {
  var t = new e.constructor(e.source, D4.exec(e));
  return t.lastIndex = e.lastIndex, t;
}
var yy = dr ? dr.prototype : void 0, Cy = yy ? yy.valueOf : void 0;
function F4(e) {
  return Cy ? Object(Cy.call(e)) : {};
}
function $4(e, t) {
  var n = t ? vg(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.length);
}
var j4 = "[object Boolean]", B4 = "[object Date]", U4 = "[object Map]", V4 = "[object Number]", K4 = "[object RegExp]", H4 = "[object Set]", z4 = "[object String]", q4 = "[object Symbol]", G4 = "[object ArrayBuffer]", W4 = "[object DataView]", X4 = "[object Float32Array]", Y4 = "[object Float64Array]", J4 = "[object Int8Array]", Z4 = "[object Int16Array]", Q4 = "[object Int32Array]", eM = "[object Uint8Array]", tM = "[object Uint8ClampedArray]", nM = "[object Uint16Array]", aM = "[object Uint32Array]";
function rM(e, t, n) {
  var r = e.constructor;
  switch (t) {
    case G4:
      return vg(e);
    case j4:
    case B4:
      return new r(+e);
    case W4:
      return N4(e, n);
    case X4:
    case Y4:
    case J4:
    case Z4:
    case Q4:
    case eM:
    case tM:
    case nM:
    case aM:
      return $4(e, n);
    case U4:
      return new r();
    case V4:
    case z4:
      return new r(e);
    case K4:
      return M4(e);
    case H4:
      return new r();
    case q4:
      return F4(e);
  }
}
function iM(e) {
  return typeof e.constructor == "function" && !np(e) ? JN(hg(e)) : {};
}
var sM = "[object Map]";
function oM(e) {
  return Zr(e) && ar(e) == sM;
}
var xy = Ho && Ho.isMap, lM = xy ? ol(xy) : oM, cM = "[object Set]";
function dM(e) {
  return Zr(e) && ar(e) == cM;
}
var Sy = Ho && Ho.isSet, uM = Sy ? ol(Sy) : dM, pM = 1, mM = 2, fM = 4, f1 = "[object Arguments]", hM = "[object Array]", gM = "[object Boolean]", bM = "[object Date]", vM = "[object Error]", h1 = "[object Function]", yM = "[object GeneratorFunction]", CM = "[object Map]", xM = "[object Number]", g1 = "[object Object]", SM = "[object RegExp]", wM = "[object Set]", OM = "[object String]", kM = "[object Symbol]", TM = "[object WeakMap]", IM = "[object ArrayBuffer]", EM = "[object DataView]", PM = "[object Float32Array]", _M = "[object Float64Array]", RM = "[object Int8Array]", AM = "[object Int16Array]", LM = "[object Int32Array]", NM = "[object Uint8Array]", DM = "[object Uint8ClampedArray]", MM = "[object Uint16Array]", FM = "[object Uint32Array]", on = {};
on[f1] = on[hM] = on[IM] = on[EM] = on[gM] = on[bM] = on[PM] = on[_M] = on[RM] = on[AM] = on[LM] = on[CM] = on[xM] = on[g1] = on[SM] = on[wM] = on[OM] = on[kM] = on[NM] = on[DM] = on[MM] = on[FM] = !0;
on[vM] = on[h1] = on[TM] = !1;
function Zl(e, t, n, r, i, s) {
  var o, l = t & pM, c = t & mM, d = t & fM;
  if (n && (o = i ? n(e, r, i, s) : n(e)), o !== void 0)
    return o;
  if (!ur(e))
    return e;
  var u = Ra(e);
  if (u) {
    if (o = L4(e), !l)
      return e5(e, o);
  } else {
    var p = ar(e), m = p == h1 || p == yM;
    if (Cc(e))
      return v4(e, l);
    if (p == g1 || p == f1 || m && !i) {
      if (o = c || m ? {} : iM(e), !l)
        return c ? O4(e, g4(o, e)) : S4(e, h4(o, e));
    } else {
      if (!on[p])
        return i ? e : {};
      o = rM(e, p, l);
    }
  }
  s || (s = new Gr());
  var f = s.get(e);
  if (f)
    return f;
  s.set(e, o), uM(e) ? e.forEach(function(v) {
    o.add(Zl(v, t, n, v, e, s));
  }) : lM(e) && e.forEach(function(v, y) {
    o.set(y, Zl(v, t, n, y, e, s));
  });
  var g = d ? c ? bg : Af : c ? ug : Xc, b = u ? void 0 : g(e);
  return o5(b || e, function(v, y) {
    b && (y = v, v = e[y]), lg(o, y, Zl(v, t, n, y, e, s));
  }), o;
}
var $M = 1, jM = 4;
function wc(e) {
  return Zl(e, $M | jM);
}
var BM = "__lodash_hash_undefined__";
function UM(e) {
  return this.__data__.set(e, BM), this;
}
function VM(e) {
  return this.__data__.has(e);
}
function Ds(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.__data__ = new Bi(); ++t < n; )
    this.add(e[t]);
}
Ds.prototype.add = Ds.prototype.push = UM;
Ds.prototype.has = VM;
function KM(e, t) {
  for (var n = -1, r = e == null ? 0 : e.length; ++n < r; )
    if (t(e[n], n, e))
      return !0;
  return !1;
}
function Oc(e, t) {
  return e.has(t);
}
var HM = 1, zM = 2;
function b1(e, t, n, r, i, s) {
  var o = n & HM, l = e.length, c = t.length;
  if (l != c && !(o && c > l))
    return !1;
  var d = s.get(e), u = s.get(t);
  if (d && u)
    return d == t && u == e;
  var p = -1, m = !0, f = n & zM ? new Ds() : void 0;
  for (s.set(e, t), s.set(t, e); ++p < l; ) {
    var g = e[p], b = t[p];
    if (r)
      var v = o ? r(b, g, p, t, e, s) : r(g, b, p, e, t, s);
    if (v !== void 0) {
      if (v)
        continue;
      m = !1;
      break;
    }
    if (f) {
      if (!KM(t, function(y, C) {
        if (!Oc(f, C) && (g === y || i(g, y, n, r, s)))
          return f.push(C);
      })) {
        m = !1;
        break;
      }
    } else if (!(g === b || i(g, b, n, r, s))) {
      m = !1;
      break;
    }
  }
  return s.delete(e), s.delete(t), m;
}
function qM(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r, i) {
    n[++t] = [i, r];
  }), n;
}
function yg(e) {
  var t = -1, n = Array(e.size);
  return e.forEach(function(r) {
    n[++t] = r;
  }), n;
}
var GM = 1, WM = 2, XM = "[object Boolean]", YM = "[object Date]", JM = "[object Error]", ZM = "[object Map]", QM = "[object Number]", e6 = "[object RegExp]", t6 = "[object Set]", n6 = "[object String]", a6 = "[object Symbol]", r6 = "[object ArrayBuffer]", i6 = "[object DataView]", wy = dr ? dr.prototype : void 0, xm = wy ? wy.valueOf : void 0;
function s6(e, t, n, r, i, s, o) {
  switch (n) {
    case i6:
      if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset)
        return !1;
      e = e.buffer, t = t.buffer;
    case r6:
      return !(e.byteLength != t.byteLength || !s(new hu(e), new hu(t)));
    case XM:
    case YM:
    case QM:
      return ep(+e, +t);
    case JM:
      return e.name == t.name && e.message == t.message;
    case e6:
    case n6:
      return e == t + "";
    case ZM:
      var l = qM;
    case t6:
      var c = r & GM;
      if (l || (l = yg), e.size != t.size && !c)
        return !1;
      var d = o.get(e);
      if (d)
        return d == t;
      r |= WM, o.set(e, t);
      var u = b1(l(e), l(t), r, i, s, o);
      return o.delete(e), u;
    case a6:
      if (xm)
        return xm.call(e) == xm.call(t);
  }
  return !1;
}
var o6 = 1, l6 = Object.prototype, c6 = l6.hasOwnProperty;
function d6(e, t, n, r, i, s) {
  var o = n & o6, l = Af(e), c = l.length, d = Af(t), u = d.length;
  if (c != u && !o)
    return !1;
  for (var p = c; p--; ) {
    var m = l[p];
    if (!(o ? m in t : c6.call(t, m)))
      return !1;
  }
  var f = s.get(e), g = s.get(t);
  if (f && g)
    return f == t && g == e;
  var b = !0;
  s.set(e, t), s.set(t, e);
  for (var v = o; ++p < c; ) {
    m = l[p];
    var y = e[m], C = t[m];
    if (r)
      var S = o ? r(C, y, m, t, e, s) : r(y, C, m, e, t, s);
    if (!(S === void 0 ? y === C || i(y, C, n, r, s) : S)) {
      b = !1;
      break;
    }
    v || (v = m == "constructor");
  }
  if (b && !v) {
    var P = e.constructor, w = t.constructor;
    P != w && "constructor" in e && "constructor" in t && !(typeof P == "function" && P instanceof P && typeof w == "function" && w instanceof w) && (b = !1);
  }
  return s.delete(e), s.delete(t), b;
}
var u6 = 1, Oy = "[object Arguments]", ky = "[object Array]", vd = "[object Object]", p6 = Object.prototype, Ty = p6.hasOwnProperty;
function m6(e, t, n, r, i, s) {
  var o = Ra(e), l = Ra(t), c = o ? ky : ar(e), d = l ? ky : ar(t);
  c = c == Oy ? vd : c, d = d == Oy ? vd : d;
  var u = c == vd, p = d == vd, m = c == d;
  if (m && Cc(e)) {
    if (!Cc(t))
      return !1;
    o = !0, u = !1;
  }
  if (m && !u)
    return s || (s = new Gr()), o || dg(e) ? b1(e, t, n, r, i, s) : s6(e, t, c, n, r, i, s);
  if (!(n & u6)) {
    var f = u && Ty.call(e, "__wrapped__"), g = p && Ty.call(t, "__wrapped__");
    if (f || g) {
      var b = f ? e.value() : e, v = g ? t.value() : t;
      return s || (s = new Gr()), i(b, v, n, r, s);
    }
  }
  return m ? (s || (s = new Gr()), d6(e, t, n, r, i, s)) : !1;
}
function op(e, t, n, r, i) {
  return e === t ? !0 : e == null || t == null || !Zr(e) && !Zr(t) ? e !== e && t !== t : m6(e, t, n, r, op, i);
}
var f6 = 1, h6 = 2;
function g6(e, t, n, r) {
  var i = n.length, s = i;
  if (e == null)
    return !s;
  for (e = Object(e); i--; ) {
    var o = n[i];
    if (o[2] ? o[1] !== e[o[0]] : !(o[0] in e))
      return !1;
  }
  for (; ++i < s; ) {
    o = n[i];
    var l = o[0], c = e[l], d = o[1];
    if (o[2]) {
      if (c === void 0 && !(l in e))
        return !1;
    } else {
      var u = new Gr(), p;
      if (!(p === void 0 ? op(d, c, f6 | h6, r, u) : p))
        return !1;
    }
  }
  return !0;
}
function v1(e) {
  return e === e && !ur(e);
}
function b6(e) {
  for (var t = Xc(e), n = t.length; n--; ) {
    var r = t[n], i = e[r];
    t[n] = [r, i, v1(i)];
  }
  return t;
}
function y1(e, t) {
  return function(n) {
    return n == null ? !1 : n[e] === t && (t !== void 0 || e in Object(n));
  };
}
function v6(e) {
  var t = b6(e);
  return t.length == 1 && t[0][2] ? y1(t[0][0], t[0][1]) : function(n) {
    return n === e || g6(n, e, t);
  };
}
function y6(e, t) {
  return e != null && t in Object(e);
}
function C6(e, t, n) {
  t = ll(t, e);
  for (var r = -1, i = t.length, s = !1; ++r < i; ) {
    var o = cl(t[r]);
    if (!(s = e != null && n(e, o)))
      break;
    e = e[o];
  }
  return s || ++r != i ? s : (i = e == null ? 0 : e.length, !!i && cg(i) && Qu(o, i) && (Ra(e) || ap(e)));
}
function x6(e, t) {
  return e != null && C6(e, t, y6);
}
var S6 = 1, w6 = 2;
function O6(e, t) {
  return pg(e) && v1(t) ? y1(cl(e), t) : function(n) {
    var r = Un(n, e);
    return r === void 0 && r === t ? x6(n, e) : op(t, r, S6 | w6);
  };
}
function k6(e) {
  return function(t) {
    return t?.[e];
  };
}
function T6(e) {
  return function(t) {
    return Jc(t, e);
  };
}
function I6(e) {
  return pg(e) ? k6(cl(e)) : T6(e);
}
function to(e) {
  return typeof e == "function" ? e : e == null ? Zu : typeof e == "object" ? Ra(e) ? O6(e[0], e[1]) : v6(e) : I6(e);
}
function E6(e, t, n, r) {
  for (var i = -1, s = e == null ? 0 : e.length; ++i < s; ) {
    var o = e[i];
    t(r, o, n(o), e);
  }
  return r;
}
function P6(e) {
  return function(t, n, r) {
    for (var i = -1, s = Object(t), o = r(t), l = o.length; l--; ) {
      var c = o[++i];
      if (n(s[c], c, s) === !1)
        break;
    }
    return t;
  };
}
var _6 = P6();
function R6(e, t) {
  return e && _6(e, t, Xc);
}
function A6(e, t) {
  return function(n, r) {
    if (n == null)
      return n;
    if (!eo(n))
      return e(n, r);
    for (var i = n.length, s = -1, o = Object(n); ++s < i && r(o[s], s, o) !== !1; )
      ;
    return n;
  };
}
var C1 = A6(R6);
function L6(e, t, n, r) {
  return C1(e, function(i, s, o) {
    t(r, i, n(i), o);
  }), r;
}
function N6(e, t) {
  return function(n, r) {
    var i = Ra(n) ? E6 : L6, s = {};
    return i(n, e, to(r), s);
  };
}
var Sm = function() {
  return Ar.Date.now();
}, D6 = "Expected a function", M6 = Math.max, F6 = Math.min;
function Cg(e, t, n) {
  var r, i, s, o, l, c, d = 0, u = !1, p = !1, m = !0;
  if (typeof e != "function")
    throw new TypeError(D6);
  t = Yv(t) || 0, ur(n) && (u = !!n.leading, p = "maxWait" in n, s = p ? M6(Yv(n.maxWait) || 0, t) : s, m = "trailing" in n ? !!n.trailing : m);
  function f(A) {
    var k = r, T = i;
    return r = i = void 0, d = A, o = e.apply(T, k), o;
  }
  function g(A) {
    return d = A, l = setTimeout(y, t), u ? f(A) : o;
  }
  function b(A) {
    var k = A - c, T = A - d, O = t - k;
    return p ? F6(O, s - T) : O;
  }
  function v(A) {
    var k = A - c, T = A - d;
    return c === void 0 || k >= t || k < 0 || p && T >= s;
  }
  function y() {
    var A = Sm();
    if (v(A))
      return C(A);
    l = setTimeout(y, b(A));
  }
  function C(A) {
    return l = void 0, m && r ? f(A) : (r = i = void 0, o);
  }
  function S() {
    l !== void 0 && clearTimeout(l), d = 0, r = c = i = l = void 0;
  }
  function P() {
    return l === void 0 ? o : C(Sm());
  }
  function w() {
    var A = Sm(), k = v(A);
    if (r = arguments, i = this, c = A, k) {
      if (l === void 0)
        return g(c);
      if (p)
        return clearTimeout(l), l = setTimeout(y, t), f(c);
    }
    return l === void 0 && (l = setTimeout(y, t)), o;
  }
  return w.cancel = S, w.flush = P, w;
}
function Eo(e) {
  return Zr(e) && eo(e);
}
function $6(e, t, n) {
  for (var r = -1, i = e == null ? 0 : e.length; ++r < i; )
    if (n(t, e[r]))
      return !0;
  return !1;
}
var j6 = 200;
function B6(e, t, n, r) {
  var i = -1, s = sg, o = !0, l = e.length, c = [], d = t.length;
  if (!l)
    return c;
  n && (t = Si(t, ol(n))), t.length >= j6 && (s = Oc, o = !1, t = new Ds(t));
  e:
    for (; ++i < l; ) {
      var u = e[i], p = n == null ? u : n(u);
      if (u = u !== 0 ? u : 0, o && p === p) {
        for (var m = d; m--; )
          if (t[m] === p)
            continue e;
        c.push(u);
      } else s(t, p, r) || c.push(u);
    }
  return c;
}
function kc(e) {
  var t = e == null ? 0 : e.length;
  return t ? e[t - 1] : void 0;
}
var xg = tp(function(e, t) {
  var n = kc(t);
  return Eo(n) && (n = void 0), Eo(e) ? B6(e, sp(t, 1, Eo, !0), to(n)) : [];
});
function U6(e, t) {
  var n = -1, r = eo(e) ? Array(e.length) : [];
  return C1(e, function(i, s, o) {
    r[++n] = t(i, s, o);
  }), r;
}
var V6 = Object.prototype, K6 = V6.hasOwnProperty, H6 = N6(function(e, t, n) {
  K6.call(e, n) ? e[n].push(t) : og(e, n, [t]);
}), z6 = Math.min;
function q6(e, t, n) {
  for (var r = sg, i = e[0].length, s = e.length, o = s, l = Array(s), c = 1 / 0, d = []; o--; ) {
    var u = e[o];
    o && t && (u = Si(u, ol(t))), c = z6(u.length, c), l[o] = t || i >= 120 && u.length >= 120 ? new Ds(o && u) : void 0;
  }
  u = e[0];
  var p = -1, m = l[0];
  e:
    for (; ++p < i && d.length < c; ) {
      var f = u[p], g = t ? t(f) : f;
      if (f = f !== 0 ? f : 0, !(m ? Oc(m, g) : r(d, g))) {
        for (o = s; --o; ) {
          var b = l[o];
          if (!(b ? Oc(b, g) : r(e[o], g)))
            continue e;
        }
        m && m.push(g), d.push(f);
      }
    }
  return d;
}
function G6(e) {
  return Eo(e) ? e : [];
}
var W6 = tp(function(e) {
  var t = kc(e), n = Si(e, G6);
  return t === kc(n) ? t = void 0 : n.pop(), n.length && n[0] === e[0] ? q6(n, to(t)) : [];
});
function X6(e, t) {
  return t.length < 2 ? e : Jc(e, Kw(t, 0, -1));
}
var Y6 = "[object Map]", J6 = "[object Set]", Z6 = Object.prototype, Q6 = Z6.hasOwnProperty;
function Iy(e) {
  if (e == null)
    return !0;
  if (eo(e) && (Ra(e) || typeof e == "string" || typeof e.splice == "function" || Cc(e) || dg(e) || ap(e)))
    return !e.length;
  var t = ar(e);
  if (t == Y6 || t == J6)
    return !e.size;
  if (np(e))
    return !Uw(e).length;
  for (var n in e)
    if (Q6.call(e, n))
      return !1;
  return !0;
}
function yi(e, t) {
  return op(e, t);
}
function eF(e, t) {
  return t = ll(t, e), e = X6(e, t), e == null || delete e[cl(kc(t))];
}
function tF(e) {
  return GD(e) ? void 0 : e;
}
var nF = 1, aF = 2, rF = 4, x1 = UD(function(e, t) {
  var n = {};
  if (e == null)
    return n;
  var r = !1;
  t = Si(t, function(s) {
    return s = ll(s, e), r || (r = s.length > 1), s;
  }), Wc(e, bg(e), n), r && (n = Zl(n, nF | aF | rF, tF));
  for (var i = t.length; i--; )
    eF(n, t[i]);
  return n;
});
function iF(e, t, n, r) {
  if (!ur(e))
    return e;
  t = ll(t, e);
  for (var i = -1, s = t.length, o = s - 1, l = e; l != null && ++i < s; ) {
    var c = cl(t[i]), d = n;
    if (c === "__proto__" || c === "constructor" || c === "prototype")
      return e;
    if (i != o) {
      var u = l[c];
      d = void 0, d === void 0 && (d = ur(u) ? u : Qu(t[i + 1]) ? [] : {});
    }
    lg(l, c, d), l = l[c];
  }
  return e;
}
function sF(e, t, n) {
  for (var r = -1, i = t.length, s = {}; ++r < i; ) {
    var o = t[r], l = Jc(e, o);
    n(l, o) && iF(s, ll(o, e), l);
  }
  return s;
}
function Sg(e, t) {
  if (e == null)
    return {};
  var n = Si(bg(e), function(r) {
    return [r];
  });
  return t = to(t), sF(e, n, function(r, i) {
    return t(r, i[0]);
  });
}
function oF(e, t) {
  var n = e.length;
  for (e.sort(t); n--; )
    e[n] = e[n].value;
  return e;
}
function lF(e, t) {
  if (e !== t) {
    var n = e !== void 0, r = e === null, i = e === e, s = Ko(e), o = t !== void 0, l = t === null, c = t === t, d = Ko(t);
    if (!l && !d && !s && e > t || s && o && c && !l && !d || r && o && c || !n && c || !i)
      return 1;
    if (!r && !s && !d && e < t || d && n && i && !r && !s || l && n && i || !o && i || !c)
      return -1;
  }
  return 0;
}
function cF(e, t, n) {
  for (var r = -1, i = e.criteria, s = t.criteria, o = i.length, l = n.length; ++r < o; ) {
    var c = lF(i[r], s[r]);
    if (c) {
      if (r >= l)
        return c;
      var d = n[r];
      return c * (d == "desc" ? -1 : 1);
    }
  }
  return e.index - t.index;
}
function dF(e, t, n) {
  t.length ? t = Si(t, function(s) {
    return Ra(s) ? function(o) {
      return Jc(o, s.length === 1 ? s[0] : s);
    } : s;
  }) : t = [Zu];
  var r = -1;
  t = Si(t, ol(to));
  var i = U6(e, function(s, o, l) {
    var c = Si(t, function(d) {
      return d(s);
    });
    return { criteria: c, index: ++r, value: s };
  });
  return oF(i, function(s, o) {
    return cF(s, o, n);
  });
}
var wr = tp(function(e, t) {
  if (e == null)
    return [];
  var n = t.length;
  return n > 1 && ey(e, t[0], t[1]) ? t = [] : n > 2 && ey(t[0], t[1], t[2]) && (t = [t[0]]), dF(e, sp(t), []);
}), uF = 1 / 0, pF = Io && 1 / yg(new Io([, -0]))[1] == uF ? function(e) {
  return new Io(e);
} : QN, mF = 200;
function wg(e, t, n) {
  var r = -1, i = sg, s = e.length, o = !0, l = [], c = l;
  if (n)
    o = !1, i = $6;
  else if (s >= mF) {
    var d = t ? null : pF(e);
    if (d)
      return yg(d);
    o = !1, i = Oc, c = new Ds();
  } else
    c = t ? [] : l;
  e:
    for (; ++r < s; ) {
      var u = e[r], p = t ? t(u) : u;
      if (u = n || u !== 0 ? u : 0, o && p === p) {
        for (var m = c.length; m--; )
          if (c[m] === p)
            continue e;
        t && c.push(p), l.push(u);
      } else i(c, p, n) || (c !== l && c.push(p), l.push(u));
    }
  return l;
}
var Ey = tp(function(e) {
  var t = kc(e);
  return Eo(t) && (t = void 0), wg(sp(e, 1, Eo, !0), to(t));
});
function lp(e, t) {
  return e && e.length ? wg(e, to(t)) : [];
}
function fF(e, t) {
  return t = typeof t == "function" ? t : void 0, e && e.length ? wg(e, void 0, t) : [];
}
const hF = (e) => {
  var { items: t, isDisabled: n, rowData: r, extraData: i, actionsToggle: s, popperProps: o = {
    position: "end",
    direction: "down"
  }, innerRef: l, firstActionItemRef: c, isOnOpenChangeDisabled: d = !1 } = e, u = se(e, ["items", "isDisabled", "rowData", "extraData", "actionsToggle", "popperProps", "innerRef", "firstActionItemRef", "isOnOpenChangeDisabled"]);
  const [p, m] = h.useState(!1), f = () => {
    m(!p);
  }, g = (b, v) => {
    v && (b.preventDefault(), v(b, i && i.rowIndex, r, i));
  };
  return h.createElement(
    h.Fragment,
    null,
    t.filter((b) => b.isOutsideDropdown).map((b, v) => {
      var { title: y, itemKey: C, onClick: S, isOutsideDropdown: P } = b, w = se(b, ["title", "itemKey", "onClick", "isOutsideDropdown"]);
      return typeof y == "string" ? h.createElement(z, Object.assign({ onClick: (A) => g(A, S) }, w, { isDisabled: n, key: C || `outside_dropdown_${v}`, "data-key": C || `outside_dropdown_${v}` }), y) : h.cloneElement(y, Object.assign({ onClick: S, isDisabled: n }, w));
    }),
    h.createElement(
      Kt,
      Object.assign({ isOpen: p, onOpenChange: d ? void 0 : (b) => m(b), toggle: (b) => s ? s({ onToggle: f, isOpen: p, isDisabled: n, toggleRef: b }) : h.createElement(
        ut,
        { "aria-label": "Kebab toggle", ref: b, onClick: f, isExpanded: p, isDisabled: n, variant: "plain" },
        h.createElement(hr, null)
      ) }, r && r.actionProps, { ref: l }, u, { popperProps: o }),
      h.createElement(Xt, null, t.filter((b) => !b.isOutsideDropdown).map((b, v) => {
        var { title: y, itemKey: C, onClick: S, tooltipProps: P, isSeparator: w, shouldCloseOnClick: A = !0 } = b, k = se(b, ["title", "itemKey", "onClick", "tooltipProps", "isSeparator", "shouldCloseOnClick"]);
        if (w)
          return h.createElement(Pt, { key: C || v, "data-key": C || v });
        const T = h.createElement(Ue, Object.assign({ onClick: (O) => {
          g(O, S), A && f();
        } }, k, { key: C || v, "data-key": C || v, ref: v === 0 ? c : void 0 }), y);
        return P?.content ? h.createElement(Ht, Object.assign({ key: C || v }, P), T) : T;
      }))
    )
  );
}, dl = h.forwardRef((e, t) => h.createElement(hF, Object.assign({}, e, { innerRef: t })));
dl.displayName = "ActionsColumn";
const Ze = {
  button: "pf-v5-c-button",
  check: "pf-v5-c-check",
  checkInput: "pf-v5-c-check__input",
  dirRtl: "pf-v5-m-dir-rtl",
  modifiers: {
    hidden: "pf-m-hidden",
    hiddenOnSm: "pf-m-hidden-on-sm",
    visibleOnSm: "pf-m-visible-on-sm",
    hiddenOnMd: "pf-m-hidden-on-md",
    visibleOnMd: "pf-m-visible-on-md",
    hiddenOnLg: "pf-m-hidden-on-lg",
    visibleOnLg: "pf-m-visible-on-lg",
    hiddenOnXl: "pf-m-hidden-on-xl",
    visibleOnXl: "pf-m-visible-on-xl",
    hiddenOn_2xl: "pf-m-hidden-on-2xl",
    visibleOn_2xl: "pf-m-visible-on-2xl",
    fixed: "pf-m-fixed",
    stickyHeader: "pf-m-sticky-header",
    nestedColumnHeader: "pf-m-nested-column-header",
    borderRow: "pf-m-border-row",
    striped: "pf-m-striped",
    expandable: "pf-m-expandable",
    stripedEven: "pf-m-striped-even",
    ghostRow: "pf-m-ghost-row",
    center: "pf-m-center",
    help: "pf-m-help",
    favorite: "pf-m-favorite",
    borderRight: "pf-m-border-right",
    borderLeft: "pf-m-border-left",
    expanded: "pf-m-expanded",
    truncate: "pf-m-truncate",
    wrap: "pf-m-wrap",
    nowrap: "pf-m-nowrap",
    fitContent: "pf-m-fit-content",
    breakWord: "pf-m-break-word",
    noBorderRows: "pf-m-no-border-rows",
    clickable: "pf-m-clickable",
    selected: "pf-m-selected",
    firstCellOffsetReset: "pf-m-first-cell-offset-reset",
    dragOver: "pf-m-drag-over",
    standalone: "pf-m-standalone",
    favorited: "pf-m-favorited",
    noPadding: "pf-m-no-padding",
    compact: "pf-m-compact",
    width_10: "pf-m-width-10",
    width_15: "pf-m-width-15",
    width_20: "pf-m-width-20",
    width_25: "pf-m-width-25",
    width_30: "pf-m-width-30",
    width_35: "pf-m-width-35",
    width_40: "pf-m-width-40",
    width_45: "pf-m-width-45",
    width_50: "pf-m-width-50",
    width_60: "pf-m-width-60",
    width_70: "pf-m-width-70",
    width_80: "pf-m-width-80",
    width_90: "pf-m-width-90",
    width_100: "pf-m-width-100"
  },
  table: "pf-v5-c-table",
  tableAction: "pf-v5-c-table__action",
  tableButton: "pf-v5-c-table__button",
  tableButtonContent: "pf-v5-c-table__button-content",
  tableCaption: "pf-v5-c-table__caption",
  tableCheck: "pf-v5-c-table__check",
  tableColumnHelp: "pf-v5-c-table__column-help",
  tableColumnHelpAction: "pf-v5-c-table__column-help-action",
  tableCompoundExpansionToggle: "pf-v5-c-table__compound-expansion-toggle",
  tableControlRow: "pf-v5-c-table__control-row",
  tableDraggable: "pf-v5-c-table__draggable",
  tableExpandableRow: "pf-v5-c-table__expandable-row",
  tableExpandableRowContent: "pf-v5-c-table__expandable-row-content",
  tableFavorite: "pf-v5-c-table__favorite",
  tableIcon: "pf-v5-c-table__icon",
  tableIconInline: "pf-v5-c-table__icon-inline",
  tableInlineEditAction: "pf-v5-c-table__inline-edit-action",
  tableSort: "pf-v5-c-table__sort",
  tableSortIndicator: "pf-v5-c-table__sort-indicator",
  tableSubhead: "pf-v5-c-table__subhead",
  tableTbody: "pf-v5-c-table__tbody",
  tableTd: "pf-v5-c-table__td",
  tableText: "pf-v5-c-table__text",
  tableTh: "pf-v5-c-table__th",
  tableThead: "pf-v5-c-table__thead",
  tableToggle: "pf-v5-c-table__toggle",
  tableToggleIcon: "pf-v5-c-table__toggle-icon",
  tableTr: "pf-v5-c-table__tr",
  themeDark: "pf-v5-theme-dark"
}, S1 = (e) => {
  var { className: t = "", children: n = null, isOpen: r, onToggle: i } = e, s = se(e, ["className", "children", "isOpen", "onToggle"]);
  return h.createElement(
    h.Fragment,
    null,
    r !== void 0 && h.createElement(
      z,
      Object.assign({ className: j(t, r && Ze.modifiers.expanded) }, s, { variant: "plain", "aria-label": s["aria-label"] || "Details", onClick: i, "aria-expanded": r }),
      h.createElement(
        "div",
        { className: j(Ze.tableToggleIcon) },
        h.createElement(jh, null)
      )
    ),
    n
  );
};
S1.displayName = "CollapseColumn";
const w1 = (e) => {
  var { className: t, onClick: n, "aria-label": r, id: i } = e, s = se(e, ["className", "onClick", "aria-label", "id"]);
  return h.createElement(
    z,
    Object.assign({ id: i, variant: "plain", className: t, type: "button", "aria-label": r || "Draggable row draggable button", onClick: n }, s),
    h.createElement(n0, { "aria-hidden": !0 })
  );
};
w1.displayName = "DraggableCell";
const gF = {
  button: "pf-v5-c-button",
  inlineEdit: "pf-v5-c-inline-edit",
  inlineEditAction: "pf-v5-c-inline-edit__action",
  inlineEditEditableText: "pf-v5-c-inline-edit__editable-text",
  inlineEditGroup: "pf-v5-c-inline-edit__group",
  inlineEditInput: "pf-v5-c-inline-edit__input",
  inlineEditLabel: "pf-v5-c-inline-edit__label",
  inlineEditValue: "pf-v5-c-inline-edit__value",
  modifiers: {
    iconGroup: "pf-m-icon-group",
    footer: "pf-m-footer",
    column: "pf-m-column",
    valid: "pf-m-valid",
    plain: "pf-m-plain",
    actionGroup: "pf-m-action-group",
    enableEditable: "pf-m-enable-editable",
    inlineEditable: "pf-m-inline-editable",
    enable: "pf-m-enable",
    bold: "pf-m-bold"
  }
}, ms = (e) => {
  var { children: t = null } = e, n = se(e, ["children"]);
  return h.createElement("div", Object.assign({}, n, { className: j(Ze.tableExpandableRowContent) }), t);
};
ms.displayName = "ExpandableRowContent";
var Py;
(function(e) {
  e.div = "div", e.nav = "nav";
})(Py || (Py = {}));
var _y;
(function(e) {
  e.wrap = "wrap", e.nowrap = "nowrap", e.truncate = "truncate", e.breakWord = "breakWord", e.fitContent = "fitContent";
})(_y || (_y = {}));
const Oa = (e) => {
  var { children: t = null, className: n = "", variant: r = "span", wrapModifier: i = null, tooltip: s = "", tooltipProps: o = {}, onMouseEnter: l = () => {
  }, focused: c = !1, tooltipHasDefaultBehavior: d = !1 } = e, u = se(e, ["children", "className", "variant", "wrapModifier", "tooltip", "tooltipProps", "onMouseEnter", "focused", "tooltipHasDefaultBehavior"]);
  const p = r, m = h.createRef(), [f, g] = h.useState(s), b = (C) => {
    C.target.offsetWidth < C.target.scrollWidth ? g(s || C.target.innerText) : g(""), l(C);
  }, v = (C) => {
    C.offsetWidth < C.scrollWidth ? g(s || C.innerText) : g("");
  }, y = h.createElement(p, Object.assign({ ref: m, onMouseEnter: d ? void 0 : b, className: j(n, i && Ze.modifiers[i], Ze.tableText) }, u), t);
  return h.useEffect(() => {
    d || (c ? v(m.current) : g(""));
  }, [c, d]), f !== "" ? h.createElement(Ht, Object.assign({ triggerRef: m, content: f }, !d && { isVisible: !0 }, o), y) : y;
};
Oa.displayName = "TableText";
const Df = ({ children: e, info: t, className: n, variant: r = "tooltip", popoverProps: i, tooltipProps: s, ariaLabel: o }) => h.createElement(
  "div",
  { className: j(Ze.tableColumnHelp, n) },
  typeof e == "string" ? h.createElement(Oa, null, e) : e,
  h.createElement("span", { className: j(Ze.tableColumnHelpAction) }, r === "tooltip" ? h.createElement(
    Ht,
    Object.assign({ content: t }, s),
    h.createElement(
      z,
      { variant: "plain", "aria-label": o || typeof t == "string" && t || "More info" },
      h.createElement(Ls, null)
    )
  ) : h.createElement(
    Rr,
    Object.assign({ bodyContent: t }, i),
    h.createElement(
      z,
      { variant: "plain", "aria-label": o || typeof t == "string" && t || "More info" },
      h.createElement(Ls, null)
    )
  ))
);
Df.displayName = "HeaderCellInfoWrapper";
const bF = {
  button: "pf-v5-c-button",
  modifiers: {
    grid: "pf-m-grid",
    compact: "pf-m-compact",
    expanded: "pf-m-expanded",
    selected: "pf-m-selected",
    noPadding: "pf-m-no-padding",
    hoverable: "pf-m-hoverable",
    nowrap: "pf-m-nowrap",
    fitContent: "pf-m-fit-content",
    truncate: "pf-m-truncate",
    gridMd: "pf-m-grid-md",
    gridLg: "pf-m-grid-lg",
    gridXl: "pf-m-grid-xl",
    grid_2xl: "pf-m-grid-2xl"
  },
  table: "pf-v5-c-table",
  tableAction: "pf-v5-c-table__action",
  tableButton: "pf-v5-c-table__button",
  tableCheck: "pf-v5-c-table__check",
  tableCompoundExpansionToggle: "pf-v5-c-table__compound-expansion-toggle",
  tableExpandableRow: "pf-v5-c-table__expandable-row",
  tableExpandableRowContent: "pf-v5-c-table__expandable-row-content",
  tableFavorite: "pf-v5-c-table__favorite",
  tableIcon: "pf-v5-c-table__icon",
  tableInlineEditAction: "pf-v5-c-table__inline-edit-action",
  tableTbody: "pf-v5-c-table__tbody",
  tableTd: "pf-v5-c-table__td",
  tableText: "pf-v5-c-table__text",
  tableTh: "pf-v5-c-table__th",
  tableThead: "pf-v5-c-table__thead",
  tableToggle: "pf-v5-c-table__toggle",
  tableToggleIcon: "pf-v5-c-table__toggle-icon",
  tableTr: "pf-v5-c-table__tr"
}, Ca = {
  dirRtl: "pf-v5-m-dir-rtl",
  dropdown: "pf-v5-c-dropdown",
  modifiers: {
    treeView: "pf-m-tree-view",
    noInset: "pf-m-no-inset",
    treeViewGrid: "pf-m-tree-view-grid",
    treeViewDetailsExpanded: "pf-m-tree-view-details-expanded",
    treeViewGridMd: "pf-m-tree-view-grid-md",
    treeViewGridLg: "pf-m-tree-view-grid-lg",
    treeViewGridXl: "pf-m-tree-view-grid-xl",
    treeViewGrid_2xl: "pf-m-tree-view-grid-2xl"
  },
  table: "pf-v5-c-table",
  tableAction: "pf-v5-c-table__action",
  tableCheck: "pf-v5-c-table__check",
  tableTbody: "pf-v5-c-table__tbody",
  tableTd: "pf-v5-c-table__td",
  tableTh: "pf-v5-c-table__th",
  tableThead: "pf-v5-c-table__thead",
  tableToggle: "pf-v5-c-table__toggle",
  tableToggleIcon: "pf-v5-c-table__toggle-icon",
  tableTr: "pf-v5-c-table__tr",
  tableTreeViewDetailsToggle: "pf-v5-c-table__tree-view-details-toggle",
  tableTreeViewIcon: "pf-v5-c-table__tree-view-icon",
  tableTreeViewMain: "pf-v5-c-table__tree-view-main",
  tableTreeViewText: "pf-v5-c-table__tree-view-text",
  tableTreeViewTitleCell: "pf-v5-c-table__tree-view-title-cell",
  tableTreeViewTitleHeaderCell: "pf-v5-c-table__tree-view-title-header-cell"
};
var Mf;
(function(e) {
  e.radio = "radio", e.checkbox = "checkbox";
})(Mf || (Mf = {}));
const O1 = (e) => {
  var {
    children: t = null,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    className: n,
    onSelect: r = null,
    selectVariant: i,
    tooltip: s,
    tooltipProps: o
  } = e, l = se(e, ["children", "className", "onSelect", "selectVariant", "tooltip", "tooltipProps"]);
  const c = h.createRef(), d = h.createElement(
    h.Fragment,
    null,
    h.createElement(
      "label",
      null,
      h.createElement("input", Object.assign({}, l, { ref: c, type: i, onChange: r }))
    ),
    t
  );
  return s ? h.createElement(Ht, Object.assign({ triggerRef: c, content: s }, o), d) : d;
};
O1.displayName = "SelectColumn";
const k1 = (e, { rowIndex: t, columnIndex: n, rowData: r, column: i, property: s, tooltip: o }) => {
  const { extraParams: { onSelect: l, selectVariant: c, allRowsSelected: d, isHeaderSelectDisabled: u } } = i, p = {
    rowIndex: t,
    columnIndex: n,
    column: i,
    property: s
  };
  if (r && r.hasOwnProperty("parent") && !r.showSelect && !r.fullWidth)
    return {
      component: "td",
      isVisible: !0
    };
  const m = t !== void 0 ? t : -1;
  function f(v) {
    const y = t === void 0 ? v.currentTarget.checked : r && !r.selected;
    l && l(v, y, m, r, p);
  }
  const g = Object.assign(Object.assign(Object.assign({}, m !== -1 ? {
    checked: r && !!r.selected,
    "aria-label": `Select row ${t}`
  } : {
    checked: d,
    "aria-label": "Select all rows"
  }), r && (r.disableCheckbox || r.disableSelection) && {
    disabled: !0,
    className: ui.checkInput
  }), !r && u && { disabled: !0 });
  let b = "check-all";
  return m !== -1 && c === Mf.checkbox ? b = `checkrow${t}` : m !== -1 && (b = "radioGroup"), {
    className: j(Ze.tableCheck),
    component: m !== -1 ? "td" : "th",
    isVisible: !r || !r.fullWidth,
    children: h.createElement(O1, Object.assign({}, g, { selectVariant: c, onSelect: f, name: b, tooltip: o }), e)
  };
};
var Ts;
(function(e) {
  e.asc = "asc", e.desc = "desc";
})(Ts || (Ts = {}));
const T1 = (e) => {
  var { children: t = null, className: n = "", isSortedBy: r = !1, onSort: i = null, sortDirection: s = "", type: o = "button", tooltip: l, tooltipProps: c, tooltipHasDefaultBehavior: d } = e, u = se(e, ["children", "className", "isSortedBy", "onSort", "sortDirection", "type", "tooltip", "tooltipProps", "tooltipHasDefaultBehavior"]);
  let p;
  const [m, f] = h.useState(!1);
  return r ? p = s === Ts.asc ? AL : _L : p = WA, h.createElement(
    "button",
    Object.assign({}, u, { type: o, className: j(n, Ze.tableButton), onClick: (g) => i && i(g), onFocus: () => f(!0), onBlur: () => f(!1) }),
    h.createElement(
      "div",
      { className: j(n, Ze.tableButtonContent) },
      h.createElement(Oa, { tooltip: l, tooltipProps: c, tooltipHasDefaultBehavior: d, focused: m }, t),
      h.createElement(
        "span",
        { className: j(Ze.tableSortIndicator) },
        h.createElement(p, null)
      )
    )
  );
};
T1.displayName = "SortColumn";
const vF = (e) => () => I1(h.createElement(kh, { "aria-hidden": !0 }), {
  columnIndex: e.columnIndex,
  className: Ze.modifiers.favorite,
  ariaLabel: "Sort favorites",
  column: {
    extraParams: {
      sortBy: e.sortBy,
      onSort: e?.onSort
    }
  },
  tooltip: e.tooltip,
  tooltipProps: e.tooltipProps,
  tooltipHasDefaultBehavior: !0
}), I1 = (e, { columnIndex: t, column: n, property: r, className: i, ariaLabel: s, tooltip: o, tooltipProps: l, tooltipHasDefaultBehavior: c }) => {
  const { extraParams: { sortBy: d, onSort: u } } = n, p = {
    columnIndex: t,
    column: n,
    property: r
  }, m = d && t === d.index;
  function f(g) {
    let b;
    m ? b = d.direction === Ts.asc ? Ts.desc : Ts.asc : b = d.defaultDirection ? d.defaultDirection : Ts.asc, u && u(g, t, b, p);
  }
  return {
    className: j(Ze.tableSort, m && Ze.modifiers.selected, i),
    "aria-sort": m ? `${d.direction}ending` : "none",
    children: h.createElement(T1, { isSortedBy: m, sortDirection: m ? d.direction : "", onSort: f, "aria-label": s, tooltip: o, tooltipProps: l, tooltipHasDefaultBehavior: c }, e)
  };
}, Ry = (e, t, n, r) => t, yF = (e, t, n) => (r, { rowData: i, column: s, rowIndex: o, columnIndex: l, column: { extraParams: { actionsToggle: c, actionsPopperProps: d } }, property: u }) => {
  const p = {
    rowIndex: o,
    columnIndex: l,
    column: s,
    property: u
  }, m = Ry(t, e), f = Ry(n, i && i.disableActions), g = m && m.length > 0 ? {
    children: h.createElement(dl, { items: m, isDisabled: f, rowData: i, extraData: p, actionsToggle: c, popperProps: d }, r)
  } : {};
  return Object.assign({ className: j(Ze.tableAction), style: { paddingRight: 0 }, isVisible: !0 }, g);
}, CF = (e) => e.toUpperCase().replace("-", "").replace("_", ""), Ay = (e) => e.replace(/([-_][a-z])/gi, CF);
function xF(e) {
  return e[0].toUpperCase() + e.substring(1);
}
const Ft = (e) => () => ({
  className: j(Ze.modifiers[typeof e == "number" ? `width_${e}` : `width${xF(e)}`])
}), SF = () => ({
  className: Ze.modifiers.wrap
}), E1 = (e, { rowIndex: t, columnIndex: n, rowData: r, column: i, property: s }) => {
  const { extraParams: { onCollapse: o, rowLabeledBy: l = "simple-node", expandId: c = "expand-toggle", allRowsExpanded: d, collapseAllAriaLabel: u } } = i, p = {
    rowIndex: t,
    columnIndex: n,
    column: i,
    property: s
  }, m = t !== void 0 ? t : -1, f = Object.assign({}, m !== -1 ? {
    isOpen: r?.isOpen,
    "aria-labelledby": `${l}${m} ${c}${m}`
  } : {
    isOpen: d,
    "aria-label": u || "Expand all rows"
  });
  function g(b) {
    const v = r ? !r.isOpen : !d;
    o && o(b, t, v, r, p);
  }
  return {
    className: (r?.isOpen !== void 0 || m === -1) && j(Ze.tableToggle),
    isVisible: !r?.fullWidth,
    children: h.createElement(S1, Object.assign({ "aria-labelledby": `${l}${m} ${c}${m}`, onToggle: g, id: c + m }, f), e)
  };
}, wF = (e, { rowIndex: t, columnIndex: n, rowData: r, column: i, property: s }) => {
  if (!e)
    return null;
  const { title: o, props: l } = e, { extraParams: { onExpand: c, expandId: d = "expand-toggle" } } = i, u = {
    rowIndex: t,
    columnIndex: n,
    column: i,
    property: s
  };
  function p(m) {
    c && c(m, t, n, l.isOpen, r, u);
  }
  return {
    className: j(Ze.tableCompoundExpansionToggle, l.isOpen && Ze.modifiers.expanded),
    children: l.isOpen !== void 0 && h.createElement(
      "button",
      { type: "button", className: j(Ze.tableButton), onClick: p, "aria-expanded": l.isOpen, "aria-controls": l.ariaControls, id: `${d}-${t}-${n}` },
      h.createElement(Oa, null, o)
    )
  };
}, OF = [
  "hidden",
  "hiddenOnSm",
  "hiddenOnMd",
  "hiddenOnLg",
  "hiddenOnXl",
  "hiddenOn_2xl",
  "visibleOnSm",
  "visibleOnMd",
  "visibleOnLg",
  "visibleOnXl",
  "visibleOn_2xl"
], P1 = OF.filter((e) => Ze.modifiers[e]).reduce((e, t) => {
  const n = t.replace("_2xl", "2Xl");
  return e[n] = Ze.modifiers[t], e;
}, {}), _1 = (...e) => () => ({
  className: j(...e)
}), kF = ({ tooltip: e, tooltipProps: t, popover: n, popoverProps: r, className: i, ariaLabel: s }) => (l) => ({
  className: Ze.modifiers.help,
  children: e ? h.createElement(Df, { variant: "tooltip", info: e, tooltipProps: t, ariaLabel: s, className: i }, l) : h.createElement(Df, { variant: "popover", info: n, popoverProps: r, ariaLabel: s, className: i }, l)
}), R1 = (e) => {
  var { className: t = "", onFavorite: n, isFavorited: r, rowIndex: i } = e, s = se(e, ["className", "onFavorite", "isFavorited", "rowIndex"]);
  const o = i === void 0 ? {} : {
    id: `favorites-button-${i}`,
    "aria-labelledby": `favorites-button-${i}`
  };
  return h.createElement(
    z,
    Object.assign({ variant: "plain", className: t, type: "button", "aria-label": r ? "Starred" : "Not starred", onClick: n }, o, s),
    h.createElement(kh, { "aria-hidden": !0 })
  );
};
R1.displayName = "FavoritesCell";
const TF = (e, { rowIndex: t, columnIndex: n, rowData: r, column: i, property: s }) => {
  const { extraParams: { onFavorite: o } } = i, l = {
    rowIndex: t,
    columnIndex: n,
    column: i,
    property: s
  };
  if (r && r.hasOwnProperty("parent") && !r.fullWidth)
    return {
      component: "td",
      isVisible: !0
    };
  function c(u) {
    o && o(u, r && !r.favorited, t, r, l);
  }
  const d = r.favoritesProps || {};
  return {
    className: j(Ze.tableFavorite, r && r.favorited && Ze.modifiers.favorited),
    isVisible: !r || !r.fullWidth,
    children: h.createElement(R1, Object.assign({ rowIndex: t, onFavorite: c, isFavorited: r && r.favorited }, d))
  };
}, IF = (e, t, n) => (r, { rowIndex: i, rowData: s }) => {
  const { isExpanded: o, isDetailsExpanded: l, "aria-level": c, "aria-setsize": d, toggleAriaLabel: u, checkAriaLabel: p, showDetailsAriaLabel: m, isChecked: f, checkboxId: g, icon: b } = s.props, v = r.title || r, y = h.createElement(
    "div",
    { className: j(Ca.tableTreeViewText), key: "tree-view-text" },
    b && h.createElement("span", { className: j(Ca.tableTreeViewIcon), key: "tree-view-text-icon" }, b),
    h.createElement("span", { className: Ze.tableText, key: "table-text" }, v)
  ), C = (S, P) => {
    t(P, S, i, v, s);
  };
  return {
    component: "th",
    className: Ca.tableTreeViewTitleCell,
    children: c !== void 0 ? h.createElement(
      "div",
      { className: j(Ca.tableTreeViewMain) },
      d > 0 && h.createElement(
        "span",
        { className: j(Ca.tableToggle), key: "table-toggle" },
        h.createElement(
          z,
          { variant: "plain", onClick: (S) => e && e(S, i, v, s), className: j(o && Ze.modifiers.expanded), "aria-expanded": o, "aria-label": u || `${o ? "Collapse" : "Expand"} row ${i}` },
          h.createElement(
            "div",
            { className: j(Ca.tableToggleIcon) },
            h.createElement(jh, { "aria-hidden": "true" })
          )
        )
      ),
      !!t && h.createElement(
        "span",
        { className: j(Ca.tableCheck), key: "table-check" },
        h.createElement(
          "label",
          { htmlFor: g || `checkbox_${i}` },
          h.createElement(Zt, { id: g || `checkbox_${i}`, "aria-label": p || `Row ${i} checkbox`, isChecked: f, onChange: (S, P) => C(P, S) })
        )
      ),
      y,
      !!n && h.createElement(
        "span",
        { className: j(Ca.tableTreeViewDetailsToggle), key: "view-details-toggle" },
        h.createElement(
          z,
          { variant: "plain", "aria-expanded": l, "aria-label": m || "Show row details", onClick: (S) => n && n(S, i, v, s) },
          h.createElement(
            "span",
            { className: `${Ze.table}__details-toggle-icon` },
            h.createElement(pL, { "aria-hidden": !0 })
          )
        )
      )
    ) : y
  };
};
var Ff;
(function(e) {
  e.none = "", e.grid = "grid", e.gridMd = "grid-md", e.gridLg = "grid-lg", e.gridXl = "grid-xl", e.grid2xl = "grid-2xl";
})(Ff || (Ff = {}));
var Tc;
(function(e) {
  e.compact = "compact";
})(Tc || (Tc = {}));
const A1 = h.createContext({
  registerSelectableRow: () => {
  }
}), EF = (e) => {
  var t, n, {
    children: r,
    className: i,
    variant: s,
    borders: o = !0,
    isStickyHeader: l = !1,
    gridBreakPoint: c = Ff.gridMd,
    "aria-label": d,
    role: u = "grid",
    innerRef: p,
    ouiaId: m,
    ouiaSafe: f = !0,
    isTreeTable: g = !1,
    isNested: b = !1,
    isStriped: v = !1,
    isExpandable: y = !1,
    hasNoInset: C = !1,
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    nestedHeaderColumnSpans: S,
    selectableRowCaptionText: P
  } = e, w = se(e, ["children", "className", "variant", "borders", "isStickyHeader", "gridBreakPoint", "aria-label", "role", "innerRef", "ouiaId", "ouiaSafe", "isTreeTable", "isNested", "isStriped", "isExpandable", "hasNoInset", "nestedHeaderColumnSpans", "selectableRowCaptionText"]);
  const A = h.useRef(null), k = p || A, [T, O] = h.useState(!1), [I, _] = h.useState();
  h.useEffect(() => {
    if (document.addEventListener("keydown", M), k && k.current && k.current.classList.contains("pf-m-tree-view")) {
      const K = k.current.querySelector("tbody");
      K && kP(Array.from(K.querySelectorAll("button, a, input")));
    }
    return function() {
      document.removeEventListener("keydown", M);
    };
  }, [k, k.current]), h.useEffect(() => {
    _(P ? h.createElement(
      "caption",
      null,
      P,
      h.createElement("div", { className: "pf-v5-screen-reader" }, "This table has selectable rows. It can be navigated by row using tab, and each row can be selected using space or enter.")
    ) : h.createElement("caption", { className: "pf-v5-screen-reader" }, "This table has selectable rows. It can be navigated by row using tab, and each row can be selected using space or enter."));
  }, [P]);
  const E = za("Table", m, f), L = (t = bF.modifiers) === null || t === void 0 ? void 0 : t[Ay(c || "").replace(/-?2xl/, "_2xl")], F = `treeView${c.charAt(0).toUpperCase() + c.slice(1)}`, R = (n = Ca.modifiers) === null || n === void 0 ? void 0 : n[Ay(F || "").replace(/-?2xl/, "_2xl")], M = (K) => {
    if (b || !(k && k.current && k.current.classList.contains(Ca.modifiers.treeView)) || // implements roving tab-index to tree tables only
    k && k.current !== K.target.closest(`.${Ze.table}:not(.pf-m-nested)`))
      return;
    const G = document.activeElement, N = K.key, $ = Array.from(k.current.querySelectorAll("tbody tr")).filter((V) => !V.classList.contains("pf-m-disabled") && !V.hidden);
    (N === "Space" || N === "Enter") && (G.click(), K.preventDefault()), Gd(K, $, (V) => V === G.closest("tr"), (V) => V.querySelectorAll("button:not(:disabled), input:not(:disabled), a:not(:disabled)")[0], ["button", "input", "a"], void 0, !1, !0, !1);
  }, U = () => {
    !T && O(!0);
  };
  return h.createElement(
    A1.Provider,
    { value: { registerSelectableRow: U } },
    h.createElement(
      "table",
      Object.assign({ "aria-label": d, role: u, className: j(i, Ze.table, g ? R : L, Ze.modifiers[s], !o && Ze.modifiers.noBorderRows, l && Ze.modifiers.stickyHeader, g && Ca.modifiers.treeView, v && Ze.modifiers.striped, y && Ze.modifiers.expandable, C && Ca.modifiers.noInset, b && "pf-m-nested"), ref: k }, g && { role: "treegrid" }, E, w),
      T && I,
      r
    )
  );
}, Cn = h.forwardRef((e, t) => h.createElement(EF, Object.assign({}, e, { innerRef: t })));
Cn.displayName = "Table";
const PF = (e) => {
  var { children: t, className: n, isExpanded: r, isEditable: i, isHidden: s = !1, isClickable: o = !1, isRowSelected: l = !1, isStriped: c = !1, isBorderRow: d = !1, isControlRow: u = !1, innerRef: p, ouiaId: m, ouiaSafe: f = !0, resetOffset: g = !1, onRowClick: b, isSelectable: v, "aria-label": y } = e, C = se(e, ["children", "className", "isExpanded", "isEditable", "isHidden", "isClickable", "isRowSelected", "isStriped", "isBorderRow", "isControlRow", "innerRef", "ouiaId", "ouiaSafe", "resetOffset", "onRowClick", "isSelectable", "aria-label"]);
  const S = za("TableRow", m, f), [P, w] = h.useState("");
  let A = null;
  b && (A = (I) => {
    (I.key === "Enter" || I.key === " ") && (b(I), I.preventDefault());
  });
  const k = s || r !== void 0 && !r, { registerSelectableRow: T } = h.useContext(A1);
  h.useEffect(() => {
    v && !k ? (w(`${l ? "Row selected" : ""}`), T()) : w(void 0);
  }, [l, v, T, k]);
  const O = y || P;
  return h.createElement(
    h.Fragment,
    null,
    h.createElement("tr", Object.assign({ className: j(Ze.tableTr, n, r !== void 0 && Ze.tableExpandableRow, r && Ze.modifiers.expanded, i && gF.modifiers.inlineEditable, o && Ze.modifiers.clickable, l && Ze.modifiers.selected, c && Ze.modifiers.striped, d && Ze.modifiers.borderRow, u && Ze.tableControlRow, g && Ze.modifiers.firstCellOffsetReset), hidden: k }, o && { tabIndex: 0 }, { "aria-label": O, ref: p }, b && { onClick: b, onKeyDown: A }, S, C), t)
  );
}, it = h.forwardRef((e, t) => h.createElement(PF, Object.assign({}, e, { innerRef: t })));
it.displayName = "Tr";
const _F = (e) => {
  var { children: t, className: n, noWrap: r = !1, innerRef: i, hasNestedHeader: s } = e, o = se(e, ["children", "className", "noWrap", "innerRef", "hasNestedHeader"]);
  return h.createElement("thead", Object.assign({ className: j(Ze.tableThead, n, r && Ze.modifiers.nowrap, s && Ze.modifiers.nestedColumnHeader), ref: i }, o), t);
}, On = h.forwardRef((e, t) => h.createElement(_F, Object.assign({}, e, { innerRef: t })));
On.displayName = "Thead";
const RF = (e) => {
  var { children: t, className: n, isExpanded: r, innerRef: i, isEvenStriped: s = !1, isOddStriped: o = !1 } = e, l = se(e, ["children", "className", "isExpanded", "innerRef", "isEvenStriped", "isOddStriped"]);
  return h.createElement("tbody", Object.assign({ role: "rowgroup", className: j(Ze.tableTbody, n, r && Ze.modifiers.expanded, o && Ze.modifiers.striped, s && Ze.modifiers.stripedEven), ref: i }, l), t);
}, yn = h.forwardRef((e, t) => h.createElement(RF, Object.assign({}, e, { innerRef: t })));
yn.displayName = "Tbody";
const Po = {
  modifiers: {
    borderRight: "pf-m-border-right",
    borderLeft: "pf-m-border-left",
    right: "pf-m-right",
    inlineEnd: "pf-m-inline-end",
    left: "pf-m-left",
    inlineStart: "pf-m-inline-start"
  },
  scrollInnerWrapper: "pf-v5-c-scroll-inner-wrapper",
  scrollOuterWrapper: "pf-v5-c-scroll-outer-wrapper",
  table: "pf-v5-c-table",
  tableStickyCell: "pf-v5-c-table__sticky-cell"
};
function AF() {
  this.__data__ = [], this.size = 0;
}
var LF = AF;
function NF(e, t) {
  return e === t || e !== e && t !== t;
}
var cp = NF, DF = cp;
function MF(e, t) {
  for (var n = e.length; n--; )
    if (DF(e[n][0], t))
      return n;
  return -1;
}
var dp = MF, FF = dp, $F = Array.prototype, jF = $F.splice;
function BF(e) {
  var t = this.__data__, n = FF(t, e);
  if (n < 0)
    return !1;
  var r = t.length - 1;
  return n == r ? t.pop() : jF.call(t, n, 1), --this.size, !0;
}
var UF = BF, VF = dp;
function KF(e) {
  var t = this.__data__, n = VF(t, e);
  return n < 0 ? void 0 : t[n][1];
}
var HF = KF, zF = dp;
function qF(e) {
  return zF(this.__data__, e) > -1;
}
var GF = qF, WF = dp;
function XF(e, t) {
  var n = this.__data__, r = WF(n, e);
  return r < 0 ? (++this.size, n.push([e, t])) : n[r][1] = t, this;
}
var YF = XF, JF = LF, ZF = UF, QF = HF, e$ = GF, t$ = YF;
function ul(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
ul.prototype.clear = JF;
ul.prototype.delete = ZF;
ul.prototype.get = QF;
ul.prototype.has = e$;
ul.prototype.set = t$;
var up = ul, n$ = up;
function a$() {
  this.__data__ = new n$(), this.size = 0;
}
var r$ = a$;
function i$(e) {
  var t = this.__data__, n = t.delete(e);
  return this.size = t.size, n;
}
var s$ = i$;
function o$(e) {
  return this.__data__.get(e);
}
var l$ = o$;
function c$(e) {
  return this.__data__.has(e);
}
var d$ = c$, u$ = typeof Sa == "object" && Sa && Sa.Object === Object && Sa, L1 = u$, p$ = L1, m$ = typeof self == "object" && self && self.Object === Object && self, f$ = p$ || m$ || Function("return this")(), pl = f$, h$ = pl, g$ = h$.Symbol, N1 = g$, Ly = N1, D1 = Object.prototype, b$ = D1.hasOwnProperty, v$ = D1.toString, Al = Ly ? Ly.toStringTag : void 0;
function y$(e) {
  var t = b$.call(e, Al), n = e[Al];
  try {
    e[Al] = void 0;
    var r = !0;
  } catch {
  }
  var i = v$.call(e);
  return r && (t ? e[Al] = n : delete e[Al]), i;
}
var C$ = y$, x$ = Object.prototype, S$ = x$.toString;
function w$(e) {
  return S$.call(e);
}
var O$ = w$, Ny = N1, k$ = C$, T$ = O$, I$ = "[object Null]", E$ = "[object Undefined]", Dy = Ny ? Ny.toStringTag : void 0;
function P$(e) {
  return e == null ? e === void 0 ? E$ : I$ : Dy && Dy in Object(e) ? k$(e) : T$(e);
}
var pp = P$;
function _$(e) {
  var t = typeof e;
  return e != null && (t == "object" || t == "function");
}
var no = _$, R$ = pp, A$ = no, L$ = "[object AsyncFunction]", N$ = "[object Function]", D$ = "[object GeneratorFunction]", M$ = "[object Proxy]";
function F$(e) {
  if (!A$(e))
    return !1;
  var t = R$(e);
  return t == N$ || t == D$ || t == L$ || t == M$;
}
var Og = F$, $$ = pl, j$ = $$["__core-js_shared__"], B$ = j$, wm = B$, My = function() {
  var e = /[^.]+$/.exec(wm && wm.keys && wm.keys.IE_PROTO || "");
  return e ? "Symbol(src)_1." + e : "";
}();
function U$(e) {
  return !!My && My in e;
}
var V$ = U$, Om, Fy;
function K$() {
  if (Fy) return Om;
  Fy = 1;
  var e = Function.prototype, t = e.toString;
  function n(r) {
    if (r != null) {
      try {
        return t.call(r);
      } catch {
      }
      try {
        return r + "";
      } catch {
      }
    }
    return "";
  }
  return Om = n, Om;
}
var H$ = Og, z$ = V$, q$ = no, G$ = K$(), W$ = /[\\^$.*+?()[\]{}|]/g, X$ = /^\[object .+?Constructor\]$/, Y$ = Function.prototype, J$ = Object.prototype, Z$ = Y$.toString, Q$ = J$.hasOwnProperty, e8 = RegExp(
  "^" + Z$.call(Q$).replace(W$, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
);
function t8(e) {
  if (!q$(e) || z$(e))
    return !1;
  var t = H$(e) ? e8 : X$;
  return t.test(G$(e));
}
var n8 = t8;
function a8(e, t) {
  return e?.[t];
}
var r8 = a8, i8 = n8, s8 = r8;
function o8(e, t) {
  var n = s8(e, t);
  return i8(n) ? n : void 0;
}
var kg = o8, l8 = kg, c8 = pl, d8 = l8(c8, "Map"), M1 = d8, u8 = kg, p8 = u8(Object, "create"), mp = p8, $y = mp;
function m8() {
  this.__data__ = $y ? $y(null) : {}, this.size = 0;
}
var f8 = m8;
function h8(e) {
  var t = this.has(e) && delete this.__data__[e];
  return this.size -= t ? 1 : 0, t;
}
var g8 = h8, b8 = mp, v8 = "__lodash_hash_undefined__", y8 = Object.prototype, C8 = y8.hasOwnProperty;
function x8(e) {
  var t = this.__data__;
  if (b8) {
    var n = t[e];
    return n === v8 ? void 0 : n;
  }
  return C8.call(t, e) ? t[e] : void 0;
}
var S8 = x8, w8 = mp, O8 = Object.prototype, k8 = O8.hasOwnProperty;
function T8(e) {
  var t = this.__data__;
  return w8 ? t[e] !== void 0 : k8.call(t, e);
}
var I8 = T8, E8 = mp, P8 = "__lodash_hash_undefined__";
function _8(e, t) {
  var n = this.__data__;
  return this.size += this.has(e) ? 0 : 1, n[e] = E8 && t === void 0 ? P8 : t, this;
}
var R8 = _8, A8 = f8, L8 = g8, N8 = S8, D8 = I8, M8 = R8;
function ml(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
ml.prototype.clear = A8;
ml.prototype.delete = L8;
ml.prototype.get = N8;
ml.prototype.has = D8;
ml.prototype.set = M8;
var F8 = ml, jy = F8, $8 = up, j8 = M1;
function B8() {
  this.size = 0, this.__data__ = {
    hash: new jy(),
    map: new (j8 || $8)(),
    string: new jy()
  };
}
var U8 = B8;
function V8(e) {
  var t = typeof e;
  return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? e !== "__proto__" : e === null;
}
var K8 = V8, H8 = K8;
function z8(e, t) {
  var n = e.__data__;
  return H8(t) ? n[typeof t == "string" ? "string" : "hash"] : n.map;
}
var fp = z8, q8 = fp;
function G8(e) {
  var t = q8(this, e).delete(e);
  return this.size -= t ? 1 : 0, t;
}
var W8 = G8, X8 = fp;
function Y8(e) {
  return X8(this, e).get(e);
}
var J8 = Y8, Z8 = fp;
function Q8(e) {
  return Z8(this, e).has(e);
}
var e7 = Q8, t7 = fp;
function n7(e, t) {
  var n = t7(this, e), r = n.size;
  return n.set(e, t), this.size += n.size == r ? 0 : 1, this;
}
var a7 = n7, r7 = U8, i7 = W8, s7 = J8, o7 = e7, l7 = a7;
function fl(e) {
  var t = -1, n = e == null ? 0 : e.length;
  for (this.clear(); ++t < n; ) {
    var r = e[t];
    this.set(r[0], r[1]);
  }
}
fl.prototype.clear = r7;
fl.prototype.delete = i7;
fl.prototype.get = s7;
fl.prototype.has = o7;
fl.prototype.set = l7;
var c7 = fl, d7 = up, u7 = M1, p7 = c7, m7 = 200;
function f7(e, t) {
  var n = this.__data__;
  if (n instanceof d7) {
    var r = n.__data__;
    if (!u7 || r.length < m7 - 1)
      return r.push([e, t]), this.size = ++n.size, this;
    n = this.__data__ = new p7(r);
  }
  return n.set(e, t), this.size = n.size, this;
}
var h7 = f7, g7 = up, b7 = r$, v7 = s$, y7 = l$, C7 = d$, x7 = h7;
function hl(e) {
  var t = this.__data__ = new g7(e);
  this.size = t.size;
}
hl.prototype.clear = b7;
hl.prototype.delete = v7;
hl.prototype.get = y7;
hl.prototype.has = C7;
hl.prototype.set = x7;
var S7 = hl, w7 = kg, O7 = function() {
  try {
    var e = w7(Object, "defineProperty");
    return e({}, "", {}), e;
  } catch {
  }
}(), F1 = O7, By = F1;
function k7(e, t, n) {
  t == "__proto__" && By ? By(e, t, {
    configurable: !0,
    enumerable: !0,
    value: n,
    writable: !0
  }) : e[t] = n;
}
var Tg = k7, T7 = Tg, I7 = cp;
function E7(e, t, n) {
  (n !== void 0 && !I7(e[t], n) || n === void 0 && !(t in e)) && T7(e, t, n);
}
var $1 = E7;
function P7(e) {
  return function(t, n, r) {
    for (var i = -1, s = Object(t), o = r(t), l = o.length; l--; ) {
      var c = o[e ? l : ++i];
      if (n(s[c], c, s) === !1)
        break;
    }
    return t;
  };
}
var _7 = P7, R7 = _7, A7 = R7(), L7 = A7, gu = { exports: {} };
gu.exports;
(function(e, t) {
  var n = pl, r = t && !t.nodeType && t, i = r && !0 && e && !e.nodeType && e, s = i && i.exports === r, o = s ? n.Buffer : void 0, l = o ? o.allocUnsafe : void 0;
  function c(d, u) {
    if (u)
      return d.slice();
    var p = d.length, m = l ? l(p) : new d.constructor(p);
    return d.copy(m), m;
  }
  e.exports = c;
})(gu, gu.exports);
var N7 = gu.exports, D7 = pl, M7 = D7.Uint8Array, F7 = M7, Uy = F7;
function $7(e) {
  var t = new e.constructor(e.byteLength);
  return new Uy(t).set(new Uy(e)), t;
}
var j7 = $7, B7 = j7;
function U7(e, t) {
  var n = t ? B7(e.buffer) : e.buffer;
  return new e.constructor(n, e.byteOffset, e.length);
}
var V7 = U7;
function K7(e, t) {
  var n = -1, r = e.length;
  for (t || (t = Array(r)); ++n < r; )
    t[n] = e[n];
  return t;
}
var H7 = K7, z7 = no, Vy = Object.create, q7 = /* @__PURE__ */ function() {
  function e() {
  }
  return function(t) {
    if (!z7(t))
      return {};
    if (Vy)
      return Vy(t);
    e.prototype = t;
    var n = new e();
    return e.prototype = void 0, n;
  };
}(), G7 = q7;
function W7(e, t) {
  return function(n) {
    return e(t(n));
  };
}
var X7 = W7, Y7 = X7, J7 = Y7(Object.getPrototypeOf, Object), j1 = J7, Z7 = Object.prototype;
function Q7(e) {
  var t = e && e.constructor, n = typeof t == "function" && t.prototype || Z7;
  return e === n;
}
var B1 = Q7, e9 = G7, t9 = j1, n9 = B1;
function a9(e) {
  return typeof e.constructor == "function" && !n9(e) ? e9(t9(e)) : {};
}
var r9 = a9;
function i9(e) {
  return e != null && typeof e == "object";
}
var Zc = i9, s9 = pp, o9 = Zc, l9 = "[object Arguments]";
function c9(e) {
  return o9(e) && s9(e) == l9;
}
var d9 = c9, Ky = d9, u9 = Zc, U1 = Object.prototype, p9 = U1.hasOwnProperty, m9 = U1.propertyIsEnumerable, f9 = Ky(/* @__PURE__ */ function() {
  return arguments;
}()) ? Ky : function(e) {
  return u9(e) && p9.call(e, "callee") && !m9.call(e, "callee");
}, V1 = f9, h9 = Array.isArray, K1 = h9, g9 = 9007199254740991;
function b9(e) {
  return typeof e == "number" && e > -1 && e % 1 == 0 && e <= g9;
}
var H1 = b9, v9 = Og, y9 = H1;
function C9(e) {
  return e != null && y9(e.length) && !v9(e);
}
var Ig = C9, x9 = Ig, S9 = Zc;
function w9(e) {
  return S9(e) && x9(e);
}
var O9 = w9, bu = { exports: {} };
function k9() {
  return !1;
}
var T9 = k9;
bu.exports;
(function(e, t) {
  var n = pl, r = T9, i = t && !t.nodeType && t, s = i && !0 && e && !e.nodeType && e, o = s && s.exports === i, l = o ? n.Buffer : void 0, c = l ? l.isBuffer : void 0, d = c || r;
  e.exports = d;
})(bu, bu.exports);
var z1 = bu.exports, I9 = pp, E9 = j1, P9 = Zc, _9 = "[object Object]", R9 = Function.prototype, A9 = Object.prototype, q1 = R9.toString, L9 = A9.hasOwnProperty, N9 = q1.call(Object);
function D9(e) {
  if (!P9(e) || I9(e) != _9)
    return !1;
  var t = E9(e);
  if (t === null)
    return !0;
  var n = L9.call(t, "constructor") && t.constructor;
  return typeof n == "function" && n instanceof n && q1.call(n) == N9;
}
var M9 = D9, F9 = pp, $9 = H1, j9 = Zc, B9 = "[object Arguments]", U9 = "[object Array]", V9 = "[object Boolean]", K9 = "[object Date]", H9 = "[object Error]", z9 = "[object Function]", q9 = "[object Map]", G9 = "[object Number]", W9 = "[object Object]", X9 = "[object RegExp]", Y9 = "[object Set]", J9 = "[object String]", Z9 = "[object WeakMap]", Q9 = "[object ArrayBuffer]", ej = "[object DataView]", tj = "[object Float32Array]", nj = "[object Float64Array]", aj = "[object Int8Array]", rj = "[object Int16Array]", ij = "[object Int32Array]", sj = "[object Uint8Array]", oj = "[object Uint8ClampedArray]", lj = "[object Uint16Array]", cj = "[object Uint32Array]", hn = {};
hn[tj] = hn[nj] = hn[aj] = hn[rj] = hn[ij] = hn[sj] = hn[oj] = hn[lj] = hn[cj] = !0;
hn[B9] = hn[U9] = hn[Q9] = hn[V9] = hn[ej] = hn[K9] = hn[H9] = hn[z9] = hn[q9] = hn[G9] = hn[W9] = hn[X9] = hn[Y9] = hn[J9] = hn[Z9] = !1;
function dj(e) {
  return j9(e) && $9(e.length) && !!hn[F9(e)];
}
var uj = dj;
function pj(e) {
  return function(t) {
    return e(t);
  };
}
var mj = pj, vu = { exports: {} };
vu.exports;
(function(e, t) {
  var n = L1, r = t && !t.nodeType && t, i = r && !0 && e && !e.nodeType && e, s = i && i.exports === r, o = s && n.process, l = function() {
    try {
      var c = i && i.require && i.require("util").types;
      return c || o && o.binding && o.binding("util");
    } catch {
    }
  }();
  e.exports = l;
})(vu, vu.exports);
var fj = vu.exports, hj = uj, gj = mj, Hy = fj, zy = Hy && Hy.isTypedArray, bj = zy ? gj(zy) : hj, G1 = bj;
function vj(e, t) {
  if (!(t === "constructor" && typeof e[t] == "function") && t != "__proto__")
    return e[t];
}
var W1 = vj, km, qy;
function yj() {
  if (qy) return km;
  qy = 1;
  var e = Tg, t = cp, n = Object.prototype, r = n.hasOwnProperty;
  function i(s, o, l) {
    var c = s[o];
    (!(r.call(s, o) && t(c, l)) || l === void 0 && !(o in s)) && e(s, o, l);
  }
  return km = i, km;
}
var Cj = yj(), xj = Tg;
function Sj(e, t, n, r) {
  var i = !n;
  n || (n = {});
  for (var s = -1, o = t.length; ++s < o; ) {
    var l = t[s], c = r ? r(n[l], e[l], l, n, e) : void 0;
    c === void 0 && (c = e[l]), i ? xj(n, l, c) : Cj(n, l, c);
  }
  return n;
}
var wj = Sj;
function Oj(e, t) {
  for (var n = -1, r = Array(e); ++n < e; )
    r[n] = t(n);
  return r;
}
var kj = Oj, Tj = 9007199254740991, Ij = /^(?:0|[1-9]\d*)$/;
function Ej(e, t) {
  var n = typeof e;
  return t = t ?? Tj, !!t && (n == "number" || n != "symbol" && Ij.test(e)) && e > -1 && e % 1 == 0 && e < t;
}
var X1 = Ej, Pj = kj, _j = V1, Rj = K1, Aj = z1, Lj = X1, Nj = G1, Dj = Object.prototype, Mj = Dj.hasOwnProperty;
function Fj(e, t) {
  var n = Rj(e), r = !n && _j(e), i = !n && !r && Aj(e), s = !n && !r && !i && Nj(e), o = n || r || i || s, l = o ? Pj(e.length, String) : [], c = l.length;
  for (var d in e)
    (t || Mj.call(e, d)) && !(o && // Safari 9 has enumerable `arguments.length` in strict mode.
    (d == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
    i && (d == "offset" || d == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
    s && (d == "buffer" || d == "byteLength" || d == "byteOffset") || // Skip index properties.
    Lj(d, c))) && l.push(d);
  return l;
}
var $j = Fj;
function jj(e) {
  var t = [];
  if (e != null)
    for (var n in Object(e))
      t.push(n);
  return t;
}
var Bj = jj, Uj = no, Vj = B1, Kj = Bj, Hj = Object.prototype, zj = Hj.hasOwnProperty;
function qj(e) {
  if (!Uj(e))
    return Kj(e);
  var t = Vj(e), n = [];
  for (var r in e)
    r == "constructor" && (t || !zj.call(e, r)) || n.push(r);
  return n;
}
var Gj = qj, Wj = $j, Xj = Gj, Yj = Ig;
function Jj(e) {
  return Yj(e) ? Wj(e, !0) : Xj(e);
}
var Y1 = Jj, Zj = wj, Qj = Y1;
function eB(e) {
  return Zj(e, Qj(e));
}
var tB = eB, Gy = $1, nB = N7, aB = V7, rB = H7, iB = r9, Wy = V1, Xy = K1, sB = O9, oB = z1, lB = Og, cB = no, dB = M9, uB = G1, Yy = W1, pB = tB;
function mB(e, t, n, r, i, s, o) {
  var l = Yy(e, n), c = Yy(t, n), d = o.get(c);
  if (d) {
    Gy(e, n, d);
    return;
  }
  var u = s ? s(l, c, n + "", e, t, o) : void 0, p = u === void 0;
  if (p) {
    var m = Xy(c), f = !m && oB(c), g = !m && !f && uB(c);
    u = c, m || f || g ? Xy(l) ? u = l : sB(l) ? u = rB(l) : f ? (p = !1, u = nB(c, !0)) : g ? (p = !1, u = aB(c, !0)) : u = [] : dB(c) || Wy(c) ? (u = l, Wy(l) ? u = pB(l) : (!cB(l) || lB(l)) && (u = iB(c))) : p = !1;
  }
  p && (o.set(c, u), i(u, c, r, s, o), o.delete(c)), Gy(e, n, u);
}
var fB = mB, hB = S7, gB = $1, bB = L7, vB = fB, yB = no, CB = Y1, xB = W1;
function J1(e, t, n, r, i) {
  e !== t && bB(t, function(s, o) {
    if (i || (i = new hB()), yB(s))
      vB(e, t, o, n, J1, r, i);
    else {
      var l = r ? r(xB(e, o), s, o + "", e, t, i) : void 0;
      l === void 0 && (l = s), gB(e, o, l);
    }
  }, CB);
}
var SB = J1;
function wB(e) {
  return e;
}
var Z1 = wB;
function OB(e, t, n) {
  switch (n.length) {
    case 0:
      return e.call(t);
    case 1:
      return e.call(t, n[0]);
    case 2:
      return e.call(t, n[0], n[1]);
    case 3:
      return e.call(t, n[0], n[1], n[2]);
  }
  return e.apply(t, n);
}
var kB = OB, TB = kB, Jy = Math.max;
function IB(e, t, n) {
  return t = Jy(t === void 0 ? e.length - 1 : t, 0), function() {
    for (var r = arguments, i = -1, s = Jy(r.length - t, 0), o = Array(s); ++i < s; )
      o[i] = r[t + i];
    i = -1;
    for (var l = Array(t + 1); ++i < t; )
      l[i] = r[i];
    return l[t] = n(o), TB(e, this, l);
  };
}
var EB = IB, Tm, Zy;
function PB() {
  if (Zy) return Tm;
  Zy = 1;
  function e(t) {
    return function() {
      return t;
    };
  }
  return Tm = e, Tm;
}
var _B = PB(), Qy = F1, RB = Z1, AB = Qy ? function(e, t) {
  return Qy(e, "toString", {
    configurable: !0,
    enumerable: !1,
    value: _B(t),
    writable: !0
  });
} : RB, LB = AB, NB = 800, DB = 16, MB = Date.now;
function FB(e) {
  var t = 0, n = 0;
  return function() {
    var r = MB(), i = DB - (r - n);
    if (n = r, i > 0) {
      if (++t >= NB)
        return arguments[0];
    } else
      t = 0;
    return e.apply(void 0, arguments);
  };
}
var $B = FB, jB = LB, BB = $B, UB = BB(jB), VB = UB, KB = Z1, HB = EB, zB = VB;
function qB(e, t) {
  return zB(HB(e, t, KB), e + "");
}
var GB = qB, WB = cp, XB = Ig, YB = X1, JB = no;
function ZB(e, t, n) {
  if (!JB(n))
    return !1;
  var r = typeof t;
  return (r == "number" ? XB(n) && YB(t, n.length) : r == "string" && t in n) ? WB(n[t], e) : !1;
}
var QB = ZB, eU = GB, tU = QB;
function nU(e) {
  return eU(function(t, n) {
    var r = -1, i = n.length, s = i > 1 ? n[i - 1] : void 0, o = i > 2 ? n[2] : void 0;
    for (s = e.length > 3 && typeof s == "function" ? (i--, s) : void 0, o && tU(n[0], n[1], o) && (s = i < 3 ? void 0 : s, i = 1), t = Object(t); ++r < i; ) {
      var l = n[r];
      l && e(t, l, r, s);
    }
    return t;
  });
}
var aU = nU, rU = SB, iU = aU, sU = iU(function(e, t, n, r) {
  rU(e, t, n, r);
}), oU = sU;
const Im = /* @__PURE__ */ Vh(oU);
function Q1(...e) {
  const t = e[0], n = e.slice(1);
  return n.length ? Im(Im({}, t), ...n, (r, i, s) => {
    if (s === "children")
      return r && i ? h.cloneElement(r, {
        children: i
      }) : Object.assign(Object.assign({}, i), r);
    if (s === "className")
      return j(r, i);
  }) : Im({}, t);
}
const eO = {
  name: "--pf-v5-c-table__sticky-cell--MinWidth",
  value: "12.5rem",
  var: "var(--pf-v5-c-table__sticky-cell--MinWidth)"
}, tO = {
  name: "--pf-v5-c-table__sticky-cell--Left",
  value: "0",
  var: "var(--pf-v5-c-table__sticky-cell--Left)"
}, nO = {
  name: "--pf-v5-c-table__sticky-cell--Right",
  value: "0",
  var: "var(--pf-v5-c-table__sticky-cell--Right)"
}, lU = (e) => {
  var { children: t, className: n, component: r = "th", dataLabel: i, scope: s = "col", textCenter: o = !1, sort: l = null, modifier: c, select: d = null, expand: u = null, tooltip: p = "", tooltipProps: m, onMouseEnter: f = () => {
  }, width: g, visibility: b, innerRef: v, info: y, isStickyColumn: C = !1, hasRightBorder: S = !1, hasLeftBorder: P = !1, stickyMinWidth: w = "120px", stickyLeftOffset: A, stickyRightOffset: k, isSubheader: T = !1, screenReaderText: O, "aria-label": I } = e, _ = se(e, ["children", "className", "component", "dataLabel", "scope", "textCenter", "sort", "modifier", "select", "expand", "tooltip", "tooltipProps", "onMouseEnter", "width", "visibility", "innerRef", "info", "isStickyColumn", "hasRightBorder", "hasLeftBorder", "stickyMinWidth", "stickyLeftOffset", "stickyRightOffset", "isSubheader", "screenReaderText", "aria-label"]);
  !t && !O && !I && console.warn("Th: Table headers must have an accessible name. If the Th is intended to be visually empty, pass in screenReaderText. If the Th contains only non-text, interactive content such as a checkbox or expand toggle, pass in an aria-label.");
  const [E, L] = h.useState(!1), [F, R] = h.useState(!1), M = v || h.createRef(), U = (Ie) => {
    Ie.target.offsetWidth < Ie.target.scrollWidth ? !E && L(!0) : E && L(!1), f(Ie);
  };
  let K = null;
  l && (l.isFavorites ? K = vF({
    onSort: l?.onSort,
    columnIndex: l.columnIndex,
    sortBy: l.sortBy,
    tooltip: p,
    tooltipProps: m
  })() : K = I1(t, {
    columnIndex: l.columnIndex,
    column: {
      extraParams: {
        sortBy: l.sortBy,
        onSort: l?.onSort
      }
    },
    tooltip: p,
    tooltipProps: m
  }));
  const G = d ? k1(t, {
    rowData: {
      selected: d.isSelected,
      disableSelection: d?.isDisabled,
      props: d?.props
    },
    column: {
      extraParams: {
        onSelect: d?.onSelect,
        selectVariant: "checkbox",
        allRowsSelected: d.isSelected,
        isHeaderSelectDisabled: !!d.isHeaderSelectDisabled
      }
    },
    tooltip: p,
    tooltipProps: m
  }) : null, N = u ? E1(t, {
    column: {
      extraParams: {
        onCollapse: u?.onToggle,
        allRowsExpanded: !u.areAllExpanded,
        collapseAllAriaLabel: ""
      }
    }
  }) : null, $ = g ? Ft(g)() : null, q = b ? _1(...b.map((Ie) => P1[Ie]))() : null;
  let V = K?.children || G?.children || N?.children || t, B = null;
  y && (B = kF(y)(V), V = B.children);
  const Z = Q1(K, G, N, $, q, B), {
    // ignore the merged children since we transform them ourselves so we can wrap it with info
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    children: X = null,
    // selectable adds this but we don't want it
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    isVisible: Q = null,
    className: ie = "",
    component: me = r
  } = Z, ee = se(Z, ["children", "isVisible", "className", "component"]);
  h.useEffect(() => {
    R(M.current.offsetWidth < M.current.scrollWidth);
  }, [M]);
  const ce = h.createElement(me, Object.assign({ tabIndex: l || d || !F ? -1 : 0, onFocus: p !== null ? U : f, onBlur: () => L(!1), "data-label": i, onMouseEnter: p !== null ? U : f, scope: r === "th" ? s : null, ref: M, "aria-label": I, className: j(Ze.tableTh, n, o && Ze.modifiers.center, T && Ze.tableSubhead, C && Po.tableStickyCell, S && Po.modifiers.borderRight, P && Po.modifiers.borderLeft, c && Ze.modifiers[c], ie) }, ee, _, C && {
    style: Object.assign({ [eO.name]: w || void 0, [tO.name]: A || 0, [nO.name]: k || 0 }, _.style)
  }), V || O && h.createElement("span", { className: "pf-v5-screen-reader" }, O));
  return p !== null && (p === "" ? typeof V == "string" : !0) && !(K || G) && E ? h.createElement(
    h.Fragment,
    null,
    ce,
    h.createElement(Ht, Object.assign({ triggerRef: M, content: p || p === "" && t, isVisible: !0 }, m))
  ) : ce;
}, Ne = h.forwardRef((e, t) => h.createElement(lU, Object.assign({}, e, { innerRef: t })));
Ne.displayName = "Th";
const cU = (e, { rowData: t }) => {
  const { id: n } = t;
  return {
    className: "",
    children: h.createElement(w1, { id: n })
  };
}, dU = (e) => {
  var { children: t, className: n, isActionCell: r = !1, component: i = "td", dataLabel: s, textCenter: o = !1, modifier: l, select: c = null, actions: d = null, expand: u = null, treeRow: p = null, compoundExpand: m = null, noPadding: f, width: g, visibility: b, innerRef: v, favorites: y = null, draggableRow: C = null, tooltip: S = "", onMouseEnter: P = () => {
  }, isStickyColumn: w = !1, hasRightBorder: A = !1, hasLeftBorder: k = !1, stickyMinWidth: T = "120px", stickyLeftOffset: O, stickyRightOffset: I } = e, _ = se(e, ["children", "className", "isActionCell", "component", "dataLabel", "textCenter", "modifier", "select", "actions", "expand", "treeRow", "compoundExpand", "noPadding", "width", "visibility", "innerRef", "favorites", "draggableRow", "tooltip", "onMouseEnter", "isStickyColumn", "hasRightBorder", "hasLeftBorder", "stickyMinWidth", "stickyLeftOffset", "stickyRightOffset"]);
  const [E, L] = h.useState(!1), [F, R] = h.useState(!1), M = v || h.createRef(), U = (Se) => {
    Se.target.offsetWidth < Se.target.scrollWidth ? !E && L(!0) : E && L(!1), P(Se);
  }, K = c ? k1(t, {
    rowIndex: c.rowIndex,
    rowData: {
      selected: c.isSelected,
      disableSelection: c?.isDisabled,
      props: c?.props
    },
    column: {
      extraParams: {
        onSelect: c?.onSelect,
        selectVariant: c.variant || "checkbox"
      }
    }
  }) : null, G = y ? TF(null, {
    rowIndex: y?.rowIndex,
    rowData: {
      favorited: y.isFavorited,
      favoritesProps: y?.props
    },
    column: {
      extraParams: {
        onFavorite: y?.onFavorite
      }
    }
  }) : null, N = C !== null ? cU(null, {
    rowData: {
      id: C.id
    }
  }) : null, $ = d ? yF(d.items, null, null) : null, q = $ ? $(null, {
    rowIndex: d?.rowIndex,
    rowData: {
      disableActions: d?.isDisabled
    },
    column: {
      extraParams: {
        dropdownPosition: d?.dropdownPosition,
        dropdownDirection: d?.dropdownDirection,
        menuAppendTo: d?.menuAppendTo,
        actionsToggle: d?.actionsToggle
      }
    }
  }) : null, V = u !== null ? E1(null, {
    rowIndex: u.rowIndex,
    columnIndex: u?.columnIndex,
    rowData: {
      isOpen: u.isExpanded
    },
    column: {
      extraParams: {
        onCollapse: u?.onToggle,
        expandId: u?.expandId
      }
    }
  }) : null, B = m !== null ? wF({
    title: t,
    props: {
      isOpen: m.isExpanded
    }
  }, {
    rowIndex: m?.rowIndex,
    columnIndex: m?.columnIndex,
    column: {
      extraParams: {
        onExpand: m?.onToggle,
        expandId: m?.expandId
      }
    }
  }) : null, Z = g ? Ft(g)() : null, X = b ? _1(...b.map((Se) => P1[Se]))() : null, Q = p !== null ? IF(p.onCollapse, p.onCheckChange, p.onToggleRowDetails)({
    title: t
  }, {
    rowIndex: p.rowIndex,
    rowData: {
      props: p.props
    }
  }) : null, ie = Q1(K, q, V, B, Z, X, G, Q, N), {
    // selectable adds this but we don't want it
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    isVisible: me = null,
    children: ee = null,
    className: ce = "",
    component: ae = i
  } = ie, Oe = se(ie, ["isVisible", "children", "className", "component"]), Ie = n && n.includes(Ca.tableTreeViewTitleCell) || ce && ce.includes(Ca.tableTreeViewTitleCell);
  h.useEffect(() => {
    R(M.current.offsetWidth < M.current.scrollWidth);
  }, [M]);
  const Me = h.createElement(ae, Object.assign({ tabIndex: (c || !F) && l !== "truncate" ? -1 : 0 }, !Ie && { "data-label": s }, { onFocus: S !== null ? U : P, onBlur: () => L(!1), onMouseEnter: S !== null ? U : P, className: j(Ze.tableTd, n, r && Ze.tableAction, o && Ze.modifiers.center, f && Ze.modifiers.noPadding, w && Po.tableStickyCell, A && Po.modifiers.borderRight, k && Po.modifiers.borderLeft, Ze.modifiers[l], N && Ze.tableDraggable, ce), ref: M }, Oe, _, w && {
    style: Object.assign({ [eO.name]: T || void 0, [tO.name]: O || 0, [nO.name]: I || 0 }, _.style)
  }), ee || t);
  return S !== null && (S === "" ? typeof t == "string" : !0) && E ? h.createElement(
    h.Fragment,
    null,
    Me,
    h.createElement(Ht, { triggerRef: M, content: S || S === "" && t, isVisible: !0 })
  ) : Me;
}, ke = h.forwardRef((e, t) => h.createElement(dU, Object.assign({}, e, { innerRef: t })));
ke.displayName = "Td";
function Lr(e, t) {
  const n = Wx(t);
  return n.displayName = e, n;
}
const uU = ["error", "errorMessage"], Em = "error_description";
function pU(e) {
  if (typeof e == "string")
    return e;
  if (e instanceof Zo)
    return hU(e.responseData);
  if (e instanceof Error)
    return e.message;
  throw new Error("Unable to determine error message.");
}
function mU(e) {
  if (!(e instanceof Zo))
    return;
  const t = e.responseData;
  return fU(t);
}
function fU(e) {
  if (typeof e == "object" && e !== null && Em in e && typeof e[Em] == "string")
    return e[Em];
}
function hU(e) {
  if (!(typeof e != "object" || e === null))
    for (const t of uU) {
      const n = e[t];
      if (typeof n == "string")
        return n;
    }
}
const $f = () => Math.floor(Math.random() * 1e3);
function gU(e) {
  return e != null;
}
function Nr(e) {
  const t = Xx(e);
  if (gU(t))
    return t;
  throw new Error(
    `No provider found for ${e.displayName ? `the '${e.displayName}'` : "an unknown"} context, make sure it is included in your component hierarchy.`
  );
}
function aO() {
  const e = Ct(!1), t = Ct(/* @__PURE__ */ new Set());
  ze(() => (e.current = !1, () => {
    e.current = !0, n();
  }), []);
  function n() {
    t.current.forEach((r) => clearTimeout(r)), t.current.clear();
  }
  return bn((r, i) => {
    if (e.current)
      throw new Error("Can't schedule a timeout on an unmounted component.");
    const s = Number(setTimeout(o, i));
    t.current.add(s);
    function o() {
      t.current.delete(s), r();
    }
    return function() {
      clearTimeout(s), t.current.delete(s);
    };
  }, []);
}
function bU({ alerts: e, onCloseAlert: t }) {
  return /* @__PURE__ */ a(
    AS,
    {
      "data-testid": "global-alerts",
      isToast: !0,
      style: { whiteSpace: "pre-wrap" },
      children: e.map(({ id: n, variant: r, message: i, description: s }, o) => /* @__PURE__ */ a(
        En,
        {
          "data-testid": o === 0 ? "last-alert" : void 0,
          isLiveRegion: !0,
          variant: pe[r],
          component: "p",
          variantLabel: "",
          title: i,
          actionClose: /* @__PURE__ */ a(
            Sh,
            {
              title: i,
              onClose: () => t(n)
            }
          ),
          children: s && /* @__PURE__ */ a("p", { children: s })
        },
        n
      ))
    }
  );
}
const vU = 8e3, rO = Lr(
  "AlertContext",
  void 0
), we = () => Nr(rO), yU = ({ children: e }) => {
  const { t } = H(), n = aO(), [r, i] = D([]), s = (d) => i((u) => u.filter((p) => p.id !== d)), o = bn(
    (d, u = pe.success, p) => {
      const m = {
        id: $f(),
        message: d,
        variant: u,
        description: p
      };
      i((f) => [m, ...f]), n(() => s(m.id), vU);
    },
    [n]
  ), l = bn(
    (d, u) => {
      const p = t(d, { error: pU(u) }), m = mU(u);
      o(p, pe.danger, m);
    },
    [o, t]
  ), c = nt(() => ({ addAlert: o, addError: l }), [o, l]);
  return /* @__PURE__ */ x(rO.Provider, { value: c, children: [
    /* @__PURE__ */ a(bU, { alerts: r, onCloseAlert: s }),
    e
  ] });
}, CU = (e) => {
  const { t } = H(), n = e.error, r = xU(n);
  function i() {
    location.href = location.origin + location.pathname;
  }
  return /* @__PURE__ */ a(zu, { children: /* @__PURE__ */ a(
    ft,
    {
      variant: Et.small,
      title: t("somethingWentWrong"),
      titleIconVariant: "danger",
      showClose: !1,
      isOpen: !0,
      actions: [
        /* @__PURE__ */ a(z, { variant: "primary", onClick: i, children: t("tryAgain") }, "tryAgain")
      ],
      children: /* @__PURE__ */ x(Rt, { children: [
        /* @__PURE__ */ a(tt, { children: t("somethingWentWrongDescription") }),
        r && /* @__PURE__ */ a(tt, { component: Qt.small, children: r })
      ] })
    }
  ) });
};
function xU(e) {
  return typeof e == "string" ? e : e instanceof Error ? e.message : null;
}
function SU(e, t, n) {
  const [r, i] = D(
    () => e.getItem(t) ?? n
  ), s = bn((o) => {
    i(o), e.setItem(t, o);
  }, []);
  return ze(() => {
    i(e.getItem(t) ?? n), window.addEventListener("storage", o);
    function o(l) {
      l.storageArea === e && (l.key === null || l.key === t) && i(l.newValue ?? n);
    }
    return () => window.removeEventListener("storage", o);
  }, [e, t]), [r, s];
}
function Eg(e, t, n) {
  const r = nt(
    () => JSON.stringify(n),
    [n]
  ), [i, s] = SU(
    e,
    t,
    r
  ), o = nt(() => JSON.parse(i), [i]), l = bn(
    (c) => s(JSON.stringify(c)),
    []
  );
  return [o, l];
}
const iO = Lr(
  "HelpContext",
  void 0
), Dr = () => Nr(iO), wU = ({ children: e }) => {
  const [t, n] = Eg(localStorage, "helpEnabled", !0);
  function r() {
    n(!t);
  }
  return /* @__PURE__ */ a(iO.Provider, { value: { enabled: t, toggleHelp: r }, children: e });
}, OU = () => Wx(void 0);
let jf;
const La = () => {
  const e = Xx(jf);
  if (!e)
    throw Error(
      "no environment provider in the hierarchy make sure to add the provider"
    );
  return e;
}, see = ({
  environment: e,
  children: t
}) => {
  jf = OU();
  const n = Ct(!1), [r, i] = D(!1), [s, o] = D(), l = nt(() => {
    const c = new uw({
      url: e.serverBaseUrl,
      realm: e.realm,
      clientId: e.clientId
    });
    return c.onAuthLogout = () => c.login(), c;
  }, [e]);
  return ze(() => {
    n.current || (l.init({
      onLoad: "check-sso",
      pkceMethod: "S256",
      responseMode: "query"
    }).then(() => i(!0)).catch((c) => o(c)), n.current = !0);
  }, [l]), s ? /* @__PURE__ */ a(CU, { error: s }) : r ? /* @__PURE__ */ a(jf.Provider, { value: { environment: e, keycloak: l }, children: /* @__PURE__ */ a(yU, { children: /* @__PURE__ */ a(wU, { children: t }) }) }) : /* @__PURE__ */ a(ti, {});
};
function kU() {
  const e = document.getElementById("environment")?.textContent;
  if (typeof e != "string")
    throw new Error("Environment variables not found in the document.");
  try {
    return JSON.parse(e);
  } catch {
    throw new Error("Unable to parse environment variables as JSON.");
  }
}
const kn = ({ message: e, ...t }) => /* @__PURE__ */ a(sl, { ...t, children: /* @__PURE__ */ a(Yr, { children: /* @__PURE__ */ a(Jr, { icon: /* @__PURE__ */ a(us, {}), variant: "error", children: e }) }) }), le = ({
  helpText: e,
  fieldLabelId: t,
  noVerticalAlign: n = !0,
  unWrap: r = !1
}) => {
  const { enabled: i } = Dr();
  return i ? /* @__PURE__ */ a(Rr, { bodyContent: e, children: /* @__PURE__ */ x(te, { children: [
    !r && /* @__PURE__ */ a(
      "button",
      {
        "data-testid": `help-label-${t}`,
        "aria-label": t,
        onClick: (s) => s.preventDefault(),
        className: "pf-v5-c-form__group-label-help",
        children: /* @__PURE__ */ a(Ii, { isInline: n, children: /* @__PURE__ */ a(Ls, {}) })
      }
    ),
    r && /* @__PURE__ */ a(Ii, { isInline: n, children: /* @__PURE__ */ a(Ls, {}) })
  ] }) }) : null;
};
function Pg(e) {
  if (!(typeof e > "u" || e instanceof RegExp))
    return typeof e == "object" ? e.value : e;
}
const ao = ({
  name: e,
  label: t,
  labelIcon: n,
  error: r,
  children: i,
  ...s
}) => /* @__PURE__ */ x(
  re,
  {
    label: t || e,
    fieldId: e,
    labelIcon: n ? /* @__PURE__ */ a(le, { helpText: n, fieldLabelId: e }) : void 0,
    ...s,
    children: [
      i,
      r && /* @__PURE__ */ a(kn, { "data-testid": `${e}-helper`, message: r.message })
    ]
  }
), ts = ({
  name: e,
  label: t,
  controller: n,
  labelIcon: r,
  ...i
}) => {
  const {
    control: s,
    formState: { errors: o }
  } = De();
  return /* @__PURE__ */ a(
    ao,
    {
      name: e,
      label: t,
      isRequired: n.rules?.required === !0,
      error: o[e],
      labelIcon: r,
      children: /* @__PURE__ */ a(
        be,
        {
          ...n,
          name: e,
          control: s,
          render: ({ field: l }) => {
            const c = !!n.rules?.required, d = Pg(n.rules?.min), u = l.value ?? n.defaultValue, p = (m) => l.onChange(
              d !== void 0 ? Math.max(m, Number(d)) : m
            );
            return /* @__PURE__ */ a(
              os,
              {
                ...i,
                id: e,
                value: u,
                validated: o[e] ? _n.error : _n.default,
                required: c,
                min: Number(d),
                max: Number(n.rules?.max),
                onPlus: () => p(u + 1),
                onMinus: () => p(u - 1),
                onChange: (m) => {
                  const f = Number(m.currentTarget.value);
                  p(isNaN(f) ? n.defaultValue : f);
                }
              }
            );
          }
        }
      )
    }
  );
}, TU = ({
  hasReveal: e = !0,
  innerRef: t,
  ...n
}) => {
  const { t: r } = H(), [i, s] = D(!0);
  return /* @__PURE__ */ x(nn, { children: [
    /* @__PURE__ */ a(dt, { isFill: !0, children: /* @__PURE__ */ a(
      gt,
      {
        ...n,
        type: i ? "password" : "text",
        ref: t
      }
    ) }),
    e && /* @__PURE__ */ a(
      z,
      {
        variant: "control",
        "aria-label": r("showPassword"),
        onClick: () => s(!i),
        children: i ? /* @__PURE__ */ a(iA, {}) : /* @__PURE__ */ a(aA, {})
      }
    )
  ] });
}, Ic = ah(
  (e, t) => /* @__PURE__ */ a(TU, { ...e, innerRef: t })
);
Ic.displayName = "PasswordInput";
const zo = (e) => {
  const { labelIcon: t, ...n } = e, r = !!e.rules?.required, i = e.defaultValue ?? "", { field: s, fieldState: o } = Ys({
    ...e,
    defaultValue: i
  });
  return /* @__PURE__ */ x(
    ao,
    {
      name: e.name,
      label: e.label,
      labelIcon: t,
      isRequired: r,
      error: o.error,
      children: [
        /* @__PURE__ */ a(
          Ic,
          {
            isRequired: r,
            id: e.name,
            "data-testid": e.name,
            validated: o.error ? _n.error : _n.default,
            isDisabled: e.isDisabled,
            ...n,
            ...s
          }
        ),
        e.helperText && /* @__PURE__ */ a(sl, { children: /* @__PURE__ */ a(Yr, { children: /* @__PURE__ */ a(Jr, { children: e.helperText }) }) })
      ]
    }
  );
}, IU = ({
  id: e,
  name: t,
  label: n,
  options: r,
  controller: i,
  labelIcon: s,
  ...o
}) => {
  const {
    control: l,
    formState: { errors: c }
  } = De(), [d, u] = D(!1), p = Pg(i.rules?.required) === !0;
  return /* @__PURE__ */ a(
    ao,
    {
      name: t,
      label: n,
      isRequired: p,
      error: Un(c, t),
      labelIcon: s,
      children: /* @__PURE__ */ a(
        be,
        {
          ...i,
          name: t,
          control: l,
          render: ({ field: { onChange: m, value: f } }) => /* @__PURE__ */ a(
            Dn,
            {
              ...o,
              onClick: () => u(!d),
              onOpenChange: () => u(!1),
              selected: Ql(r) ? r.filter(
                (g) => Array.isArray(f) ? f.includes(g.key) : f === g.key
              ).map((g) => g.value) : f,
              toggle: (g) => /* @__PURE__ */ a(
                ut,
                {
                  id: e || t.slice(t.lastIndexOf(".") + 1),
                  ref: g,
                  onClick: () => u(!d),
                  isExpanded: d,
                  isFullWidth: !0,
                  status: Un(c, t) ? Qi.danger : void 0,
                  "aria-label": "toggle",
                  children: Ql(r) ? r.find(
                    (b) => b.key === (Array.isArray(f) ? f[0] : f)
                  )?.value : f
                }
              ),
              onSelect: (g, b) => {
                const v = b?.toString();
                m(Array.isArray(f) ? [v] : v), u(!1);
              },
              isOpen: d,
              children: /* @__PURE__ */ a(ea, { children: r.map((g) => /* @__PURE__ */ a(Re, { value: ws(g), children: _g(g) ? g : g.value }, ws(g))) })
            }
          )
        }
      )
    }
  );
}, yd = (e) => _g(e) ? e : e.value, EU = ({
  id: e,
  name: t,
  label: n,
  options: r,
  controller: i,
  labelIcon: s,
  placeholderText: o,
  onFilter: l,
  variant: c,
  ...d
}) => {
  const {
    control: u,
    formState: { errors: p }
  } = De(), [m, f] = D(!1), [g, b] = D(""), [v, y] = D(0), C = Ct(), S = Pg(i.rules?.required) === !0, P = r.filter(
    (k) => yd(k).toLowerCase().startsWith(g.toLowerCase())
  ), w = nt(
    () => P.map((k, T) => /* @__PURE__ */ a(
      Re,
      {
        value: ws(k),
        isFocused: v === T,
        children: yd(k)
      },
      ws(k)
    )),
    [v, P]
  ), A = (k, T) => {
    const O = P[v];
    switch (f(!0), k.key) {
      case "Enter": {
        k.preventDefault(), c !== mt.typeaheadMulti ? b(yd(O)) : b(""), T.onChange(
          Array.isArray(T.value) ? [...T.value, ws(O)] : ws(O)
        ), f(!1), y(0);
        break;
      }
      case "Tab":
      case "Escape": {
        f(!1), T.onChange(void 0);
        break;
      }
      case "Backspace": {
        c === mt.typeahead && T.onChange("");
        break;
      }
      case "ArrowUp":
      case "ArrowDown": {
        k.preventDefault();
        let I = 0;
        k.key === "ArrowUp" && (v === 0 ? I = r.length - 1 : I = v - 1), k.key === "ArrowDown" && (v === r.length - 1 ? I = 0 : I = v + 1), y(I);
        break;
      }
    }
  };
  return /* @__PURE__ */ a(
    ao,
    {
      name: t,
      label: n,
      isRequired: S,
      error: Un(p, t),
      labelIcon: s,
      children: /* @__PURE__ */ a(
        be,
        {
          ...i,
          name: t,
          control: u,
          render: ({ field: k }) => /* @__PURE__ */ a(
            Dn,
            {
              ...d,
              onClick: () => f(!m),
              onOpenChange: () => f(!1),
              selected: Ql(r) ? r.filter(
                (T) => Array.isArray(k.value) ? k.value.includes(T.key) : k.value === T.key
              ).map((T) => T.value) : k.value,
              toggle: (T) => /* @__PURE__ */ a(
                ut,
                {
                  ref: T,
                  id: e || t.slice(t.lastIndexOf(".") + 1),
                  variant: "typeahead",
                  onClick: () => f(!m),
                  isExpanded: m,
                  isFullWidth: !0,
                  status: Un(p, t) ? Qi.danger : void 0,
                  children: /* @__PURE__ */ x(zs, { isPlain: !0, children: [
                    /* @__PURE__ */ a(
                      qs,
                      {
                        placeholder: o,
                        value: c === mt.typeahead && k.value ? Ql(r) ? r.find(
                          (O) => O.key === (Array.isArray(k.value) ? k.value[0] : k.value)
                        )?.value : k.value : g,
                        onClick: () => f(!m),
                        onChange: (O, I) => {
                          b(I), l?.(I);
                        },
                        onKeyDown: (O) => A(O, k),
                        autoComplete: "off",
                        innerRef: C,
                        role: "combobox",
                        isExpanded: m,
                        "aria-controls": "select-typeahead-listbox",
                        children: c === mt.typeaheadMulti && Array.isArray(k.value) && /* @__PURE__ */ a(vn, { "aria-label": "Current selections", children: k.value.map(
                          (O, I) => /* @__PURE__ */ a(
                            Vt,
                            {
                              onClick: (_) => {
                                _.stopPropagation(), k.onChange(
                                  k.value.filter(
                                    (E) => E !== ws(O)
                                  )
                                );
                              },
                              children: Ql(r) ? r.find((_) => O === _.key)?.value : yd(O)
                            },
                            I
                          )
                        ) })
                      }
                    ),
                    /* @__PURE__ */ a(Gs, { children: (!!g || k.value) && /* @__PURE__ */ a(
                      z,
                      {
                        variant: "plain",
                        onClick: () => {
                          b(""), k.onChange(""), C?.current?.focus();
                        },
                        "aria-label": "Clear input value",
                        children: /* @__PURE__ */ a(fa, { "aria-hidden": !0 })
                      }
                    ) })
                  ] })
                }
              ),
              onSelect: (T, O) => {
                T?.stopPropagation();
                const I = O?.toString();
                c === mt.typeaheadMulti && Array.isArray(k.value) ? k.value.includes(I) ? k.onChange(
                  k.value.filter((_) => _ !== I)
                ) : k.onChange([...k.value, I]) : (k.onChange(Array.isArray(k.value) ? [I] : I), f(!1));
              },
              isOpen: m,
              children: /* @__PURE__ */ a(ea, { children: w })
            }
          )
        }
      )
    }
  );
};
var mt = /* @__PURE__ */ ((e) => (e.single = "single", e.typeahead = "typeahead", e.typeaheadMulti = "typeaheadMulti", e))(mt || {});
const Ql = (e) => typeof e[0] != "string", _g = (e) => typeof e == "string", ws = (e) => _g(e) ? e : e.key, at = ({
  variant: e = "single",
  ...t
}) => e === "single" ? /* @__PURE__ */ a(IU, { ...t }) : /* @__PURE__ */ a(EU, { ...t, variant: e }), ro = ({
  labelOn: e,
  stringify: t,
  defaultValue: n,
  labelIcon: r,
  ...i
}) => {
  const s = n ?? (t ? "false" : !1), { control: o } = De();
  return /* @__PURE__ */ a(
    ao,
    {
      hasNoPaddingTop: !0,
      name: i.name,
      isRequired: i.rules?.required === !0,
      label: i.label,
      labelIcon: r,
      children: /* @__PURE__ */ a(
        be,
        {
          control: o,
          name: i.name,
          defaultValue: s,
          render: ({ field: { onChange: l, value: c } }) => /* @__PURE__ */ a(
            Je,
            {
              ...i,
              id: i.name,
              "data-testid": i.name,
              label: e,
              isChecked: t ? c === "true" : c,
              onChange: (d, u) => {
                const p = t ? u.toString() : u;
                i.onChange?.(d, u), l(p);
              }
            }
          )
        }
      )
    }
  );
}, pr = (e) => {
  const t = !!e.rules?.required, n = e.defaultValue ?? "", { field: r, fieldState: i } = Ys({
    ...e,
    defaultValue: n
  });
  return /* @__PURE__ */ a(
    ao,
    {
      isRequired: t,
      label: e.label,
      labelIcon: e.labelIcon,
      name: e.name,
      error: i.error,
      children: /* @__PURE__ */ a(
        Mi,
        {
          isRequired: t,
          id: e.name,
          "data-testid": e.name,
          validated: i.error ? _n.error : _n.default,
          isDisabled: e.isDisabled,
          ...r
        }
      )
    }
  );
}, ve = (e) => {
  const { labelIcon: t, helperText: n, ...r } = e, i = !!e.rules?.required, s = e.defaultValue ?? "", { field: o, fieldState: l } = Ys({
    ...e,
    defaultValue: s
  });
  return /* @__PURE__ */ x(
    ao,
    {
      name: e.name,
      label: e.label,
      labelIcon: t,
      isRequired: i,
      error: l.error,
      children: [
        /* @__PURE__ */ a(
          gt,
          {
            isRequired: i,
            id: e.name,
            "data-testid": e["data-testid"] || e.name,
            validated: l.error ? _n.error : _n.default,
            isDisabled: e.isDisabled,
            ...r,
            ...o
          }
        ),
        n && /* @__PURE__ */ a(sl, { children: /* @__PURE__ */ a(Yr, { children: /* @__PURE__ */ a(Jr, { children: n }) }) })
      ]
    }
  );
}, Rg = Mi, PU = ({ icon: e }) => {
  const t = _U(e);
  return /* @__PURE__ */ a(Ii, { size: "lg", children: /* @__PURE__ */ a(t, { alt: e }) });
};
function _U(e) {
  switch (e) {
    case "github":
      return vL;
    case "facebook":
      return hL;
    case "gitlab":
      return CL;
    case "google":
      return wL;
    case "linkedin":
    case "linkedin-openid-connect":
      return EL;
    case "openshift-v3":
    case "openshift-v4":
      return FL;
    case "stackoverflow":
      return HL;
    case "twitter":
      return JL;
    case "microsoft":
      return NL;
    case "bitbucket":
      return ZA;
    case "instagram":
      return TL;
    case "paypal":
      return jL;
    default:
      return iL;
  }
}
const RU = "_title_180i0_2", AU = {
  title: RU
}, sO = ({
  id: e,
  title: t,
  headingLevel: n = "h1",
  size: r = "xl",
  ...i
}) => /* @__PURE__ */ a(
  lr,
  {
    headingLevel: n,
    size: r,
    className: AU.title,
    id: e,
    tabIndex: 0,
    ...i,
    children: t
  }
), Zn = ({
  title: e,
  children: t,
  scrollId: n,
  className: r
}) => {
  const i = Fu();
  return /* @__PURE__ */ x(ka, { id: i, className: r, isFlat: !0, children: [
    /* @__PURE__ */ a(Uc, { className: "kc-form-panel__header", children: /* @__PURE__ */ a(Sr, { tabIndex: 0, children: /* @__PURE__ */ a(sO, { id: n, title: e }) }) }),
    /* @__PURE__ */ a(ma, { className: "kc-form-panel__body", children: t })
  ] });
}, LU = (e) => {
  const { title: t, children: n, scrollId: r, ...i } = e;
  return /* @__PURE__ */ a("section", { ...i, style: { marginTop: "var(--pf-v5-global--spacer--lg)" }, children: /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(sO, { id: r, title: t }),
    n
  ] }) });
}, NU = "_panel_1cdve_1", DU = "_sticky_1cdve_5", eC = {
  panel: NU,
  sticky: DU
}, oO = "kc-main-content-page-container", tC = (e) => e.replace(/\s+/g, "-"), gl = ({
  label: e,
  sections: t,
  borders: n = !1,
  ...r
}) => {
  const i = nt(
    () => t.filter(({ isHidden: s }) => !s),
    [t]
  );
  return /* @__PURE__ */ x(Ha, { hasGutter: !0, ...r, children: [
    /* @__PURE__ */ a(Wt, { md: 8, sm: 12, children: i.map(({ title: s, panel: o }) => {
      const l = tC(s.toLowerCase());
      return /* @__PURE__ */ a(Ea, { children: n ? /* @__PURE__ */ a(
        Zn,
        {
          scrollId: l,
          title: s,
          className: eC.panel,
          children: o
        }
      ) : /* @__PURE__ */ a(LU, { scrollId: l, title: s, children: o }) }, s);
    }) }),
    /* @__PURE__ */ a(Wt, { md: 4, sm: 12, order: { default: "-1", md: "1" }, children: /* @__PURE__ */ a(Te, { className: eC.sticky, children: /* @__PURE__ */ a(
      F0,
      {
        isVertical: !0,
        scrollableSelector: `#${oO}`,
        label: e,
        offset: 100,
        children: i.map(({ title: s }) => {
          const o = tC(s.toLowerCase());
          return (
            // note that JumpLinks currently does not work with spaces in the href
            /* @__PURE__ */ a(
              hc,
              {
                href: `#${o}`,
                "data-testid": `jump-link-${o}`,
                children: s
              },
              s
            )
          );
        })
      }
    ) }) })
  ] });
}, MU = (e, t, n) => (e.isValid || n) && (e.isDirty || t) && !e.isLoading && !e.isValidating && !e.isSubmitting, io = ({
  formState: e,
  isDisabled: t = !1,
  allowInvalid: n = !1,
  allowNonDirty: r = !1,
  children: i,
  ...s
}) => /* @__PURE__ */ a(
  z,
  {
    variant: "primary",
    isDisabled: e && !MU(e, r, n) || t,
    ...s,
    type: "submit",
    children: i
  }
), FU = (e) => {
  try {
    return new Intl.DisplayNames([e], { type: "language" }).of(e);
  } catch {
    return e;
  }
}, $U = ({
  t: e,
  form: t,
  supportedLocales: n,
  currentLocale: r
}) => {
  const i = nt(
    () => n.map((s) => ({
      key: s,
      value: e(`locale_${s}`, FU(s) ?? s)
    })).sort((s, o) => s.value.localeCompare(o.value, r)),
    [n, r, e]
  );
  return i.length ? /* @__PURE__ */ a(He, { ...t, children: /* @__PURE__ */ a(
    at,
    {
      "data-testid": "locale-select",
      name: "attributes.locale",
      label: e("selectALocale"),
      controller: { defaultValue: "" },
      options: i,
      variant: i.length >= 10 ? "typeahead" : "single"
    }
  ) }) : null;
}, Bf = (e) => e?.includes("${"), Uf = (e) => e.substring(2, e.length - 1), Aa = (e, t, n, r) => {
  const i = t || n, s = Bf(i) ? Uf(i) : i, o = r ? `${r}.${s}` : s;
  return e(o || "");
}, Vf = (e, t) => Aa(e, t.displayName, t.name), jU = ["username", "firstName", "lastName", "email"], lO = (e) => e && jU.includes(e), fs = (e) => `${lO(e) ? "" : "attributes."}${e?.replaceAll(
  ".",
  "🍺"
)}`;
function Kf(e, t, n) {
  (e.responseData.errors !== void 0 ? e.responseData.errors : [e.responseData]).forEach((r) => {
    const i = Object.assign(
      {},
      r.params?.map((s) => Bf(s.toString()) ? n(Uf(s)) : s)
    );
    t(fs(r.field), {
      message: n(
        Bf(r.errorMessage) ? Uf(r.errorMessage) : r.errorMessage,
        {
          ...i,
          defaultValue: r.errorMessage || r.field
        }
      ),
      type: "server"
    });
  });
}
function hp({
  required: e,
  validators: t
}) {
  return e || BU(t);
}
function BU(e) {
  return e && "length" in e && "min" in e.length && typeof e.length.min == "number" ? e.length.min > 0 : !1;
}
function cO(e) {
  if (typeof e != "object" || e === null || !("responseData" in e))
    return !1;
  const { responseData: t } = e;
  return nC(t) ? !0 : typeof t != "object" || t === null || !("errors" in t) || !Array.isArray(t.errors) ? !1 : t.errors.every(nC);
}
function nC(e) {
  return !(typeof e != "object" || e === null || !("field" in e) || typeof e.field != "string" || !("errorMessage" in e) || typeof e.errorMessage != "string");
}
const Qc = ({
  t: e,
  form: t,
  attribute: n,
  renderer: r,
  children: i
}) => {
  const s = Aa(
    e,
    n.annotations?.inputHelperTextBefore
  ), {
    formState: { errors: o }
  } = t, l = r?.(n), c = Un(o, fs(n.name));
  return /* @__PURE__ */ x(
    re,
    {
      label: Vf(e, n) || "",
      fieldId: n.name,
      isRequired: hp(n),
      labelIcon: s ? /* @__PURE__ */ a(le, { helpText: s, fieldLabelId: n.name }) : void 0,
      children: [
        l ? /* @__PURE__ */ x(nn, { children: [
          i,
          l
        ] }) : i,
        c && /* @__PURE__ */ a(
          kn,
          {
            "data-testid": `${n.name}-helper`,
            message: c.message
          }
        )
      ]
    },
    n.name
  );
}, UU = ({
  t: e,
  form: t,
  attribute: n,
  renderer: r,
  ...i
}) => /* @__PURE__ */ a(Qc, { t: e, form: t, attribute: n, renderer: r, children: /* @__PURE__ */ a(
  VU,
  {
    t: e,
    form: t,
    "aria-label": Vf(e, n),
    name: fs(n.name),
    addButtonLabel: e("addMultivaluedLabel", {
      fieldLabel: Vf(e, n)
    }),
    ...i
  }
) }), VU = ({
  t: e,
  name: t,
  inputType: n,
  form: r,
  addButtonLabel: i,
  isDisabled: s = !1,
  defaultValue: o,
  id: l,
  ...c
}) => {
  const { register: d, setValue: u, control: p } = r, m = rt({
    name: t,
    control: p,
    defaultValue: o || ""
  }), f = nt(() => Array.isArray(m) && m.length !== 0 ? m : o || [""], [m]), g = (S) => {
    y([...f.slice(0, S), ...f.slice(S + 1)]);
  }, b = () => {
    y([...f, ""]);
  }, v = (S, P) => {
    y([...f.slice(0, S), P, ...f.slice(S + 1)]);
  }, y = (S) => {
    const P = S.flatMap((w) => w);
    u(t, P, {
      shouldDirty: !0
    });
  }, C = n.startsWith("html") ? n.substring(6) : "text";
  return ze(() => {
    d(t);
  }, [d]), /* @__PURE__ */ a("div", { id: l, children: f.map((S, P) => /* @__PURE__ */ x(Ea, { children: [
    /* @__PURE__ */ x(nn, { children: [
      /* @__PURE__ */ a(dt, { isFill: !0, children: /* @__PURE__ */ a(
        gt,
        {
          "data-testid": t + P,
          onChange: (w, A) => v(P, A),
          name: `${t}.${P}.value`,
          value: S,
          isDisabled: s,
          type: C,
          ...c
        }
      ) }),
      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
        z,
        {
          "data-testid": "remove" + P,
          variant: xe.link,
          onClick: () => g(P),
          tabIndex: -1,
          "aria-label": e("remove"),
          isDisabled: f.length === 1 || s,
          children: /* @__PURE__ */ a($i, {})
        }
      ) })
    ] }),
    P === f.length - 1 && /* @__PURE__ */ x(
      z,
      {
        variant: xe.link,
        onClick: b,
        tabIndex: -1,
        "aria-label": e("add"),
        "data-testid": "addValue",
        isDisabled: !S || s,
        children: [
          /* @__PURE__ */ a(_a, {}),
          " ",
          e(i || "add")
        ]
      }
    )
  ] }, P)) });
}, aC = (e) => {
  const { form: t, inputType: n, attribute: r } = e, i = hp(r), s = n.startsWith("multiselect"), o = s ? Zt : sn, l = r.validators?.options?.options || [], c = r.annotations?.inputOptionLabels || {}, d = r.annotations?.inputOptionLabelsI18nPrefix;
  return /* @__PURE__ */ a(Qc, { ...e, children: /* @__PURE__ */ a(
    be,
    {
      name: fs(r.name),
      control: t.control,
      defaultValue: "",
      render: ({ field: u }) => /* @__PURE__ */ a(te, { children: l.map((p) => /* @__PURE__ */ a(
        o,
        {
          id: p,
          "data-testid": p,
          label: Aa(e.t, c[p], p, d),
          value: p,
          isChecked: u.value.includes(p),
          onChange: () => {
            s ? u.value.includes(p) ? u.onChange(
              u.value.filter((m) => m !== p)
            ) : u.onChange([...u.value, p]) : u.onChange([p]);
          },
          readOnly: r.readOnly,
          isRequired: i
        },
        p
      )) })
    }
  ) });
}, KU = ({
  toggleId: e,
  onToggle: t,
  onSelect: n,
  selections: r,
  isOpen: i,
  menuAppendTo: s,
  direction: o,
  width: l,
  maxHeight: c,
  toggleIcon: d,
  className: u,
  isDisabled: p,
  children: m,
  ...f
}) => {
  const [g, b] = D(!1), v = Ct(), y = () => {
    b(!g), t(!g);
  }, C = () => s === "parent" && v.current?.parentElement || "inline", S = $u.toArray(
    m
  );
  return /* @__PURE__ */ a(
    Dn,
    {
      ref: v,
      maxMenuHeight: yu(c),
      isScrollable: !0,
      popperProps: {
        appendTo: C(),
        direction: o,
        width: yu(l)
      },
      ...f,
      onClick: y,
      onOpenChange: (P) => {
        P !== g && y();
      },
      selected: r,
      onSelect: (P, w) => {
        n?.(w || ""), y();
      },
      toggle: (P) => /* @__PURE__ */ a(
        ut,
        {
          id: e,
          ref: P,
          className: u,
          onClick: y,
          isExpanded: i,
          "aria-label": f["aria-label"],
          icon: d,
          isDisabled: p,
          isFullWidth: !0,
          children: S.find((w) => w.props.value === r)?.props.children || r || f["aria-label"]
        }
      ),
      isOpen: i,
      children: /* @__PURE__ */ a(ea, { children: m })
    }
  );
}, HU = ({
  toggleId: e,
  onSelect: t,
  onToggle: n,
  onFilter: r,
  variant: i,
  validated: s,
  placeholderText: o,
  maxHeight: l,
  width: c,
  toggleIcon: d,
  direction: u,
  selections: p,
  typeAheadAriaLabel: m,
  chipGroupComponent: f,
  chipGroupProps: g,
  footer: b,
  isDisabled: v,
  children: y,
  ...C
}) => {
  const [S, P] = D(""), [w, A] = D(0), k = Ct(), T = $u.toArray(
    y
  ), O = () => {
    n?.(!C.isOpen);
  }, I = (_) => {
    const E = T[w];
    switch (n?.(!0), _.key) {
      case "Enter": {
        _.preventDefault(), i !== Xi.typeaheadMulti ? P(E.props.value) : P(""), t?.(E.props.value), n?.(!1), A(0);
        break;
      }
      case "Escape": {
        n?.(!1);
        break;
      }
      case "Backspace": {
        i === Xi.typeahead && t?.("");
        break;
      }
      case "ArrowUp":
      case "ArrowDown": {
        _.preventDefault();
        let L = 0;
        _.key === "ArrowUp" && (w === 0 ? L = T.length - 1 : L = w - 1), _.key === "ArrowDown" && (w === T.length - 1 ? L = 0 : L = w + 1), A(L);
        break;
      }
    }
  };
  return /* @__PURE__ */ x(
    Dn,
    {
      ...C,
      onClick: O,
      onOpenChange: (_) => n?.(_),
      onSelect: (_, E) => t?.(E || ""),
      maxMenuHeight: yu(l),
      popperProps: { direction: u, width: yu(c) },
      toggle: (_) => /* @__PURE__ */ a(
        ut,
        {
          ref: _,
          id: e,
          variant: "typeahead",
          onClick: () => n?.(!0),
          icon: d,
          isDisabled: v,
          isExpanded: C.isOpen,
          isFullWidth: !0,
          status: s === "error" ? Qi.danger : void 0,
          children: /* @__PURE__ */ x(zs, { isPlain: !0, children: [
            /* @__PURE__ */ a(
              qs,
              {
                placeholder: o,
                value: i === Xi.typeahead && p ? p : S,
                onClick: O,
                onChange: (E, L) => {
                  P(L), r?.(L);
                },
                onKeyDown: (E) => I(E),
                autoComplete: "off",
                innerRef: k,
                role: "combobox",
                isExpanded: C.isOpen,
                "aria-controls": "select-typeahead-listbox",
                "aria-label": m,
                children: i === Xi.typeaheadMulti && Array.isArray(p) && (f || /* @__PURE__ */ a(vn, { ...g, children: p.map((E, L) => /* @__PURE__ */ a(
                  Vt,
                  {
                    onClick: (F) => {
                      F.stopPropagation(), t?.(E);
                    },
                    children: E
                  },
                  L
                )) }))
              }
            ),
            /* @__PURE__ */ a(Gs, { children: !!S && /* @__PURE__ */ a(
              z,
              {
                variant: "plain",
                onClick: () => {
                  t?.(""), P(""), r?.(""), k?.current?.focus();
                },
                "aria-label": "Clear input value",
                children: /* @__PURE__ */ a(fa, { "aria-hidden": !0 })
              }
            ) })
          ] })
        }
      ),
      children: [
        /* @__PURE__ */ a(ea, { children: y }),
        b && /* @__PURE__ */ a(FS, { children: b })
      ]
    }
  );
};
var Xi = /* @__PURE__ */ ((e) => (e.single = "single", e.typeahead = "typeahead", e.typeaheadMulti = "typeaheadMulti", e))(Xi || {});
const yu = (e) => typeof e == "number" ? e + "px" : e, ht = ({
  variant: e = "single",
  ...t
}) => e === "single" ? /* @__PURE__ */ a(KU, { ...t }) : /* @__PURE__ */ a(HU, { ...t, variant: e }), rC = (e) => {
  const { t, form: n, inputType: r, attribute: i } = e, [s, o] = D(!1), [l, c] = D(""), d = r === "multiselect", u = (v, y) => {
    d ? y.value.includes(v) ? y.onChange(y.value.filter((C) => C !== v)) : Array.isArray(y.value) ? y.onChange([...y.value, v]) : y.onChange([v]) : y.onChange(v === y.value ? "" : v);
  }, p = i.validators?.options?.options || [], m = i.annotations?.inputOptionLabels || {}, f = i.annotations?.inputOptionLabelsI18nPrefix, g = (v) => Aa(e.t, m[v], v, f), b = (v) => p.filter(
    (y) => g(y).toLowerCase().includes(l.toLowerCase())
  ).map((y) => /* @__PURE__ */ a(
    Re,
    {
      selected: v === y,
      value: y,
      children: g(y)
    },
    y
  ));
  return /* @__PURE__ */ a(Qc, { ...e, children: /* @__PURE__ */ a(
    be,
    {
      name: fs(i.name),
      defaultValue: "",
      control: n.control,
      render: ({ field: v }) => /* @__PURE__ */ a(
        ht,
        {
          toggleId: i.name,
          onToggle: (y) => o(y),
          onClear: () => u("", v),
          onSelect: (y) => {
            const C = y.toString();
            u(C, v), Array.isArray(v.value) || o(!1);
          },
          selections: d && Array.isArray(v.value) ? v.value : g(v.value),
          variant: d ? Xi.typeaheadMulti : p.length >= 10 ? Xi.typeahead : Xi.single,
          "aria-label": t("selectOne"),
          isOpen: s,
          isDisabled: i.readOnly,
          onFilter: (y) => (c(y), b(v.value)),
          children: b(v.value)
        }
      )
    }
  ) });
}, zU = (e) => {
  const { form: t, attribute: n } = e, r = hp(n);
  return /* @__PURE__ */ a(Qc, { ...e, children: /* @__PURE__ */ a(
    Rg,
    {
      id: n.name,
      "data-testid": n.name,
      ...t.register(fs(n.name)),
      cols: n.annotations?.inputTypeCols,
      rows: n.annotations?.inputTypeRows,
      readOnly: n.readOnly,
      isRequired: r
    }
  ) });
}, $r = (e) => {
  const { form: t, inputType: n, attribute: r } = e, i = hp(r), s = n.startsWith("html") ? n.substring(6) : "text";
  return /* @__PURE__ */ a(Qc, { ...e, children: /* @__PURE__ */ a(
    gt,
    {
      id: r.name,
      "data-testid": r.name,
      type: s,
      placeholder: Aa(
        e.t,
        r.annotations?.inputTypePlaceholder,
        r.name,
        r.annotations?.inputOptionLabelsI18nPrefix
      ),
      readOnly: r.readOnly,
      isRequired: i,
      ...t.register(fs(r.name))
    }
  ) });
}, Hf = {
  text: $r,
  textarea: zU,
  select: rC,
  "select-radiobuttons": aC,
  multiselect: rC,
  "multiselect-checkboxes": aC,
  "html5-email": $r,
  "html5-tel": $r,
  "html5-url": $r,
  "html5-number": $r,
  "html5-range": $r,
  "html5-datetime-local": $r,
  "html5-date": $r,
  "html5-month": $r,
  "html5-time": $r,
  "multi-input": UU
}, qU = ({
  t: e,
  form: t,
  userProfileMetadata: n,
  supportedLocales: r,
  currentLocale: i,
  hideReadOnly: s = !1,
  renderer: o
}) => {
  const l = nt(() => {
    if (!n.attributes)
      return [];
    const c = s ? n.attributes.filter(({ readOnly: d }) => !d) : n.attributes;
    return [
      // Insert an empty group for attributes without a group.
      { name: void 0 },
      ...n.groups ?? []
    ].map((d) => ({
      group: d,
      attributes: c.filter(
        (u) => u.group === d.name
      )
    }));
  }, [
    s,
    n.groups,
    n.attributes
  ]);
  return l.length === 0 ? null : /* @__PURE__ */ a(
    gl,
    {
      label: e("jumpToSection"),
      sections: l.filter((c) => c.attributes.length > 0).map(({ group: c, attributes: d }) => ({
        title: Aa(e, c.displayHeader, c.name) || e("general"),
        panel: /* @__PURE__ */ x("div", { className: "pf-v5-c-form", children: [
          c.displayDescription && /* @__PURE__ */ a(tt, { className: "pf-v5-u-pb-lg", children: Aa(e, c.displayDescription, "") }),
          d.map((u) => /* @__PURE__ */ a(
            GU,
            {
              t: e,
              form: t,
              supportedLocales: r,
              currentLocale: i,
              renderer: o,
              attribute: u
            },
            u.name
          ))
        ] })
      }))
    }
  );
}, GU = ({
  t: e,
  form: t,
  renderer: n,
  supportedLocales: r,
  currentLocale: i,
  attribute: s
}) => {
  const o = t.watch(
    fs(s.name)
  ), l = nt(() => XU(s), [s]), c = s.multivalued || JU(o) && s.annotations?.inputType === void 0 ? Hf["multi-input"] : Hf[l];
  return s.name === "locale" ? /* @__PURE__ */ a(
    $U,
    {
      form: t,
      supportedLocales: r,
      currentLocale: i,
      t: e,
      attribute: s
    }
  ) : /* @__PURE__ */ a(
    c,
    {
      t: e,
      form: t,
      inputType: l,
      attribute: s,
      renderer: n
    }
  );
}, WU = "text";
function XU(e) {
  if (lO(e.name))
    return "text";
  const t = e.annotations?.inputType;
  return YU(t) ? t : WU;
}
const YU = (e) => typeof e == "string" && e in Hf, JU = (e) => Array.isArray(e) && e.length > 1, dO = Lr("ErrorBoundaryContext", void 0), Ag = () => Nr(dO);
class ZU extends KI {
  state = {};
  static getDerivedStateFromError = (t) => ({ error: t });
  showBoundary = (t) => {
    this.setState({ error: t });
  };
  render() {
    return /* @__PURE__ */ a(
      dO.Provider,
      {
        value: { error: this.state.error, showBoundary: this.showBoundary },
        children: this.props.children
      }
    );
  }
}
const QU = ({ children: e, fallback: t }) => {
  const { error: n } = Ag();
  return n ? /* @__PURE__ */ a(t, { error: n }) : e;
};
function _e(e, t, n) {
  const { showBoundary: r } = Ag();
  ze(() => {
    const i = new AbortController(), { signal: s } = i;
    return e().then((o) => {
      s.aborted || t(o);
    }).catch((o) => {
      console.error(o), s.aborted || r(o);
    }), () => i.abort();
  }, n);
}
const ct = ({
  message: e,
  instructions: t,
  onPrimaryAction: n,
  hasIcon: r = !0,
  isSearchVariant: i,
  primaryActionText: s,
  secondaryActions: o,
  icon: l,
  isDisabled: c = !1
}) => /* @__PURE__ */ x(Pr, { "data-testid": "empty-state", variant: "lg", children: [
  r && i ? /* @__PURE__ */ a(As, { icon: is }) : r && /* @__PURE__ */ a(As, { icon: l || _a }),
  /* @__PURE__ */ a(Ei, { titleText: e, headingLevel: "h1" }),
  /* @__PURE__ */ a(Di, { children: t }),
  /* @__PURE__ */ x(ss, { children: [
    s && /* @__PURE__ */ a(
      z,
      {
        "data-testid": `${e.replace(/\W+/g, "-").toLowerCase()}-empty-action`,
        variant: "primary",
        onClick: n,
        isDisabled: c,
        children: s
      }
    ),
    o && /* @__PURE__ */ a(ko, { children: o.map((d) => /* @__PURE__ */ a(
      z,
      {
        "data-testid": `${d.text.replace(/\W+/g, "-").toLowerCase()}-empty-action`,
        variant: d.type || xe.secondary,
        onClick: d.onClick,
        isDisabled: c,
        children: d.text
      },
      d.text
    )) })
  ] })
] }), uO = ({
  toolbarItem: e,
  subToolbar: t,
  toolbarItemFooter: n,
  children: r,
  searchTypeComponent: i,
  inputGroupName: s,
  inputGroupPlaceholder: o,
  inputGroupOnEnter: l
}) => {
  const { t: c } = H(), [d, u] = D(""), p = () => {
    d !== "" ? (u(d), l?.(d)) : (u(""), l?.(""));
  }, m = (f) => {
    f.key === "Enter" && p();
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(Ta, { children: /* @__PURE__ */ x(cr, { children: [
      s && /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ x(nn, { "data-testid": s, children: [
        i,
        o && /* @__PURE__ */ a(
          Vc,
          {
            "data-testid": "table-search-input",
            placeholder: o,
            "aria-label": c("search"),
            value: d,
            onChange: (f, g) => {
              u(g);
            },
            onSearch: p,
            onKeyDown: m,
            onClear: () => {
              u(""), l?.("");
            }
          }
        )
      ] }) }),
      e
    ] }) }),
    t && /* @__PURE__ */ a(Ta, { children: /* @__PURE__ */ a(cr, { children: t }) }),
    /* @__PURE__ */ a(Pt, {}),
    r,
    /* @__PURE__ */ a(Ta, { children: n })
  ] });
}, iC = ({
  id: e,
  variant: t = "top",
  count: n,
  first: r,
  max: i,
  onNextClick: s,
  onPreviousClick: o,
  onPerPageSelect: l
}) => {
  const { t: c } = H(), d = Math.round(r / i);
  return /* @__PURE__ */ a(
    Wh,
    {
      widgetId: e,
      titles: {
        paginationAriaLabel: `${c("pagination")} ${t} `
      },
      isCompact: !0,
      toggleTemplate: ({
        firstIndex: u,
        lastIndex: p
      }) => /* @__PURE__ */ x("b", { children: [
        u,
        " - ",
        p
      ] }),
      itemCount: n + d * i,
      page: d + 1,
      perPage: i,
      onNextClick: (u, p) => s((p - 1) * i),
      onPreviousClick: (u, p) => o((p - 1) * i),
      onPerPageSelect: (u, p, m) => l(m - 1, p),
      variant: t
    }
  );
}, Ui = ({
  count: e,
  searchTypeComponent: t,
  toolbarItem: n,
  subToolbar: r,
  children: i,
  inputGroupName: s,
  inputGroupPlaceholder: o,
  inputGroupOnEnter: l,
  ...c
}) => /* @__PURE__ */ a(
  uO,
  {
    searchTypeComponent: t,
    toolbarItem: /* @__PURE__ */ x(te, { children: [
      n,
      /* @__PURE__ */ a(Le, { variant: "pagination", children: /* @__PURE__ */ a(iC, { count: e, ...c }) })
    ] }),
    subToolbar: r,
    toolbarItemFooter: e !== 0 ? /* @__PURE__ */ a(Le, { variant: "pagination", children: /* @__PURE__ */ a(iC, { count: e, variant: "bottom", ...c }) }) : null,
    inputGroupName: s,
    inputGroupPlaceholder: o,
    inputGroupOnEnter: l,
    children: i
  }
), bt = () => {
  const { t: e } = H();
  return /* @__PURE__ */ a(ow, { children: /* @__PURE__ */ a(ti, { "aria-label": e("spinnerLoading") }) });
}, Pm = ({ row: e }) => {
  const t = (n) => !!n && n.title !== void 0;
  return e.cells.map((n, r) => /* @__PURE__ */ a(ke, { children: t(n) ? n.title : n }, `cell-${r}`));
};
function eV({
  columns: e,
  rows: t,
  actions: n,
  actionResolver: r,
  ariaLabelKey: i,
  onSelect: s,
  onCollapse: o,
  canSelectAll: l,
  isNotCompact: c,
  isRadio: d,
  ...u
}) {
  const { t: p } = H(), [m, f] = D([]), [g, b] = D([]), v = (y, C) => {
    const S = [
      ...y === -1 ? Array(t.length).fill(C) : m
    ];
    S[y] = C, f(S);
  };
  return ze(() => {
    if (l) {
      const y = document.getElementsByName("check-all").item(0);
      if (y) {
        const C = y, S = m.filter((P) => P === !0);
        C.indeterminate = S.length < t.length && S.length > 0;
      }
    }
  }, [m]), /* @__PURE__ */ x(
    Cn,
    {
      ...u,
      variant: c ? void 0 : Tc.compact,
      "aria-label": p(i),
      children: [
        /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
          o && /* @__PURE__ */ a(Ne, {}),
          l && /* @__PURE__ */ a(
            Ne,
            {
              select: d ? void 0 : {
                onSelect: (y, C, S) => {
                  s(C, S), v(-1, C);
                },
                isSelected: m.filter((y) => y === !0).length === t.length
              }
            }
          ),
          e.map((y) => /* @__PURE__ */ a(
            Ne,
            {
              className: y.transforms?.[0]().className,
              children: p(y.displayKey || y.name)
            },
            y.displayKey
          ))
        ] }) }),
        o ? t.map((y, C) => /* @__PURE__ */ a(yn, { children: C % 2 === 0 ? /* @__PURE__ */ x(it, { children: [
          /* @__PURE__ */ a(
            ke,
            {
              expand: {
                isExpanded: !!g[C],
                rowIndex: C,
                expandId: `${C}`,
                onToggle: (S, P, w) => {
                  o(w, P);
                  const A = [...g];
                  A[C] = w, b(A);
                }
              }
            }
          ),
          /* @__PURE__ */ a(Pm, { row: y })
        ] }) : /* @__PURE__ */ x(it, { isExpanded: !!g[C - 1], children: [
          /* @__PURE__ */ a(ke, {}),
          /* @__PURE__ */ a(ke, { colSpan: e.length, children: /* @__PURE__ */ a(ms, { children: /* @__PURE__ */ a(Pm, { row: y }) }) })
        ] }) }, C)) : /* @__PURE__ */ a(yn, { children: t.map((y, C) => /* @__PURE__ */ x(it, { isExpanded: g[C], children: [
          s && /* @__PURE__ */ a(
            ke,
            {
              select: {
                rowIndex: C,
                onSelect: (S, P, w) => {
                  s(P, w), v(w, P);
                },
                isSelected: m[C],
                variant: d ? "radio" : "checkbox"
              }
            }
          ),
          /* @__PURE__ */ a(Pm, { row: y }),
          (n || r) && /* @__PURE__ */ a(ke, { isActionCell: !0, children: /* @__PURE__ */ a(
            dl,
            {
              items: n || r?.(y, {}),
              extraData: { rowIndex: C }
            }
          ) })
        ] }, C)) })
      ]
    }
  );
}
function xt({
  ariaLabelKey: e,
  searchPlaceholderKey: t,
  isPaginated: n = !1,
  onSelect: r,
  canSelectAll: i = !1,
  isNotCompact: s,
  isRadio: o,
  detailColumns: l,
  isRowDisabled: c,
  loader: d,
  columns: u,
  actions: p,
  actionResolver: m,
  searchTypeComponent: f,
  toolbarItem: g,
  subToolbar: b,
  emptyState: v,
  icon: y,
  isSearching: C = !1,
  ...S
}) {
  const { t: P } = H(), [w, A] = D([]), [k, T] = D(), [O, I] = D(), [_, E] = D(!1), [L, F] = Eg(
    localStorage,
    "pageSize",
    10
  ), [R, M] = D(L), [U, K] = D(0), [G, N] = D(""), $ = Ct(), [q, V] = D(0), B = Ct(), Z = () => V(q + 1), X = Fu(), Q = (W, Y) => W.map((oe) => {
    if ("cellFormatters" in oe) {
      const he = Un(Y, oe.name);
      return oe.cellFormatters?.reduce((ue, fe) => fe(ue), he);
    }
    if (oe.cellRenderer) {
      const he = oe.cellRenderer;
      return { title: /* @__PURE__ */ a(he, { ...Y }) };
    }
    return Un(Y, oe.name);
  }), ie = (W) => {
    const Y = (oe) => l?.[0]?.enabled?.(oe);
    return W.map((oe, he) => {
      const ue = c ? c(oe) : !1, fe = [
        {
          data: oe,
          disableSelection: ue,
          disableActions: ue,
          selected: !!w.find((Ce) => Un(Ce, "id") === Un(oe, "id")),
          isOpen: Y(oe) ? !1 : void 0,
          cells: Q(u, oe)
        }
      ];
      return l && fe.push({
        parent: he * 2,
        cells: Y(oe) ? Q(l, oe) : []
      }), fe;
    }).flat();
  }, me = (W) => ["string", "number"].includes(typeof W) ? W.toString() : W instanceof Array ? W.map(me).join("") : typeof W == "object" ? me(
    Es(W.title) ? W.title.props : Object.values(W)
  ) : "", ee = nt(
    () => G === "" || n ? void 0 : ie(O || []).filter(
      (W) => W.cells.some(
        (Y) => Y && me(Y).toLowerCase().includes(G.toLowerCase())
      )
    ).slice(U, U + R + 1),
    [G, U, R]
  );
  _e(
    async () => {
      E(!0);
      const W = $.current === "" && G !== "";
      return W && K(0), $.current = G, typeof d == "function" ? q === B.current && O ? O : await d(W ? 0 : U, R + 1, G) : d;
    },
    (W) => {
      B.current = q, n || (I(W), W.length > U ? W = W.slice(U, U + R + 1) : K(0));
      const Y = ie(W);
      T(Y), E(!1);
    },
    [
      q,
      U,
      R,
      G,
      typeof d != "function" ? d : void 0
    ]
  );
  const ce = () => p && wc(p).map((W, Y) => (delete W.onRowClick, W.onClick = async (oe, he) => {
    await p[Y].onRowClick(
      (ee || k)[he].data
    ) && (n || N(""), Z());
  }, W)), ae = (W, Y) => {
    const oe = ee || k;
    Y === -1 ? T(
      oe.map((ue) => (ue.selected = W, ue))
    ) : (oe[Y].selected = W, T([...k]));
    const he = [
      ...xg(
        w,
        oe.map((ue) => ue.data),
        "id"
      ),
      ...oe.filter((ue) => ue.selected).map((ue) => ue.data)
    ];
    A(he), r(he);
  }, Oe = (W, Y) => {
    Ie[Y].isOpen = W, T([...Ie]);
  }, Ie = ee || k, Me = !Ie || Ie.length === 0, ge = G !== "" || C, Se = l ? R * 2 : R, J = l ? (Ie?.length || 0) / 2 : Ie?.length || 0;
  return /* @__PURE__ */ x(te, { children: [
    (_ || !Me || ge) && /* @__PURE__ */ x(
      Ui,
      {
        id: X,
        count: J,
        first: U,
        max: R,
        onNextClick: K,
        onPreviousClick: K,
        onPerPageSelect: (W, Y) => {
          K(W), M(Y), F(Y);
        },
        inputGroupName: t ? `${e}input` : void 0,
        inputGroupOnEnter: N,
        inputGroupPlaceholder: P(t || ""),
        searchTypeComponent: f,
        toolbarItem: /* @__PURE__ */ x(te, { children: [
          g,
          " ",
          /* @__PURE__ */ a(Le, { variant: "separator" }),
          " ",
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ x(z, { variant: "link", onClick: Z, children: [
            /* @__PURE__ */ a(qL, {}),
            " ",
            P("refresh")
          ] }) })
        ] }),
        subToolbar: b,
        children: [
          !_ && !Me && /* @__PURE__ */ a(
            eV,
            {
              ...S,
              canSelectAll: i,
              onSelect: r ? ae : void 0,
              onCollapse: l ? Oe : void 0,
              actions: ce(),
              actionResolver: m,
              rows: Ie.slice(0, Se),
              columns: u,
              isNotCompact: s,
              isRadio: o,
              ariaLabelKey: e
            }
          ),
          !_ && Me && ge && /* @__PURE__ */ a(
            ct,
            {
              hasIcon: !0,
              icon: y,
              isSearchVariant: !0,
              message: P("noSearchResults"),
              instructions: P("noSearchResultsInstructions"),
              secondaryActions: C ? [] : [
                {
                  text: P("clearAllFilters"),
                  onClick: () => N(""),
                  type: xe.link
                }
              ]
            }
          ),
          _ && /* @__PURE__ */ a(bt, {})
        ]
      }
    ),
    !_ && Me && !ge && v
  ] });
}
const tV = ({ link: e, organization: t }) => {
  const { t: n } = H();
  return /* @__PURE__ */ a(Oa, { wrapModifier: "truncate", children: /* @__PURE__ */ x(e, { organization: t, children: [
    t.name,
    !t.enabled && /* @__PURE__ */ a(
      Ir,
      {
        isRead: !0,
        className: "pf-v5-u-ml-sm",
        children: n("disabled")
      },
      `${t.id}-disabled`
    )
  ] }) });
}, nV = (e) => {
  const { t } = H();
  return /* @__PURE__ */ a(
    vn,
    {
      numChips: 2,
      expandedText: t("hide"),
      collapsedText: t("showRemaining"),
      children: e.domains?.map((n) => {
        const r = typeof n == "string" ? n : n.name;
        return /* @__PURE__ */ a(Vt, { isReadOnly: !0, children: r }, r);
      })
    }
  );
}, pO = ({
  loader: e,
  toolbarItem: t,
  isPaginated: n = !1,
  isSearching: r = !1,
  onSelect: i,
  onDelete: s,
  deleteLabel: o = "delete",
  link: l,
  children: c
}) => {
  const { t: d } = H();
  return /* @__PURE__ */ a(
    xt,
    {
      loader: e,
      isPaginated: n,
      isSearching: r,
      ariaLabelKey: "organizationList",
      toolbarItem: t,
      onSelect: i,
      canSelectAll: i !== void 0,
      actions: s ? [
        {
          title: d(o),
          onRowClick: s
        }
      ] : void 0,
      columns: [
        {
          name: "name",
          displayKey: "name",
          cellRenderer: (u) => /* @__PURE__ */ a(tV, { link: l, organization: u })
        },
        {
          name: "domains",
          displayKey: "domains",
          cellRenderer: nV
        },
        {
          name: "description",
          displayKey: "description"
        },
        {
          name: "membershipType",
          displayKey: "membershipType"
        }
      ],
      emptyState: c
    }
  );
};
window.matchMedia("(prefers-color-scheme: dark)");
const mO = Lr("AdminClientContext", void 0), de = () => Nr(mO);
async function aV(e, t) {
  const n = new EE();
  return n.setConfig({ realmName: t.realm }), n.baseUrl = t.adminBaseUrl, n.registerTokenProvider({
    async getAccessToken() {
      try {
        await e.updateToken(5);
      } catch {
        await e.login();
      }
      return e.token;
    }
  }), n;
}
const Ve = (e) => {
  const [t, n] = D(!1);
  function r() {
    n((s) => !s);
  }
  return [r, () => /* @__PURE__ */ a(
    hs,
    {
      ...e,
      open: t,
      toggleDialog: r
    },
    "confirmDialog"
  )];
}, hs = ({
  titleKey: e,
  messageKey: t,
  noCancelButton: n,
  cancelButtonLabel: r,
  continueButtonLabel: i,
  continueButtonVariant: s,
  onConfirm: o,
  onCancel: l,
  children: c,
  open: d = !0,
  variant: u = Et.small,
  toggleDialog: p,
  confirmButtonDisabled: m
}) => {
  const { t: f } = H();
  return /* @__PURE__ */ x(
    ft,
    {
      title: f(e),
      isOpen: d,
      onClose: p,
      variant: u,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            "data-testid": "confirm",
            isDisabled: m,
            variant: s || xe.primary,
            onClick: () => {
              o(), p();
            },
            children: f(i || "continue")
          },
          "confirm"
        ),
        !n && /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => {
              l && l(), p();
            },
            children: f(r || "cancel")
          },
          "cancel"
        )
      ],
      children: [
        !t && c,
        t && f(t)
      ]
    }
  );
};
var fO = { exports: {} };
(function(e, t) {
  (function(n, r) {
    r();
  })(Sa, function() {
    function n(d, u) {
      return typeof u > "u" ? u = { autoBom: !1 } : typeof u != "object" && (console.warn("Deprecated: Expected third argument to be a object"), u = { autoBom: !u }), u.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(d.type) ? new Blob(["\uFEFF", d], { type: d.type }) : d;
    }
    function r(d, u, p) {
      var m = new XMLHttpRequest();
      m.open("GET", d), m.responseType = "blob", m.onload = function() {
        c(m.response, u, p);
      }, m.onerror = function() {
        console.error("could not download file");
      }, m.send();
    }
    function i(d) {
      var u = new XMLHttpRequest();
      u.open("HEAD", d, !1);
      try {
        u.send();
      } catch {
      }
      return 200 <= u.status && 299 >= u.status;
    }
    function s(d) {
      try {
        d.dispatchEvent(new MouseEvent("click"));
      } catch {
        var u = document.createEvent("MouseEvents");
        u.initMouseEvent("click", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), d.dispatchEvent(u);
      }
    }
    var o = typeof window == "object" && window.window === window ? window : typeof self == "object" && self.self === self ? self : typeof Sa == "object" && Sa.global === Sa ? Sa : void 0, l = o.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent), c = o.saveAs || (typeof window != "object" || window !== o ? function() {
    } : "download" in HTMLAnchorElement.prototype && !l ? function(d, u, p) {
      var m = o.URL || o.webkitURL, f = document.createElement("a");
      u = u || d.name || "download", f.download = u, f.rel = "noopener", typeof d == "string" ? (f.href = d, f.origin === location.origin ? s(f) : i(f.href) ? r(d, u, p) : s(f, f.target = "_blank")) : (f.href = m.createObjectURL(d), setTimeout(function() {
        m.revokeObjectURL(f.href);
      }, 4e4), setTimeout(function() {
        s(f);
      }, 0));
    } : "msSaveOrOpenBlob" in navigator ? function(d, u, p) {
      if (u = u || d.name || "download", typeof d != "string") navigator.msSaveOrOpenBlob(n(d, p), u);
      else if (i(d)) r(d, u, p);
      else {
        var m = document.createElement("a");
        m.href = d, m.target = "_blank", setTimeout(function() {
          s(m);
        });
      }
    } : function(d, u, p, m) {
      if (m = m || open("", "_blank"), m && (m.document.title = m.document.body.innerText = "downloading..."), typeof d == "string") return r(d, u, p);
      var f = d.type === "application/octet-stream", g = /constructor/i.test(o.HTMLElement) || o.safari, b = /CriOS\/[\d]+/.test(navigator.userAgent);
      if ((b || f && g || l) && typeof FileReader < "u") {
        var v = new FileReader();
        v.onloadend = function() {
          var S = v.result;
          S = b ? S : S.replace(/^data:[^;]*;/, "data:attachment/file;"), m ? m.location.href = S : location = S, m = null;
        }, v.readAsDataURL(d);
      } else {
        var y = o.URL || o.webkitURL, C = y.createObjectURL(d);
        m ? m.location = C : location.href = C, m = null, setTimeout(function() {
          y.revokeObjectURL(C);
        }, 4e4);
      }
    });
    o.saveAs = c.saveAs = c, e.exports = c;
  });
})(fO);
var gs = fO.exports;
function rV(e) {
  return e && e.constructor && typeof e.constructor.isBuffer == "function" && e.constructor.isBuffer(e);
}
function iV(e) {
  return e;
}
function hO(e, t) {
  t = t || {};
  const n = t.delimiter || ".", r = t.maxDepth, i = t.transformKey || iV, s = {};
  function o(l, c, d) {
    d = d || 1, Object.keys(l).forEach(function(u) {
      const p = l[u], m = t.safe && Array.isArray(p), f = Object.prototype.toString.call(p), g = rV(p), b = f === "[object Object]" || f === "[object Array]", v = c ? c + n + i(u) : i(u);
      if (!m && !g && b && Object.keys(p).length && (!t.maxDepth || d < r))
        return o(p, v, d + 1);
      s[v] = p;
    });
  }
  return o(e), s;
}
function qo(e = []) {
  const t = e.filter(({ key: r }) => r !== ""), n = {};
  for (const { key: r, value: i } of t)
    r in n ? n[r].push(i) : n[r] = [i];
  return n;
}
function Ec(e = {}) {
  return Object.entries(e).flatMap(
    ([n, r]) => r.map((i) => ({ key: n, value: i }))
  );
}
const gp = (e) => [...new Map(Object.entries(e).sort(sV)).keys()], sV = (e, t) => {
  let n, r;
  return e[1].order !== t[1].order ? (n = t[1].order, r = e[1].order) : (n = e[0], r = t[0]), n < r ? -1 : n > r ? 1 : 0;
}, Cd = (e) => e.replace(/\s/g, "-"), gO = (e) => {
  const t = wc(e);
  if (delete t.id, t.protocolMappers)
    for (let n = 0; n < t.protocolMappers.length; n++)
      delete t.protocolMappers[n].id;
  gs.saveAs(
    new Blob([ja(t)], {
      type: "application/json"
    }),
    t.clientId + ".json"
  );
}, Ia = (e) => e.charAt(0).toUpperCase() + e.slice(1), oV = (e) => Object.values(e).filter(
  (t) => Array.isArray(t) && t.length >= 1
).length !== 0, lV = (e) => Array.isArray(e) ? e.some(
  (t) => Object.hasOwn(t, "key") && Object.hasOwn(t, "value")
) : !1, cV = (e) => Object.keys(e).length === 0;
function Fe(e) {
  const t = e.indexOf(".");
  return `${e.substring(0, t)}.${Is(e.substring(t + 1))}`;
}
const Is = (e) => e.replaceAll(".", "🍺"), bO = (e) => e.replaceAll("🍺", ".");
function Pn(e, t) {
  Object.entries(e).map((n) => {
    const [r, i] = n;
    if (r === "attributes" && oV(i))
      t(r, Ec(i));
    else if (r === "config" || r === "attributes")
      if (cV(i))
        t(r, void 0);
      else {
        const s = hO(i, { safe: !0 });
        Object.entries(s).map(
          ([l, c]) => Array.isArray(c) && c.length === 1 ? [l, c[0]] : [l, c]
        ).forEach(
          ([l, c]) => t(`${r}.${Is(l)}`, c)
        );
      }
    else
      t(r, i);
  });
}
function ta(e) {
  const t = {};
  return Object.entries(e).map(([n, r]) => {
    lV(r) ? t[n] = qo(r) : n === "config" || n === "attributes" ? t[n] = Object.fromEntries(
      Object.entries(
        r || {}
      ).map(([i, s]) => [bO(i), s])
    ) : t[n] = r;
  }), t;
}
const un = () => (e) => e || "—", ed = () => (e) => {
  const t = e?.toString();
  return t ? Ia(t) : void 0;
}, dV = () => (e) => {
  const t = e?.toString();
  return t ? t.charAt(0).toUpperCase() + t.slice(1).toLowerCase() : void 0;
}, $d = /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/, _o = "org.keycloak.keys.KeyProvider", ja = (e) => JSON.stringify(e, null, 2), wi = (e) => e.endsWith("/") ? e : e + "/", xr = (e, t) => {
  try {
    return new Intl.DisplayNames([t], { type: "language" }).of(
      // This is mapping old locale codes to the new locale codes for Simplified and Traditional Chinese.
      // Once the existing locales have been moved, this code can be removed.
      e === "zh-CN" ? "zh-HANS" : e === "zh-TW" ? "zh-HANT" : e
    );
  } catch {
    return e;
  }
}, vO = Lr("ServerInfoContext", void 0), Tt = () => Nr(vO), yO = () => gp(Tt().providers["login-protocol"].providers), uV = ({ children: e }) => {
  const { adminClient: t } = de(), [n, r] = D(), i = bn(async () => {
    try {
      return await t.serverInfo.find();
    } catch (s) {
      if (s instanceof Zo && s.response?.status === 403)
        return {};
      throw s;
    }
  }, []);
  return _e(i, r, []), n ? /* @__PURE__ */ a(vO.Provider, { value: n, children: e }) : /* @__PURE__ */ a(bt, {});
}, pV = ({
  name: e,
  label: t,
  helpText: n,
  isDisabled: r = !1,
  defaultValue: i,
  isNew: s = !0
}) => {
  const { t: o } = H(), { control: l } = De();
  return /* @__PURE__ */ a(
    re,
    {
      hasNoPaddingTop: !0,
      label: o(t),
      fieldId: e,
      labelIcon: /* @__PURE__ */ a(le, { helpText: o(n), fieldLabelId: `${t}` }),
      children: /* @__PURE__ */ a(
        be,
        {
          name: va(e),
          "data-testid": e,
          defaultValue: s ? i : !1,
          control: l,
          render: ({ field: c }) => /* @__PURE__ */ a(
            Je,
            {
              id: e,
              isDisabled: r,
              label: o("on"),
              labelOff: o("off"),
              isChecked: c.value === "true" || c.value === !0 || c.value?.[0] === "true",
              onChange: (d, u) => c.onChange("" + u),
              "data-testid": e,
              "aria-label": o(t)
            }
          )
        }
      )
    }
  );
}, Lg = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  isDisabled: i = !1,
  required: s = !1,
  variant: o = "typeahead"
}) => {
  const { adminClient: l } = de(), { t: c } = H(), [d, u] = D([]), [p, m] = D("");
  return _e(
    () => {
      const f = {
        max: 20
      };
      return p && (f.clientId = p, f.search = !0), l.clients.find(f);
    },
    (f) => u(f),
    [p]
  ), /* @__PURE__ */ a(
    at,
    {
      name: e,
      label: c(t),
      labelIcon: c(n),
      controller: {
        defaultValue: r || "",
        rules: {
          required: {
            value: s,
            message: c("required")
          }
        }
      },
      onFilter: (f) => m(f),
      variant: o,
      isDisabled: i,
      options: d.map(({ clientId: f }) => f)
    }
  );
}, mV = (e) => /* @__PURE__ */ a(Lg, { ...e, name: va(e.name) });
var So = /* @__PURE__ */ ((e) => (e.text = "text", e.dataURL = "dataURL", e))(So || {});
function fV(e, t) {
  return new Promise((n, r) => {
    const i = new FileReader();
    switch (i.onload = () => n(i.result), i.onerror = () => r(i.error), t) {
      case "text":
        i.readAsText(e);
        break;
      case "dataURL":
        i.readAsDataURL(e);
        break;
      default:
        r("unknown type");
    }
  });
}
const CO = ({
  id: e,
  type: t,
  value: n = "",
  filename: r = "",
  onChange: i,
  onBrowseButtonClick: s,
  onClearButtonClick: o,
  onTextAreaClick: l,
  onTextChange: c,
  className: d = "",
  isDisabled: u = !1,
  isReadOnly: p = !1,
  isLoading: m = !1,
  spinnerAriaValueText: f,
  isRequired: g = !1,
  isDragActive: b = !1,
  validated: v = "default",
  "aria-label": y = "File upload",
  filenamePlaceholder: C = "Drag a file here or browse to upload",
  filenameAriaLabel: S = r ? "Read only filename" : C,
  browseButtonText: P = "Browse...",
  clearButtonText: w = "Clear",
  isClearButtonDisabled: A = !r && !n,
  containerRef: k = null,
  allowEditingUploadedText: T = !1,
  hideDefaultPreview: O = !1,
  children: I = null,
  ..._
}) => {
  const E = (L, F) => {
    i?.(L, r, F), c?.(L);
  };
  return /* @__PURE__ */ x(
    "div",
    {
      className: j(
        mi.fileUpload,
        b && mi.modifiers.dragHover,
        m && mi.modifiers.loading,
        d
      ),
      ref: k,
      ..._,
      children: [
        /* @__PURE__ */ a("div", { className: mi.fileUploadFileSelect, children: /* @__PURE__ */ x(nn, { children: [
          /* @__PURE__ */ a(dt, { isFill: !0, children: /* @__PURE__ */ a(
            gt,
            {
              isDisabled: u,
              id: `${e}-filename`,
              name: `${e}-filename`,
              "aria-label": S,
              placeholder: C,
              "aria-describedby": `${e}-browse-button`,
              value: r,
              readOnlyVariant: "default"
            }
          ) }),
          /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
            z,
            {
              id: `${e}-browse-button`,
              variant: xe.control,
              onClick: s,
              isDisabled: u,
              children: P
            }
          ) }),
          /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
            z,
            {
              variant: xe.control,
              isDisabled: u || A,
              onClick: o,
              children: w
            }
          ) })
        ] }) }),
        /* @__PURE__ */ x("div", { className: mi.fileUploadFileDetails, children: [
          !O && t === So.text && /* @__PURE__ */ a(
            Mi,
            {
              readOnly: p || !!r && !T,
              disabled: u,
              isRequired: g,
              resizeOrientation: cf.vertical,
              validated: v,
              id: e,
              name: e,
              "aria-label": y,
              value: n,
              onChange: (L, F) => E(F, L),
              onClick: l
            }
          ),
          m && /* @__PURE__ */ a("div", { className: mi.fileUploadFileDetailsSpinner, children: /* @__PURE__ */ a(
            ti,
            {
              size: Wd.lg,
              "aria-valuetext": f
            }
          ) })
        ] }),
        I
      ]
    }
  );
};
CO.displayName = "FileUploadField";
const Go = ({
  id: e,
  type: t,
  value: n = t === So.text || t === So.dataURL ? "" : void 0,
  filename: r = "",
  children: i = null,
  // TODO: This should be removed as part of https://github.com/keycloak/keycloak/issues/32420
  // eslint-disable-next-line @typescript-eslint/no-deprecated
  onChange: s,
  onFileInputChange: o,
  onReadStarted: l,
  onReadFinished: c,
  onReadFailed: d,
  onClearClick: u,
  onClick: p = (v) => v.preventDefault(),
  onTextChange: m,
  onDataChange: f,
  dropzoneProps: g = {},
  ...b
}) => {
  const v = (_, E) => {
    if (_.length > 0) {
      const L = _[0];
      E?.type === "drop" && o?.(E, L), t === So.text || t === So.dataURL ? (s?.("", L.name, E), l?.(L), fV(L, t).then((F) => {
        c?.(L), s?.(F, L.name, E), f?.(F);
      }).catch((F) => {
        d?.(F, L), c?.(L), s?.("", "", E), f?.("");
      })) : s?.(L, L.name, E);
    }
    g.onDropAccepted?.(_, E);
  }, y = (_, E) => {
    _.length > 0 && s?.("", _[0].file.name, E), g.onDropRejected?.(_, E);
  }, C = (_) => {
    s?.("", "", _), u?.(_), T("");
  }, { getRootProps: S, getInputProps: P, isDragActive: w, open: A, inputRef: k } = M0({
    multiple: !1,
    ...g,
    onDropAccepted: v,
    onDropRejected: y
  }), T = (_) => {
    k.current && (k.current.value = _);
  }, O = P(), I = {
    ...O,
    onChange: async (_) => {
      O.onChange?.(_);
      const E = await k0(_.nativeEvent);
      E.length === 1 && o?.(_, E[0]);
    }
  };
  return /* @__PURE__ */ x(
    CO,
    {
      ...S({
        ...b,
        refKey: "containerRef",
        onClick: (_) => _.preventDefault()
      }),
      tabIndex: void 0,
      id: e,
      type: t,
      filename: r,
      value: n,
      onChange: s,
      isDragActive: w,
      onBrowseButtonClick: A,
      onClearButtonClick: C,
      onTextAreaClick: p,
      onTextChange: m,
      onClick: (_) => _.stopPropagation(),
      children: [
        /* @__PURE__ */ a(
          "input",
          {
            ...I,
            ref: k
          }
        ),
        i
      ]
    }
  );
};
Go.displayName = "FileUpload";
const hV = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  required: i,
  isDisabled: s = !1
}) => {
  const { t: o } = H(), { control: l } = De(), [c, d] = D(""), [u, p] = D(!1);
  return /* @__PURE__ */ a(
    re,
    {
      label: o(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: o(n), fieldLabelId: `${t}` }),
      fieldId: e,
      isRequired: i,
      children: /* @__PURE__ */ a(
        be,
        {
          name: va(e),
          control: l,
          defaultValue: r || "",
          render: ({ field: m }) => /* @__PURE__ */ a(
            Go,
            {
              id: e,
              value: m.value,
              type: "text",
              filename: c,
              isDisabled: s,
              onFileInputChange: (f, g) => d(g.name),
              onReadStarted: () => p(!0),
              onReadFinished: () => p(!1),
              onClearClick: () => {
                m.onChange(""), d("");
              },
              isLoading: u,
              allowEditingUploadedText: !1,
              onChange: (f, g) => {
                m.onChange(f), d(g);
              }
            }
          )
        }
      )
    }
  );
}, xO = ({
  group: { path: e },
  onMouseEnter: t,
  ...n
}) => {
  const [r, i] = D(""), o = /* @__PURE__ */ a("span", { onMouseEnter: (l) => {
    i(e), t?.(l);
  }, ...n, children: e });
  return r !== "" ? /* @__PURE__ */ a(Ht, { content: r, isVisible: !0, children: o }) : o;
}, bl = ({
  id: e,
  type: t,
  filterGroups: n,
  text: r,
  canBrowse: i = !0,
  isMove: s = !1,
  onClose: o,
  onConfirm: l
}) => {
  const { adminClient: c } = de(), { t: d } = H(), [u, p] = D([]), [m, f] = D([]), [g, b] = D([]), [v, y] = D(""), [C, S] = D([]), [P, w] = D(), [A, k] = D(!1), [T, O] = D(10), [I, _] = D(0), [E, L] = D(0), F = () => m[m.length - 1];
  _e(
    async () => {
      let M, U, K;
      if (P) {
        if (!m.map(({ id: N }) => N).includes(P) && (M = await c.groups.findOne({ id: P }), !M))
          throw new Error(d("notFound"));
        const G = {
          first: I,
          max: T,
          parentId: P
        };
        U = await c.groups.listSubGroups(G);
      } else {
        const G = {
          first: I,
          max: T + 1
        };
        A && (G.search = v), U = await c.groups.find(G);
      }
      return e && (K = await c.users.listGroups({
        id: e
      })), { group: M, groups: U, existingUserGroups: K };
    },
    async ({ group: M, groups: U, existingUserGroups: K }) => {
      S(K || []), M && (f([...m, M]), L(M.subGroupCount)), U.forEach((G) => {
        G.checked = !!u.find((N) => N.id === G.id);
      }), b(U), (A || !P) && L(U.length);
    },
    [P, v, I, T]
  );
  const R = (M) => [
    ...C.map((U) => U.id),
    ...(n || []).map((U) => U.id)
  ].some((U) => U === M?.id);
  return /* @__PURE__ */ a(
    ft,
    {
      variant: A ? Et.medium : Et.small,
      title: d(r.title, {
        group1: n?.[0]?.name,
        group2: m.length ? F().name : d("root")
      }),
      isOpen: !0,
      onClose: o,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": `${r.ok}-button`,
            variant: "primary",
            form: "group-form",
            onClick: () => {
              l(
                t === "selectMany" ? u : m.length ? [F()] : void 0
              );
            },
            isDisabled: t === "selectMany" && u.length === 0,
            children: d(r.ok)
          },
          "confirm"
        )
      ],
      children: /* @__PURE__ */ x(
        Ui,
        {
          count: E,
          first: I,
          max: T,
          onNextClick: _,
          onPreviousClick: _,
          onPerPageSelect: (M, U) => {
            _(M), O(U);
          },
          inputGroupName: "search",
          inputGroupOnEnter: (M) => {
            y(M), k(M !== ""), _(0), O(10), f([]), w(void 0);
          },
          inputGroupPlaceholder: d("searchForGroups"),
          children: [
            /* @__PURE__ */ x(jc, { children: [
              m.length > 0 && /* @__PURE__ */ a($o, { children: /* @__PURE__ */ a(
                z,
                {
                  variant: "link",
                  onClick: () => {
                    w(void 0), f([]), _(0), O(10);
                  },
                  children: d("groups")
                }
              ) }, "home"),
              m.map((M, U) => /* @__PURE__ */ x($o, { children: [
                m.length - 1 !== U && /* @__PURE__ */ a(
                  z,
                  {
                    variant: "link",
                    onClick: () => {
                      w(M.id), f([...m].slice(0, U)), _(0), O(10);
                    },
                    children: M.name
                  }
                ),
                m.length - 1 === U && M.name
              ] }, U))
            ] }),
            /* @__PURE__ */ a(Er, { "aria-label": d("groups"), isCompact: !0, children: g.slice(0, T).map((M) => /* @__PURE__ */ x(Ea, { children: [
              (!A || M.name?.toLocaleUpperCase().includes(v.toLocaleUpperCase())) && /* @__PURE__ */ a(
                sC,
                {
                  group: M,
                  isRowDisabled: R,
                  onSelect: w,
                  type: t,
                  isSearching: A,
                  setIsSearching: k,
                  selectedRows: u,
                  setSelectedRows: p,
                  canBrowse: i
                },
                M.id
              ),
              A && M.subGroups?.map((U) => /* @__PURE__ */ a(
                sC,
                {
                  group: U,
                  isRowDisabled: R,
                  onSelect: w,
                  type: t,
                  isSearching: A,
                  setIsSearching: k,
                  selectedRows: u,
                  setSelectedRows: p,
                  canBrowse: i
                },
                U.id
              ))
            ] }, M.id)) }),
            g.length === 0 && !A && /* @__PURE__ */ a(
              ct,
              {
                hasIcon: !1,
                message: d("moveGroupEmpty"),
                instructions: s ? d("moveGroupEmptyInstructions") : void 0
              }
            ),
            g.length === 0 && A && /* @__PURE__ */ a(
              ct,
              {
                message: d("noSearchResults"),
                instructions: d("noSearchResultsInstructions")
              }
            )
          ]
        }
      )
    }
  );
}, sC = ({
  group: e,
  type: t,
  isRowDisabled: n,
  isSearching: r,
  setIsSearching: i,
  onSelect: s,
  selectedRows: o,
  setSelectedRows: l,
  canBrowse: c
}) => {
  const { t: d } = H();
  return /* @__PURE__ */ a(
    Pa,
    {
      "aria-labelledby": e.name,
      id: e.id,
      onClick: (u) => {
        t === "selectOne" ? s(e.id) : u.target.type !== "checkbox" && e.subGroupCount !== 0 && (s(e.id), i(!1));
      },
      children: /* @__PURE__ */ x(
        Va,
        {
          className: `join-group-dialog-row${n(e) ? "-m-disabled" : ""}`,
          "data-testid": e.name,
          children: [
            t === "selectMany" && /* @__PURE__ */ a(
              t0,
              {
                className: "kc-join-group-modal-check",
                "data-testid": `${e.name}-check`,
                "aria-label": e.name,
                checked: e.checked,
                isDisabled: n(e),
                onChange: (u, p) => {
                  e.checked = p;
                  let m = [];
                  e.checked ? m = [...o, e] : m = o.filter((f) => f.id !== e.id), l(m);
                },
                "aria-labelledby": `select-${e.name}`
              }
            ),
            /* @__PURE__ */ a(
              Ua,
              {
                dataListCells: [
                  /* @__PURE__ */ a(
                    oa,
                    {
                      className: "keycloak-groups-group-path",
                      children: r ? /* @__PURE__ */ a(xO, { id: `select-${e.name}`, group: e }) : /* @__PURE__ */ a("span", { id: `select-${e.name}`, children: e.name })
                    },
                    `name-${e.id}`
                  )
                ]
              }
            ),
            /* @__PURE__ */ a(
              e0,
              {
                id: "actions",
                "aria-labelledby": `select-${e.name}`,
                "aria-label": d("groupName"),
                isPlainButtonAction: !0,
                children: (c || t === "selectOne") && e.subGroupCount !== 0 && /* @__PURE__ */ a(z, { variant: "link", "aria-label": d("select"), children: /* @__PURE__ */ a(Nn, {}) })
              }
            )
          ]
        }
      )
    },
    e.id
  );
}, gV = ({
  name: e,
  label: t,
  helpText: n,
  required: r
}) => {
  const { t: i } = H(), [s, o] = D(!1), [l, c] = D(), { control: d } = De();
  return /* @__PURE__ */ a(
    be,
    {
      name: va(e),
      defaultValue: "",
      control: d,
      render: ({ field: u }) => /* @__PURE__ */ x(te, { children: [
        s && /* @__PURE__ */ a(
          bl,
          {
            type: "selectOne",
            text: {
              title: "selectGroup",
              ok: "select"
            },
            onConfirm: (p) => {
              u.onChange(p?.[0].path), c(p), o(!1);
            },
            onClose: () => o(!1),
            filterGroups: l
          }
        ),
        /* @__PURE__ */ a(
          re,
          {
            label: i(t),
            labelIcon: /* @__PURE__ */ a(le, { helpText: i(n), fieldLabelId: `${t}` }),
            fieldId: e,
            isRequired: r,
            children: /* @__PURE__ */ x(nn, { children: [
              /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(vn, { children: u.value && /* @__PURE__ */ a(Vt, { onClick: () => u.onChange(void 0), children: u.value }) }) }),
              /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                z,
                {
                  id: "kc-join-groups-button",
                  onClick: () => o(!s),
                  variant: "secondary",
                  "data-testid": "join-groups-button",
                  children: i("selectGroup")
                }
              ) })
            ] })
          }
        )
      ] })
    }
  );
}, bV = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  options: i,
  required: s,
  isDisabled: o = !1
}) => {
  const { t: l } = H(), { control: c } = De(), [d, u] = D(!1);
  return /* @__PURE__ */ a(
    re,
    {
      label: l(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: l(n), fieldLabelId: `${t}` }),
      fieldId: e,
      isRequired: s,
      children: /* @__PURE__ */ a(
        be,
        {
          name: va(e),
          "data-testid": e,
          defaultValue: r || i?.[0] || "",
          control: c,
          render: ({ field: p }) => /* @__PURE__ */ a(
            ht,
            {
              toggleId: e,
              isDisabled: o,
              onToggle: (m) => u(m),
              onSelect: (m) => {
                p.onChange(m), u(!1);
              },
              selections: p.value,
              variant: mt.single,
              "aria-label": l(t),
              isOpen: d,
              children: i?.map((m) => /* @__PURE__ */ a(
                Re,
                {
                  selected: m === p.value,
                  value: m,
                  children: m
                },
                m
              ))
            }
          )
        }
      )
    }
  );
}, vV = ({
  name: e,
  label: t,
  helpText: n,
  required: r,
  isDisabled: i
}) => {
  const { t: s } = H(), { getValues: o, setValue: l, register: c } = De(), [d, u] = D([]), p = va(e);
  ze(() => {
    c(p);
    const C = JSON.parse(o(p) || "[]");
    u(C.map((S) => ({ ...S, id: $f() })));
  }, []);
  const m = () => u([...d, { key: "", value: "", id: $f() }]), f = (C = d) => {
    l(
      p,
      JSON.stringify(
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        C.filter((S) => S.key !== "").map(({ id: S, ...P }) => P)
      )
    );
  }, g = (C, S) => {
    v(C, { ...d[C], key: S });
  }, b = (C, S) => {
    v(C, { ...d[C], value: S });
  }, v = (C, S) => u([...d.slice(0, C), S, ...d.slice(C + 1)]), y = (C) => {
    const S = [...d.slice(0, C), ...d.slice(C + 1)];
    u(S), f(S);
  };
  return d.length !== 0 ? /* @__PURE__ */ x(
    re,
    {
      label: s(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: s(n), fieldLabelId: `${t}` }),
      fieldId: e,
      isRequired: r,
      children: [
        /* @__PURE__ */ x(Qn, { direction: { default: "column" }, children: [
          /* @__PURE__ */ x(Qn, { children: [
            /* @__PURE__ */ a(
              Dt,
              {
                grow: { default: "grow" },
                spacer: { default: "spacerNone" },
                children: /* @__PURE__ */ a("strong", { children: s("key") })
              }
            ),
            /* @__PURE__ */ a(Dt, { grow: { default: "grow" }, children: /* @__PURE__ */ a("strong", { children: s("value") }) })
          ] }),
          d.map((C, S) => /* @__PURE__ */ x(Qn, { "data-testid": "row", children: [
            /* @__PURE__ */ a(Dt, { grow: { default: "grow" }, children: /* @__PURE__ */ a(
              gt,
              {
                name: `${p}.${S}.key`,
                placeholder: s("keyPlaceholder"),
                "aria-label": s("key"),
                defaultValue: C.key,
                "data-testid": `${p}.${S}.key`,
                onChange: (P, w) => g(S, w),
                onBlur: () => f()
              }
            ) }),
            /* @__PURE__ */ a(
              Dt,
              {
                grow: { default: "grow" },
                spacer: { default: "spacerNone" },
                children: /* @__PURE__ */ a(
                  gt,
                  {
                    name: `${p}.${S}.value`,
                    placeholder: s("valuePlaceholder"),
                    "aria-label": s("value"),
                    defaultValue: C.value,
                    "data-testid": `${p}.${S}.value`,
                    onChange: (P, w) => b(S, w),
                    onBlur: () => f()
                  }
                )
              }
            ),
            /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                title: s("removeAttribute"),
                isDisabled: i,
                onClick: () => y(S),
                "data-testid": `${p}.${S}.remove`,
                children: /* @__PURE__ */ a($i, {})
              }
            ) })
          ] }, C.id))
        ] }),
        /* @__PURE__ */ a(Uu, { children: /* @__PURE__ */ a(xi, { children: /* @__PURE__ */ a(
          z,
          {
            "data-testid": `${p}-add-row`,
            className: "pf-v5-u-px-0 pf-v5-u-mt-sm",
            variant: "link",
            icon: /* @__PURE__ */ a(_a, {}),
            onClick: () => m(),
            children: s("addAttribute", { label: t })
          }
        ) }) })
      ]
    }
  ) : /* @__PURE__ */ x(
    Pr,
    {
      "data-testid": `${e}-empty-state`,
      className: "pf-v5-u-p-0",
      variant: "xs",
      children: [
        /* @__PURE__ */ a(Di, { children: s("missingAttributes", { label: t }) }),
        /* @__PURE__ */ a(ss, { children: /* @__PURE__ */ a(
          z,
          {
            "data-testid": `${e}-add-row`,
            variant: "link",
            icon: /* @__PURE__ */ a(_a, {}),
            size: "sm",
            onClick: m,
            isDisabled: i,
            children: s("addAttribute", { label: t })
          }
        ) })
      ]
    }
  );
};
function oC(e) {
  return typeof e == "string" && e.length > 0 ? e.split("##") : [];
}
function yV(e) {
  return e.join("##");
}
const CV = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  options: i,
  isDisabled: s = !1,
  stringify: o,
  required: l
}) => {
  const { t: c } = H(), { control: d } = De(), [u, p] = D(!1);
  return /* @__PURE__ */ a(
    re,
    {
      label: c(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: c(n), fieldLabelId: `${t}` }),
      fieldId: e,
      isRequired: l,
      children: /* @__PURE__ */ a(
        be,
        {
          name: va(e),
          control: d,
          defaultValue: o ? r || "" : r ? [r] : [],
          render: ({ field: m }) => /* @__PURE__ */ a(
            ht,
            {
              toggleId: e,
              "data-testid": e,
              isDisabled: s,
              chipGroupProps: {
                numChips: 3,
                expandedText: c("hide"),
                collapsedText: c("showRemaining")
              },
              variant: mt.typeaheadMulti,
              typeAheadAriaLabel: "Select",
              onToggle: (f) => p(f),
              selections: o ? oC(m.value) : m.value,
              onSelect: (f) => {
                const g = f.toString(), b = o ? oC(m.value) : m.value;
                let v;
                b.includes(g) ? v = b.filter((y) => y !== g) : v = [...b, g], m.onChange(o ? yV(v) : v);
              },
              onClear: () => {
                m.onChange(o ? "" : []);
              },
              isOpen: u,
              "aria-label": c(t),
              children: i?.map((f) => /* @__PURE__ */ a(Re, { value: f, children: f }, f))
            }
          )
        }
      )
    }
  );
};
function lC(e) {
  return typeof e == "string" ? e.split("##") : [e || ""];
}
function cC(e) {
  return e.join("##");
}
const Or = ({
  name: e,
  addButtonLabel: t,
  isDisabled: n = !1,
  defaultValue: r,
  stringify: i = !1,
  isRequired: s = !1,
  id: o,
  ...l
}) => {
  const { t: c } = H(), { register: d, setValue: u, control: p } = De(), m = rt({
    name: e,
    control: p,
    defaultValue: r || ""
  }), f = nt(() => {
    let C = i ? lC(
      Array.isArray(m) && m.length === 1 ? m[0] : m
    ) : Array.isArray(m) ? m : [m];
    return (!Array.isArray(C) || C.length === 0) && (C = (i ? lC(r) : r) || [""]), C;
  }, [m]), g = (C) => {
    y([...f.slice(0, C), ...f.slice(C + 1)]);
  }, b = () => {
    y([...f, ""]);
  }, v = (C, S) => {
    y([...f.slice(0, C), S, ...f.slice(C + 1)]);
  }, y = (C) => {
    const S = C.flatMap((P) => P);
    u(e, i ? cC(S) : S, {
      shouldDirty: !0,
      shouldValidate: !0
    });
  };
  return ze(() => {
    d(e, {
      validate: (C) => s && cC(C || []).length === 0 ? c("required") : void 0
    });
  }, [d]), /* @__PURE__ */ a("div", { id: o, children: f.map((C, S) => /* @__PURE__ */ x(Ea, { children: [
    /* @__PURE__ */ x(nn, { children: [
      /* @__PURE__ */ a(dt, { isFill: !0, children: /* @__PURE__ */ a(
        gt,
        {
          "data-testid": e + S,
          onChange: (P, w) => v(S, w),
          name: `${e}.${S}.value`,
          value: C,
          isDisabled: n,
          ...l
        }
      ) }),
      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
        z,
        {
          "data-testid": "remove" + S,
          variant: xe.link,
          onClick: () => g(S),
          tabIndex: -1,
          "aria-label": c("remove"),
          isDisabled: f.length === 1 || n,
          children: /* @__PURE__ */ a($i, {})
        }
      ) })
    ] }),
    S === f.length - 1 && /* @__PURE__ */ x(
      z,
      {
        variant: xe.link,
        onClick: b,
        tabIndex: -1,
        "aria-label": c("add"),
        "data-testid": "addValue",
        isDisabled: !C || n,
        children: [
          /* @__PURE__ */ a(_a, {}),
          " ",
          c(t || "add")
        ]
      }
    )
  ] }, S)) });
};
function xV(e) {
  return e && Array.isArray(e) ? e : [e];
}
const SV = ({
  name: e,
  label: t,
  defaultValue: n,
  helpText: r,
  stringify: i,
  required: s,
  isDisabled: o = !1
}) => {
  const { t: l } = H(), c = va(e);
  return /* @__PURE__ */ a(
    re,
    {
      label: l(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: l(r), fieldLabelId: `${t}` }),
      fieldId: e,
      isRequired: s,
      children: /* @__PURE__ */ a(
        Or,
        {
          "aria-label": l(t),
          name: c,
          isDisabled: o,
          defaultValue: xV(n),
          addButtonLabel: l("addMultivaluedLabel", {
            fieldLabel: l(t).toLowerCase()
          }),
          stringify: i
        }
      )
    }
  );
}, wV = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  required: i,
  isDisabled: s = !1
}) => {
  const { t: o } = H();
  return /* @__PURE__ */ a(
    zo,
    {
      name: va(e),
      label: o(t),
      labelIcon: o(n),
      isDisabled: s,
      defaultValue: r?.toString(),
      rules: {
        required: { value: !!i, message: o("required") }
      }
    }
  );
};
function st(e = !1) {
  const [t, n] = D(e), r = bn(() => n((i) => !i), []);
  return [t, r, n];
}
function We(e, t) {
  const n = structuredClone(t);
  for (const r in n) {
    const i = r;
    n[i] = encodeURIComponent(n[i]);
  }
  return Jo(e, n);
}
const OV = Be(() => Promise.resolve().then(() => MY)), bp = {
  path: "/",
  element: /* @__PURE__ */ a(OV, {}),
  breadcrumb: (e) => e("home"),
  handle: {
    access: "anyone"
  }
}, Ng = {
  ...bp,
  path: "/:realm"
}, SO = {
  ...bp,
  path: "/:realm/:tab"
}, Ms = (e) => {
  const t = e.realm ? e.tab ? SO.path : Ng.path : bp.path;
  return {
    pathname: We(t, e)
  };
}, kV = {
  type: "logger",
  log(e) {
    this.output("log", e);
  },
  warn(e) {
    this.output("warn", e);
  },
  error(e) {
    this.output("error", e);
  },
  output(e, t) {
    console && console[e] && console[e].apply(console, t);
  }
};
class Cu {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.init(t, n);
  }
  init(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.prefix = n.prefix || "i18next:", this.logger = t || kV, this.options = n, this.debug = n.debug;
  }
  log() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return this.forward(n, "log", "", !0);
  }
  warn() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return this.forward(n, "warn", "", !0);
  }
  error() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return this.forward(n, "error", "");
  }
  deprecate() {
    for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
      n[r] = arguments[r];
    return this.forward(n, "warn", "WARNING DEPRECATED: ", !0);
  }
  forward(t, n, r, i) {
    return i && !this.debug ? null : (typeof t[0] == "string" && (t[0] = `${r}${this.prefix} ${t[0]}`), this.logger[n](t));
  }
  create(t) {
    return new Cu(this.logger, {
      prefix: `${this.prefix}:${t}:`,
      ...this.options
    });
  }
  clone(t) {
    return t = t || this.options, t.prefix = t.prefix || this.prefix, new Cu(this.logger, t);
  }
}
var Hr = new Cu();
class vp {
  constructor() {
    this.observers = {};
  }
  on(t, n) {
    return t.split(" ").forEach((r) => {
      this.observers[r] || (this.observers[r] = /* @__PURE__ */ new Map());
      const i = this.observers[r].get(n) || 0;
      this.observers[r].set(n, i + 1);
    }), this;
  }
  off(t, n) {
    if (this.observers[t]) {
      if (!n) {
        delete this.observers[t];
        return;
      }
      this.observers[t].delete(n);
    }
  }
  emit(t) {
    for (var n = arguments.length, r = new Array(n > 1 ? n - 1 : 0), i = 1; i < n; i++)
      r[i - 1] = arguments[i];
    this.observers[t] && Array.from(this.observers[t].entries()).forEach((o) => {
      let [l, c] = o;
      for (let d = 0; d < c; d++)
        l(...r);
    }), this.observers["*"] && Array.from(this.observers["*"].entries()).forEach((o) => {
      let [l, c] = o;
      for (let d = 0; d < c; d++)
        l.apply(l, [t, ...r]);
    });
  }
}
const Ll = () => {
  let e, t;
  const n = new Promise((r, i) => {
    e = r, t = i;
  });
  return n.resolve = e, n.reject = t, n;
}, dC = (e) => e == null ? "" : "" + e, TV = (e, t, n) => {
  e.forEach((r) => {
    t[r] && (n[r] = t[r]);
  });
}, IV = /###/g, uC = (e) => e && e.indexOf("###") > -1 ? e.replace(IV, ".") : e, pC = (e) => !e || typeof e == "string", ec = (e, t, n) => {
  const r = typeof t != "string" ? t : t.split(".");
  let i = 0;
  for (; i < r.length - 1; ) {
    if (pC(e)) return {};
    const s = uC(r[i]);
    !e[s] && n && (e[s] = new n()), Object.prototype.hasOwnProperty.call(e, s) ? e = e[s] : e = {}, ++i;
  }
  return pC(e) ? {} : {
    obj: e,
    k: uC(r[i])
  };
}, mC = (e, t, n) => {
  const {
    obj: r,
    k: i
  } = ec(e, t, Object);
  if (r !== void 0 || t.length === 1) {
    r[i] = n;
    return;
  }
  let s = t[t.length - 1], o = t.slice(0, t.length - 1), l = ec(e, o, Object);
  for (; l.obj === void 0 && o.length; )
    s = `${o[o.length - 1]}.${s}`, o = o.slice(0, o.length - 1), l = ec(e, o, Object), l && l.obj && typeof l.obj[`${l.k}.${s}`] < "u" && (l.obj = void 0);
  l.obj[`${l.k}.${s}`] = n;
}, EV = (e, t, n, r) => {
  const {
    obj: i,
    k: s
  } = ec(e, t, Object);
  i[s] = i[s] || [], i[s].push(n);
}, xu = (e, t) => {
  const {
    obj: n,
    k: r
  } = ec(e, t);
  if (n)
    return n[r];
}, PV = (e, t, n) => {
  const r = xu(e, n);
  return r !== void 0 ? r : xu(t, n);
}, wO = (e, t, n) => {
  for (const r in t)
    r !== "__proto__" && r !== "constructor" && (r in e ? typeof e[r] == "string" || e[r] instanceof String || typeof t[r] == "string" || t[r] instanceof String ? n && (e[r] = t[r]) : wO(e[r], t[r], n) : e[r] = t[r]);
  return e;
}, mo = (e) => e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
var _V = {
  "&": "&amp;",
  "<": "&lt;",
  ">": "&gt;",
  '"': "&quot;",
  "'": "&#39;",
  "/": "&#x2F;"
};
const RV = (e) => typeof e == "string" ? e.replace(/[&<>"'\/]/g, (t) => _V[t]) : e;
class AV {
  constructor(t) {
    this.capacity = t, this.regExpMap = /* @__PURE__ */ new Map(), this.regExpQueue = [];
  }
  getRegExp(t) {
    const n = this.regExpMap.get(t);
    if (n !== void 0)
      return n;
    const r = new RegExp(t);
    return this.regExpQueue.length === this.capacity && this.regExpMap.delete(this.regExpQueue.shift()), this.regExpMap.set(t, r), this.regExpQueue.push(t), r;
  }
}
const LV = [" ", ",", "?", "!", ";"], NV = new AV(20), DV = (e, t, n) => {
  t = t || "", n = n || "";
  const r = LV.filter((o) => t.indexOf(o) < 0 && n.indexOf(o) < 0);
  if (r.length === 0) return !0;
  const i = NV.getRegExp(`(${r.map((o) => o === "?" ? "\\?" : o).join("|")})`);
  let s = !i.test(e);
  if (!s) {
    const o = e.indexOf(n);
    o > 0 && !i.test(e.substring(0, o)) && (s = !0);
  }
  return s;
}, zf = function(e, t) {
  let n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : ".";
  if (!e) return;
  if (e[t]) return e[t];
  const r = t.split(n);
  let i = e;
  for (let s = 0; s < r.length; ) {
    if (!i || typeof i != "object")
      return;
    let o, l = "";
    for (let c = s; c < r.length; ++c)
      if (c !== s && (l += n), l += r[c], o = i[l], o !== void 0) {
        if (["string", "number", "boolean"].indexOf(typeof o) > -1 && c < r.length - 1)
          continue;
        s += c - s + 1;
        break;
      }
    i = o;
  }
  return i;
}, Su = (e) => e && e.indexOf("_") > 0 ? e.replace("_", "-") : e;
class fC extends vp {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      ns: ["translation"],
      defaultNS: "translation"
    };
    super(), this.data = t || {}, this.options = n, this.options.keySeparator === void 0 && (this.options.keySeparator = "."), this.options.ignoreJSONStructure === void 0 && (this.options.ignoreJSONStructure = !0);
  }
  addNamespaces(t) {
    this.options.ns.indexOf(t) < 0 && this.options.ns.push(t);
  }
  removeNamespaces(t) {
    const n = this.options.ns.indexOf(t);
    n > -1 && this.options.ns.splice(n, 1);
  }
  getResource(t, n, r) {
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    const s = i.keySeparator !== void 0 ? i.keySeparator : this.options.keySeparator, o = i.ignoreJSONStructure !== void 0 ? i.ignoreJSONStructure : this.options.ignoreJSONStructure;
    let l;
    t.indexOf(".") > -1 ? l = t.split(".") : (l = [t, n], r && (Array.isArray(r) ? l.push(...r) : typeof r == "string" && s ? l.push(...r.split(s)) : l.push(r)));
    const c = xu(this.data, l);
    return !c && !n && !r && t.indexOf(".") > -1 && (t = l[0], n = l[1], r = l.slice(2).join(".")), c || !o || typeof r != "string" ? c : zf(this.data && this.data[t] && this.data[t][n], r, s);
  }
  addResource(t, n, r, i) {
    let s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {
      silent: !1
    };
    const o = s.keySeparator !== void 0 ? s.keySeparator : this.options.keySeparator;
    let l = [t, n];
    r && (l = l.concat(o ? r.split(o) : r)), t.indexOf(".") > -1 && (l = t.split("."), i = n, n = l[1]), this.addNamespaces(n), mC(this.data, l, i), s.silent || this.emit("added", t, n, r, i);
  }
  addResources(t, n, r) {
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {
      silent: !1
    };
    for (const s in r)
      (typeof r[s] == "string" || Array.isArray(r[s])) && this.addResource(t, n, s, r[s], {
        silent: !0
      });
    i.silent || this.emit("added", t, n, r);
  }
  addResourceBundle(t, n, r, i, s) {
    let o = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {
      silent: !1,
      skipCopy: !1
    }, l = [t, n];
    t.indexOf(".") > -1 && (l = t.split("."), i = r, r = n, n = l[1]), this.addNamespaces(n);
    let c = xu(this.data, l) || {};
    o.skipCopy || (r = JSON.parse(JSON.stringify(r))), i ? wO(c, r, s) : c = {
      ...c,
      ...r
    }, mC(this.data, l, c), o.silent || this.emit("added", t, n, r);
  }
  removeResourceBundle(t, n) {
    this.hasResourceBundle(t, n) && delete this.data[t][n], this.removeNamespaces(n), this.emit("removed", t, n);
  }
  hasResourceBundle(t, n) {
    return this.getResource(t, n) !== void 0;
  }
  getResourceBundle(t, n) {
    return n || (n = this.options.defaultNS), this.options.compatibilityAPI === "v1" ? {
      ...this.getResource(t, n)
    } : this.getResource(t, n);
  }
  getDataByLanguage(t) {
    return this.data[t];
  }
  hasLanguageSomeTranslations(t) {
    const n = this.getDataByLanguage(t);
    return !!(n && Object.keys(n) || []).find((i) => n[i] && Object.keys(n[i]).length > 0);
  }
  toJSON() {
    return this.data;
  }
}
var OO = {
  processors: {},
  addPostProcessor(e) {
    this.processors[e.name] = e;
  },
  handle(e, t, n, r, i) {
    return e.forEach((s) => {
      this.processors[s] && (t = this.processors[s].process(t, n, r, i));
    }), t;
  }
};
const hC = {};
class wu extends vp {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    super(), TV(["resourceStore", "languageUtils", "pluralResolver", "interpolator", "backendConnector", "i18nFormat", "utils"], t, this), this.options = n, this.options.keySeparator === void 0 && (this.options.keySeparator = "."), this.logger = Hr.create("translator");
  }
  changeLanguage(t) {
    t && (this.language = t);
  }
  exists(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      interpolation: {}
    };
    if (t == null)
      return !1;
    const r = this.resolve(t, n);
    return r && r.res !== void 0;
  }
  extractFromKey(t, n) {
    let r = n.nsSeparator !== void 0 ? n.nsSeparator : this.options.nsSeparator;
    r === void 0 && (r = ":");
    const i = n.keySeparator !== void 0 ? n.keySeparator : this.options.keySeparator;
    let s = n.ns || this.options.defaultNS || [];
    const o = r && t.indexOf(r) > -1, l = !this.options.userDefinedKeySeparator && !n.keySeparator && !this.options.userDefinedNsSeparator && !n.nsSeparator && !DV(t, r, i);
    if (o && !l) {
      const c = t.match(this.interpolator.nestingRegexp);
      if (c && c.length > 0)
        return {
          key: t,
          namespaces: s
        };
      const d = t.split(r);
      (r !== i || r === i && this.options.ns.indexOf(d[0]) > -1) && (s = d.shift()), t = d.join(i);
    }
    return typeof s == "string" && (s = [s]), {
      key: t,
      namespaces: s
    };
  }
  translate(t, n, r) {
    if (typeof n != "object" && this.options.overloadTranslationOptionHandler && (n = this.options.overloadTranslationOptionHandler(arguments)), typeof n == "object" && (n = {
      ...n
    }), n || (n = {}), t == null) return "";
    Array.isArray(t) || (t = [String(t)]);
    const i = n.returnDetails !== void 0 ? n.returnDetails : this.options.returnDetails, s = n.keySeparator !== void 0 ? n.keySeparator : this.options.keySeparator, {
      key: o,
      namespaces: l
    } = this.extractFromKey(t[t.length - 1], n), c = l[l.length - 1], d = n.lng || this.language, u = n.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;
    if (d && d.toLowerCase() === "cimode") {
      if (u) {
        const P = n.nsSeparator || this.options.nsSeparator;
        return i ? {
          res: `${c}${P}${o}`,
          usedKey: o,
          exactUsedKey: o,
          usedLng: d,
          usedNS: c,
          usedParams: this.getUsedParamsDetails(n)
        } : `${c}${P}${o}`;
      }
      return i ? {
        res: o,
        usedKey: o,
        exactUsedKey: o,
        usedLng: d,
        usedNS: c,
        usedParams: this.getUsedParamsDetails(n)
      } : o;
    }
    const p = this.resolve(t, n);
    let m = p && p.res;
    const f = p && p.usedKey || o, g = p && p.exactUsedKey || o, b = Object.prototype.toString.apply(m), v = ["[object Number]", "[object Function]", "[object RegExp]"], y = n.joinArrays !== void 0 ? n.joinArrays : this.options.joinArrays, C = !this.i18nFormat || this.i18nFormat.handleAsObject;
    if (C && m && (typeof m != "string" && typeof m != "boolean" && typeof m != "number") && v.indexOf(b) < 0 && !(typeof y == "string" && Array.isArray(m))) {
      if (!n.returnObjects && !this.options.returnObjects) {
        this.options.returnedObjectHandler || this.logger.warn("accessing an object - but returnObjects options is not enabled!");
        const P = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(f, m, {
          ...n,
          ns: l
        }) : `key '${o} (${this.language})' returned an object instead of string.`;
        return i ? (p.res = P, p.usedParams = this.getUsedParamsDetails(n), p) : P;
      }
      if (s) {
        const P = Array.isArray(m), w = P ? [] : {}, A = P ? g : f;
        for (const k in m)
          if (Object.prototype.hasOwnProperty.call(m, k)) {
            const T = `${A}${s}${k}`;
            w[k] = this.translate(T, {
              ...n,
              joinArrays: !1,
              ns: l
            }), w[k] === T && (w[k] = m[k]);
          }
        m = w;
      }
    } else if (C && typeof y == "string" && Array.isArray(m))
      m = m.join(y), m && (m = this.extendTranslation(m, t, n, r));
    else {
      let P = !1, w = !1;
      const A = n.count !== void 0 && typeof n.count != "string", k = wu.hasDefaultValue(n), T = A ? this.pluralResolver.getSuffix(d, n.count, n) : "", O = n.ordinal && A ? this.pluralResolver.getSuffix(d, n.count, {
        ordinal: !1
      }) : "", I = A && !n.ordinal && n.count === 0 && this.pluralResolver.shouldUseIntlApi(), _ = I && n[`defaultValue${this.options.pluralSeparator}zero`] || n[`defaultValue${T}`] || n[`defaultValue${O}`] || n.defaultValue;
      !this.isValidLookup(m) && k && (P = !0, m = _), this.isValidLookup(m) || (w = !0, m = o);
      const L = (n.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey) && w ? void 0 : m, F = k && _ !== m && this.options.updateMissing;
      if (w || P || F) {
        if (this.logger.log(F ? "updateKey" : "missingKey", d, c, o, F ? _ : m), s) {
          const K = this.resolve(o, {
            ...n,
            keySeparator: !1
          });
          K && K.res && this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.");
        }
        let R = [];
        const M = this.languageUtils.getFallbackCodes(this.options.fallbackLng, n.lng || this.language);
        if (this.options.saveMissingTo === "fallback" && M && M[0])
          for (let K = 0; K < M.length; K++)
            R.push(M[K]);
        else this.options.saveMissingTo === "all" ? R = this.languageUtils.toResolveHierarchy(n.lng || this.language) : R.push(n.lng || this.language);
        const U = (K, G, N) => {
          const $ = k && N !== m ? N : L;
          this.options.missingKeyHandler ? this.options.missingKeyHandler(K, c, G, $, F, n) : this.backendConnector && this.backendConnector.saveMissing && this.backendConnector.saveMissing(K, c, G, $, F, n), this.emit("missingKey", K, c, G, m);
        };
        this.options.saveMissing && (this.options.saveMissingPlurals && A ? R.forEach((K) => {
          const G = this.pluralResolver.getSuffixes(K, n);
          I && n[`defaultValue${this.options.pluralSeparator}zero`] && G.indexOf(`${this.options.pluralSeparator}zero`) < 0 && G.push(`${this.options.pluralSeparator}zero`), G.forEach((N) => {
            U([K], o + N, n[`defaultValue${N}`] || _);
          });
        }) : U(R, o, _));
      }
      m = this.extendTranslation(m, t, n, p, r), w && m === o && this.options.appendNamespaceToMissingKey && (m = `${c}:${o}`), (w || P) && this.options.parseMissingKeyHandler && (this.options.compatibilityAPI !== "v1" ? m = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${c}:${o}` : o, P ? m : void 0) : m = this.options.parseMissingKeyHandler(m));
    }
    return i ? (p.res = m, p.usedParams = this.getUsedParamsDetails(n), p) : m;
  }
  extendTranslation(t, n, r, i, s) {
    var o = this;
    if (this.i18nFormat && this.i18nFormat.parse)
      t = this.i18nFormat.parse(t, {
        ...this.options.interpolation.defaultVariables,
        ...r
      }, r.lng || this.language || i.usedLng, i.usedNS, i.usedKey, {
        resolved: i
      });
    else if (!r.skipInterpolation) {
      r.interpolation && this.interpolator.init({
        ...r,
        interpolation: {
          ...this.options.interpolation,
          ...r.interpolation
        }
      });
      const d = typeof t == "string" && (r && r.interpolation && r.interpolation.skipOnVariables !== void 0 ? r.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);
      let u;
      if (d) {
        const m = t.match(this.interpolator.nestingRegexp);
        u = m && m.length;
      }
      let p = r.replace && typeof r.replace != "string" ? r.replace : r;
      if (this.options.interpolation.defaultVariables && (p = {
        ...this.options.interpolation.defaultVariables,
        ...p
      }), t = this.interpolator.interpolate(t, p, r.lng || this.language || i.usedLng, r), d) {
        const m = t.match(this.interpolator.nestingRegexp), f = m && m.length;
        u < f && (r.nest = !1);
      }
      !r.lng && this.options.compatibilityAPI !== "v1" && i && i.res && (r.lng = this.language || i.usedLng), r.nest !== !1 && (t = this.interpolator.nest(t, function() {
        for (var m = arguments.length, f = new Array(m), g = 0; g < m; g++)
          f[g] = arguments[g];
        return s && s[0] === f[0] && !r.context ? (o.logger.warn(`It seems you are nesting recursively key: ${f[0]} in key: ${n[0]}`), null) : o.translate(...f, n);
      }, r)), r.interpolation && this.interpolator.reset();
    }
    const l = r.postProcess || this.options.postProcess, c = typeof l == "string" ? [l] : l;
    return t != null && c && c.length && r.applyPostProcessor !== !1 && (t = OO.handle(c, t, n, this.options && this.options.postProcessPassResolved ? {
      i18nResolved: {
        ...i,
        usedParams: this.getUsedParamsDetails(r)
      },
      ...r
    } : r, this)), t;
  }
  resolve(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r, i, s, o, l;
    return typeof t == "string" && (t = [t]), t.forEach((c) => {
      if (this.isValidLookup(r)) return;
      const d = this.extractFromKey(c, n), u = d.key;
      i = u;
      let p = d.namespaces;
      this.options.fallbackNS && (p = p.concat(this.options.fallbackNS));
      const m = n.count !== void 0 && typeof n.count != "string", f = m && !n.ordinal && n.count === 0 && this.pluralResolver.shouldUseIntlApi(), g = n.context !== void 0 && (typeof n.context == "string" || typeof n.context == "number") && n.context !== "", b = n.lngs ? n.lngs : this.languageUtils.toResolveHierarchy(n.lng || this.language, n.fallbackLng);
      p.forEach((v) => {
        this.isValidLookup(r) || (l = v, !hC[`${b[0]}-${v}`] && this.utils && this.utils.hasLoadedNamespace && !this.utils.hasLoadedNamespace(l) && (hC[`${b[0]}-${v}`] = !0, this.logger.warn(`key "${i}" for languages "${b.join(", ")}" won't get resolved as namespace "${l}" was not yet loaded`, "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")), b.forEach((y) => {
          if (this.isValidLookup(r)) return;
          o = y;
          const C = [u];
          if (this.i18nFormat && this.i18nFormat.addLookupKeys)
            this.i18nFormat.addLookupKeys(C, u, y, v, n);
          else {
            let P;
            m && (P = this.pluralResolver.getSuffix(y, n.count, n));
            const w = `${this.options.pluralSeparator}zero`, A = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;
            if (m && (C.push(u + P), n.ordinal && P.indexOf(A) === 0 && C.push(u + P.replace(A, this.options.pluralSeparator)), f && C.push(u + w)), g) {
              const k = `${u}${this.options.contextSeparator}${n.context}`;
              C.push(k), m && (C.push(k + P), n.ordinal && P.indexOf(A) === 0 && C.push(k + P.replace(A, this.options.pluralSeparator)), f && C.push(k + w));
            }
          }
          let S;
          for (; S = C.pop(); )
            this.isValidLookup(r) || (s = S, r = this.getResource(y, v, S, n));
        }));
      });
    }), {
      res: r,
      usedKey: i,
      exactUsedKey: s,
      usedLng: o,
      usedNS: l
    };
  }
  isValidLookup(t) {
    return t !== void 0 && !(!this.options.returnNull && t === null) && !(!this.options.returnEmptyString && t === "");
  }
  getResource(t, n, r) {
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    return this.i18nFormat && this.i18nFormat.getResource ? this.i18nFormat.getResource(t, n, r, i) : this.resourceStore.getResource(t, n, r, i);
  }
  getUsedParamsDetails() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    const n = ["defaultValue", "ordinal", "context", "replace", "lng", "lngs", "fallbackLng", "ns", "keySeparator", "nsSeparator", "returnObjects", "returnDetails", "joinArrays", "postProcess", "interpolation"], r = t.replace && typeof t.replace != "string";
    let i = r ? t.replace : t;
    if (r && typeof t.count < "u" && (i.count = t.count), this.options.interpolation.defaultVariables && (i = {
      ...this.options.interpolation.defaultVariables,
      ...i
    }), !r) {
      i = {
        ...i
      };
      for (const s of n)
        delete i[s];
    }
    return i;
  }
  static hasDefaultValue(t) {
    const n = "defaultValue";
    for (const r in t)
      if (Object.prototype.hasOwnProperty.call(t, r) && n === r.substring(0, n.length) && t[r] !== void 0)
        return !0;
    return !1;
  }
}
const _m = (e) => e.charAt(0).toUpperCase() + e.slice(1);
class gC {
  constructor(t) {
    this.options = t, this.supportedLngs = this.options.supportedLngs || !1, this.logger = Hr.create("languageUtils");
  }
  getScriptPartFromCode(t) {
    if (t = Su(t), !t || t.indexOf("-") < 0) return null;
    const n = t.split("-");
    return n.length === 2 || (n.pop(), n[n.length - 1].toLowerCase() === "x") ? null : this.formatLanguageCode(n.join("-"));
  }
  getLanguagePartFromCode(t) {
    if (t = Su(t), !t || t.indexOf("-") < 0) return t;
    const n = t.split("-");
    return this.formatLanguageCode(n[0]);
  }
  formatLanguageCode(t) {
    if (typeof t == "string" && t.indexOf("-") > -1) {
      const n = ["hans", "hant", "latn", "cyrl", "cans", "mong", "arab"];
      let r = t.split("-");
      return this.options.lowerCaseLng ? r = r.map((i) => i.toLowerCase()) : r.length === 2 ? (r[0] = r[0].toLowerCase(), r[1] = r[1].toUpperCase(), n.indexOf(r[1].toLowerCase()) > -1 && (r[1] = _m(r[1].toLowerCase()))) : r.length === 3 && (r[0] = r[0].toLowerCase(), r[1].length === 2 && (r[1] = r[1].toUpperCase()), r[0] !== "sgn" && r[2].length === 2 && (r[2] = r[2].toUpperCase()), n.indexOf(r[1].toLowerCase()) > -1 && (r[1] = _m(r[1].toLowerCase())), n.indexOf(r[2].toLowerCase()) > -1 && (r[2] = _m(r[2].toLowerCase()))), r.join("-");
    }
    return this.options.cleanCode || this.options.lowerCaseLng ? t.toLowerCase() : t;
  }
  isSupportedCode(t) {
    return (this.options.load === "languageOnly" || this.options.nonExplicitSupportedLngs) && (t = this.getLanguagePartFromCode(t)), !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(t) > -1;
  }
  getBestMatchFromCodes(t) {
    if (!t) return null;
    let n;
    return t.forEach((r) => {
      if (n) return;
      const i = this.formatLanguageCode(r);
      (!this.options.supportedLngs || this.isSupportedCode(i)) && (n = i);
    }), !n && this.options.supportedLngs && t.forEach((r) => {
      if (n) return;
      const i = this.getLanguagePartFromCode(r);
      if (this.isSupportedCode(i)) return n = i;
      n = this.options.supportedLngs.find((s) => {
        if (s === i) return s;
        if (!(s.indexOf("-") < 0 && i.indexOf("-") < 0) && (s.indexOf("-") > 0 && i.indexOf("-") < 0 && s.substring(0, s.indexOf("-")) === i || s.indexOf(i) === 0 && i.length > 1))
          return s;
      });
    }), n || (n = this.getFallbackCodes(this.options.fallbackLng)[0]), n;
  }
  getFallbackCodes(t, n) {
    if (!t) return [];
    if (typeof t == "function" && (t = t(n)), typeof t == "string" && (t = [t]), Array.isArray(t)) return t;
    if (!n) return t.default || [];
    let r = t[n];
    return r || (r = t[this.getScriptPartFromCode(n)]), r || (r = t[this.formatLanguageCode(n)]), r || (r = t[this.getLanguagePartFromCode(n)]), r || (r = t.default), r || [];
  }
  toResolveHierarchy(t, n) {
    const r = this.getFallbackCodes(n || this.options.fallbackLng || [], t), i = [], s = (o) => {
      o && (this.isSupportedCode(o) ? i.push(o) : this.logger.warn(`rejecting language code not found in supportedLngs: ${o}`));
    };
    return typeof t == "string" && (t.indexOf("-") > -1 || t.indexOf("_") > -1) ? (this.options.load !== "languageOnly" && s(this.formatLanguageCode(t)), this.options.load !== "languageOnly" && this.options.load !== "currentOnly" && s(this.getScriptPartFromCode(t)), this.options.load !== "currentOnly" && s(this.getLanguagePartFromCode(t))) : typeof t == "string" && s(this.formatLanguageCode(t)), r.forEach((o) => {
      i.indexOf(o) < 0 && s(this.formatLanguageCode(o));
    }), i;
  }
}
let MV = [{
  lngs: ["ach", "ak", "am", "arn", "br", "fil", "gun", "ln", "mfe", "mg", "mi", "oc", "pt", "pt-BR", "tg", "tl", "ti", "tr", "uz", "wa"],
  nr: [1, 2],
  fc: 1
}, {
  lngs: ["af", "an", "ast", "az", "bg", "bn", "ca", "da", "de", "dev", "el", "en", "eo", "es", "et", "eu", "fi", "fo", "fur", "fy", "gl", "gu", "ha", "hi", "hu", "hy", "ia", "it", "kk", "kn", "ku", "lb", "mai", "ml", "mn", "mr", "nah", "nap", "nb", "ne", "nl", "nn", "no", "nso", "pa", "pap", "pms", "ps", "pt-PT", "rm", "sco", "se", "si", "so", "son", "sq", "sv", "sw", "ta", "te", "tk", "ur", "yo"],
  nr: [1, 2],
  fc: 2
}, {
  lngs: ["ay", "bo", "cgg", "fa", "ht", "id", "ja", "jbo", "ka", "km", "ko", "ky", "lo", "ms", "sah", "su", "th", "tt", "ug", "vi", "wo", "zh"],
  nr: [1],
  fc: 3
}, {
  lngs: ["be", "bs", "cnr", "dz", "hr", "ru", "sr", "uk"],
  nr: [1, 2, 5],
  fc: 4
}, {
  lngs: ["ar"],
  nr: [0, 1, 2, 3, 11, 100],
  fc: 5
}, {
  lngs: ["cs", "sk"],
  nr: [1, 2, 5],
  fc: 6
}, {
  lngs: ["csb", "pl"],
  nr: [1, 2, 5],
  fc: 7
}, {
  lngs: ["cy"],
  nr: [1, 2, 3, 8],
  fc: 8
}, {
  lngs: ["fr"],
  nr: [1, 2],
  fc: 9
}, {
  lngs: ["ga"],
  nr: [1, 2, 3, 7, 11],
  fc: 10
}, {
  lngs: ["gd"],
  nr: [1, 2, 3, 20],
  fc: 11
}, {
  lngs: ["is"],
  nr: [1, 2],
  fc: 12
}, {
  lngs: ["jv"],
  nr: [0, 1],
  fc: 13
}, {
  lngs: ["kw"],
  nr: [1, 2, 3, 4],
  fc: 14
}, {
  lngs: ["lt"],
  nr: [1, 2, 10],
  fc: 15
}, {
  lngs: ["lv"],
  nr: [1, 2, 0],
  fc: 16
}, {
  lngs: ["mk"],
  nr: [1, 2],
  fc: 17
}, {
  lngs: ["mnk"],
  nr: [0, 1, 2],
  fc: 18
}, {
  lngs: ["mt"],
  nr: [1, 2, 11, 20],
  fc: 19
}, {
  lngs: ["or"],
  nr: [2, 1],
  fc: 2
}, {
  lngs: ["ro"],
  nr: [1, 2, 20],
  fc: 20
}, {
  lngs: ["sl"],
  nr: [5, 1, 2, 3],
  fc: 21
}, {
  lngs: ["he", "iw"],
  nr: [1, 2, 20, 21],
  fc: 22
}], FV = {
  1: (e) => +(e > 1),
  2: (e) => +(e != 1),
  3: (e) => 0,
  4: (e) => e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2,
  5: (e) => e == 0 ? 0 : e == 1 ? 1 : e == 2 ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5,
  6: (e) => e == 1 ? 0 : e >= 2 && e <= 4 ? 1 : 2,
  7: (e) => e == 1 ? 0 : e % 10 >= 2 && e % 10 <= 4 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2,
  8: (e) => e == 1 ? 0 : e == 2 ? 1 : e != 8 && e != 11 ? 2 : 3,
  9: (e) => +(e >= 2),
  10: (e) => e == 1 ? 0 : e == 2 ? 1 : e < 7 ? 2 : e < 11 ? 3 : 4,
  11: (e) => e == 1 || e == 11 ? 0 : e == 2 || e == 12 ? 1 : e > 2 && e < 20 ? 2 : 3,
  12: (e) => +(e % 10 != 1 || e % 100 == 11),
  13: (e) => +(e !== 0),
  14: (e) => e == 1 ? 0 : e == 2 ? 1 : e == 3 ? 2 : 3,
  15: (e) => e % 10 == 1 && e % 100 != 11 ? 0 : e % 10 >= 2 && (e % 100 < 10 || e % 100 >= 20) ? 1 : 2,
  16: (e) => e % 10 == 1 && e % 100 != 11 ? 0 : e !== 0 ? 1 : 2,
  17: (e) => e == 1 || e % 10 == 1 && e % 100 != 11 ? 0 : 1,
  18: (e) => e == 0 ? 0 : e == 1 ? 1 : 2,
  19: (e) => e == 1 ? 0 : e == 0 || e % 100 > 1 && e % 100 < 11 ? 1 : e % 100 > 10 && e % 100 < 20 ? 2 : 3,
  20: (e) => e == 1 ? 0 : e == 0 || e % 100 > 0 && e % 100 < 20 ? 1 : 2,
  21: (e) => e % 100 == 1 ? 1 : e % 100 == 2 ? 2 : e % 100 == 3 || e % 100 == 4 ? 3 : 0,
  22: (e) => e == 1 ? 0 : e == 2 ? 1 : (e < 0 || e > 10) && e % 10 == 0 ? 2 : 3
};
const $V = ["v1", "v2", "v3"], jV = ["v4"], bC = {
  zero: 0,
  one: 1,
  two: 2,
  few: 3,
  many: 4,
  other: 5
}, BV = () => {
  const e = {};
  return MV.forEach((t) => {
    t.lngs.forEach((n) => {
      e[n] = {
        numbers: t.nr,
        plurals: FV[t.fc]
      };
    });
  }), e;
};
class UV {
  constructor(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    this.languageUtils = t, this.options = n, this.logger = Hr.create("pluralResolver"), (!this.options.compatibilityJSON || jV.includes(this.options.compatibilityJSON)) && (typeof Intl > "u" || !Intl.PluralRules) && (this.options.compatibilityJSON = "v3", this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")), this.rules = BV(), this.pluralRulesCache = {};
  }
  addRule(t, n) {
    this.rules[t] = n;
  }
  clearCache() {
    this.pluralRulesCache = {};
  }
  getRule(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (this.shouldUseIntlApi())
      try {
        const r = Su(t === "dev" ? "en" : t), i = n.ordinal ? "ordinal" : "cardinal", s = JSON.stringify({
          cleanedCode: r,
          type: i
        });
        if (s in this.pluralRulesCache)
          return this.pluralRulesCache[s];
        const o = new Intl.PluralRules(r, {
          type: i
        });
        return this.pluralRulesCache[s] = o, o;
      } catch {
        return;
      }
    return this.rules[t] || this.rules[this.languageUtils.getLanguagePartFromCode(t)];
  }
  needsPlural(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const r = this.getRule(t, n);
    return this.shouldUseIntlApi() ? r && r.resolvedOptions().pluralCategories.length > 1 : r && r.numbers.length > 1;
  }
  getPluralFormsOfKey(t, n) {
    let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    return this.getSuffixes(t, r).map((i) => `${n}${i}`);
  }
  getSuffixes(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    const r = this.getRule(t, n);
    return r ? this.shouldUseIntlApi() ? r.resolvedOptions().pluralCategories.sort((i, s) => bC[i] - bC[s]).map((i) => `${this.options.prepend}${n.ordinal ? `ordinal${this.options.prepend}` : ""}${i}`) : r.numbers.map((i) => this.getSuffix(t, i, n)) : [];
  }
  getSuffix(t, n) {
    let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    const i = this.getRule(t, r);
    return i ? this.shouldUseIntlApi() ? `${this.options.prepend}${r.ordinal ? `ordinal${this.options.prepend}` : ""}${i.select(n)}` : this.getSuffixRetroCompatible(i, n) : (this.logger.warn(`no plural rule found for: ${t}`), "");
  }
  getSuffixRetroCompatible(t, n) {
    const r = t.noAbs ? t.plurals(n) : t.plurals(Math.abs(n));
    let i = t.numbers[r];
    this.options.simplifyPluralSuffix && t.numbers.length === 2 && t.numbers[0] === 1 && (i === 2 ? i = "plural" : i === 1 && (i = ""));
    const s = () => this.options.prepend && i.toString() ? this.options.prepend + i.toString() : i.toString();
    return this.options.compatibilityJSON === "v1" ? i === 1 ? "" : typeof i == "number" ? `_plural_${i.toString()}` : s() : this.options.compatibilityJSON === "v2" || this.options.simplifyPluralSuffix && t.numbers.length === 2 && t.numbers[0] === 1 ? s() : this.options.prepend && r.toString() ? this.options.prepend + r.toString() : r.toString();
  }
  shouldUseIntlApi() {
    return !$V.includes(this.options.compatibilityJSON);
  }
}
const vC = function(e, t, n) {
  let r = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : ".", i = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : !0, s = PV(e, t, n);
  return !s && i && typeof n == "string" && (s = zf(e, n, r), s === void 0 && (s = zf(t, n, r))), s;
}, Rm = (e) => e.replace(/\$/g, "$$$$");
class VV {
  constructor() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    this.logger = Hr.create("interpolator"), this.options = t, this.format = t.interpolation && t.interpolation.format || ((n) => n), this.init(t);
  }
  init() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    t.interpolation || (t.interpolation = {
      escapeValue: !0
    });
    const {
      escape: n,
      escapeValue: r,
      useRawValueToEscape: i,
      prefix: s,
      prefixEscaped: o,
      suffix: l,
      suffixEscaped: c,
      formatSeparator: d,
      unescapeSuffix: u,
      unescapePrefix: p,
      nestingPrefix: m,
      nestingPrefixEscaped: f,
      nestingSuffix: g,
      nestingSuffixEscaped: b,
      nestingOptionsSeparator: v,
      maxReplaces: y,
      alwaysFormat: C
    } = t.interpolation;
    this.escape = n !== void 0 ? n : RV, this.escapeValue = r !== void 0 ? r : !0, this.useRawValueToEscape = i !== void 0 ? i : !1, this.prefix = s ? mo(s) : o || "{{", this.suffix = l ? mo(l) : c || "}}", this.formatSeparator = d || ",", this.unescapePrefix = u ? "" : p || "-", this.unescapeSuffix = this.unescapePrefix ? "" : u || "", this.nestingPrefix = m ? mo(m) : f || mo("$t("), this.nestingSuffix = g ? mo(g) : b || mo(")"), this.nestingOptionsSeparator = v || ",", this.maxReplaces = y || 1e3, this.alwaysFormat = C !== void 0 ? C : !1, this.resetRegExp();
  }
  reset() {
    this.options && this.init(this.options);
  }
  resetRegExp() {
    const t = (n, r) => n && n.source === r ? (n.lastIndex = 0, n) : new RegExp(r, "g");
    this.regexp = t(this.regexp, `${this.prefix}(.+?)${this.suffix}`), this.regexpUnescape = t(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`), this.nestingRegexp = t(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);
  }
  interpolate(t, n, r, i) {
    let s, o, l;
    const c = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {}, d = (f) => {
      if (f.indexOf(this.formatSeparator) < 0) {
        const y = vC(n, c, f, this.options.keySeparator, this.options.ignoreJSONStructure);
        return this.alwaysFormat ? this.format(y, void 0, r, {
          ...i,
          ...n,
          interpolationkey: f
        }) : y;
      }
      const g = f.split(this.formatSeparator), b = g.shift().trim(), v = g.join(this.formatSeparator).trim();
      return this.format(vC(n, c, b, this.options.keySeparator, this.options.ignoreJSONStructure), v, r, {
        ...i,
        ...n,
        interpolationkey: b
      });
    };
    this.resetRegExp();
    const u = i && i.missingInterpolationHandler || this.options.missingInterpolationHandler, p = i && i.interpolation && i.interpolation.skipOnVariables !== void 0 ? i.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;
    return [{
      regex: this.regexpUnescape,
      safeValue: (f) => Rm(f)
    }, {
      regex: this.regexp,
      safeValue: (f) => this.escapeValue ? Rm(this.escape(f)) : Rm(f)
    }].forEach((f) => {
      for (l = 0; s = f.regex.exec(t); ) {
        const g = s[1].trim();
        if (o = d(g), o === void 0)
          if (typeof u == "function") {
            const v = u(t, s, i);
            o = typeof v == "string" ? v : "";
          } else if (i && Object.prototype.hasOwnProperty.call(i, g))
            o = "";
          else if (p) {
            o = s[0];
            continue;
          } else
            this.logger.warn(`missed to pass in variable ${g} for interpolating ${t}`), o = "";
        else typeof o != "string" && !this.useRawValueToEscape && (o = dC(o));
        const b = f.safeValue(o);
        if (t = t.replace(s[0], b), p ? (f.regex.lastIndex += o.length, f.regex.lastIndex -= s[0].length) : f.regex.lastIndex = 0, l++, l >= this.maxReplaces)
          break;
      }
    }), t;
  }
  nest(t, n) {
    let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i, s, o;
    const l = (c, d) => {
      const u = this.nestingOptionsSeparator;
      if (c.indexOf(u) < 0) return c;
      const p = c.split(new RegExp(`${u}[ ]*{`));
      let m = `{${p[1]}`;
      c = p[0], m = this.interpolate(m, o);
      const f = m.match(/'/g), g = m.match(/"/g);
      (f && f.length % 2 === 0 && !g || g.length % 2 !== 0) && (m = m.replace(/'/g, '"'));
      try {
        o = JSON.parse(m), d && (o = {
          ...d,
          ...o
        });
      } catch (b) {
        return this.logger.warn(`failed parsing options string in nesting for key ${c}`, b), `${c}${u}${m}`;
      }
      return o.defaultValue && o.defaultValue.indexOf(this.prefix) > -1 && delete o.defaultValue, c;
    };
    for (; i = this.nestingRegexp.exec(t); ) {
      let c = [];
      o = {
        ...r
      }, o = o.replace && typeof o.replace != "string" ? o.replace : o, o.applyPostProcessor = !1, delete o.defaultValue;
      let d = !1;
      if (i[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(i[1])) {
        const u = i[1].split(this.formatSeparator).map((p) => p.trim());
        i[1] = u.shift(), c = u, d = !0;
      }
      if (s = n(l.call(this, i[1].trim(), o), o), s && i[0] === t && typeof s != "string") return s;
      typeof s != "string" && (s = dC(s)), s || (this.logger.warn(`missed to resolve ${i[1]} for nesting ${t}`), s = ""), d && (s = c.reduce((u, p) => this.format(u, p, r.lng, {
        ...r,
        interpolationkey: i[1].trim()
      }), s.trim())), t = t.replace(i[0], s), this.regexp.lastIndex = 0;
    }
    return t;
  }
}
const KV = (e) => {
  let t = e.toLowerCase().trim();
  const n = {};
  if (e.indexOf("(") > -1) {
    const r = e.split("(");
    t = r[0].toLowerCase().trim();
    const i = r[1].substring(0, r[1].length - 1);
    t === "currency" && i.indexOf(":") < 0 ? n.currency || (n.currency = i.trim()) : t === "relativetime" && i.indexOf(":") < 0 ? n.range || (n.range = i.trim()) : i.split(";").forEach((o) => {
      if (o) {
        const [l, ...c] = o.split(":"), d = c.join(":").trim().replace(/^'+|'+$/g, ""), u = l.trim();
        n[u] || (n[u] = d), d === "false" && (n[u] = !1), d === "true" && (n[u] = !0), isNaN(d) || (n[u] = parseInt(d, 10));
      }
    });
  }
  return {
    formatName: t,
    formatOptions: n
  };
}, fo = (e) => {
  const t = {};
  return (n, r, i) => {
    let s = i;
    i && i.interpolationkey && i.formatParams && i.formatParams[i.interpolationkey] && i[i.interpolationkey] && (s = {
      ...s,
      [i.interpolationkey]: void 0
    });
    const o = r + JSON.stringify(s);
    let l = t[o];
    return l || (l = e(Su(r), i), t[o] = l), l(n);
  };
};
class HV {
  constructor() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    this.logger = Hr.create("formatter"), this.options = t, this.formats = {
      number: fo((n, r) => {
        const i = new Intl.NumberFormat(n, {
          ...r
        });
        return (s) => i.format(s);
      }),
      currency: fo((n, r) => {
        const i = new Intl.NumberFormat(n, {
          ...r,
          style: "currency"
        });
        return (s) => i.format(s);
      }),
      datetime: fo((n, r) => {
        const i = new Intl.DateTimeFormat(n, {
          ...r
        });
        return (s) => i.format(s);
      }),
      relativetime: fo((n, r) => {
        const i = new Intl.RelativeTimeFormat(n, {
          ...r
        });
        return (s) => i.format(s, r.range || "day");
      }),
      list: fo((n, r) => {
        const i = new Intl.ListFormat(n, {
          ...r
        });
        return (s) => i.format(s);
      })
    }, this.init(t);
  }
  init(t) {
    const r = (arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
      interpolation: {}
    }).interpolation;
    this.formatSeparator = r.formatSeparator ? r.formatSeparator : r.formatSeparator || ",";
  }
  add(t, n) {
    this.formats[t.toLowerCase().trim()] = n;
  }
  addCached(t, n) {
    this.formats[t.toLowerCase().trim()] = fo(n);
  }
  format(t, n, r) {
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    const s = n.split(this.formatSeparator);
    if (s.length > 1 && s[0].indexOf("(") > 1 && s[0].indexOf(")") < 0 && s.find((l) => l.indexOf(")") > -1)) {
      const l = s.findIndex((c) => c.indexOf(")") > -1);
      s[0] = [s[0], ...s.splice(1, l)].join(this.formatSeparator);
    }
    return s.reduce((l, c) => {
      const {
        formatName: d,
        formatOptions: u
      } = KV(c);
      if (this.formats[d]) {
        let p = l;
        try {
          const m = i && i.formatParams && i.formatParams[i.interpolationkey] || {}, f = m.locale || m.lng || i.locale || i.lng || r;
          p = this.formats[d](l, f, {
            ...u,
            ...i,
            ...m
          });
        } catch (m) {
          this.logger.warn(m);
        }
        return p;
      } else
        this.logger.warn(`there was no format function for ${d}`);
      return l;
    }, t);
  }
}
const zV = (e, t) => {
  e.pending[t] !== void 0 && (delete e.pending[t], e.pendingCount--);
};
class qV extends vp {
  constructor(t, n, r) {
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
    super(), this.backend = t, this.store = n, this.services = r, this.languageUtils = r.languageUtils, this.options = i, this.logger = Hr.create("backendConnector"), this.waitingReads = [], this.maxParallelReads = i.maxParallelReads || 10, this.readingCalls = 0, this.maxRetries = i.maxRetries >= 0 ? i.maxRetries : 5, this.retryTimeout = i.retryTimeout >= 1 ? i.retryTimeout : 350, this.state = {}, this.queue = [], this.backend && this.backend.init && this.backend.init(r, i.backend, i);
  }
  queueLoad(t, n, r, i) {
    const s = {}, o = {}, l = {}, c = {};
    return t.forEach((d) => {
      let u = !0;
      n.forEach((p) => {
        const m = `${d}|${p}`;
        !r.reload && this.store.hasResourceBundle(d, p) ? this.state[m] = 2 : this.state[m] < 0 || (this.state[m] === 1 ? o[m] === void 0 && (o[m] = !0) : (this.state[m] = 1, u = !1, o[m] === void 0 && (o[m] = !0), s[m] === void 0 && (s[m] = !0), c[p] === void 0 && (c[p] = !0)));
      }), u || (l[d] = !0);
    }), (Object.keys(s).length || Object.keys(o).length) && this.queue.push({
      pending: o,
      pendingCount: Object.keys(o).length,
      loaded: {},
      errors: [],
      callback: i
    }), {
      toLoad: Object.keys(s),
      pending: Object.keys(o),
      toLoadLanguages: Object.keys(l),
      toLoadNamespaces: Object.keys(c)
    };
  }
  loaded(t, n, r) {
    const i = t.split("|"), s = i[0], o = i[1];
    n && this.emit("failedLoading", s, o, n), !n && r && this.store.addResourceBundle(s, o, r, void 0, void 0, {
      skipCopy: !0
    }), this.state[t] = n ? -1 : 2, n && r && (this.state[t] = 0);
    const l = {};
    this.queue.forEach((c) => {
      EV(c.loaded, [s], o), zV(c, t), n && c.errors.push(n), c.pendingCount === 0 && !c.done && (Object.keys(c.loaded).forEach((d) => {
        l[d] || (l[d] = {});
        const u = c.loaded[d];
        u.length && u.forEach((p) => {
          l[d][p] === void 0 && (l[d][p] = !0);
        });
      }), c.done = !0, c.errors.length ? c.callback(c.errors) : c.callback());
    }), this.emit("loaded", l), this.queue = this.queue.filter((c) => !c.done);
  }
  read(t, n, r) {
    let i = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, s = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : this.retryTimeout, o = arguments.length > 5 ? arguments[5] : void 0;
    if (!t.length) return o(null, {});
    if (this.readingCalls >= this.maxParallelReads) {
      this.waitingReads.push({
        lng: t,
        ns: n,
        fcName: r,
        tried: i,
        wait: s,
        callback: o
      });
      return;
    }
    this.readingCalls++;
    const l = (d, u) => {
      if (this.readingCalls--, this.waitingReads.length > 0) {
        const p = this.waitingReads.shift();
        this.read(p.lng, p.ns, p.fcName, p.tried, p.wait, p.callback);
      }
      if (d && u && i < this.maxRetries) {
        setTimeout(() => {
          this.read.call(this, t, n, r, i + 1, s * 2, o);
        }, s);
        return;
      }
      o(d, u);
    }, c = this.backend[r].bind(this.backend);
    if (c.length === 2) {
      try {
        const d = c(t, n);
        d && typeof d.then == "function" ? d.then((u) => l(null, u)).catch(l) : l(null, d);
      } catch (d) {
        l(d);
      }
      return;
    }
    return c(t, n, l);
  }
  prepareLoading(t, n) {
    let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, i = arguments.length > 3 ? arguments[3] : void 0;
    if (!this.backend)
      return this.logger.warn("No backend was added via i18next.use. Will not load resources."), i && i();
    typeof t == "string" && (t = this.languageUtils.toResolveHierarchy(t)), typeof n == "string" && (n = [n]);
    const s = this.queueLoad(t, n, r, i);
    if (!s.toLoad.length)
      return s.pending.length || i(), null;
    s.toLoad.forEach((o) => {
      this.loadOne(o);
    });
  }
  load(t, n, r) {
    this.prepareLoading(t, n, {}, r);
  }
  reload(t, n, r) {
    this.prepareLoading(t, n, {
      reload: !0
    }, r);
  }
  loadOne(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "";
    const r = t.split("|"), i = r[0], s = r[1];
    this.read(i, s, "read", void 0, void 0, (o, l) => {
      o && this.logger.warn(`${n}loading namespace ${s} for language ${i} failed`, o), !o && l && this.logger.log(`${n}loaded namespace ${s} for language ${i}`, l), this.loaded(t, o, l);
    });
  }
  saveMissing(t, n, r, i, s) {
    let o = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {}, l = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : () => {
    };
    if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(n)) {
      this.logger.warn(`did not save key "${r}" as the namespace "${n}" was not yet loaded`, "This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");
      return;
    }
    if (!(r == null || r === "")) {
      if (this.backend && this.backend.create) {
        const c = {
          ...o,
          isUpdate: s
        }, d = this.backend.create.bind(this.backend);
        if (d.length < 6)
          try {
            let u;
            d.length === 5 ? u = d(t, n, r, i, c) : u = d(t, n, r, i), u && typeof u.then == "function" ? u.then((p) => l(null, p)).catch(l) : l(null, u);
          } catch (u) {
            l(u);
          }
        else
          d(t, n, r, i, l, c);
      }
      !t || !t[0] || this.store.addResource(t[0], n, r, i);
    }
  }
}
const yC = () => ({
  debug: !1,
  initImmediate: !0,
  ns: ["translation"],
  defaultNS: ["translation"],
  fallbackLng: ["dev"],
  fallbackNS: !1,
  supportedLngs: !1,
  nonExplicitSupportedLngs: !1,
  load: "all",
  preload: !1,
  simplifyPluralSuffix: !0,
  keySeparator: ".",
  nsSeparator: ":",
  pluralSeparator: "_",
  contextSeparator: "_",
  partialBundledLanguages: !1,
  saveMissing: !1,
  updateMissing: !1,
  saveMissingTo: "fallback",
  saveMissingPlurals: !0,
  missingKeyHandler: !1,
  missingInterpolationHandler: !1,
  postProcess: !1,
  postProcessPassResolved: !1,
  returnNull: !1,
  returnEmptyString: !0,
  returnObjects: !1,
  joinArrays: !1,
  returnedObjectHandler: !1,
  parseMissingKeyHandler: !1,
  appendNamespaceToMissingKey: !1,
  appendNamespaceToCIMode: !1,
  overloadTranslationOptionHandler: (e) => {
    let t = {};
    if (typeof e[1] == "object" && (t = e[1]), typeof e[1] == "string" && (t.defaultValue = e[1]), typeof e[2] == "string" && (t.tDescription = e[2]), typeof e[2] == "object" || typeof e[3] == "object") {
      const n = e[3] || e[2];
      Object.keys(n).forEach((r) => {
        t[r] = n[r];
      });
    }
    return t;
  },
  interpolation: {
    escapeValue: !0,
    format: (e) => e,
    prefix: "{{",
    suffix: "}}",
    formatSeparator: ",",
    unescapePrefix: "-",
    nestingPrefix: "$t(",
    nestingSuffix: ")",
    nestingOptionsSeparator: ",",
    maxReplaces: 1e3,
    skipOnVariables: !0
  }
}), CC = (e) => (typeof e.ns == "string" && (e.ns = [e.ns]), typeof e.fallbackLng == "string" && (e.fallbackLng = [e.fallbackLng]), typeof e.fallbackNS == "string" && (e.fallbackNS = [e.fallbackNS]), e.supportedLngs && e.supportedLngs.indexOf("cimode") < 0 && (e.supportedLngs = e.supportedLngs.concat(["cimode"])), e), xd = () => {
}, GV = (e) => {
  Object.getOwnPropertyNames(Object.getPrototypeOf(e)).forEach((n) => {
    typeof e[n] == "function" && (e[n] = e[n].bind(e));
  });
};
class Pc extends vp {
  constructor() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 ? arguments[1] : void 0;
    if (super(), this.options = CC(t), this.services = {}, this.logger = Hr, this.modules = {
      external: []
    }, GV(this), n && !this.isInitialized && !t.isClone) {
      if (!this.options.initImmediate)
        return this.init(t, n), this;
      setTimeout(() => {
        this.init(t, n);
      }, 0);
    }
  }
  init() {
    var t = this;
    let n = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, r = arguments.length > 1 ? arguments[1] : void 0;
    this.isInitializing = !0, typeof n == "function" && (r = n, n = {}), !n.defaultNS && n.defaultNS !== !1 && n.ns && (typeof n.ns == "string" ? n.defaultNS = n.ns : n.ns.indexOf("translation") < 0 && (n.defaultNS = n.ns[0]));
    const i = yC();
    this.options = {
      ...i,
      ...this.options,
      ...CC(n)
    }, this.options.compatibilityAPI !== "v1" && (this.options.interpolation = {
      ...i.interpolation,
      ...this.options.interpolation
    }), n.keySeparator !== void 0 && (this.options.userDefinedKeySeparator = n.keySeparator), n.nsSeparator !== void 0 && (this.options.userDefinedNsSeparator = n.nsSeparator);
    const s = (u) => u ? typeof u == "function" ? new u() : u : null;
    if (!this.options.isClone) {
      this.modules.logger ? Hr.init(s(this.modules.logger), this.options) : Hr.init(null, this.options);
      let u;
      this.modules.formatter ? u = this.modules.formatter : typeof Intl < "u" && (u = HV);
      const p = new gC(this.options);
      this.store = new fC(this.options.resources, this.options);
      const m = this.services;
      m.logger = Hr, m.resourceStore = this.store, m.languageUtils = p, m.pluralResolver = new UV(p, {
        prepend: this.options.pluralSeparator,
        compatibilityJSON: this.options.compatibilityJSON,
        simplifyPluralSuffix: this.options.simplifyPluralSuffix
      }), u && (!this.options.interpolation.format || this.options.interpolation.format === i.interpolation.format) && (m.formatter = s(u), m.formatter.init(m, this.options), this.options.interpolation.format = m.formatter.format.bind(m.formatter)), m.interpolator = new VV(this.options), m.utils = {
        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)
      }, m.backendConnector = new qV(s(this.modules.backend), m.resourceStore, m, this.options), m.backendConnector.on("*", function(f) {
        for (var g = arguments.length, b = new Array(g > 1 ? g - 1 : 0), v = 1; v < g; v++)
          b[v - 1] = arguments[v];
        t.emit(f, ...b);
      }), this.modules.languageDetector && (m.languageDetector = s(this.modules.languageDetector), m.languageDetector.init && m.languageDetector.init(m, this.options.detection, this.options)), this.modules.i18nFormat && (m.i18nFormat = s(this.modules.i18nFormat), m.i18nFormat.init && m.i18nFormat.init(this)), this.translator = new wu(this.services, this.options), this.translator.on("*", function(f) {
        for (var g = arguments.length, b = new Array(g > 1 ? g - 1 : 0), v = 1; v < g; v++)
          b[v - 1] = arguments[v];
        t.emit(f, ...b);
      }), this.modules.external.forEach((f) => {
        f.init && f.init(this);
      });
    }
    if (this.format = this.options.interpolation.format, r || (r = xd), this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {
      const u = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);
      u.length > 0 && u[0] !== "dev" && (this.options.lng = u[0]);
    }
    !this.services.languageDetector && !this.options.lng && this.logger.warn("init: no languageDetector is used and no lng is defined"), ["getResource", "hasResourceBundle", "getResourceBundle", "getDataByLanguage"].forEach((u) => {
      this[u] = function() {
        return t.store[u](...arguments);
      };
    }), ["addResource", "addResources", "addResourceBundle", "removeResourceBundle"].forEach((u) => {
      this[u] = function() {
        return t.store[u](...arguments), t;
      };
    });
    const c = Ll(), d = () => {
      const u = (p, m) => {
        this.isInitializing = !1, this.isInitialized && !this.initializedStoreOnce && this.logger.warn("init: i18next is already initialized. You should call init just once!"), this.isInitialized = !0, this.options.isClone || this.logger.log("initialized", this.options), this.emit("initialized", this.options), c.resolve(m), r(p, m);
      };
      if (this.languages && this.options.compatibilityAPI !== "v1" && !this.isInitialized) return u(null, this.t.bind(this));
      this.changeLanguage(this.options.lng, u);
    };
    return this.options.resources || !this.options.initImmediate ? d() : setTimeout(d, 0), c;
  }
  loadResources(t) {
    let r = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : xd;
    const i = typeof t == "string" ? t : this.language;
    if (typeof t == "function" && (r = t), !this.options.resources || this.options.partialBundledLanguages) {
      if (i && i.toLowerCase() === "cimode" && (!this.options.preload || this.options.preload.length === 0)) return r();
      const s = [], o = (l) => {
        if (!l || l === "cimode") return;
        this.services.languageUtils.toResolveHierarchy(l).forEach((d) => {
          d !== "cimode" && s.indexOf(d) < 0 && s.push(d);
        });
      };
      i ? o(i) : this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach((c) => o(c)), this.options.preload && this.options.preload.forEach((l) => o(l)), this.services.backendConnector.load(s, this.options.ns, (l) => {
        !l && !this.resolvedLanguage && this.language && this.setResolvedLanguage(this.language), r(l);
      });
    } else
      r(null);
  }
  reloadResources(t, n, r) {
    const i = Ll();
    return typeof t == "function" && (r = t, t = void 0), typeof n == "function" && (r = n, n = void 0), t || (t = this.languages), n || (n = this.options.ns), r || (r = xd), this.services.backendConnector.reload(t, n, (s) => {
      i.resolve(), r(s);
    }), i;
  }
  use(t) {
    if (!t) throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");
    if (!t.type) throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");
    return t.type === "backend" && (this.modules.backend = t), (t.type === "logger" || t.log && t.warn && t.error) && (this.modules.logger = t), t.type === "languageDetector" && (this.modules.languageDetector = t), t.type === "i18nFormat" && (this.modules.i18nFormat = t), t.type === "postProcessor" && OO.addPostProcessor(t), t.type === "formatter" && (this.modules.formatter = t), t.type === "3rdParty" && this.modules.external.push(t), this;
  }
  setResolvedLanguage(t) {
    if (!(!t || !this.languages) && !(["cimode", "dev"].indexOf(t) > -1))
      for (let n = 0; n < this.languages.length; n++) {
        const r = this.languages[n];
        if (!(["cimode", "dev"].indexOf(r) > -1) && this.store.hasLanguageSomeTranslations(r)) {
          this.resolvedLanguage = r;
          break;
        }
      }
  }
  changeLanguage(t, n) {
    var r = this;
    this.isLanguageChangingTo = t;
    const i = Ll();
    this.emit("languageChanging", t);
    const s = (c) => {
      this.language = c, this.languages = this.services.languageUtils.toResolveHierarchy(c), this.resolvedLanguage = void 0, this.setResolvedLanguage(c);
    }, o = (c, d) => {
      d ? (s(d), this.translator.changeLanguage(d), this.isLanguageChangingTo = void 0, this.emit("languageChanged", d), this.logger.log("languageChanged", d)) : this.isLanguageChangingTo = void 0, i.resolve(function() {
        return r.t(...arguments);
      }), n && n(c, function() {
        return r.t(...arguments);
      });
    }, l = (c) => {
      !t && !c && this.services.languageDetector && (c = []);
      const d = typeof c == "string" ? c : this.services.languageUtils.getBestMatchFromCodes(c);
      d && (this.language || s(d), this.translator.language || this.translator.changeLanguage(d), this.services.languageDetector && this.services.languageDetector.cacheUserLanguage && this.services.languageDetector.cacheUserLanguage(d)), this.loadResources(d, (u) => {
        o(u, d);
      });
    };
    return !t && this.services.languageDetector && !this.services.languageDetector.async ? l(this.services.languageDetector.detect()) : !t && this.services.languageDetector && this.services.languageDetector.async ? this.services.languageDetector.detect.length === 0 ? this.services.languageDetector.detect().then(l) : this.services.languageDetector.detect(l) : l(t), i;
  }
  getFixedT(t, n, r) {
    var i = this;
    const s = function(o, l) {
      let c;
      if (typeof l != "object") {
        for (var d = arguments.length, u = new Array(d > 2 ? d - 2 : 0), p = 2; p < d; p++)
          u[p - 2] = arguments[p];
        c = i.options.overloadTranslationOptionHandler([o, l].concat(u));
      } else
        c = {
          ...l
        };
      c.lng = c.lng || s.lng, c.lngs = c.lngs || s.lngs, c.ns = c.ns || s.ns, c.keyPrefix !== "" && (c.keyPrefix = c.keyPrefix || r || s.keyPrefix);
      const m = i.options.keySeparator || ".";
      let f;
      return c.keyPrefix && Array.isArray(o) ? f = o.map((g) => `${c.keyPrefix}${m}${g}`) : f = c.keyPrefix ? `${c.keyPrefix}${m}${o}` : o, i.t(f, c);
    };
    return typeof t == "string" ? s.lng = t : s.lngs = t, s.ns = n, s.keyPrefix = r, s;
  }
  t() {
    return this.translator && this.translator.translate(...arguments);
  }
  exists() {
    return this.translator && this.translator.exists(...arguments);
  }
  setDefaultNamespace(t) {
    this.options.defaultNS = t;
  }
  hasLoadedNamespace(t) {
    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
    if (!this.isInitialized)
      return this.logger.warn("hasLoadedNamespace: i18next was not initialized", this.languages), !1;
    if (!this.languages || !this.languages.length)
      return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty", this.languages), !1;
    const r = n.lng || this.resolvedLanguage || this.languages[0], i = this.options ? this.options.fallbackLng : !1, s = this.languages[this.languages.length - 1];
    if (r.toLowerCase() === "cimode") return !0;
    const o = (l, c) => {
      const d = this.services.backendConnector.state[`${l}|${c}`];
      return d === -1 || d === 0 || d === 2;
    };
    if (n.precheck) {
      const l = n.precheck(this, o);
      if (l !== void 0) return l;
    }
    return !!(this.hasResourceBundle(r, t) || !this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages || o(r, t) && (!i || o(s, t)));
  }
  loadNamespaces(t, n) {
    const r = Ll();
    return this.options.ns ? (typeof t == "string" && (t = [t]), t.forEach((i) => {
      this.options.ns.indexOf(i) < 0 && this.options.ns.push(i);
    }), this.loadResources((i) => {
      r.resolve(), n && n(i);
    }), r) : (n && n(), Promise.resolve());
  }
  loadLanguages(t, n) {
    const r = Ll();
    typeof t == "string" && (t = [t]);
    const i = this.options.preload || [], s = t.filter((o) => i.indexOf(o) < 0 && this.services.languageUtils.isSupportedCode(o));
    return s.length ? (this.options.preload = i.concat(s), this.loadResources((o) => {
      r.resolve(), n && n(o);
    }), r) : (n && n(), Promise.resolve());
  }
  dir(t) {
    if (t || (t = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language)), !t) return "rtl";
    const n = ["ar", "shu", "sqr", "ssh", "xaa", "yhd", "yud", "aao", "abh", "abv", "acm", "acq", "acw", "acx", "acy", "adf", "ads", "aeb", "aec", "afb", "ajp", "apc", "apd", "arb", "arq", "ars", "ary", "arz", "auz", "avl", "ayh", "ayl", "ayn", "ayp", "bbz", "pga", "he", "iw", "ps", "pbt", "pbu", "pst", "prp", "prd", "ug", "ur", "ydd", "yds", "yih", "ji", "yi", "hbo", "men", "xmn", "fa", "jpr", "peo", "pes", "prs", "dv", "sam", "ckb"], r = this.services && this.services.languageUtils || new gC(yC());
    return n.indexOf(r.getLanguagePartFromCode(t)) > -1 || t.toLowerCase().indexOf("-arab") > 1 ? "rtl" : "ltr";
  }
  static createInstance() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 ? arguments[1] : void 0;
    return new Pc(t, n);
  }
  cloneInstance() {
    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : xd;
    const r = t.forkResourceStore;
    r && delete t.forkResourceStore;
    const i = {
      ...this.options,
      ...t,
      isClone: !0
    }, s = new Pc(i);
    return (t.debug !== void 0 || t.prefix !== void 0) && (s.logger = s.logger.clone(t)), ["store", "services", "language"].forEach((l) => {
      s[l] = this[l];
    }), s.services = {
      ...this.services
    }, s.services.utils = {
      hasLoadedNamespace: s.hasLoadedNamespace.bind(s)
    }, r && (s.store = new fC(this.store.data, i), s.services.resourceStore = s.store), s.translator = new wu(s.services, i), s.translator.on("*", function(l) {
      for (var c = arguments.length, d = new Array(c > 1 ? c - 1 : 0), u = 1; u < c; u++)
        d[u - 1] = arguments[u];
      s.emit(l, ...d);
    }), s.init(i, n), s.translator.options = i, s.translator.backendConnector.services.utils = {
      hasLoadedNamespace: s.hasLoadedNamespace.bind(s)
    }, s;
  }
  toJSON() {
    return {
      options: this.options,
      store: this.store,
      language: this.language,
      languages: this.languages,
      resolvedLanguage: this.resolvedLanguage
    };
  }
}
const ha = Pc.createInstance();
ha.createInstance = Pc.createInstance;
const WV = ha.createInstance;
ha.dir;
ha.init;
ha.loadResources;
ha.reloadResources;
ha.use;
ha.changeLanguage;
ha.getFixedT;
ha.t;
ha.exists;
ha.setDefaultNamespace;
ha.hasLoadedNamespace;
ha.loadNamespaces;
ha.loadLanguages;
function qf(e) {
  "@babel/helpers - typeof";
  return qf = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, qf(e);
}
function kO() {
  return typeof XMLHttpRequest == "function" || (typeof XMLHttpRequest > "u" ? "undefined" : qf(XMLHttpRequest)) === "object";
}
function XV(e) {
  return !!e && typeof e.then == "function";
}
function YV(e) {
  return XV(e) ? e : Promise.resolve(e);
}
function JV(e) {
  throw new Error('Could not dynamically require "' + e + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var Gf = { exports: {} }, Sd = { exports: {} }, xC;
function ZV() {
  return xC || (xC = 1, function(e, t) {
    var n = typeof globalThis < "u" && globalThis || typeof self < "u" && self || typeof Sa < "u" && Sa, r = function() {
      function s() {
        this.fetch = !1, this.DOMException = n.DOMException;
      }
      return s.prototype = n, new s();
    }();
    (function(s) {
      (function(o) {
        var l = typeof s < "u" && s || typeof self < "u" && self || typeof l < "u" && l, c = {
          searchParams: "URLSearchParams" in l,
          iterable: "Symbol" in l && "iterator" in Symbol,
          blob: "FileReader" in l && "Blob" in l && function() {
            try {
              return new Blob(), !0;
            } catch {
              return !1;
            }
          }(),
          formData: "FormData" in l,
          arrayBuffer: "ArrayBuffer" in l
        };
        function d(R) {
          return R && DataView.prototype.isPrototypeOf(R);
        }
        if (c.arrayBuffer)
          var u = [
            "[object Int8Array]",
            "[object Uint8Array]",
            "[object Uint8ClampedArray]",
            "[object Int16Array]",
            "[object Uint16Array]",
            "[object Int32Array]",
            "[object Uint32Array]",
            "[object Float32Array]",
            "[object Float64Array]"
          ], p = ArrayBuffer.isView || function(R) {
            return R && u.indexOf(Object.prototype.toString.call(R)) > -1;
          };
        function m(R) {
          if (typeof R != "string" && (R = String(R)), /[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(R) || R === "")
            throw new TypeError('Invalid character in header field name: "' + R + '"');
          return R.toLowerCase();
        }
        function f(R) {
          return typeof R != "string" && (R = String(R)), R;
        }
        function g(R) {
          var M = {
            next: function() {
              var U = R.shift();
              return { done: U === void 0, value: U };
            }
          };
          return c.iterable && (M[Symbol.iterator] = function() {
            return M;
          }), M;
        }
        function b(R) {
          this.map = {}, R instanceof b ? R.forEach(function(M, U) {
            this.append(U, M);
          }, this) : Array.isArray(R) ? R.forEach(function(M) {
            this.append(M[0], M[1]);
          }, this) : R && Object.getOwnPropertyNames(R).forEach(function(M) {
            this.append(M, R[M]);
          }, this);
        }
        b.prototype.append = function(R, M) {
          R = m(R), M = f(M);
          var U = this.map[R];
          this.map[R] = U ? U + ", " + M : M;
        }, b.prototype.delete = function(R) {
          delete this.map[m(R)];
        }, b.prototype.get = function(R) {
          return R = m(R), this.has(R) ? this.map[R] : null;
        }, b.prototype.has = function(R) {
          return this.map.hasOwnProperty(m(R));
        }, b.prototype.set = function(R, M) {
          this.map[m(R)] = f(M);
        }, b.prototype.forEach = function(R, M) {
          for (var U in this.map)
            this.map.hasOwnProperty(U) && R.call(M, this.map[U], U, this);
        }, b.prototype.keys = function() {
          var R = [];
          return this.forEach(function(M, U) {
            R.push(U);
          }), g(R);
        }, b.prototype.values = function() {
          var R = [];
          return this.forEach(function(M) {
            R.push(M);
          }), g(R);
        }, b.prototype.entries = function() {
          var R = [];
          return this.forEach(function(M, U) {
            R.push([U, M]);
          }), g(R);
        }, c.iterable && (b.prototype[Symbol.iterator] = b.prototype.entries);
        function v(R) {
          if (R.bodyUsed)
            return Promise.reject(new TypeError("Already read"));
          R.bodyUsed = !0;
        }
        function y(R) {
          return new Promise(function(M, U) {
            R.onload = function() {
              M(R.result);
            }, R.onerror = function() {
              U(R.error);
            };
          });
        }
        function C(R) {
          var M = new FileReader(), U = y(M);
          return M.readAsArrayBuffer(R), U;
        }
        function S(R) {
          var M = new FileReader(), U = y(M);
          return M.readAsText(R), U;
        }
        function P(R) {
          for (var M = new Uint8Array(R), U = new Array(M.length), K = 0; K < M.length; K++)
            U[K] = String.fromCharCode(M[K]);
          return U.join("");
        }
        function w(R) {
          if (R.slice)
            return R.slice(0);
          var M = new Uint8Array(R.byteLength);
          return M.set(new Uint8Array(R)), M.buffer;
        }
        function A() {
          return this.bodyUsed = !1, this._initBody = function(R) {
            this.bodyUsed = this.bodyUsed, this._bodyInit = R, R ? typeof R == "string" ? this._bodyText = R : c.blob && Blob.prototype.isPrototypeOf(R) ? this._bodyBlob = R : c.formData && FormData.prototype.isPrototypeOf(R) ? this._bodyFormData = R : c.searchParams && URLSearchParams.prototype.isPrototypeOf(R) ? this._bodyText = R.toString() : c.arrayBuffer && c.blob && d(R) ? (this._bodyArrayBuffer = w(R.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : c.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(R) || p(R)) ? this._bodyArrayBuffer = w(R) : this._bodyText = R = Object.prototype.toString.call(R) : this._bodyText = "", this.headers.get("content-type") || (typeof R == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : c.searchParams && URLSearchParams.prototype.isPrototypeOf(R) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
          }, c.blob && (this.blob = function() {
            var R = v(this);
            if (R)
              return R;
            if (this._bodyBlob)
              return Promise.resolve(this._bodyBlob);
            if (this._bodyArrayBuffer)
              return Promise.resolve(new Blob([this._bodyArrayBuffer]));
            if (this._bodyFormData)
              throw new Error("could not read FormData body as blob");
            return Promise.resolve(new Blob([this._bodyText]));
          }, this.arrayBuffer = function() {
            if (this._bodyArrayBuffer) {
              var R = v(this);
              return R || (ArrayBuffer.isView(this._bodyArrayBuffer) ? Promise.resolve(
                this._bodyArrayBuffer.buffer.slice(
                  this._bodyArrayBuffer.byteOffset,
                  this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength
                )
              ) : Promise.resolve(this._bodyArrayBuffer));
            } else
              return this.blob().then(C);
          }), this.text = function() {
            var R = v(this);
            if (R)
              return R;
            if (this._bodyBlob)
              return S(this._bodyBlob);
            if (this._bodyArrayBuffer)
              return Promise.resolve(P(this._bodyArrayBuffer));
            if (this._bodyFormData)
              throw new Error("could not read FormData body as text");
            return Promise.resolve(this._bodyText);
          }, c.formData && (this.formData = function() {
            return this.text().then(I);
          }), this.json = function() {
            return this.text().then(JSON.parse);
          }, this;
        }
        var k = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
        function T(R) {
          var M = R.toUpperCase();
          return k.indexOf(M) > -1 ? M : R;
        }
        function O(R, M) {
          if (!(this instanceof O))
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
          M = M || {};
          var U = M.body;
          if (R instanceof O) {
            if (R.bodyUsed)
              throw new TypeError("Already read");
            this.url = R.url, this.credentials = R.credentials, M.headers || (this.headers = new b(R.headers)), this.method = R.method, this.mode = R.mode, this.signal = R.signal, !U && R._bodyInit != null && (U = R._bodyInit, R.bodyUsed = !0);
          } else
            this.url = String(R);
          if (this.credentials = M.credentials || this.credentials || "same-origin", (M.headers || !this.headers) && (this.headers = new b(M.headers)), this.method = T(M.method || this.method || "GET"), this.mode = M.mode || this.mode || null, this.signal = M.signal || this.signal, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && U)
            throw new TypeError("Body not allowed for GET or HEAD requests");
          if (this._initBody(U), (this.method === "GET" || this.method === "HEAD") && (M.cache === "no-store" || M.cache === "no-cache")) {
            var K = /([?&])_=[^&]*/;
            if (K.test(this.url))
              this.url = this.url.replace(K, "$1_=" + (/* @__PURE__ */ new Date()).getTime());
            else {
              var G = /\?/;
              this.url += (G.test(this.url) ? "&" : "?") + "_=" + (/* @__PURE__ */ new Date()).getTime();
            }
          }
        }
        O.prototype.clone = function() {
          return new O(this, { body: this._bodyInit });
        };
        function I(R) {
          var M = new FormData();
          return R.trim().split("&").forEach(function(U) {
            if (U) {
              var K = U.split("="), G = K.shift().replace(/\+/g, " "), N = K.join("=").replace(/\+/g, " ");
              M.append(decodeURIComponent(G), decodeURIComponent(N));
            }
          }), M;
        }
        function _(R) {
          var M = new b(), U = R.replace(/\r?\n[\t ]+/g, " ");
          return U.split("\r").map(function(K) {
            return K.indexOf(`
`) === 0 ? K.substr(1, K.length) : K;
          }).forEach(function(K) {
            var G = K.split(":"), N = G.shift().trim();
            if (N) {
              var $ = G.join(":").trim();
              M.append(N, $);
            }
          }), M;
        }
        A.call(O.prototype);
        function E(R, M) {
          if (!(this instanceof E))
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
          M || (M = {}), this.type = "default", this.status = M.status === void 0 ? 200 : M.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = M.statusText === void 0 ? "" : "" + M.statusText, this.headers = new b(M.headers), this.url = M.url || "", this._initBody(R);
        }
        A.call(E.prototype), E.prototype.clone = function() {
          return new E(this._bodyInit, {
            status: this.status,
            statusText: this.statusText,
            headers: new b(this.headers),
            url: this.url
          });
        }, E.error = function() {
          var R = new E(null, { status: 0, statusText: "" });
          return R.type = "error", R;
        };
        var L = [301, 302, 303, 307, 308];
        E.redirect = function(R, M) {
          if (L.indexOf(M) === -1)
            throw new RangeError("Invalid status code");
          return new E(null, { status: M, headers: { location: R } });
        }, o.DOMException = l.DOMException;
        try {
          new o.DOMException();
        } catch {
          o.DOMException = function(M, U) {
            this.message = M, this.name = U;
            var K = Error(M);
            this.stack = K.stack;
          }, o.DOMException.prototype = Object.create(Error.prototype), o.DOMException.prototype.constructor = o.DOMException;
        }
        function F(R, M) {
          return new Promise(function(U, K) {
            var G = new O(R, M);
            if (G.signal && G.signal.aborted)
              return K(new o.DOMException("Aborted", "AbortError"));
            var N = new XMLHttpRequest();
            function $() {
              N.abort();
            }
            N.onload = function() {
              var V = {
                status: N.status,
                statusText: N.statusText,
                headers: _(N.getAllResponseHeaders() || "")
              };
              V.url = "responseURL" in N ? N.responseURL : V.headers.get("X-Request-URL");
              var B = "response" in N ? N.response : N.responseText;
              setTimeout(function() {
                U(new E(B, V));
              }, 0);
            }, N.onerror = function() {
              setTimeout(function() {
                K(new TypeError("Network request failed"));
              }, 0);
            }, N.ontimeout = function() {
              setTimeout(function() {
                K(new TypeError("Network request failed"));
              }, 0);
            }, N.onabort = function() {
              setTimeout(function() {
                K(new o.DOMException("Aborted", "AbortError"));
              }, 0);
            };
            function q(V) {
              try {
                return V === "" && l.location.href ? l.location.href : V;
              } catch {
                return V;
              }
            }
            N.open(G.method, q(G.url), !0), G.credentials === "include" ? N.withCredentials = !0 : G.credentials === "omit" && (N.withCredentials = !1), "responseType" in N && (c.blob ? N.responseType = "blob" : c.arrayBuffer && G.headers.get("Content-Type") && G.headers.get("Content-Type").indexOf("application/octet-stream") !== -1 && (N.responseType = "arraybuffer")), M && typeof M.headers == "object" && !(M.headers instanceof b) ? Object.getOwnPropertyNames(M.headers).forEach(function(V) {
              N.setRequestHeader(V, f(M.headers[V]));
            }) : G.headers.forEach(function(V, B) {
              N.setRequestHeader(B, V);
            }), G.signal && (G.signal.addEventListener("abort", $), N.onreadystatechange = function() {
              N.readyState === 4 && G.signal.removeEventListener("abort", $);
            }), N.send(typeof G._bodyInit > "u" ? null : G._bodyInit);
          });
        }
        return F.polyfill = !0, l.fetch || (l.fetch = F, l.Headers = b, l.Request = O, l.Response = E), o.Headers = b, o.Request = O, o.Response = E, o.fetch = F, o;
      })({});
    })(r), r.fetch.ponyfill = !0, delete r.fetch.polyfill;
    var i = n.fetch ? n : r;
    t = i.fetch, t.default = i.fetch, t.fetch = i.fetch, t.Headers = i.Headers, t.Request = i.Request, t.Response = i.Response, e.exports = t;
  }(Sd, Sd.exports)), Sd.exports;
}
(function(e, t) {
  var n;
  if (typeof fetch == "function" && (typeof Sa < "u" && Sa.fetch ? n = Sa.fetch : typeof window < "u" && window.fetch ? n = window.fetch : n = fetch), typeof JV < "u" && typeof window > "u") {
    var r = n || ZV();
    r.default && (r = r.default), t.default = r, e.exports = t.default;
  }
})(Gf, Gf.exports);
var TO = Gf.exports;
const IO = /* @__PURE__ */ Vh(TO), SC = /* @__PURE__ */ JI({
  __proto__: null,
  default: IO
}, [TO]);
function wC(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function OC(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? wC(Object(n), !0).forEach(function(r) {
      QV(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : wC(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function QV(e, t, n) {
  return (t = eK(t)) in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e;
}
function eK(e) {
  var t = tK(e, "string");
  return Fs(t) == "symbol" ? t : t + "";
}
function tK(e, t) {
  if (Fs(e) != "object" || !e) return e;
  var n = e[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(e, t || "default");
    if (Fs(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
function Fs(e) {
  "@babel/helpers - typeof";
  return Fs = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, Fs(e);
}
var Oi;
typeof fetch == "function" && (typeof global < "u" && global.fetch ? Oi = global.fetch : typeof window < "u" && window.fetch ? Oi = window.fetch : Oi = fetch);
var _c;
kO() && (typeof global < "u" && global.XMLHttpRequest ? _c = global.XMLHttpRequest : typeof window < "u" && window.XMLHttpRequest && (_c = window.XMLHttpRequest));
var Ou;
typeof ActiveXObject == "function" && (typeof global < "u" && global.ActiveXObject ? Ou = global.ActiveXObject : typeof window < "u" && window.ActiveXObject && (Ou = window.ActiveXObject));
!Oi && SC && !_c && !Ou && (Oi = IO || SC);
typeof Oi != "function" && (Oi = void 0);
var Wf = function(t, n) {
  if (n && Fs(n) === "object") {
    var r = "";
    for (var i in n)
      r += "&" + encodeURIComponent(i) + "=" + encodeURIComponent(n[i]);
    if (!r) return t;
    t = t + (t.indexOf("?") !== -1 ? "&" : "?") + r.slice(1);
  }
  return t;
}, kC = function(t, n, r, i) {
  var s = function(c) {
    if (!c.ok) return r(c.statusText || "Error", {
      status: c.status
    });
    c.text().then(function(d) {
      r(null, {
        status: c.status,
        data: d
      });
    }).catch(r);
  };
  if (i) {
    var o = i(t, n);
    if (o instanceof Promise) {
      o.then(s).catch(r);
      return;
    }
  }
  typeof fetch == "function" ? fetch(t, n).then(s).catch(r) : Oi(t, n).then(s).catch(r);
}, TC = !1, nK = function(t, n, r, i) {
  t.queryStringParams && (n = Wf(n, t.queryStringParams));
  var s = OC({}, typeof t.customHeaders == "function" ? t.customHeaders() : t.customHeaders);
  typeof window > "u" && typeof global < "u" && typeof global.process < "u" && global.process.versions && global.process.versions.node && (s["User-Agent"] = "i18next-http-backend (node/".concat(global.process.version, "; ").concat(global.process.platform, " ").concat(global.process.arch, ")")), r && (s["Content-Type"] = "application/json");
  var o = typeof t.requestOptions == "function" ? t.requestOptions(r) : t.requestOptions, l = OC({
    method: r ? "POST" : "GET",
    body: r ? t.stringify(r) : void 0,
    headers: s
  }, TC ? {} : o), c = typeof t.alternateFetch == "function" && t.alternateFetch.length >= 1 ? t.alternateFetch : void 0;
  try {
    kC(n, l, i, c);
  } catch (d) {
    if (!o || Object.keys(o).length === 0 || !d.message || d.message.indexOf("not implemented") < 0)
      return i(d);
    try {
      Object.keys(o).forEach(function(u) {
        delete l[u];
      }), kC(n, l, i, c), TC = !0;
    } catch (u) {
      i(u);
    }
  }
}, aK = function(t, n, r, i) {
  r && Fs(r) === "object" && (r = Wf("", r).slice(1)), t.queryStringParams && (n = Wf(n, t.queryStringParams));
  try {
    var s;
    _c ? s = new _c() : s = new Ou("MSXML2.XMLHTTP.3.0"), s.open(r ? "POST" : "GET", n, 1), t.crossDomain || s.setRequestHeader("X-Requested-With", "XMLHttpRequest"), s.withCredentials = !!t.withCredentials, r && s.setRequestHeader("Content-Type", "application/x-www-form-urlencoded"), s.overrideMimeType && s.overrideMimeType("application/json");
    var o = t.customHeaders;
    if (o = typeof o == "function" ? o() : o, o)
      for (var l in o)
        s.setRequestHeader(l, o[l]);
    s.onreadystatechange = function() {
      s.readyState > 3 && i(s.status >= 400 ? s.statusText : null, {
        status: s.status,
        data: s.responseText
      });
    }, s.send(r);
  } catch (c) {
    console && console.log(c);
  }
}, rK = function(t, n, r, i) {
  if (typeof r == "function" && (i = r, r = void 0), i = i || function() {
  }, Oi && n.indexOf("file:") !== 0)
    return nK(t, n, r, i);
  if (kO() || typeof ActiveXObject == "function")
    return aK(t, n, r, i);
  i(new Error("No fetch and no xhr implementation found!"));
};
function Wo(e) {
  "@babel/helpers - typeof";
  return Wo = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t) {
    return typeof t;
  } : function(t) {
    return t && typeof Symbol == "function" && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : typeof t;
  }, Wo(e);
}
function IC(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function Am(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? IC(Object(n), !0).forEach(function(r) {
      EO(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : IC(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function iK(e, t) {
  if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
}
function sK(e, t) {
  for (var n = 0; n < t.length; n++) {
    var r = t[n];
    r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, PO(r.key), r);
  }
}
function oK(e, t, n) {
  return t && sK(e.prototype, t), Object.defineProperty(e, "prototype", { writable: !1 }), e;
}
function EO(e, t, n) {
  return (t = PO(t)) in e ? Object.defineProperty(e, t, { value: n, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = n, e;
}
function PO(e) {
  var t = lK(e, "string");
  return Wo(t) == "symbol" ? t : t + "";
}
function lK(e, t) {
  if (Wo(e) != "object" || !e) return e;
  var n = e[Symbol.toPrimitive];
  if (n !== void 0) {
    var r = n.call(e, t || "default");
    if (Wo(r) != "object") return r;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (t === "string" ? String : Number)(e);
}
var cK = function() {
  return {
    loadPath: "/locales/{{lng}}/{{ns}}.json",
    addPath: "/locales/add/{{lng}}/{{ns}}",
    parse: function(n) {
      return JSON.parse(n);
    },
    stringify: JSON.stringify,
    parsePayload: function(n, r, i) {
      return EO({}, r, i || "");
    },
    parseLoadPayload: function(n, r) {
    },
    request: rK,
    reloadInterval: typeof window < "u" ? !1 : 60 * 60 * 1e3,
    customHeaders: {},
    queryStringParams: {},
    crossDomain: !1,
    withCredentials: !1,
    overrideMimeType: !1,
    requestOptions: {
      mode: "cors",
      credentials: "same-origin",
      cache: "default"
    }
  };
}, _O = function() {
  function e(t) {
    var n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
    iK(this, e), this.services = t, this.options = n, this.allOptions = r, this.type = "backend", this.init(t, n, r);
  }
  return oK(e, [{
    key: "init",
    value: function(n) {
      var r = this, i = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, s = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
      if (this.services = n, this.options = Am(Am(Am({}, cK()), this.options || {}), i), this.allOptions = s, this.services && this.options.reloadInterval) {
        var o = setInterval(function() {
          return r.reload();
        }, this.options.reloadInterval);
        Wo(o) === "object" && typeof o.unref == "function" && o.unref();
      }
    }
  }, {
    key: "readMulti",
    value: function(n, r, i) {
      this._readAny(n, n, r, r, i);
    }
  }, {
    key: "read",
    value: function(n, r, i) {
      this._readAny([n], n, [r], r, i);
    }
  }, {
    key: "_readAny",
    value: function(n, r, i, s, o) {
      var l = this, c = this.options.loadPath;
      typeof this.options.loadPath == "function" && (c = this.options.loadPath(n, i)), c = YV(c), c.then(function(d) {
        if (!d) return o(null, {});
        var u = l.services.interpolator.interpolate(d, {
          lng: n.join("+"),
          ns: i.join("+")
        });
        l.loadUrl(u, o, r, s);
      });
    }
  }, {
    key: "loadUrl",
    value: function(n, r, i, s) {
      var o = this, l = typeof i == "string" ? [i] : i, c = typeof s == "string" ? [s] : s, d = this.options.parseLoadPayload(l, c);
      this.options.request(this.options, n, d, function(u, p) {
        if (p && (p.status >= 500 && p.status < 600 || !p.status)) return r("failed loading " + n + "; status code: " + p.status, !0);
        if (p && p.status >= 400 && p.status < 500) return r("failed loading " + n + "; status code: " + p.status, !1);
        if (!p && u && u.message && u.message.toLowerCase().indexOf("failed") > -1 && (u.message.indexOf("fetch") > -1 || u.message.toLowerCase().indexOf("network") > -1)) return r("failed loading " + n + ": " + u.message, !0);
        if (u) return r(u, !1);
        var m, f;
        try {
          typeof p.data == "string" ? m = o.options.parse(p.data, i, s) : m = p.data;
        } catch {
          f = "failed parsing " + n + " to json";
        }
        if (f) return r(f, !1);
        r(null, m);
      });
    }
  }, {
    key: "create",
    value: function(n, r, i, s, o) {
      var l = this;
      if (this.options.addPath) {
        typeof n == "string" && (n = [n]);
        var c = this.options.parsePayload(r, i, s), d = 0, u = [], p = [];
        n.forEach(function(m) {
          var f = l.options.addPath;
          typeof l.options.addPath == "function" && (f = l.options.addPath(m, r));
          var g = l.services.interpolator.interpolate(f, {
            lng: m,
            ns: r
          });
          l.options.request(l.options, g, c, function(b, v) {
            d += 1, u.push(b), p.push(v), d === n.length && typeof o == "function" && o(u, p);
          });
        });
      }
    }
  }, {
    key: "reload",
    value: function() {
      var n = this, r = this.services, i = r.backendConnector, s = r.languageUtils, o = r.logger, l = i.language;
      if (!(l && l.toLowerCase() === "cimode")) {
        var c = [], d = function(p) {
          var m = s.toResolveHierarchy(p);
          m.forEach(function(f) {
            c.indexOf(f) < 0 && c.push(f);
          });
        };
        d(l), this.allOptions.preload && this.allOptions.preload.forEach(function(u) {
          return d(u);
        }), c.forEach(function(u) {
          n.allOptions.ns.forEach(function(p) {
            i.read(u, p, "read", null, null, function(m, f) {
              m && o.warn("loading namespace ".concat(p, " for language ").concat(u, " failed"), m), !m && f && o.log("loaded namespace ".concat(p, " for language ").concat(u), f), i.loaded("".concat(u, "|").concat(p), m, f);
            });
          });
        });
      }
    }
  }]);
}();
_O.type = "backend";
const Lm = kU(), Nm = "/";
function Ro(...e) {
  return e.map((n, r) => {
    const i = r === 0, s = r === e.length - 1;
    return !i && n.startsWith(Nm) && (n = n.slice(1)), !s && n.endsWith(Nm) && (n = n.slice(0, -1)), n;
  }, []).join(Nm);
}
const Ma = "en", dK = ".", Wr = WV({
  fallbackLng: Ma,
  keySeparator: dK,
  interpolation: {
    escapeValue: !1
  },
  defaultNS: [Lm.realm],
  ns: [Lm.realm],
  backend: {
    loadPath: Ro(
      Lm.adminBaseUrl,
      "resources/{{ns}}/admin/{{lng}}"
    ),
    parse: (e) => {
      const t = JSON.parse(e), n = {};
      return t.forEach((r) => n[r.key] = r.value), n;
    }
  }
});
Wr.use(_O);
Wr.use(qI);
const RO = Lr(
  "RealmContext",
  void 0
), uK = ({ children: e }) => {
  const { adminClient: t } = de(), { environment: n } = La(), [r, i] = D(0), s = () => i(r + 1), [o, l] = D(), d = Do({
    path: Ng.path,
    end: !1
  })?.params.realm ?? n.realm;
  return ze(() => {
    (async () => {
      t.setConfig({ realmName: d });
      const u = encodeURIComponent(d);
      await Wr.loadNamespaces(u), Wr.setDefaultNamespace(u);
    })();
  }, [d]), _e(
    () => t.realms.findOne({ realm: d }),
    l,
    [d, r]
  ), /* @__PURE__ */ a(RO.Provider, { value: { realm: d, realmRepresentation: o, refresh: s }, children: e });
}, ye = () => Nr(RO), pK = [
  "ar",
  "dv",
  "fa",
  "ha",
  "he",
  "iw",
  "ji",
  "ps",
  "sd",
  "ug",
  "ur",
  "yi"
];
class EC {
  #e;
  constructor(t) {
    this.#e = t, this.#e?.locale && (Wr.changeLanguage(this.#e.locale, (n) => {
      n && console.warn("Error(s) loading locale", this.#e?.locale, n);
    }), pK.includes(this.#e.locale) && document.getElementsByTagName("html")[0].setAttribute("dir", "rtl"));
  }
  getDisplayName() {
    return this.#e === void 0 ? "" : this.#e.displayName;
  }
  getLocale() {
    return this.#e?.locale ?? Ma;
  }
  getRealm() {
    return this.#e?.realm ?? "";
  }
  getUserId() {
    return this.#e === void 0 ? "" : this.#e.userId;
  }
  canCreateRealm() {
    return !!this.#e?.createRealm;
  }
  getRealmAccess() {
    return this.#e === void 0 ? {} : this.#e.realm_access;
  }
  isTemporary() {
    return this.#e?.temporary ?? !1;
  }
}
const AO = Lr(
  "WhoAmIContext",
  void 0
), ga = () => Nr(AO), mK = ({ children: e }) => {
  const { adminClient: t } = de(), { environment: n } = La(), [r, i] = D(new EC()), { realm: s } = ye(), [o, l] = D(0);
  return _e(
    () => t.whoAmI.find({
      realm: n.realm,
      currentRealm: s
    }),
    (c) => {
      const d = new EC(c);
      i(d);
    },
    [o, s]
  ), /* @__PURE__ */ a(AO.Provider, { value: { refresh: () => l(o + 1), whoAmI: r }, children: e });
}, LO = Lr(
  "AccessContext",
  void 0
), Nt = () => Nr(LO), fK = ({ children: e }) => {
  const { whoAmI: t } = ga(), { realm: n } = ye(), [r, i] = D([]);
  ze(() => {
    t.getRealmAccess()[n] && i(t.getRealmAccess()[n]);
  }, [t, n]);
  const s = (...l) => l.every(
    (c) => c === "anyone" || typeof c == "function" && c({ hasAll: s, hasAny: o }) || r.includes(c)
  ), o = (...l) => l.some(
    (c) => c === "anyone" || typeof c == "function" && c({ hasAll: s, hasAny: o }) || r.includes(c)
  );
  return /* @__PURE__ */ a(LO.Provider, { value: { hasAccess: s, hasSomeAccess: o }, children: e });
}, Vi = (e) => (t) => t && Aa(e, t) || "—";
function ba() {
  const { whoAmI: e } = ga();
  return function(n, r) {
    const i = e.getLocale();
    return [...n].sort((s, o) => {
      const l = r(s), c = r(o);
      return l === void 0 || c === void 0 ? 0 : l.localeCompare(c, i);
    });
  };
}
const mr = (e) => (t) => t[e], PC = {
  delete: ["delClientRoleMappings", "delRealmRoleMappings"],
  listEffective: [
    "listRoleMappings",
    "listCompositeRealmRoleMappings",
    "listCompositeClientRoleMappings"
  ],
  listAvailable: [
    "listAvailableClientRoleMappings",
    "listAvailableRealmRoleMappings"
  ]
}, _C = {
  delete: ["delClientScopeMappings", "delRealmScopeMappings"],
  listEffective: [
    "listScopeMappings",
    "listCompositeRealmScopeMappings",
    "listCompositeClientScopeMappings"
  ],
  listAvailable: [
    "listAvailableClientScopeMappings",
    "listAvailableRealmScopeMappings"
  ]
}, yp = {
  groups: PC,
  users: PC,
  clientScopes: _C,
  clients: _C,
  roles: {
    delete: ["delCompositeRoles", "delCompositeRoles"],
    listEffective: [
      "getCompositeRoles",
      "getCompositeRoles",
      "getCompositeRolesForClient"
    ],
    listAvailable: ["listRoles", "find"]
  }
}, hK = (e, t) => e[t], Ao = (e, t, n, ...r) => hK(e, t)[n](...r), gK = (e, t, n, r) => r.map((i) => {
  const s = { id: i.role.id, name: i.role.name }, o = yp[t]?.delete[i.client ? 0 : 1];
  return Ao(
    e,
    t,
    o,
    {
      id: n,
      clientUniqueId: i.client?.id,
      client: i.client?.id,
      roles: [s]
    },
    [s]
  );
}), bK = async (e, t, n) => {
  const r = yp[t].listEffective[0], i = Ao(e, t, r, { id: n });
  if (t !== "roles")
    return i;
  const s = await i;
  return {
    clientMappings: await Promise.all(
      s.filter((l) => l.clientRole).map(async (l) => {
        const c = await e.clients.findOne({
          id: l.containerId
        });
        return l.containerId = c?.clientId, { ...c, mappings: [l] };
      })
    ),
    realmMappings: s.filter((l) => !l.clientRole)
  };
}, vK = async (e, t, n) => {
  const r = yp[t].listEffective[1];
  if (t !== "roles")
    return (await Ao(e, t, r, { id: n })).map((o) => ({
      role: o
    }));
  const i = await Ao(e, t, r, { id: n }), s = await Promise.all(
    i.filter((o) => o.composite).map((o) => Ao(e, t, r, { id: o.id }))
  );
  return [...i, ...s.flat()].map((o) => ({ role: o }));
}, yK = async (e, t, n) => {
  const r = yp[t].listAvailable[1];
  return (await Ao(e, t, r, n)).map((i) => ({
    role: i
  }));
};
function so(e) {
  return e ? { Authorization: `Bearer ${e}` } : {};
}
async function $s(e, t, n) {
  const r = await e.getAccessToken(), i = e.baseUrl;
  return await (await Ai(
    Ro(
      i,
      "admin/realms",
      encodeURIComponent(e.realmName),
      t
    ) + (n ? "?" + new URLSearchParams(n) : ""),
    {
      method: "GET",
      headers: so(r)
    }
  )).json();
}
async function CK(e) {
  return $s(e, "ui-ext/info");
}
const Dg = async (e, { id: t, type: n, first: r, max: i, search: s, endpoint: o }) => $s(e, `/ui-ext/${o}/${n}/${t}`, {
  first: (r || 0).toString(),
  max: (i || 10).toString(),
  search: s || ""
}), xK = (e, t) => Dg(e, { ...t, endpoint: "available-roles" }), SK = (e, t) => Dg(e, { ...t, endpoint: "effective-roles" }), wK = (e, t) => $s(
  e,
  "ui-ext/brute-force-user",
  t
), OK = (e, t) => Dg(e, {
  ...t,
  endpoint: "authentication-management"
}), kK = (e, t, n) => [
  ...n ? e.map((r) => ({
    ...r,
    role: {
      ...r.role,
      isInherited: !1
    }
  })) : t.map((r) => ({
    ...r,
    role: {
      ...r.role,
      isInherited: e.find((i) => i.role.id === r.role.id) === void 0
    }
  }))
], Cp = ({ role: e, client: t }) => /* @__PURE__ */ x(te, { children: [
  t?.clientId && /* @__PURE__ */ a(Ir, { isRead: !0, className: "keycloak-admin--role-mapping__client-name", children: t.clientId }),
  e.name
] }), oo = ({
  name: e,
  id: t,
  type: n,
  isManager: r = !0,
  save: i
}) => {
  const { adminClient: s } = de(), { t: o } = H(), { addAlert: l, addError: c } = we(), [d, u] = D(0), p = () => u(d + 1), [m, f] = D(!0), [g, b] = D(!1), [v, y] = D([]), C = async (A) => {
    await i(A), p();
  }, S = async () => {
    let A = [], k = [];
    m || (A = await vK(s, n, t), k = (await SK(s, {
      type: n,
      id: t
    })).map((_) => ({
      client: { clientId: _.client, id: _.clientId },
      role: { id: _.id, name: _.role, description: _.description }
    })), A = A.filter(
      (_) => !k.some(
        (E) => E.role.id === _.role.id
      )
    ));
    const T = await bK(s, n, t), O = T.realmMappings?.map((_) => ({ role: _ })) || [], I = Object.values(T.clientMappings || {}).map(
      (_) => _.mappings.map((E) => ({
        client: { clientId: _.client, ..._ },
        role: E
      }))
    ).flat();
    return [
      ...kK(
        [...I, ...O],
        [...k, ...A],
        m
      )
    ];
  }, [P, w] = Ve({
    titleKey: "removeMappingTitle",
    messageKey: o("removeMappingConfirm", { count: v.length }),
    continueButtonLabel: "remove",
    continueButtonVariant: xe.danger,
    onCancel: () => {
      y([]), p();
    },
    onConfirm: async () => {
      try {
        await Promise.all(gK(s, n, t, v)), l(o("clientScopeRemoveSuccess"), pe.success), y([]), p();
      } catch (A) {
        c("clientScopeRemoveError", A);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    g && /* @__PURE__ */ a(
      xp,
      {
        id: t,
        type: n,
        name: e,
        onAssign: C,
        onClose: () => b(!1)
      }
    ),
    /* @__PURE__ */ a(w, {}),
    /* @__PURE__ */ a(
      xt,
      {
        "data-testid": "assigned-roles",
        loader: S,
        canSelectAll: !0,
        onSelect: (A) => y(A),
        searchPlaceholderKey: "searchByName",
        ariaLabelKey: "clientScopeList",
        isRowDisabled: (A) => A.role.isInherited || !1,
        toolbarItem: /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            Zt,
            {
              label: o("hideInheritedRoles"),
              id: "hideInheritedRoles",
              "data-testid": "hideInheritedRoles",
              isChecked: m,
              onChange: (A, k) => {
                f(k), p();
              }
            }
          ) }),
          r && /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
              z,
              {
                "data-testid": "assignRole",
                onClick: () => b(!0),
                children: o("assignRole")
              }
            ) }),
            /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                "data-testid": "unAssignRole",
                onClick: P,
                isDisabled: v.length === 0,
                children: o("unAssignRole")
              }
            ) })
          ] })
        ] }),
        actions: r ? [
          {
            title: o("unAssignRole"),
            onRowClick: async (A) => (y([A]), P(), !1)
          }
        ] : [],
        columns: [
          {
            name: "role.name",
            displayKey: "name",
            transforms: [Ft(30)],
            cellRenderer: Cp
          },
          {
            name: "role.isInherited",
            displayKey: "inherent",
            cellFormatters: [ed(), un()]
          },
          {
            name: "role.description",
            displayKey: "description",
            cellFormatters: [Vi(o)]
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: o(`noRoles-${n}`),
            instructions: o(`noRolesInstructions-${n}`),
            primaryActionText: o("assignRole"),
            onPrimaryAction: () => b(!0),
            secondaryActions: [
              {
                text: o("showInheritedRoles"),
                onClick: () => {
                  f(!1), p();
                }
              }
            ]
          }
        )
      },
      `${t}${d}`
    )
  ] });
}, xp = ({
  id: e,
  name: t,
  type: n,
  isRadio: r = !1,
  isLDAPmapper: i,
  onAssign: s,
  onClose: o
}) => {
  const { adminClient: l } = de(), { t: c } = H(), { hasAccess: d } = Nt(), u = d("view-realm") || d("query-users"), [p, m] = D(!1), [f, g] = D("clients"), [b, v] = D([]), [y, C] = D(0), S = () => C(y + 1), P = ba(), w = ({ role: { name: T } }) => T?.toUpperCase(), A = async (T, O, I) => {
    const _ = {
      first: T,
      max: O
    };
    I && (_.search = I);
    const E = await yK(l, n, { ..._, id: e });
    return P(E, w).map((F) => ({
      role: F.role,
      id: F.role.id
    }));
  }, k = async (T, O, I) => {
    const _ = await xK(l, {
      id: e,
      type: n,
      first: T || 0,
      max: O || 10,
      search: I
    });
    return P(
      _.map((E) => ({
        client: { clientId: E.client, id: E.clientId },
        role: { id: E.id, name: E.role, description: E.description },
        id: E.id
      })),
      ({ client: { clientId: E }, role: { name: L } }) => `${E}${L}`
    );
  };
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.large,
      title: i ? c("assignRole") : c("assignRolesTo", { client: t }),
      isOpen: !0,
      onClose: o,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "assign",
            isDisabled: b.length === 0,
            variant: "primary",
            onClick: () => {
              s(b), o();
            },
            children: c("assign")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel",
            variant: "link",
            onClick: o,
            children: c("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        xt,
        {
          onSelect: (T) => v([...T]),
          searchPlaceholderKey: "searchByRoleName",
          isPaginated: !(f === "roles" && n !== "roles"),
          searchTypeComponent: u && /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            Kt,
            {
              onOpenChange: (T) => m(T),
              onSelect: () => {
                g(f === "roles" ? "clients" : "roles"), m(!1), S();
              },
              toggle: (T) => /* @__PURE__ */ a(
                ut,
                {
                  "data-testid": "filter-type-dropdown",
                  ref: T,
                  onClick: () => m(!p),
                  icon: /* @__PURE__ */ a(ls, {}),
                  children: c(f === "roles" ? "filterByRoles" : "filterByClients")
                }
              ),
              isOpen: p,
              children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(Ue, { "data-testid": f, children: c(f === "roles" ? "filterByClients" : "filterByRoles") }, "filter-type") })
            }
          ) }),
          canSelectAll: !0,
          isRadio: r,
          loader: f === "roles" ? A : k,
          ariaLabelKey: "roles",
          columns: [
            {
              name: "name",
              cellRenderer: Cp
            },
            {
              name: "role.description",
              displayKey: "description",
              cellFormatters: [Vi(c)]
            }
          ],
          emptyState: /* @__PURE__ */ a(
            ct,
            {
              message: c("noRoles"),
              instructions: c("noRealmRolesToAssign"),
              secondaryActions: [
                {
                  text: c("filterByClients"),
                  onClick: () => {
                    g("clients"), S();
                  }
                }
              ]
            }
          )
        },
        y
      )
    }
  );
}, RC = (e) => e?.includes(".") ? e.split(".") : ["", e || ""], TK = (e) => e.client?.clientId ? `${e.client.clientId}.${e.role.name}` : e.role.name, IK = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  required: i,
  isDisabled: s = !1
}) => {
  const { t: o } = H(), [l, c] = st(), {
    control: d,
    formState: { errors: u }
  } = De(), p = va(e);
  return /* @__PURE__ */ x(
    re,
    {
      label: o(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: o(n), fieldLabelId: `${t}` }),
      fieldId: e,
      isRequired: i,
      children: [
        /* @__PURE__ */ a(
          be,
          {
            name: p,
            defaultValue: r || "",
            control: d,
            render: ({ field: m }) => /* @__PURE__ */ x(ca, { children: [
              l && /* @__PURE__ */ a(
                xp,
                {
                  id: "id",
                  type: "roles",
                  name: e,
                  onAssign: (f) => m.onChange(TK(f[0])),
                  onClose: c,
                  isRadio: !0
                }
              ),
              m.value !== "" && /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(Vt, { textMaxWidth: "500px", onClick: () => m.onChange(""), children: /* @__PURE__ */ a(
                Cp,
                {
                  role: { name: RC(m.value)[1] },
                  client: { clientId: RC(m.value)[0] }
                }
              ) }) }),
              /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(
                z,
                {
                  onClick: c,
                  variant: "secondary",
                  "data-testid": "add-roles",
                  disabled: s,
                  children: o("selectRole.label")
                }
              ) })
            ] })
          }
        ),
        u[p] && /* @__PURE__ */ a(kn, { message: o("required") })
      ]
    }
  );
}, Xa = {
  button: "pf-v5-c-button",
  codeEditor: "pf-v5-c-code-editor",
  codeEditorCode: "pf-v5-c-code-editor__code",
  codeEditorCodePre: "pf-v5-c-code-editor__code-pre",
  codeEditorControls: "pf-v5-c-code-editor__controls",
  codeEditorHeader: "pf-v5-c-code-editor__header",
  codeEditorHeaderMain: "pf-v5-c-code-editor__header-main",
  codeEditorMain: "pf-v5-c-code-editor__main",
  codeEditorTab: "pf-v5-c-code-editor__tab",
  codeEditorTabIcon: "pf-v5-c-code-editor__tab-icon",
  codeEditorTabText: "pf-v5-c-code-editor__tab-text",
  modifiers: {
    readOnly: "pf-m-read-only",
    control: "pf-m-control",
    dragHover: "pf-m-drag-hover"
  },
  monacoEditor: "monaco-editor",
  themeDark: "pf-v5-theme-dark"
};
function EK(e, t, n) {
  return t in e ? Object.defineProperty(e, t, {
    value: n,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = n, e;
}
function AC(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function LC(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? AC(Object(n), !0).forEach(function(r) {
      EK(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : AC(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function PK(e, t) {
  if (e == null) return {};
  var n = {}, r = Object.keys(e), i, s;
  for (s = 0; s < r.length; s++)
    i = r[s], !(t.indexOf(i) >= 0) && (n[i] = e[i]);
  return n;
}
function _K(e, t) {
  if (e == null) return {};
  var n = PK(e, t), r, i;
  if (Object.getOwnPropertySymbols) {
    var s = Object.getOwnPropertySymbols(e);
    for (i = 0; i < s.length; i++)
      r = s[i], !(t.indexOf(r) >= 0) && Object.prototype.propertyIsEnumerable.call(e, r) && (n[r] = e[r]);
  }
  return n;
}
function RK(e, t) {
  return AK(e) || LK(e, t) || NK(e, t) || DK();
}
function AK(e) {
  if (Array.isArray(e)) return e;
}
function LK(e, t) {
  if (!(typeof Symbol > "u" || !(Symbol.iterator in Object(e)))) {
    var n = [], r = !0, i = !1, s = void 0;
    try {
      for (var o = e[Symbol.iterator](), l; !(r = (l = o.next()).done) && (n.push(l.value), !(t && n.length === t)); r = !0)
        ;
    } catch (c) {
      i = !0, s = c;
    } finally {
      try {
        !r && o.return != null && o.return();
      } finally {
        if (i) throw s;
      }
    }
    return n;
  }
}
function NK(e, t) {
  if (e) {
    if (typeof e == "string") return NC(e, t);
    var n = Object.prototype.toString.call(e).slice(8, -1);
    if (n === "Object" && e.constructor && (n = e.constructor.name), n === "Map" || n === "Set") return Array.from(e);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return NC(e, t);
  }
}
function NC(e, t) {
  (t == null || t > e.length) && (t = e.length);
  for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
  return r;
}
function DK() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function MK(e, t, n) {
  return t in e ? Object.defineProperty(e, t, {
    value: n,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : e[t] = n, e;
}
function DC(e, t) {
  var n = Object.keys(e);
  if (Object.getOwnPropertySymbols) {
    var r = Object.getOwnPropertySymbols(e);
    t && (r = r.filter(function(i) {
      return Object.getOwnPropertyDescriptor(e, i).enumerable;
    })), n.push.apply(n, r);
  }
  return n;
}
function MC(e) {
  for (var t = 1; t < arguments.length; t++) {
    var n = arguments[t] != null ? arguments[t] : {};
    t % 2 ? DC(Object(n), !0).forEach(function(r) {
      MK(e, r, n[r]);
    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : DC(Object(n)).forEach(function(r) {
      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(n, r));
    });
  }
  return e;
}
function FK() {
  for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++)
    t[n] = arguments[n];
  return function(r) {
    return t.reduceRight(function(i, s) {
      return s(i);
    }, r);
  };
}
function $l(e) {
  return function t() {
    for (var n = this, r = arguments.length, i = new Array(r), s = 0; s < r; s++)
      i[s] = arguments[s];
    return i.length >= e.length ? e.apply(this, i) : function() {
      for (var o = arguments.length, l = new Array(o), c = 0; c < o; c++)
        l[c] = arguments[c];
      return t.apply(n, [].concat(i, l));
    };
  };
}
function ku(e) {
  return {}.toString.call(e).includes("Object");
}
function $K(e) {
  return !Object.keys(e).length;
}
function Rc(e) {
  return typeof e == "function";
}
function jK(e, t) {
  return Object.prototype.hasOwnProperty.call(e, t);
}
function BK(e, t) {
  return ku(t) || ns("changeType"), Object.keys(t).some(function(n) {
    return !jK(e, n);
  }) && ns("changeField"), t;
}
function UK(e) {
  Rc(e) || ns("selectorType");
}
function VK(e) {
  Rc(e) || ku(e) || ns("handlerType"), ku(e) && Object.values(e).some(function(t) {
    return !Rc(t);
  }) && ns("handlersType");
}
function KK(e) {
  e || ns("initialIsRequired"), ku(e) || ns("initialType"), $K(e) && ns("initialContent");
}
function HK(e, t) {
  throw new Error(e[t] || e.default);
}
var zK = {
  initialIsRequired: "initial state is required",
  initialType: "initial state should be an object",
  initialContent: "initial state shouldn't be an empty object",
  handlerType: "handler should be an object or a function",
  handlersType: "all handlers should be a functions",
  selectorType: "selector should be a function",
  changeType: "provided value of changes should be an object",
  changeField: 'it seams you want to change a field in the state which is not specified in the "initial" state',
  default: "an unknown error accured in `state-local` package"
}, ns = $l(HK)(zK), wd = {
  changes: BK,
  selector: UK,
  handler: VK,
  initial: KK
};
function qK(e) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  wd.initial(e), wd.handler(t);
  var n = {
    current: e
  }, r = $l(XK)(n, t), i = $l(WK)(n), s = $l(wd.changes)(e), o = $l(GK)(n);
  function l() {
    var d = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : function(u) {
      return u;
    };
    return wd.selector(d), d(n.current);
  }
  function c(d) {
    FK(r, i, s, o)(d);
  }
  return [l, c];
}
function GK(e, t) {
  return Rc(t) ? t(e.current) : t;
}
function WK(e, t) {
  return e.current = MC(MC({}, e.current), t), t;
}
function XK(e, t, n) {
  return Rc(t) ? t(e.current) : Object.keys(n).forEach(function(r) {
    var i;
    return (i = t[r]) === null || i === void 0 ? void 0 : i.call(t, e.current[r]);
  }), n;
}
var YK = {
  create: qK
}, JK = {
  paths: {
    vs: "https://cdn.jsdelivr.net/npm/monaco-editor@0.43.0/min/vs"
  }
};
function ZK(e) {
  return function t() {
    for (var n = this, r = arguments.length, i = new Array(r), s = 0; s < r; s++)
      i[s] = arguments[s];
    return i.length >= e.length ? e.apply(this, i) : function() {
      for (var o = arguments.length, l = new Array(o), c = 0; c < o; c++)
        l[c] = arguments[c];
      return t.apply(n, [].concat(i, l));
    };
  };
}
function QK(e) {
  return {}.toString.call(e).includes("Object");
}
function eH(e) {
  return e || FC("configIsRequired"), QK(e) || FC("configType"), e.urls ? (tH(), {
    paths: {
      vs: e.urls.monacoBase
    }
  }) : e;
}
function tH() {
  console.warn(NO.deprecation);
}
function nH(e, t) {
  throw new Error(e[t] || e.default);
}
var NO = {
  configIsRequired: "the configuration object is required",
  configType: "the configuration object should be an object",
  default: "an unknown error accured in `@monaco-editor/loader` package",
  deprecation: `Deprecation warning!
    You are using deprecated way of configuration.

    Instead of using
      monaco.config({ urls: { monacoBase: '...' } })
    use
      monaco.config({ paths: { vs: '...' } })

    For more please check the link https://github.com/suren-atoyan/monaco-loader#config
  `
}, FC = ZK(nH)(NO), aH = {
  config: eH
}, rH = function() {
  for (var t = arguments.length, n = new Array(t), r = 0; r < t; r++)
    n[r] = arguments[r];
  return function(i) {
    return n.reduceRight(function(s, o) {
      return o(s);
    }, i);
  };
};
function DO(e, t) {
  return Object.keys(t).forEach(function(n) {
    t[n] instanceof Object && e[n] && Object.assign(t[n], DO(e[n], t[n]));
  }), LC(LC({}, e), t);
}
var iH = {
  type: "cancelation",
  msg: "operation is manually canceled"
};
function Dm(e) {
  var t = !1, n = new Promise(function(r, i) {
    e.then(function(s) {
      return t ? i(iH) : r(s);
    }), e.catch(i);
  });
  return n.cancel = function() {
    return t = !0;
  }, n;
}
var sH = YK.create({
  config: JK,
  isInitialized: !1,
  resolve: null,
  reject: null,
  monaco: null
}), MO = RK(sH, 2), td = MO[0], Sp = MO[1];
function oH(e) {
  var t = aH.config(e), n = t.monaco, r = _K(t, ["monaco"]);
  Sp(function(i) {
    return {
      config: DO(i.config, r),
      monaco: n
    };
  });
}
function lH() {
  var e = td(function(t) {
    var n = t.monaco, r = t.isInitialized, i = t.resolve;
    return {
      monaco: n,
      isInitialized: r,
      resolve: i
    };
  });
  if (!e.isInitialized) {
    if (Sp({
      isInitialized: !0
    }), e.monaco)
      return e.resolve(e.monaco), Dm(Mm);
    if (window.monaco && window.monaco.editor)
      return FO(window.monaco), e.resolve(window.monaco), Dm(Mm);
    rH(cH, uH)(pH);
  }
  return Dm(Mm);
}
function cH(e) {
  return document.body.appendChild(e);
}
function dH(e) {
  var t = document.createElement("script");
  return e && (t.src = e), t;
}
function uH(e) {
  var t = td(function(r) {
    var i = r.config, s = r.reject;
    return {
      config: i,
      reject: s
    };
  }), n = dH("".concat(t.config.paths.vs, "/loader.js"));
  return n.onload = function() {
    return e();
  }, n.onerror = t.reject, n;
}
function pH() {
  var e = td(function(n) {
    var r = n.config, i = n.resolve, s = n.reject;
    return {
      config: r,
      resolve: i,
      reject: s
    };
  }), t = window.require;
  t.config(e.config), t(["vs/editor/editor.main"], function(n) {
    FO(n), e.resolve(n);
  }, function(n) {
    e.reject(n);
  });
}
function FO(e) {
  td().monaco || Sp({
    monaco: e
  });
}
function mH() {
  return td(function(e) {
    var t = e.monaco;
    return t;
  });
}
var Mm = new Promise(function(e, t) {
  return Sp({
    resolve: e,
    reject: t
  });
}), $O = {
  config: oH,
  init: lH,
  __getMonacoInstance: mH
}, fH = { wrapper: { display: "flex", position: "relative", textAlign: "initial" }, fullWidth: { width: "100%" }, hide: { display: "none" } }, Fm = fH, hH = { container: { display: "flex", height: "100%", width: "100%", justifyContent: "center", alignItems: "center" } }, gH = hH;
function bH({ children: e }) {
  return ne.createElement("div", { style: gH.container }, e);
}
var vH = bH, yH = vH;
function CH({ width: e, height: t, isEditorReady: n, loading: r, _ref: i, className: s, wrapperProps: o }) {
  return ne.createElement("section", { style: { ...Fm.wrapper, width: e, height: t }, ...o }, !n && ne.createElement(yH, null, r), ne.createElement("div", { ref: i, style: { ...Fm.fullWidth, ...!n && Fm.hide }, className: s }));
}
var xH = CH, jO = ih(xH);
function SH(e) {
  ze(e, []);
}
var BO = SH;
function wH(e, t, n = !0) {
  let r = Ct(!0);
  ze(r.current || !n ? () => {
    r.current = !1;
  } : e, t);
}
var Fa = wH;
function tc() {
}
function wo(e, t, n, r) {
  return OH(e, r) || kH(e, t, n, r);
}
function OH(e, t) {
  return e.editor.getModel(UO(e, t));
}
function kH(e, t, n, r) {
  return e.editor.createModel(t, n, r ? UO(e, r) : void 0);
}
function UO(e, t) {
  return e.Uri.parse(t);
}
function TH({ original: e, modified: t, language: n, originalLanguage: r, modifiedLanguage: i, originalModelPath: s, modifiedModelPath: o, keepCurrentOriginalModel: l = !1, keepCurrentModifiedModel: c = !1, theme: d = "light", loading: u = "Loading...", options: p = {}, height: m = "100%", width: f = "100%", className: g, wrapperProps: b = {}, beforeMount: v = tc, onMount: y = tc }) {
  let [C, S] = D(!1), [P, w] = D(!0), A = Ct(null), k = Ct(null), T = Ct(null), O = Ct(y), I = Ct(v), _ = Ct(!1);
  BO(() => {
    let R = $O.init();
    return R.then((M) => (k.current = M) && w(!1)).catch((M) => M?.type !== "cancelation" && console.error("Monaco initialization: error:", M)), () => A.current ? F() : R.cancel();
  }), Fa(() => {
    if (A.current && k.current) {
      let R = A.current.getOriginalEditor(), M = wo(k.current, e || "", r || n || "text", s || "");
      M !== R.getModel() && R.setModel(M);
    }
  }, [s], C), Fa(() => {
    if (A.current && k.current) {
      let R = A.current.getModifiedEditor(), M = wo(k.current, t || "", i || n || "text", o || "");
      M !== R.getModel() && R.setModel(M);
    }
  }, [o], C), Fa(() => {
    let R = A.current.getModifiedEditor();
    R.getOption(k.current.editor.EditorOption.readOnly) ? R.setValue(t || "") : t !== R.getValue() && (R.executeEdits("", [{ range: R.getModel().getFullModelRange(), text: t || "", forceMoveMarkers: !0 }]), R.pushUndoStop());
  }, [t], C), Fa(() => {
    A.current?.getModel()?.original.setValue(e || "");
  }, [e], C), Fa(() => {
    let { original: R, modified: M } = A.current.getModel();
    k.current.editor.setModelLanguage(R, r || n || "text"), k.current.editor.setModelLanguage(M, i || n || "text");
  }, [n, r, i], C), Fa(() => {
    k.current?.editor.setTheme(d);
  }, [d], C), Fa(() => {
    A.current?.updateOptions(p);
  }, [p], C);
  let E = bn(() => {
    if (!k.current) return;
    I.current(k.current);
    let R = wo(k.current, e || "", r || n || "text", s || ""), M = wo(k.current, t || "", i || n || "text", o || "");
    A.current?.setModel({ original: R, modified: M });
  }, [n, t, i, e, r, s, o]), L = bn(() => {
    !_.current && T.current && (A.current = k.current.editor.createDiffEditor(T.current, { automaticLayout: !0, ...p }), E(), k.current?.editor.setTheme(d), S(!0), _.current = !0);
  }, [p, d, E]);
  ze(() => {
    C && O.current(A.current, k.current);
  }, [C]), ze(() => {
    !P && !C && L();
  }, [P, C, L]);
  function F() {
    let R = A.current?.getModel();
    l || R?.original?.dispose(), c || R?.modified?.dispose(), A.current?.dispose();
  }
  return ne.createElement(jO, { width: f, height: m, isEditorReady: C, loading: u, _ref: T, className: g, wrapperProps: b });
}
var IH = TH;
ih(IH);
function EH(e) {
  let t = Ct();
  return ze(() => {
    t.current = e;
  }, [e]), t.current;
}
var PH = EH, Od = /* @__PURE__ */ new Map();
function _H({ defaultValue: e, defaultLanguage: t, defaultPath: n, value: r, language: i, path: s, theme: o = "light", line: l, loading: c = "Loading...", options: d = {}, overrideServices: u = {}, saveViewState: p = !0, keepCurrentModel: m = !1, width: f = "100%", height: g = "100%", className: b, wrapperProps: v = {}, beforeMount: y = tc, onMount: C = tc, onChange: S, onValidate: P = tc }) {
  let [w, A] = D(!1), [k, T] = D(!0), O = Ct(null), I = Ct(null), _ = Ct(null), E = Ct(C), L = Ct(y), F = Ct(), R = Ct(r), M = PH(s), U = Ct(!1), K = Ct(!1);
  BO(() => {
    let $ = $O.init();
    return $.then((q) => (O.current = q) && T(!1)).catch((q) => q?.type !== "cancelation" && console.error("Monaco initialization: error:", q)), () => I.current ? N() : $.cancel();
  }), Fa(() => {
    let $ = wo(O.current, e || r || "", t || i || "", s || n || "");
    $ !== I.current?.getModel() && (p && Od.set(M, I.current?.saveViewState()), I.current?.setModel($), p && I.current?.restoreViewState(Od.get(s)));
  }, [s], w), Fa(() => {
    I.current?.updateOptions(d);
  }, [d], w), Fa(() => {
    !I.current || r === void 0 || (I.current.getOption(O.current.editor.EditorOption.readOnly) ? I.current.setValue(r) : r !== I.current.getValue() && (K.current = !0, I.current.executeEdits("", [{ range: I.current.getModel().getFullModelRange(), text: r, forceMoveMarkers: !0 }]), I.current.pushUndoStop(), K.current = !1));
  }, [r], w), Fa(() => {
    let $ = I.current?.getModel();
    $ && i && O.current?.editor.setModelLanguage($, i);
  }, [i], w), Fa(() => {
    l !== void 0 && I.current?.revealLine(l);
  }, [l], w), Fa(() => {
    O.current?.editor.setTheme(o);
  }, [o], w);
  let G = bn(() => {
    if (!(!_.current || !O.current) && !U.current) {
      L.current(O.current);
      let $ = s || n, q = wo(O.current, r || e || "", t || i || "", $ || "");
      I.current = O.current?.editor.create(_.current, { model: q, automaticLayout: !0, ...d }, u), p && I.current.restoreViewState(Od.get($)), O.current.editor.setTheme(o), l !== void 0 && I.current.revealLine(l), A(!0), U.current = !0;
    }
  }, [e, t, n, r, i, s, d, u, p, o, l]);
  ze(() => {
    w && E.current(I.current, O.current);
  }, [w]), ze(() => {
    !k && !w && G();
  }, [k, w, G]), R.current = r, ze(() => {
    w && S && (F.current?.dispose(), F.current = I.current?.onDidChangeModelContent(($) => {
      K.current || S(I.current.getValue(), $);
    }));
  }, [w, S]), ze(() => {
    if (w) {
      let $ = O.current.editor.onDidChangeMarkers((q) => {
        let V = I.current.getModel()?.uri;
        if (V && q.find((B) => B.path === V.path)) {
          let B = O.current.editor.getModelMarkers({ resource: V });
          P?.(B);
        }
      });
      return () => {
        $?.dispose();
      };
    }
    return () => {
    };
  }, [w, P]);
  function N() {
    F.current?.dispose(), m ? p && Od.set(s, I.current.saveViewState()) : I.current.getModel()?.dispose(), I.current.dispose();
  }
  return ne.createElement(jO, { width: f, height: g, isEditorReady: w, loading: c, _ref: _, className: b, wrapperProps: v });
}
var RH = _H, AH = ih(RH), LH = AH;
const VO = h.createContext(null), jd = (e) => {
  var { icon: t, className: n, "aria-label": r, onClick: i = () => {
  }, isVisible: s = !0, tooltipProps: o = {} } = e, l = se(e, ["icon", "className", "aria-label", "onClick", "isVisible", "tooltipProps"]);
  const c = h.useContext(VO), d = (u) => {
    i(c.code, u);
  };
  return s ? h.createElement(
    Ht,
    Object.assign({}, o),
    h.createElement(z, Object.assign({ className: n, onClick: d, variant: "control", "aria-label": r }, l), t)
  ) : null;
};
jd.displayName = "CodeEditorControl";
var Ln;
(function(e) {
  e.abap = "abap", e.aes = "aes", e.apex = "apex", e.azcli = "azcli", e.bat = "bat", e.bicep = "bicep", e.c = "c", e.cameligo = "cameligo", e.clojure = "clojure", e.coffeescript = "coffeescript", e.cpp = "cpp", e.csharp = "csharp", e.csp = "csp", e.css = "css", e.dart = "dart", e.dockerfile = "dockerfile", e.ecl = "ecl", e.elixir = "elixir", e.fsharp = "fsharp", e.go = "go", e.graphql = "graphql", e.handlebars = "handlebars", e.hcl = "hcl", e.html = "html", e.ini = "ini", e.java = "java", e.javascript = "javascript", e.json = "json", e.julia = "julia", e.kotlin = "kotlin", e.less = "less", e.lexon = "lexon", e.liquid = "liquid", e.lua = "lua", e.m3 = "m3", e.markdown = "markdown", e.mips = "mips", e.msdax = "msdax", e.mysql = "mysql", e["objective-c"] = "objective-c", e.pascal = "pascal", e.pascaligo = "pascaligo", e.perl = "perl", e.pgsql = "pgsql", e.php = "php", e.plaintext = "plaintext", e.postiats = "postiats", e.powerquery = "powerquery", e.powershell = "powershell", e.pug = "pug", e.python = "python", e.r = "r", e.razor = "razor", e.redis = "redis", e.redshift = "redshift", e.restructuredtext = "restructuredtext", e.ruby = "ruby", e.rust = "rust", e.sb = "sb", e.scala = "scala", e.scheme = "scheme", e.scss = "scss", e.shell = "shell", e.sol = "sol", e.sql = "sql", e.st = "st", e.swift = "swift", e.systemverilog = "systemverilog", e.tcl = "tcl", e.twig = "twig", e.typescript = "typescript", e.vb = "vb", e.verilog = "verilog", e.xml = "xml", e.yaml = "yaml";
})(Ln || (Ln = {}));
class fr extends h.Component {
  static getExtensionFromLanguage(t) {
    switch (t) {
      case Ln.shell:
        return "sh";
      case Ln.ruby:
        return "rb";
      case Ln.perl:
        return "pl";
      case Ln.python:
        return "py";
      case Ln.mysql:
        return "sql";
      case Ln.javascript:
        return "js";
      case Ln.typescript:
        return "ts";
      case Ln.markdown:
        return "md";
      case Ln.plaintext:
        return "txt";
      default:
        return t.toString();
    }
  }
  constructor(t) {
    super(t), this.editor = null, this.wrapperRef = h.createRef(), this.ref = h.createRef(), this.timer = null, this.observer = () => {
    }, this.onChange = (n, r) => {
      this.props.height === "sizeToFit" && this.setHeightToFitContent(), this.props.onChange && this.props.onChange(n, r), this.setState({ value: n }), this.props.onCodeChange(n);
    }, this.handleResize = () => {
      this.editor && this.editor.layout();
    }, this.handleGlobalKeys = (n) => {
      var r;
      this.wrapperRef.current === document.activeElement && (n.key === "ArrowDown" || n.key === " ") && ((r = this.editor) === null || r === void 0 || r.focus(), n.preventDefault());
    }, this.editorDidMount = (n, r) => {
      n.addCommand(r.KeyMod.Shift | r.KeyCode.Tab, () => this.wrapperRef.current.focus()), Array.from(document.getElementsByClassName("monaco-editor")).forEach((i) => i.removeAttribute("role")), this.props.onEditorDidMount(n, r), this.editor = n, this.props.height === "sizeToFit" && this.setHeightToFitContent();
    }, this.handleFileChange = (n, r) => {
      this.setState({
        value: n,
        filename: r
      }), this.props.onCodeChange(n);
    }, this.handleFileReadStarted = () => this.setState({ isLoading: !0 }), this.handleFileReadFinished = () => this.setState({ isLoading: !1 }), this.onDropAccepted = (n) => {
      if (n.length > 0) {
        const r = n[0];
        this.handleFileChange("", r.name), this.handleFileReadStarted(), this.readFile(r).then((i) => {
          this.handleFileReadFinished(), this.toggleEmptyState(), this.handleFileChange(i, r.name);
        }).catch((i) => {
          console.error("error", i), this.handleFileReadFinished(), this.handleFileChange("", "");
        });
      }
    }, this.onDropRejected = (n) => {
      n.length > 0 && console.error("There was an error accepting that dropped file");
    }, this.copyCode = () => {
      navigator.clipboard.writeText(this.state.value), this.setState({ copied: !0 });
    }, this.download = () => {
      const { value: n } = this.state, r = document.createElement("a"), i = new Blob([n], { type: "text" });
      r.href = URL.createObjectURL(i), r.download = `${this.props.downloadFileName}.${fr.getExtensionFromLanguage(this.props.language)}`, document.body.appendChild(r), r.click();
    }, this.toggleEmptyState = () => {
      this.setState({ showEmptyState: !1 });
    }, this.state = {
      height: this.props.height,
      prevPropsCode: this.props.code,
      value: this.props.code,
      filename: "",
      isLoading: !1,
      showEmptyState: !0,
      copied: !1
    };
  }
  setHeightToFitContent() {
    const t = this.editor.getContentHeight(), n = this.editor.getLayoutInfo();
    this.editor.layout({ width: n.width, height: t });
  }
  // this function is only called when the props change
  // the only conflict is between props.code and state.value
  static getDerivedStateFromProps(t, n) {
    return t.code !== n.prevPropsCode ? {
      value: t.code,
      prevPropsCode: t.code
    } : null;
  }
  componentDidMount() {
    document.addEventListener("keydown", this.handleGlobalKeys), this.observer = tl(this.ref.current, this.handleResize, !0), this.handleResize();
  }
  componentWillUnmount() {
    document.removeEventListener("keydown", this.handleGlobalKeys), this.observer();
  }
  readFile(t) {
    return new Promise((n, r) => {
      const i = new FileReader();
      i.onload = () => n(i.result), i.onerror = () => r(i.error), i.readAsText(t);
    });
  }
  render() {
    const { height: t, value: n, isLoading: r, showEmptyState: i, copied: s } = this.state, { isDarkTheme: o, width: l, className: c, isCopyEnabled: d, copyButtonSuccessTooltipText: u, isReadOnly: p, isUploadEnabled: m, isLanguageLabelVisible: f, copyButtonAriaLabel: g, copyButtonToolTipText: b, uploadButtonAriaLabel: v, uploadButtonToolTipText: y, downloadButtonAriaLabel: C, downloadButtonToolTipText: S, toolTipDelay: P, toolTipCopyExitDelay: w, toolTipMaxWidth: A, toolTipPosition: k, isLineNumbersVisible: T, isDownloadEnabled: O, language: I, emptyState: _, emptyStateTitle: E, emptyStateBody: L, emptyStateButton: F, emptyStateLink: R, customControls: M, isMinimapVisible: U, headerMainContent: K, shortcutsPopoverButtonText: G, shortcutsPopoverProps: N, showEditor: $, options: q, overrideServices: V, editorProps: B } = this.props, Z = Object.assign(Object.assign({}, fr.defaultProps.shortcutsPopoverProps), N), X = Object.assign({ scrollBeyondLastLine: t !== "sizeToFit", readOnly: p, cursorStyle: "line", lineNumbers: T ? "on" : "off", tabIndex: -1, minimap: {
      enabled: U
    } }, q);
    return h.createElement(Ku, { multiple: !1, onDropAccepted: this.onDropAccepted, onDropRejected: this.onDropRejected }, ({ getRootProps: Q, getInputProps: ie, isDragActive: me, open: ee }) => {
      const ce = _ || (m ? h.createElement(
        Pr,
        { variant: pc.sm },
        h.createElement(Ei, { titleText: E, icon: h.createElement(As, { icon: om }), headingLevel: "h4" }),
        h.createElement(Di, null, L),
        !p && h.createElement(
          ss,
          null,
          h.createElement(
            ko,
            null,
            h.createElement(z, { variant: "primary", onClick: ee }, F)
          ),
          h.createElement(
            ko,
            null,
            h.createElement(z, { variant: "link", onClick: this.toggleEmptyState }, R)
          )
        )
      ) : h.createElement(
        Pr,
        { variant: pc.sm },
        h.createElement(Ei, { titleText: E, icon: h.createElement(As, { icon: om }), headingLevel: "h4" }),
        !p && h.createElement(
          ss,
          null,
          h.createElement(
            ko,
            null,
            h.createElement(z, { variant: "primary", onClick: this.toggleEmptyState }, R)
          )
        )
      )), ae = {
        position: k,
        exitDelay: P,
        entryDelay: P,
        maxWidth: A,
        trigger: "mouseenter focus"
      }, Oe = h.createElement(
        "div",
        { className: j(Xa.codeEditorHeader) },
        h.createElement(
          "div",
          { className: j(Xa.codeEditorControls) },
          h.createElement(
            VO.Provider,
            { value: { code: n } },
            d && (!i || !!n) && h.createElement(jd, { icon: h.createElement(WS, null), "aria-label": g, tooltipProps: Object.assign(Object.assign({}, ae), { "aria-live": "polite", content: h.createElement("div", null, s ? u : b), exitDelay: s ? w : P, onTooltipHidden: () => this.setState({ copied: !1 }) }), onClick: this.copyCode }),
            m && h.createElement(jd, { icon: h.createElement(QL, null), "aria-label": v, tooltipProps: Object.assign({ content: h.createElement("div", null, y) }, ae), onClick: ee }),
            O && (!i || !!n) && h.createElement(jd, { icon: h.createElement(dL, null), "aria-label": C, tooltipProps: Object.assign({ content: h.createElement("div", null, S) }, ae), onClick: this.download }),
            M && M
          )
        ),
        h.createElement("div", { className: j(Xa.codeEditorHeaderMain) }, K),
        !!Z.bodyContent && h.createElement(
          "div",
          { className: `${Xa.codeEditor}__keyboard-shortcuts` },
          h.createElement(
            Rr,
            Object.assign({}, Z),
            h.createElement(z, { variant: xe.link, icon: h.createElement(Ls, null) }, G)
          )
        ),
        f && h.createElement(
          "div",
          { className: j(Xa.codeEditorTab) },
          h.createElement(
            "span",
            { className: j(Xa.codeEditorTabIcon) },
            h.createElement(om, null)
          ),
          h.createElement("span", { className: j(Xa.codeEditorTabText) }, I.toUpperCase())
        )
      ), Ie = h.createElement(
        "div",
        { className: j(Xa.codeEditorCode), ref: this.wrapperRef, tabIndex: 0, dir: "ltr" },
        h.createElement(LH, Object.assign({ height: t, width: l, language: I, value: n, options: X, overrideServices: V, onChange: this.onChange, onMount: this.editorDidMount, theme: o ? "vs-dark" : "vs-light" }, B))
      );
      return h.createElement("div", { className: j(Xa.codeEditor, p && Xa.modifiers.readOnly, c), ref: this.ref }, m || _ ? h.createElement(
        "div",
        Object.assign({}, Q({
          onClick: (Me) => Me.stopPropagation()
          // Prevents clicking TextArea from opening file dialog
        }), { className: `${mi.fileUpload} ${me && mi.modifiers.dragHover} ${r && mi.modifiers.loading}` }),
        Oe,
        h.createElement(
          "div",
          { className: j(Xa.codeEditorMain) },
          h.createElement("input", Object.assign({}, ie())),
          (i || _) && !n ? ce : Ie
        )
      ) : h.createElement(
        h.Fragment,
        null,
        Oe,
        $ && h.createElement("div", { className: j(Xa.codeEditorMain) }, Ie)
      ));
    });
  }
}
fr.displayName = "CodeEditor";
fr.defaultProps = {
  className: "",
  code: "",
  onEditorDidMount: () => {
  },
  language: Ln.plaintext,
  isDarkTheme: !1,
  height: "",
  width: "",
  isLineNumbersVisible: !0,
  isReadOnly: !1,
  isLanguageLabelVisible: !1,
  loading: "",
  emptyState: "",
  emptyStateTitle: "Start editing",
  emptyStateBody: "Drag and drop a file or upload one.",
  emptyStateButton: "Browse",
  emptyStateLink: "Start from scratch",
  downloadFileName: Date.now().toString(),
  isUploadEnabled: !1,
  isDownloadEnabled: !1,
  isCopyEnabled: !1,
  copyButtonAriaLabel: "Copy code to clipboard",
  uploadButtonAriaLabel: "Upload code",
  downloadButtonAriaLabel: "Download code",
  copyButtonToolTipText: "Copy to clipboard",
  uploadButtonToolTipText: "Upload",
  downloadButtonToolTipText: "Download",
  copyButtonSuccessTooltipText: "Content added to clipboard",
  toolTipCopyExitDelay: 1600,
  toolTipDelay: 300,
  toolTipMaxWidth: "100px",
  toolTipPosition: "top",
  customControls: null,
  isMinimapVisible: !1,
  headerMainContent: "",
  shortcutsPopoverButtonText: "View Shortcuts",
  shortcutsPopoverProps: Object.assign({ bodyContent: "", "aria-label": "Keyboard Shortcuts" }, Rr.defaultProps),
  showEditor: !0,
  options: {},
  overrideServices: {},
  onCodeChange: () => {
  }
};
const NH = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  required: i,
  isDisabled: s = !1
}) => {
  const { t: o } = H(), { control: l } = De();
  return /* @__PURE__ */ a(
    re,
    {
      label: o(t),
      labelIcon: /* @__PURE__ */ a(
        le,
        {
          helpText: /* @__PURE__ */ a("span", { style: { whiteSpace: "pre-wrap" }, children: n }),
          fieldLabelId: `${t}`
        }
      ),
      fieldId: e,
      isRequired: i,
      children: /* @__PURE__ */ a(
        be,
        {
          name: va(e),
          defaultValue: r,
          control: l,
          render: ({ field: c }) => /* @__PURE__ */ a(
            fr,
            {
              id: e,
              "data-testid": e,
              isReadOnly: s,
              type: "text",
              onChange: c.onChange,
              code: Array.isArray(c.value) ? c.value[0] : c.value,
              height: "600px",
              language: Ln.javascript
            }
          )
        }
      )
    }
  );
}, DH = ({
  name: e,
  label: t,
  helpText: n,
  ...r
}) => {
  const { t: i } = H();
  return /* @__PURE__ */ a(
    ve,
    {
      name: va(e),
      label: i(t),
      labelIcon: i(n),
      "data-testid": e,
      ...r
    }
  );
}, MH = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  required: i,
  isDisabled: s = !1
}) => {
  const { t: o } = H(), { register: l } = De();
  return /* @__PURE__ */ a(
    re,
    {
      label: o(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: o(n), fieldLabelId: `${t}` }),
      fieldId: e,
      required: i,
      children: /* @__PURE__ */ a(
        Rg,
        {
          id: e,
          "data-testid": e,
          isDisabled: s,
          defaultValue: r?.toString(),
          ...l(va(e))
        }
      )
    }
  );
}, ki = ({
  title: e,
  href: t,
  isInline: n,
  ...r
}) => /* @__PURE__ */ x(
  "a",
  {
    href: t,
    target: "_blank",
    rel: "noreferrer noopener",
    style: {
      textDecoration: "underline",
      textDecorationColor: "transparent"
    },
    className: n ? "pf-m-link pf-m-inline" : "",
    ...r,
    children: [
      e || t,
      " ",
      t?.startsWith("http") && /* @__PURE__ */ a($S, {})
    ]
  }
), FH = ({ name: e, label: t, helpText: n }) => {
  const { t: r } = H(), { control: i } = De(), { value: s } = rt({
    control: i,
    name: e,
    defaultValue: ""
  });
  return /* @__PURE__ */ a(
    re,
    {
      label: r(t),
      fieldId: e,
      labelIcon: /* @__PURE__ */ a(le, { helpText: r(n), fieldLabelId: `${t}` }),
      className: "keycloak__identity-providers__url_component",
      children: /* @__PURE__ */ a(ki, { title: r(n), href: s, isInline: !0 })
    }
  );
}, KO = ({ selectItems: e, ...t }) => {
  const { t: n } = H(), [r, i] = st(), { field: s } = Ys(t), [o, l] = D(
    !e.map(({ key: c }) => c).includes(s.value)
  );
  return /* @__PURE__ */ x(Ha, { children: [
    /* @__PURE__ */ a(Wt, { lg: o ? 2 : 12, children: /* @__PURE__ */ a(
      ht,
      {
        onToggle: () => i(),
        isOpen: r,
        onSelect: (c) => {
          c && l(!1), s.onChange(c), i();
        },
        selections: o ? "" : [s.value],
        children: [
          /* @__PURE__ */ a(Re, { onClick: () => l(!0), children: n("customAttribute") }, "custom"),
          ...e.map((c) => /* @__PURE__ */ a(Re, { value: c.key, children: c.label }, c.key))
        ]
      }
    ) }),
    o && /* @__PURE__ */ a(Wt, { lg: 10, children: /* @__PURE__ */ a(
      gt,
      {
        id: "customValue",
        "data-testid": t.name,
        placeholder: n("keyPlaceholder"),
        value: s.value,
        onChange: s.onChange,
        autoFocus: !0
      }
    ) })
  ] });
}, $H = ({
  name: e,
  label: t,
  helpText: n,
  required: r = !1
}) => {
  const { adminClient: i } = de(), { t: s } = H(), {
    formState: { errors: o }
  } = De(), [l, c] = D(), d = va(e);
  _e(
    () => i.users.getProfile(),
    (p) => c(p),
    []
  );
  const u = (p) => p?.attributes ? p.attributes.map((m) => ({
    key: m.name,
    label: m.name
  })) : [];
  return l ? /* @__PURE__ */ x(
    re,
    {
      label: s(t),
      isRequired: r,
      labelIcon: /* @__PURE__ */ a(le, { helpText: s(n), fieldLabelId: t }),
      fieldId: d,
      children: [
        /* @__PURE__ */ a(
          KO,
          {
            name: d,
            rules: r ? { required: !0 } : {},
            selectItems: u(l)
          }
        ),
        o[d] && /* @__PURE__ */ a(kn, { message: s("required") })
      ]
    }
  ) : null;
}, HO = {
  String: DH,
  Text: MH,
  boolean: pV,
  List: bV,
  Role: IK,
  Script: NH,
  Map: vV,
  Group: gV,
  ClientList: mV,
  UserProfileAttributeList: $H,
  MultivaluedList: CV,
  MultivaluedString: SV,
  File: hV,
  Password: wV,
  Url: FH
}, jH = (e) => e in HO, gr = ({
  properties: e,
  ...t
}) => /* @__PURE__ */ a(te, { children: e.map((n) => {
  const r = n.type;
  if (jH(r)) {
    const i = HO[r];
    return /* @__PURE__ */ a(i, { ...n, ...t }, n.name);
  } else
    console.warn(`There is no editor registered for ${r}`);
}) }), va = (e) => Fe(`config.${e}`), zt = () => na(), Tu = "org.keycloak.services.ui.extend.UiPageProvider", Iu = "org.keycloak.services.ui.extend.UiTabProvider", BH = Be(() => Promise.resolve().then(() => VJ)), zO = Be(() => Promise.resolve().then(() => jJ)), qO = {
  path: "/:realm?/page-section/:providerId",
  element: /* @__PURE__ */ a(BH, {}),
  breadcrumb: (e) => e("page"),
  handle: {
    access: "view-realm"
  }
}, GO = {
  path: "/:realm/page-section/:providerId/:id",
  element: /* @__PURE__ */ a(zO, {}),
  breadcrumb: (e) => e("details"),
  handle: {
    access: "view-realm"
  }
}, WO = {
  path: "/:realm/page-section/:providerId/add",
  element: /* @__PURE__ */ a(zO, {}),
  breadcrumb: (e) => e("add"),
  handle: {
    access: "view-realm"
  }
}, UH = [
  GO,
  WO,
  qO
], Mg = (e) => ({
  pathname: Jo(qO.path, e)
}), VH = (e) => ({
  pathname: Jo(GO.path, e)
}), $C = (e) => ({
  pathname: Jo(WO.path, e)
}), XO = ({
  id: e,
  providerType: t,
  page: { id: n, ...r }
}) => {
  const { adminClient: i } = de(), { t: s } = H(), o = Ke(), { realm: l, realmRepresentation: c } = ye(), { addAlert: d, addError: u } = we(), [p, m] = D(e), f = zt();
  _e(
    async () => await Promise.all([
      p ? i.components.findOne({ id: p }) : Promise.resolve(),
      t === Iu ? i.components.find({ type: Iu }) : Promise.resolve()
    ]),
    ([b, v]) => {
      const y = (v || []).find((C) => C.providerId === n);
      o.reset(b || y || {}), y && m(y.id);
    },
    []
  );
  const g = async (b) => {
    (b.config || f) && (b.config = Object.assign(b.config || {}, f), Object.entries(b.config).forEach(
      ([v, y]) => b.config[v] = Array.isArray(y) ? y : [y]
    ));
    try {
      const v = {
        ...b,
        providerId: n,
        providerType: t,
        parentId: c?.id
      };
      if (p)
        await i.components.update({ id: p }, v);
      else {
        const { id: y } = await i.components.create(v);
        m(y);
      }
      d(s("itemSaveSuccessful"));
    } catch (v) {
      u("itemSaveError", v);
    }
  };
  return /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ x(
    St,
    {
      isHorizontal: !0,
      onSubmit: o.handleSubmit(g),
      className: "keycloak__form",
      children: [
        /* @__PURE__ */ a(He, { ...o, children: /* @__PURE__ */ a(gr, { properties: r.properties }) }),
        /* @__PURE__ */ x(ot, { children: [
          /* @__PURE__ */ a(z, { "data-testid": "save", type: "submit", children: s("save") }),
          /* @__PURE__ */ a(
            z,
            {
              variant: "link",
              component: (b) => /* @__PURE__ */ a(
                Ae,
                {
                  ...b,
                  to: Mg({ realm: l, providerId: n })
                }
              ),
              children: s("cancel")
            }
          )
        ] })
      ]
    }
  ) });
};
var Fn = /* @__PURE__ */ ((e) => (e.AdminFineGrainedAuthz = "ADMIN_FINE_GRAINED_AUTHZ", e.ClientPolicies = "CLIENT_POLICIES", e.Kerberos = "KERBEROS", e.DynamicScopes = "DYNAMIC_SCOPES", e.DPoP = "DPOP", e.DeviceFlow = "DEVICE_FLOW", e.TransientUsers = "TRANSIENT_USERS", e.ClientTypes = "CLIENT_TYPES", e.DeclarativeUI = "DECLARATIVE_UI", e.Organizations = "ORGANIZATION", e.OpenId4VCI = "OID4VC_VCI", e))(Fn || {});
function aa() {
  const { features: e } = Tt();
  return function(n) {
    return e ? e.filter((r) => r.enabled).map((r) => r.name).includes(n) : !1;
  };
}
const Vn = ({
  children: e,
  defaultLocation: t,
  ...n
}) => {
  const { pathname: r } = ds(), i = na(), { componentTypes: s } = Tt(), o = s?.[Iu] || [], l = aa(), { t: c } = H(), d = o.filter((b) => Ud({ path: b.metadata.path }, r)).map((b) => ({
    ...b,
    pathname: Jo(b.metadata.path, {
      ...i,
      ...b.metadata.params
    })
  })), u = d.map((b) => b.pathname), p = $u.toArray(e).filter((b) => Es(b)).map((b) => b.props.eventKey.toString()), f = [...p, ...u].find(
    (b) => b === decodeURI(r)
  ), g = p.filter((b) => r.includes(b)).sort((b, v) => b.length - v.length).pop();
  return /* @__PURE__ */ x(
    Ka,
    {
      activeKey: f ?? g ?? t?.pathname ?? r,
      component: vc.nav,
      inset: {
        default: "insetNone",
        xl: "insetLg",
        "2xl": "inset2xl"
      },
      ...n,
      children: [
        e,
        l(Fn.DeclarativeUI) && d.map((b) => /* @__PURE__ */ a(KH, { eventKey: b.pathname, title: c(b.id), children: /* @__PURE__ */ a(XO, { page: b, providerType: Iu }) }, b.id))
      ]
    }
  );
}, KH = ({
  children: e,
  ...t
}) => {
  const n = oh(t.eventKey);
  return /* @__PURE__ */ a(Ee, { href: n, ...t, children: e });
}, Kn = (e) => ({
  eventKey: e.pathname ?? "",
  href: oh(e)
}), Ya = "https://www.keycloak.org/docs/latest/server_admin/index.html", kd = "https://www.keycloak.org", sa = {
  documentationUrl: Ya,
  clientsUrl: `${Ya}#assembly-managing-clients_server_administration_guide`,
  clientScopesUrl: `${Ya}#_client_scopes`,
  realmRolesUrl: `${Ya}#assigning-permissions-using-roles-and-groups`,
  usersUrl: `${Ya}#assembly-managing-users_server_administration_guide`,
  groupsUrl: `${Ya}#proc-managing-groups_server_administration_guide`,
  sessionsUrl: `${Ya}#managing-user-sessions`,
  eventsUrl: `${Ya}#configuring-auditing-to-track-events`,
  realmSettingsUrl: `${Ya}#configuring-realms`,
  authenticationUrl: `${Ya}#configuring-authentication`,
  identityProvidersUrl: `${Ya}#_identity_broker`,
  userFederationUrl: `${Ya}#_user-storage-federation`,
  documentation: `${kd}/documentation`,
  guides: `${kd}/guides`,
  community: `${kd}/community`,
  blog: `${kd}/blog`
}, wt = ({
  actionsDropdownId: e,
  className: t,
  titleKey: n,
  badges: r,
  isDropdownDisabled: i,
  subKey: s,
  helpUrl: o,
  dropdownItems: l,
  lowerDropdownMenuTitle: c,
  lowerDropdownItems: d,
  lowerButton: u,
  isEnabled: p = !0,
  onToggle: m,
  divider: f = !0,
  helpTextKey: g,
  isReadOnly: b = !1
}) => {
  const { t: v, i18n: y } = H(), { enabled: C } = Dr(), [S, P] = D(!1), [w, A] = D(!1), k = () => {
    P(!S);
  }, T = () => {
    A(!w);
  }, O = (I) => I.replace(/\s/g, "-");
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ x(Te, { variant: "light", children: [
      /* @__PURE__ */ x(Of, { hasGutter: !0, children: [
        /* @__PURE__ */ a(Fl, { children: /* @__PURE__ */ x(Of, { children: [
          /* @__PURE__ */ a(Fl, { children: /* @__PURE__ */ a(Rt, { className: "pf-v5-u-mr-sm", children: /* @__PURE__ */ a(
            tt,
            {
              className: t,
              component: "h1",
              "data-testid": "view-header",
              children: y.exists(n) ? v(n) : n
            }
          ) }) }),
          r && /* @__PURE__ */ a(Fl, { children: r.map((I, _) => /* @__PURE__ */ x(Ea, { children: [
            !Es(I.text) && /* @__PURE__ */ x(Ea, { children: [
              /* @__PURE__ */ a(Ir, { "data-testid": I.id, isRead: I.readonly, children: I.text }),
              " "
            ] }, I.text),
            Es(I.text) && I.text,
            " "
          ] }, _)) })
        ] }) }),
        /* @__PURE__ */ a(Fl, { children: /* @__PURE__ */ a(Ta, { className: "pf-v5-u-p-0", children: /* @__PURE__ */ x(cr, { children: [
          m && /* @__PURE__ */ x(Le, { children: [
            /* @__PURE__ */ a(
              Je,
              {
                id: `${O(n)}-switch`,
                "data-testid": `${n}-switch`,
                label: v("enabled"),
                labelOff: v("disabled"),
                className: "pf-v5-u-mr-lg",
                isDisabled: b,
                isChecked: p,
                "aria-label": v("enabled"),
                onChange: (I, _) => {
                  m(_);
                }
              }
            ),
            g && /* @__PURE__ */ a(
              le,
              {
                helpText: v(g),
                fieldLabelId: `${O(n)}-switch`
              }
            )
          ] }),
          l && /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            Kt,
            {
              popperProps: {
                position: "right"
              },
              onOpenChange: k,
              toggle: (I) => /* @__PURE__ */ a(
                ut,
                {
                  ref: I,
                  isDisabled: i,
                  id: e,
                  onClick: k,
                  "data-testid": "action-dropdown",
                  children: v("action")
                }
              ),
              isOpen: S,
              children: /* @__PURE__ */ a(Xt, { children: l })
            }
          ) })
        ] }) }) })
      ] }),
      C && /* @__PURE__ */ a(Rt, { id: "view-header-subkey", children: /* @__PURE__ */ x(tt, { children: [
        Es(s) ? s : s ? v(s) : "",
        o && /* @__PURE__ */ a(
          ki,
          {
            title: v("learnMore"),
            href: o,
            isInline: !0,
            className: "pf-v5-u-ml-md"
          }
        )
      ] }) }),
      d && /* @__PURE__ */ a(
        Kt,
        {
          className: "keycloak__user-federation__dropdown",
          onOpenChange: T,
          toggle: (I) => /* @__PURE__ */ a(
            ut,
            {
              ref: I,
              onClick: T,
              variant: "primary",
              id: "ufToggleId",
              children: v(c)
            }
          ),
          isOpen: w,
          children: /* @__PURE__ */ a(Xt, { children: d })
        }
      ),
      u && /* @__PURE__ */ a(
        z,
        {
          variant: u.variant,
          onClick: u.onClick,
          "data-testid": "viewHeader-lower-btn",
          children: u.lowerButtonTitle
        }
      )
    ] }),
    f && /* @__PURE__ */ a(Pt, { component: "div" })
  ] });
}, Xf = /* @__PURE__ */ new Map([
  ["browserFlow", "browser"],
  ["registrationFlow", "registration"],
  ["directGrantFlow", "direct grant"],
  ["resetCredentialsFlow", "reset credentials"],
  ["clientAuthenticationFlow", "clients"],
  ["dockerAuthenticationFlow", "docker auth"],
  ["firstBrokerLoginFlow", "firstBrokerLogin"]
]), HH = ({ flowAlias: e, onClose: t }) => {
  const { adminClient: n } = de(), { t: r } = H(), i = Ke(), { addAlert: s, addError: o } = we(), { realm: l, realmRepresentation: c, refresh: d } = ye(), u = async ({ bindingType: m }) => {
    try {
      await n.realms.update(
        { realm: l },
        { ...c, [m]: e }
      ), d(), s(r("updateFlowSuccess"), pe.success);
    } catch (f) {
      o("updateFlowError", f);
    }
    t(!0);
  }, p = Array.from(Xf.keys());
  return /* @__PURE__ */ a(
    ft,
    {
      title: r("bindFlow"),
      variant: "small",
      onClose: () => t(),
      actions: [
        /* @__PURE__ */ a(z, { "data-testid": "save", type: "submit", form: "bind-form", children: r("save") }, "confirm"),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => t(),
            children: r("cancel")
          },
          "cancel"
        )
      ],
      isOpen: !0,
      children: /* @__PURE__ */ a(St, { id: "bind-form", isHorizontal: !0, onSubmit: i.handleSubmit(u), children: /* @__PURE__ */ a(He, { ...i, children: /* @__PURE__ */ a(
        at,
        {
          id: "chooseBindingType",
          name: "bindingType",
          label: r("chooseBindingType"),
          options: p.filter((m) => m !== "dockerAuthenticationFlow").map((m) => ({
            key: m,
            value: r(`flow.${Xf.get(m)}`)
          })),
          controller: { defaultValue: p[0] },
          menuAppendTo: "parent",
          "aria-label": r("chooseBindingType")
        }
      ) }) })
    }
  );
}, zH = () => {
  const { t: e } = H();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "alias",
        label: e("name"),
        labelIcon: e("flowNameHelp"),
        rules: { required: { value: !0, message: e("required") } }
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "description",
        label: e("description"),
        labelIcon: e("flowDescriptionHelp"),
        rules: {
          maxLength: {
            value: 255,
            message: e("maxLength", { length: 255 })
          }
        }
      }
    )
  ] });
}, qH = Be(() => import("./FlowDetails-DhODASOV.js")), Fg = {
  path: "/:realm/authentication/:id/:usedBy",
  element: /* @__PURE__ */ a(qH, {}),
  breadcrumb: (e) => e("flowDetails"),
  handle: {
    access: "view-authorization"
  }
}, YO = {
  ...Fg,
  path: "/:realm/authentication/:id/:usedBy/:builtIn"
}, $g = (e) => {
  const t = e.builtIn ? YO.path : Fg.path;
  return {
    pathname: We(t, e)
  };
}, GH = ({
  name: e,
  description: t,
  toggleDialog: n,
  onComplete: r
}) => {
  const { adminClient: i } = de(), { t: s } = H(), o = Ke({ mode: "onChange" }), { setValue: l, getValues: c, handleSubmit: d } = o, { addAlert: u, addError: p } = we(), m = Xe(), { realm: f } = ye();
  ze(() => {
    l("alias", s("copyOf", { name: e })), l("description", t);
  }, [e, t]);
  const g = async () => {
    const b = c();
    try {
      await i.authenticationManagement.copyFlow({
        flow: e,
        newName: b.alias
      });
      const v = (await i.authenticationManagement.getFlows()).find((y) => y.alias === b.alias);
      b.description !== t && (v.description = b.description, await i.authenticationManagement.updateFlow(
        { flowId: v.id },
        v
      )), u(s("copyFlowSuccess"), pe.success), m(
        $g({
          realm: f,
          id: v.id,
          usedBy: "notInUse",
          builtIn: v.builtIn ? "builtIn" : void 0
        })
      );
    } catch (v) {
      p("copyFlowError", v);
    }
    r();
  };
  return /* @__PURE__ */ a(
    ft,
    {
      title: s("duplicateFlow"),
      onClose: n,
      variant: Et.small,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "confirm",
            type: "submit",
            form: "duplicate-flow-form",
            children: s("duplicate")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel",
            variant: xe.link,
            onClick: n,
            children: s("cancel")
          },
          "cancel"
        )
      ],
      isOpen: !0,
      children: /* @__PURE__ */ a(He, { ...o, children: /* @__PURE__ */ a(
        St,
        {
          id: "duplicate-flow-form",
          onSubmit: d(g),
          isHorizontal: !0,
          children: /* @__PURE__ */ a(zH, {})
        }
      ) })
    }
  );
};
function jg({
  keyField: e,
  columns: t,
  data: n,
  actions: r,
  onDragFinish: i,
  ...s
}) {
  const { t: o } = H(), l = Ct(null), [c, d] = D({
    draggedItemId: "",
    draggingToItemIndex: -1,
    dragging: !1,
    tempItemOrder: [""]
  }), u = nt(
    () => n.map((w) => Un(w, e)),
    [n]
  ), p = (w) => {
    w.dataTransfer.effectAllowed = "move", w.dataTransfer.setData("text/plain", w.currentTarget.id);
    const A = w.currentTarget.id;
    w.currentTarget.classList.add(Lt.modifiers.ghostRow), w.currentTarget.setAttribute("aria-grabbed", "true"), d({ ...c, draggedItemId: A, dragging: !0 });
  }, m = (w, A, k) => {
    const T = w.indexOf(A);
    if (T === k)
      return w;
    const O = w.splice(T, 1);
    return w.splice(k, 0, O[0]), w;
  }, f = (w) => {
    if (!l.current) return;
    const A = l.current, k = Array.from(A.children);
    if (!k.map((T) => T.id).every((T, O) => T === w[O])) {
      for (; A.firstChild; )
        A.removeChild(A.lastChild);
      w.forEach((T) => {
        A.appendChild(k.find((O) => O.id === T));
      });
    }
  }, g = () => {
    Array.from(l.current?.children || []).forEach((w) => {
      w.classList.remove(Lt.modifiers.ghostRow), w.setAttribute("aria-grabbed", "false");
    }), d({
      ...c,
      draggedItemId: "",
      draggingToItemIndex: -1,
      dragging: !1
    });
  }, b = (w) => {
    v(w) || (f(u), d({ ...c, draggingToItemIndex: -1 }));
  }, v = (w) => {
    const A = l.current.getBoundingClientRect();
    return w.clientX > A.x && w.clientX < A.x + A.width && w.clientY > A.y && w.clientY < A.y + A.height;
  }, y = (w) => {
    v(w) ? i(c.draggedItemId, c.tempItemOrder) : g();
  }, C = (w) => {
    w.preventDefault();
    const k = w.target.closest("tr");
    if (!k || l.current && !l.current.contains(k) || k.id === c.draggedItemId)
      return null;
    {
      const T = k.id, O = Array.from(
        l.current?.children || []
      ).findIndex((I) => I.id === T);
      if (O !== c.draggingToItemIndex) {
        const I = m(
          u,
          c.draggedItemId,
          O
        );
        f(I), d({
          ...c,
          draggingToItemIndex: O,
          tempItemOrder: I
        });
      }
    }
  }, S = (w) => {
    const A = w.target;
    A.classList.remove(Lt.modifiers.ghostRow), A.setAttribute("aria-grabbed", "false"), d({
      ...c,
      draggedItemId: "",
      draggingToItemIndex: -1,
      dragging: !1
    });
  }, P = (w) => {
    if (w.thTooltipText)
      return {
        popover: /* @__PURE__ */ a("div", { children: o(w.thTooltipText) }),
        ariaLabel: o(w.thTooltipText)
      };
  };
  return /* @__PURE__ */ x(
    Cn,
    {
      "aria-label": "Draggable table",
      className: c.dragging ? Lt.modifiers.dragOver : "",
      ...s,
      children: [
        /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
          /* @__PURE__ */ a(Ne, { "aria-hidden": "true" }),
          t.map((w) => /* @__PURE__ */ a(
            Ne,
            {
              info: P(w),
              width: w.width,
              modifier: "fitContent",
              children: o(w.displayKey || w.name)
            },
            w.name
          ))
        ] }) }),
        /* @__PURE__ */ a(
          yn,
          {
            ref: l,
            onDragOver: C,
            onDrop: C,
            onDragLeave: b,
            children: n.map((w) => /* @__PURE__ */ x(
              it,
              {
                id: Un(w, e),
                draggable: !0,
                onDrop: y,
                onDragEnd: S,
                onDragStart: p,
                children: [
                  /* @__PURE__ */ a(
                    ke,
                    {
                      draggableRow: {
                        id: `draggable-row-${Un(w, e)}`
                      }
                    }
                  ),
                  t.map((A) => /* @__PURE__ */ a(
                    ke,
                    {
                      dataLabel: A.name,
                      children: A.cellRenderer ? A.cellRenderer(w) : Un(w, A.name)
                    },
                    `${Un(w, e)}_${A.name}`
                  )),
                  r && /* @__PURE__ */ a(ke, { isActionCell: !0, children: /* @__PURE__ */ a(
                    dl,
                    {
                      items: r.map(
                        ({ isActionable: A, ...k }) => A ? { ...k, isDisabled: !A(w) } : k
                      ),
                      rowData: w
                    }
                  ) })
                ]
              },
              Un(w, e)
            ))
          }
        )
      ]
    }
  );
}
const WH = ({
  requiredAction: e,
  onClose: t
}) => {
  const { adminClient: n } = de(), { t: r } = H(), { addAlert: i, addError: s } = we(), [o, l] = D(), c = Ke(), { setValue: d, handleSubmit: u } = c, p = (f) => {
    Pn(f || {}, d);
  };
  _e(
    async () => {
      const f = await n.authenticationManagement.getRequiredActionConfigDescription(
        {
          alias: e.alias
        }
      ), g = await n.authenticationManagement.getRequiredActionConfig({
        alias: e.alias
      });
      return f.properties = [
        //...defaultConfigProperties!,
        ...f.properties
      ], { configDescription: f, config: g };
    },
    ({ configDescription: f, config: g }) => {
      l(f), p(g);
    },
    []
  );
  const m = async (f) => {
    const g = ta(f);
    try {
      await n.authenticationManagement.updateRequiredActionConfig(
        { alias: e.alias },
        g
      ), p(g), i(r("configSaveSuccess"), pe.success), t();
    } catch (b) {
      s("configSaveError", b);
    }
  };
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.small,
      isOpen: !0,
      title: r("requiredActionConfig", { name: e.name }),
      onClose: t,
      children: /* @__PURE__ */ x(St, { id: "required-action-config-form", onSubmit: u(m), children: [
        /* @__PURE__ */ a(He, { ...c, children: /* @__PURE__ */ a(
          gr,
          {
            stringify: !0,
            properties: o?.properties || []
          }
        ) }),
        /* @__PURE__ */ x(ot, { children: [
          /* @__PURE__ */ a(z, { "data-testid": "save", variant: "primary", type: "submit", children: r("save") }),
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "cancel",
              variant: xe.link,
              onClick: t,
              children: r("cancel")
            }
          ),
          /* @__PURE__ */ x(
            z,
            {
              className: "pf-v5-u-ml-3xl",
              "data-testid": "clear",
              variant: xe.link,
              onClick: async () => {
                await n.authenticationManagement.removeRequiredActionConfig(
                  {
                    alias: e.alias
                  }
                ), c.reset({}), t();
              },
              children: [
                r("clear"),
                " ",
                /* @__PURE__ */ a(lu, {})
              ]
            }
          )
        ] })
      ] })
    }
  );
}, XH = () => {
  const { adminClient: e } = de(), { t } = H(), { addAlert: n, addError: r } = we(), [i, s] = D(), [o, l] = D(), [c, d] = D(0), u = () => d(c + 1), { realm: p } = ye(), m = async () => await (await Ai(
    `${wi(
      e.baseUrl
    )}admin/realms/${p}/ui-ext/authentication-management/required-actions`,
    {
      method: "GET",
      headers: so(await e.getAccessToken())
    }
  )).json();
  _e(
    async () => {
      const [v, y] = await Promise.all([
        m(),
        e.authenticationManagement.getUnregisteredRequiredActions()
      ]);
      return [
        ...v.map((C) => ({
          name: C.name,
          enabled: C.enabled,
          defaultAction: C.defaultAction,
          data: C
        })),
        ...y.map((C) => ({
          name: C.name,
          enabled: !1,
          defaultAction: !1,
          data: C
        }))
      ];
    },
    (v) => s(v),
    [c]
  );
  const f = (v) => !("alias" in v), g = async (v, y) => {
    try {
      y in v ? (v[y] = !v[y], delete v.configurable, await e.authenticationManagement.updateRequiredAction(
        { alias: v.alias },
        v
      )) : f(v) && await e.authenticationManagement.registerRequiredAction({
        name: v.name,
        providerId: v.providerId
      }), u(), n(t("updatedRequiredActionSuccess"), pe.success);
    } catch (C) {
      r("updatedRequiredActionError", C);
    }
  }, b = async (v, y) => {
    try {
      const C = v.alias;
      for (let S = 0; S < Math.abs(y); S++)
        y > 0 ? await e.authenticationManagement.lowerRequiredActionPriority(
          {
            alias: C
          }
        ) : await e.authenticationManagement.raiseRequiredActionPriority(
          {
            alias: C
          }
        );
      u(), n(t("updatedRequiredActionSuccess"), pe.success);
    } catch (C) {
      r("updatedRequiredActionError", C);
    }
  };
  return i ? /* @__PURE__ */ x(te, { children: [
    o && /* @__PURE__ */ a(
      WH,
      {
        requiredAction: o,
        onClose: () => l(void 0)
      }
    ),
    /* @__PURE__ */ a(
      jg,
      {
        keyField: "name",
        onDragFinish: async (v, y) => {
          const C = i.map((k) => k.name), S = y.indexOf(v), P = C.indexOf(v), w = i[P].data;
          if (!w.alias) return;
          const A = S - P;
          b(w, A);
        },
        columns: [
          {
            name: "name",
            displayKey: "action",
            width: 50
          },
          {
            name: "enabled",
            displayKey: "enabled",
            cellRenderer: (v) => /* @__PURE__ */ a(
              Je,
              {
                id: `enable-${Cd(v.name)}`,
                label: t("on"),
                labelOff: t("off"),
                isChecked: v.enabled,
                onChange: () => {
                  g(v.data, "enabled");
                },
                "aria-label": Cd(v.name)
              }
            ),
            width: 20
          },
          {
            name: "default",
            displayKey: "setAsDefaultAction",
            thTooltipText: "authDefaultActionTooltip",
            cellRenderer: (v) => /* @__PURE__ */ a(
              Je,
              {
                id: `default-${Cd(v.name)}`,
                label: t("on"),
                isDisabled: !v.enabled,
                labelOff: v.enabled ? t("off") : t("disabledOff"),
                isChecked: v.defaultAction,
                onChange: () => {
                  g(v.data, "defaultAction");
                },
                "aria-label": Cd(v.name)
              }
            ),
            width: 20
          },
          {
            name: "config",
            displayKey: "configure",
            cellRenderer: (v) => v.data.configurable ? /* @__PURE__ */ a(
              z,
              {
                variant: "plain",
                "aria-label": t("settings"),
                onClick: () => l(v.data),
                children: /* @__PURE__ */ a(aL, {})
              }
            ) : void 0,
            width: 10
          }
        ],
        data: i
      }
    )
  ] }) : /* @__PURE__ */ a(bt, {});
}, YH = "_label_1u2bs_1", Yf = {
  label: YH
}, $m = ({ label: e }) => /* @__PURE__ */ x(te, { children: [
  /* @__PURE__ */ a(Ks, { className: Yf.label }),
  " ",
  e
] }), JH = ({ id: e, isSpecificClient: t, onClose: n }) => {
  const { adminClient: r } = de(), { t: i } = H(), s = async (o, l, c) => (await OK(r, {
    id: e,
    type: t ? "clients" : "idp",
    first: o || 0,
    max: l || 10,
    search: c
  })).map((u) => ({ name: u }));
  return /* @__PURE__ */ a(
    ft,
    {
      header: /* @__PURE__ */ x(Rt, { children: [
        /* @__PURE__ */ a(tt, { component: Qt.h1, children: i("flowUsedBy") }),
        /* @__PURE__ */ a(tt, { children: i("flowUsedByDescription", {
          value: i(t ? "clients" : "identiyProviders")
        }) })
      ] }),
      variant: Et.medium,
      isOpen: !0,
      onClose: n,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel",
            id: "modal-cancel",
            onClick: n,
            children: i("close")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        xt,
        {
          loader: s,
          isPaginated: !0,
          ariaLabelKey: "usedBy",
          searchPlaceholderKey: "search",
          columns: [
            {
              name: "name"
            }
          ]
        }
      )
    }
  );
}, ZH = ({ authType: { id: e, usedBy: t } }) => {
  const { t: n } = H(), { realmRepresentation: r } = ye(), [i, s] = st(), o = Object.entries(r).find(
    (l) => l[1] === t?.values[0]
  )?.[0];
  return /* @__PURE__ */ x(te, { children: [
    i && /* @__PURE__ */ a(
      JH,
      {
        id: e,
        onClose: s,
        isSpecificClient: t?.type === "SPECIFIC_CLIENTS"
      }
    ),
    (t?.type === "SPECIFIC_PROVIDERS" || t?.type === "SPECIFIC_CLIENTS") && (t.values.length <= 8 ? /* @__PURE__ */ a(
      Rr,
      {
        "aria-label": n("usedBy"),
        bodyContent: /* @__PURE__ */ x("div", { children: [
          n(
            "appliedBy" + (t.type === "SPECIFIC_CLIENTS" ? "Clients" : "Providers")
          ),
          " ",
          t.values.map((l, c) => /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a("strong", { children: l }),
            c < t.values.length - 1 ? ", " : ""
          ] }))
        ] }, `usedBy-${e}-${t.values}`),
        children: /* @__PURE__ */ a(z, { variant: "link", className: Yf.label, children: /* @__PURE__ */ a($m, { label: n(`used.${t.type}`) }) })
      },
      e
    ) : /* @__PURE__ */ a(z, { variant: "link", className: Yf.label, onClick: s, children: /* @__PURE__ */ a($m, { label: n(`used.${t.type}`) }) })),
    t?.type === "DEFAULT" && /* @__PURE__ */ a($m, { label: n(`flow.${Xf.get(o)}`) }),
    !t?.type && n("used.notInUse")
  ] });
}, QH = "_buttonGroup_1gajx_1", ez = {
  buttonGroup: QH
}, Mr = ({
  name: e,
  save: t,
  saveText: n,
  reset: r,
  resetText: i,
  isSubmit: s = !1,
  isDisabled: o = !1,
  children: l,
  ...c
}) => {
  const { t: d } = H();
  return /* @__PURE__ */ x(ot, { className: ez.buttonGroup, ...c, children: [
    (t || s) && /* @__PURE__ */ a(
      z,
      {
        isDisabled: o,
        "data-testid": `${e}-save`,
        onClick: () => t?.(),
        type: s ? "submit" : "button",
        children: n || d("save")
      }
    ),
    r && /* @__PURE__ */ a(
      z,
      {
        isDisabled: o,
        "data-testid": `${e}-revert`,
        variant: "link",
        onClick: () => r(),
        children: i || d("revert")
      }
    ),
    l
  ] });
}, je = ({
  children: e,
  role: t,
  fineGrainedAccess: n = !1,
  isReadOnly: r = !1,
  unWrap: i = !1,
  ...s
}) => {
  const { hasAccess: o } = Nt(), l = (d, u) => $u.map(d, (p) => {
    if (!Es(p))
      return p;
    if (p.props) {
      const m = p;
      if (p.type === be)
        return Sl(p, {
          ...m.props,
          render: (g) => {
            const b = m.props.render(g);
            return Sl(b, {
              ...b.props,
              ...u
            });
          }
        });
      const f = l(
        m.props.children,
        u
      );
      switch (p.type) {
        case Mr:
          return Sl(p, {
            isActive: !u.isDisabled,
            children: f
          });
        case Mi:
          return Sl(p, {
            readOnly: u.isDisabled,
            children: f
          });
      }
      return Sl(
        p,
        p.type === re || p.type === Wt || p.type === Ha || p.type === ot || p.type === ni || p.type === Xs || p.type === Jn ? { children: f } : { ...u, children: f }
      );
    }
    return p;
  }), c = r || !o(t) && !n;
  return /* @__PURE__ */ x(te, { children: [
    !i && /* @__PURE__ */ a(St, { ...s, className: "keycloak__form " + (s.className || ""), children: l(e, c ? { isDisabled: c } : {}) }),
    i && l(e, c ? { isDisabled: c } : {})
  ] });
}, tz = ["poll", "ping"], Td = 10, Id = 600, jC = 0, BC = 600, nz = ({ realm: e, realmUpdated: t }) => {
  const { adminClient: n } = de(), { t: r } = H(), i = Ke({ mode: "onChange" }), { realm: s } = ye(), { addAlert: o, addError: l } = we(), c = (u) => Pn(u, i.setValue);
  ze(() => c(e), []);
  const d = async (u) => {
    try {
      await n.realms.update(
        { realm: s },
        ta(u)
      );
      const p = await n.realms.findOne({
        realm: s
      });
      t(p), c(p), o(r("updateCibaSuccess"), pe.success);
    } catch (p) {
      l("updateCibaError", p);
    }
  };
  return /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ x(
    je,
    {
      role: "manage-realm",
      isHorizontal: !0,
      onSubmit: i.handleSubmit(d),
      children: [
        /* @__PURE__ */ x(He, { ...i, children: [
          /* @__PURE__ */ a(
            at,
            {
              name: "attributes.cibaBackchannelTokenDeliveryMode",
              label: r("cibaBackchannelTokenDeliveryMode"),
              labelIcon: r("cibaBackchannelTokenDeliveryModeHelp"),
              options: tz.map((u) => ({
                key: u,
                value: r(`cibaBackhannelTokenDeliveryModes.${u}`)
              })),
              controller: { defaultValue: "" }
            }
          ),
          /* @__PURE__ */ a(
            ve,
            {
              name: "attributes.cibaExpiresIn",
              type: "number",
              min: Td,
              max: Id,
              label: r("cibaExpiresIn"),
              labelIcon: r("cibaExpiresInHelp"),
              rules: {
                min: {
                  value: Td,
                  message: r("greaterThan", {
                    value: Td
                  })
                },
                max: {
                  value: Id,
                  message: r("lessThan", { value: Id })
                },
                required: {
                  value: !0,
                  message: r("required")
                }
              }
            }
          ),
          /* @__PURE__ */ a(
            ve,
            {
              name: "attributes.cibaInterval",
              type: "number",
              min: Td,
              max: Id,
              label: r("cibaInterval"),
              labelIcon: r("cibaIntervalHelp"),
              rules: {
                min: {
                  value: jC,
                  message: r("greaterThan", {
                    value: jC
                  })
                },
                max: {
                  value: BC,
                  message: r("lessThan", { value: BC })
                },
                required: {
                  value: !0,
                  message: r("required")
                }
              }
            }
          ),
          /* @__PURE__ */ a(
            at,
            {
              name: "attributes.cibaAuthRequestedUserHint",
              label: r("cibaAuthRequestedUserHint"),
              labelIcon: r("cibaAuthRequestedUserHintHelp"),
              options: ["login_hint", "id_token_hint", "login_hint_token"],
              controller: { defaultValue: "" },
              isDisabled: !0
            }
          )
        ] }),
        /* @__PURE__ */ x(ot, { children: [
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "save",
              variant: "primary",
              type: "submit",
              isDisabled: !i.formState.isValid || !i.formState.isDirty,
              children: r("save")
            }
          ),
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "reload",
              variant: xe.link,
              onClick: () => c({ ...e }),
              children: r("reload")
            }
          )
        ] })
      ]
    }
  ) });
}, jl = [
  { unit: "second", label: "times.seconds", multiplier: 1 },
  { unit: "minute", label: "times.minutes", multiplier: 60 },
  { unit: "hour", label: "times.hours", multiplier: 3600 },
  { unit: "day", label: "times.days", multiplier: 86400 }
], JO = (e, t = 0) => e.reduce(
  (n, r) => t % r.multiplier === 0 && n.multiplier < r.multiplier ? r : n,
  e[0]
), az = (e, t) => {
  const n = JO(jl, e);
  return new Intl.NumberFormat(t, {
    style: "unit",
    unit: n.unit,
    unitDisplay: "long"
  }).format(e / n.multiplier);
}, ln = ({
  value: e,
  units: t = ["second", "minute", "hour", "day"],
  onChange: n,
  className: r,
  min: i,
  menuAppendTo: s,
  ...o
}) => {
  const { t: l } = H(), [c, d] = D(), u = nt(
    () => jl.find((S) => S.unit === t[0])?.multiplier,
    [t]
  ), [p, m] = D(""), [f, g] = D(u), [b, v] = D(!1), y = nt(() => {
    const S = t.map(
      (P) => jl.find((w) => w.unit === P)
    );
    return !S.every((P) => P.multiplier === f) && S[0] !== jl[0] && S.unshift(jl[0]), S;
  }, [t, f]);
  ze(() => {
    const S = JO(y, e).multiplier;
    e ? (g(S), m(e / S), d(S)) : (m(e || ""), g(c ?? u), d(c ?? u));
  }, [e, u]);
  const C = (S, P = f) => {
    S !== "" ? (n?.(S * (P || 1)), m(S)) : n?.("");
  };
  return /* @__PURE__ */ x(ca, { hasGutter: !0, className: r, children: [
    /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(
      gt,
      {
        ...o,
        type: "number",
        "aria-label": "kc-time",
        min: i || 0,
        value: p,
        className: `${r}-input`,
        onChange: (S, P) => {
          C(P === "" ? P : parseInt(P));
        }
      }
    ) }),
    /* @__PURE__ */ a($t, { id: `${r}-select-menu`, children: /* @__PURE__ */ a(
      ht,
      {
        variant: mt.single,
        "aria-label": l("unitLabel"),
        className: `${r}-select`,
        onSelect: (S) => {
          g(S), C(p, S), v(!1);
        },
        menuAppendTo: s,
        selections: f,
        onToggle: () => {
          v(!b);
        },
        isOpen: b,
        isDisabled: o.isDisabled,
        children: y.map((S) => /* @__PURE__ */ a(
          Re,
          {
            id: S.label,
            value: S.multiplier,
            children: l(S.label)
          },
          S.label
        ))
      }
    ) })
  ] });
}, vl = ({
  name: e,
  label: t,
  controller: n,
  labelIcon: r,
  ...i
}) => {
  const {
    control: s,
    formState: { errors: o }
  } = De(), l = o[e];
  return /* @__PURE__ */ x(
    re,
    {
      isRequired: n.rules?.required === !0,
      label: t || e,
      fieldId: e,
      labelIcon: r ? /* @__PURE__ */ a(le, { helpText: r, fieldLabelId: e }) : void 0,
      children: [
        /* @__PURE__ */ a(
          be,
          {
            ...n,
            name: e,
            control: s,
            render: ({ field: c }) => /* @__PURE__ */ a(
              ln,
              {
                ...i,
                id: e,
                "data-testid": e,
                value: c.value,
                onChange: c.onChange,
                validated: l ? _n.error : _n.default
              }
            )
          }
        ),
        l && /* @__PURE__ */ a(kn, { message: l.message })
      ]
    }
  );
}, ho = ["totp", "hotp"], UC = ["SHA1", "SHA256", "SHA512"], VC = [6, 8], rz = ({ realm: e, realmUpdated: t }) => {
  const { adminClient: n } = de(), { t: r } = H(), i = Ke({ mode: "onChange", defaultValues: e }), {
    control: s,
    reset: o,
    handleSubmit: l,
    formState: { isValid: c, isDirty: d }
  } = i, { realm: u } = ye(), { addAlert: p, addError: m } = we(), f = ba(), g = rt({
    name: "otpPolicyType",
    control: s,
    defaultValue: ho[0]
  }), b = (C) => o(C);
  ze(() => b(e), []);
  const v = nt(() => {
    const C = (e.otpSupportedApplications ?? []).map(
      (S) => r(`otpSupportedApplications.${S}`)
    );
    return f(C, (S) => S);
  }, [e.otpSupportedApplications]);
  return /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(
    je,
    {
      role: "manage-realm",
      isHorizontal: !0,
      onSubmit: l(async (C) => {
        try {
          await n.realms.update({ realm: u }, C);
          const S = await n.realms.findOne({
            realm: u
          });
          t(S), b(S), p(r("updateOtpSuccess"), pe.success);
        } catch (S) {
          m("updateOtpError", S);
        }
      }),
      className: "keycloak__otp_policies_authentication__form",
      children: /* @__PURE__ */ x(He, { ...i, children: [
        /* @__PURE__ */ a(
          re,
          {
            label: r("otpType"),
            labelIcon: /* @__PURE__ */ a(le, { helpText: r("otpTypeHelp"), fieldLabelId: "otpType" }),
            hasNoPaddingTop: !0,
            children: /* @__PURE__ */ a(
              be,
              {
                name: "otpPolicyType",
                "data-testid": "otpPolicyType",
                defaultValue: ho[0],
                control: s,
                render: ({ field: C }) => /* @__PURE__ */ a(te, { children: ho.map((S) => /* @__PURE__ */ a(
                  sn,
                  {
                    id: S,
                    "data-testid": S,
                    isChecked: C.value === S,
                    name: "otpPolicyType",
                    onChange: () => C.onChange(S),
                    label: r(`policyType.${S}`),
                    className: "keycloak__otp_policies_authentication__policy-type"
                  },
                  S
                )) })
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: "otpPolicyAlgorithm",
            label: r("otpHashAlgorithm"),
            labelIcon: r("otpHashAlgorithmHelp"),
            options: UC.map((C) => ({
              key: `Hmac${C}`,
              value: C
            })),
            controller: { defaultValue: `Hmac${UC[0]}` }
          }
        ),
        /* @__PURE__ */ a(
          re,
          {
            label: r("otpPolicyDigits"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("otpPolicyDigitsHelp"),
                fieldLabelId: "otpPolicyDigits"
              }
            ),
            hasNoPaddingTop: !0,
            children: /* @__PURE__ */ a(
              be,
              {
                name: "otpPolicyDigits",
                "data-testid": "otpPolicyDigits",
                defaultValue: VC[0],
                control: s,
                render: ({ field: C }) => /* @__PURE__ */ a(te, { children: VC.map((S) => /* @__PURE__ */ a(
                  sn,
                  {
                    id: `digit-${S}`,
                    "data-testid": `digit-${S}`,
                    isChecked: C.value === S,
                    name: "otpPolicyDigits",
                    onChange: () => C.onChange(S),
                    label: S,
                    className: "keycloak__otp_policies_authentication__number-of-digits"
                  },
                  S
                )) })
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          ts,
          {
            name: "otpPolicyLookAheadWindow",
            label: r("lookAround"),
            labelIcon: r("lookAroundHelp"),
            controller: { defaultValue: 1, rules: { min: 0 } }
          }
        ),
        g === ho[0] && /* @__PURE__ */ a(
          vl,
          {
            name: "otpPolicyPeriod",
            label: r("otpPolicyPeriod"),
            labelIcon: r("otpPolicyPeriodHelp"),
            units: ["second", "minute"],
            controller: {
              defaultValue: 30,
              rules: {
                min: 1,
                max: {
                  value: 120,
                  message: r("maxLength", { length: "2 " + r("minutes") })
                }
              }
            }
          }
        ),
        g === ho[1] && /* @__PURE__ */ a(
          ts,
          {
            name: "otpPolicyInitialCounter",
            label: r("initialCounter"),
            labelIcon: r("initialCounterHelp"),
            controller: { defaultValue: 30, rules: { min: 1, max: 120 } }
          }
        ),
        /* @__PURE__ */ a(
          re,
          {
            label: r("supportedApplications"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("supportedApplicationsHelp"),
                fieldLabelId: "supportedApplications"
              }
            ),
            children: /* @__PURE__ */ a("span", { "data-testid": "supportedApplications", children: /* @__PURE__ */ a(vn, { children: v.map((C) => /* @__PURE__ */ a(Vt, { isReadOnly: !0, children: C }, C)) }) })
          }
        ),
        g === ho[0] && /* @__PURE__ */ a(
          ro,
          {
            name: "otpPolicyCodeReusable",
            label: r("otpPolicyCodeReusable"),
            labelIcon: r("otpPolicyCodeReusableHelp"),
            labelOn: r("on"),
            labelOff: r("off")
          }
        ),
        /* @__PURE__ */ x(ot, { children: [
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "save",
              variant: "primary",
              type: "submit",
              isDisabled: !c || !d,
              children: r("save")
            }
          ),
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "reload",
              variant: xe.link,
              onClick: () => o({ ...e }),
              children: r("reload")
            }
          )
        ] })
      ] })
    }
  ) });
}, iz = ({
  policy: { id: e, configType: t, defaultValue: n, displayName: r },
  onRemove: i
}) => {
  const { t: s } = H(), {
    control: o,
    register: l,
    formState: { errors: c }
  } = De(), d = c[e];
  return /* @__PURE__ */ x(
    re,
    {
      label: r,
      fieldId: e,
      isRequired: !0,
      labelIcon: /* @__PURE__ */ a(
        le,
        {
          helpText: s(`passwordPoliciesHelp.${e}`),
          fieldLabelId: e
        }
      ),
      children: [
        /* @__PURE__ */ x(ca, { children: [
          /* @__PURE__ */ x($t, { isFilled: !0, children: [
            t && t !== "int" && /* @__PURE__ */ a(
              gt,
              {
                id: e,
                "data-testid": e,
                ...l(e, { required: !0 }),
                defaultValue: n,
                validated: d ? _n.error : _n.default
              }
            ),
            t === "int" && /* @__PURE__ */ a(
              be,
              {
                name: e,
                defaultValue: Number.parseInt(n || "0"),
                control: o,
                render: ({ field: u }) => {
                  const m = (g) => u.onChange(Math.max(g, 0)), f = Number(u.value);
                  return /* @__PURE__ */ a(
                    os,
                    {
                      id: e,
                      value: f,
                      min: 0,
                      onPlus: () => m(f + 1),
                      onMinus: () => m(f - 1),
                      onChange: (g) => {
                        const b = Number(g.currentTarget.value);
                        m(isNaN(b) ? 0 : b);
                      },
                      className: "keycloak__policies_authentication__number-field"
                    }
                  );
                }
              }
            ),
            !t && /* @__PURE__ */ a(
              Je,
              {
                id: e,
                label: s("on"),
                labelOff: s("off"),
                isChecked: !0,
                isDisabled: !0,
                "aria-label": r
              }
            )
          ] }),
          /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(
            z,
            {
              "data-testid": `remove-${e}`,
              variant: "link",
              className: "keycloak__policies_authentication__minus-icon",
              onClick: () => i(e),
              "aria-label": s("remove"),
              children: /* @__PURE__ */ a($i, {})
            }
          ) })
        ] }),
        d && /* @__PURE__ */ a(kn, { message: s("required") })
      ]
    }
  );
}, ZO = " and ", sz = (e, t) => e.map((n) => `${n.id}(${t[n.id]})`).join(ZO), oz = (e, t) => e.split(ZO).map(lz).reduce((n, { id: r, value: i }) => {
  const s = t.find((o) => o.id === r);
  return s ? n.concat({ ...s, value: i }) : n;
}, []);
function lz(e) {
  const t = e.indexOf("(");
  if (t === -1)
    return { id: e.trim() };
  const n = e.substring(0, t).trim(), r = e.lastIndexOf(")");
  if (r === -1)
    return { id: n };
  const i = e.substring(t + 1, r).trim();
  return { id: n, value: i };
}
const KC = ({ onSelect: e, selectedPolicies: t }) => {
  const { t: n } = H(), { passwordPolicies: r } = Tt(), [i, s] = D(!1), o = nt(
    () => r?.filter(
      (l) => t.find((c) => c.id === l.id) === void 0
    ),
    [t]
  );
  return /* @__PURE__ */ a(
    Dn,
    {
      onSelect: (l, c) => {
        e(c), s(!1);
      },
      toggle: (l) => /* @__PURE__ */ a(
        ut,
        {
          ref: l,
          onClick: () => s(!i),
          isExpanded: i,
          isDisabled: o?.length === 0,
          style: { width: "300px" },
          "data-testid": "add-policy",
          children: n("addPolicy")
        }
      ),
      isOpen: i,
      children: /* @__PURE__ */ a(ea, { children: o?.map((l) => /* @__PURE__ */ a(Re, { value: l, children: l.displayName }, l.id)) })
    }
  );
}, cz = ({
  realm: e,
  realmUpdated: t
}) => {
  const { adminClient: n } = de(), { t: r } = H(), { passwordPolicies: i } = Tt(), { addAlert: s, addError: o } = we(), { realm: l } = ye(), [c, d] = D([]), u = (C) => {
    d([...c, C]), f(C.id, C.defaultValue, { shouldDirty: !0 });
  }, p = Ke({
    defaultValues: {}
  }), {
    handleSubmit: m,
    setValue: f,
    reset: g,
    formState: { isDirty: b }
  } = p, v = (C) => {
    g();
    const S = oz(C.passwordPolicy || "", i);
    S.forEach((P) => {
      f(P.id, P.value);
    }), d(S);
  };
  ze(() => v(e), []);
  const y = async (C) => {
    const S = {
      ...e,
      passwordPolicy: sz(c, C)
    };
    try {
      await n.realms.update({ realm: l }, S), t(S), v(S), s(r("updatePasswordPolicySuccess"), pe.success);
    } catch (P) {
      o("updatePasswordPolicyError", P);
    }
  };
  return /* @__PURE__ */ x(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
    (c.length !== 0 || e.passwordPolicy) && /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a(Ta, { children: /* @__PURE__ */ a(cr, { children: /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(KC, { onSelect: u, selectedPolicies: c }) }) }) }),
      /* @__PURE__ */ a(Pt, {}),
      /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(He, { ...p, children: /* @__PURE__ */ x(
        je,
        {
          className: "keycloak__policies_authentication__form",
          role: "manage-realm",
          isHorizontal: !0,
          onSubmit: m(y),
          children: [
            c.map((C, S) => /* @__PURE__ */ a(
              iz,
              {
                policy: C,
                onRemove: (P) => {
                  d(c.filter((w) => w.id !== P)), f(C.id, "", { shouldDirty: !0 });
                }
              },
              `${C.id}-${S}`
            )),
            /* @__PURE__ */ x(ot, { children: [
              /* @__PURE__ */ a(
                z,
                {
                  "data-testid": "save",
                  variant: "primary",
                  type: "submit",
                  isDisabled: !b,
                  children: r("save")
                }
              ),
              /* @__PURE__ */ a(
                z,
                {
                  "data-testid": "reload",
                  variant: xe.link,
                  onClick: () => v(e),
                  children: r("reload")
                }
              )
            ] })
          ]
        }
      ) }) })
    ] }),
    !c.length && !e.passwordPolicy && /* @__PURE__ */ x(Pr, { "data-testid": "empty-state", variant: "lg", children: [
      /* @__PURE__ */ a(
        Ei,
        {
          titleText: /* @__PURE__ */ a(te, { children: r("noPasswordPolicies") }),
          icon: /* @__PURE__ */ a(As, { icon: _a }),
          headingLevel: "h1"
        }
      ),
      /* @__PURE__ */ a(Di, { children: r("noPasswordPoliciesInstructions") }),
      /* @__PURE__ */ a(ss, { children: /* @__PURE__ */ a(ko, { children: /* @__PURE__ */ a(KC, { onSelect: u, selectedPolicies: [] }) }) })
    ] })
  ] });
}, dz = [
  "ES256",
  "ES384",
  "ES512",
  "RS256",
  "RS384",
  "RS512",
  "Ed25519",
  "RS1"
], uz = [
  "not specified",
  "none",
  "indirect",
  "direct"
], pz = [
  "not specified",
  "platform",
  "cross-platform"
], mz = ["not specified", "Yes", "No"], fz = [
  "not specified",
  "required",
  "preferred",
  "discouraged"
], Nl = ({
  name: e,
  label: t,
  labelIcon: n,
  options: r,
  labelPrefix: i,
  isMultiSelect: s = !1
}) => {
  const { t: o } = H();
  return /* @__PURE__ */ a(
    at,
    {
      name: e,
      label: t,
      labelIcon: n,
      variant: s ? "typeaheadMulti" : "single",
      controller: { defaultValue: r[0] },
      options: r.map((l) => ({
        key: l,
        value: i ? o(`${i}.${l}`) : l
      }))
    }
  );
}, HC = ({
  realm: e,
  realmUpdated: t,
  isPasswordLess: n = !1
}) => {
  const { adminClient: r } = de(), { t: i } = H(), { addAlert: s, addError: o } = we(), { realm: l } = ye(), { enabled: c } = Dr(), d = Ke({ mode: "onChange" }), {
    setValue: u,
    handleSubmit: p,
    formState: { isDirty: m }
  } = d, f = n ? "webAuthnPolicyPasswordless" : "webAuthnPolicy", g = (v) => Pn(v, u);
  ze(() => g(e), []);
  const b = async (v) => {
    const y = ta(v);
    try {
      await r.realms.update({ realm: l }, y), t(y), g(y), s(i("webAuthnUpdateSuccess"), pe.success);
    } catch (C) {
      o("webAuthnUpdateError", C);
    }
  };
  return /* @__PURE__ */ x(Te, { variant: "light", children: [
    c && /* @__PURE__ */ a(Rr, { bodyContent: i(`${f}FormHelp`), children: /* @__PURE__ */ a(Rt, { className: "keycloak__section_intro__help", children: /* @__PURE__ */ x(tt, { children: [
      /* @__PURE__ */ a(zc, {}),
      " ",
      i("webauthnIntro")
    ] }) }) }),
    /* @__PURE__ */ x(
      je,
      {
        role: "manage-realm",
        isHorizontal: !0,
        onSubmit: p(b),
        className: "keycloak__webauthn_policies_authentication__form",
        children: [
          /* @__PURE__ */ x(He, { ...d, children: [
            /* @__PURE__ */ a(
              ve,
              {
                name: `${f}RpEntityName`,
                label: i("webAuthnPolicyRpEntityName"),
                labelIcon: i("webAuthnPolicyRpEntityNameHelp"),
                rules: { required: { value: !0, message: i("required") } }
              }
            ),
            /* @__PURE__ */ a(
              Nl,
              {
                name: `${f}SignatureAlgorithms`,
                label: i("webAuthnPolicySignatureAlgorithms"),
                labelIcon: i("webAuthnPolicySignatureAlgorithmsHelp"),
                options: dz,
                isMultiSelect: !0
              }
            ),
            /* @__PURE__ */ a(
              ve,
              {
                name: `${f}RpId`,
                label: i("webAuthnPolicyRpId"),
                labelIcon: i("webAuthnPolicyRpIdHelp")
              }
            ),
            /* @__PURE__ */ a(
              Nl,
              {
                name: `${f}AttestationConveyancePreference`,
                label: i("webAuthnPolicyAttestationConveyancePreference"),
                labelIcon: i("webAuthnPolicyAttestationConveyancePreferenceHelp"),
                options: uz,
                labelPrefix: "attestationPreference"
              }
            ),
            /* @__PURE__ */ a(
              Nl,
              {
                name: `${f}AuthenticatorAttachment`,
                label: i("webAuthnPolicyAuthenticatorAttachment"),
                labelIcon: i("webAuthnPolicyAuthenticatorAttachmentHelp"),
                options: pz,
                labelPrefix: "authenticatorAttachment"
              }
            ),
            /* @__PURE__ */ a(
              Nl,
              {
                name: `${f}RequireResidentKey`,
                label: i("webAuthnPolicyRequireResidentKey"),
                labelIcon: i("webAuthnPolicyRequireResidentKeyHelp"),
                options: mz,
                labelPrefix: "residentKey"
              }
            ),
            /* @__PURE__ */ a(
              Nl,
              {
                name: `${f}UserVerificationRequirement`,
                label: i("webAuthnPolicyUserVerificationRequirement"),
                labelIcon: i("webAuthnPolicyUserVerificationRequirementHelp"),
                options: fz,
                labelPrefix: "userVerify"
              }
            ),
            /* @__PURE__ */ a(
              vl,
              {
                name: `${f}CreateTimeout`,
                label: i("webAuthnPolicyCreateTimeout"),
                labelIcon: i("webAuthnPolicyCreateTimeoutHelp"),
                units: ["second", "minute", "hour"],
                controller: {
                  defaultValue: 0,
                  rules: {
                    min: 0,
                    max: {
                      value: 31536,
                      message: i("webAuthnPolicyCreateTimeoutHint")
                    }
                  }
                }
              }
            ),
            /* @__PURE__ */ a(
              ro,
              {
                name: `${f}AvoidSameAuthenticatorRegister`,
                label: i("webAuthnPolicyAvoidSameAuthenticatorRegister"),
                labelIcon: i("webAuthnPolicyAvoidSameAuthenticatorRegisterHelp"),
                labelOn: i("on"),
                labelOff: i("off")
              }
            ),
            /* @__PURE__ */ a(
              re,
              {
                label: i("webAuthnPolicyAcceptableAaguids"),
                fieldId: "webAuthnPolicyAcceptableAaguids",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: i("webAuthnPolicyAcceptableAaguidsHelp"),
                    fieldLabelId: "webAuthnPolicyAcceptableAaguids"
                  }
                ),
                children: /* @__PURE__ */ a(
                  Or,
                  {
                    name: `${f}AcceptableAaguids`,
                    "aria-label": i("webAuthnPolicyAcceptableAaguids"),
                    addButtonLabel: "addAaguids"
                  }
                )
              }
            ),
            /* @__PURE__ */ a(
              re,
              {
                label: i("webAuthnPolicyExtraOrigins"),
                fieldId: "webAuthnPolicyExtraOrigins",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: i("webAuthnPolicyExtraOriginsHelp"),
                    fieldLabelId: "webAuthnPolicyExtraOrigins"
                  }
                ),
                children: /* @__PURE__ */ a(
                  Or,
                  {
                    name: `${f}ExtraOrigins`,
                    "aria-label": i("webAuthnPolicyExtraOrigins"),
                    addButtonLabel: "addOrigins"
                  }
                )
              }
            )
          ] }),
          /* @__PURE__ */ x(ot, { children: [
            /* @__PURE__ */ a(
              z,
              {
                "data-testid": "save",
                variant: "primary",
                type: "submit",
                isDisabled: !m,
                children: i("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                "data-testid": "reload",
                variant: xe.link,
                onClick: () => g(e),
                children: i("reload")
              }
            )
          ] })
        ]
      }
    )
  ] });
}, hz = () => {
  const { adminClient: e } = de(), { t } = H(), [n, r] = D(1), { realm: i } = ye(), [s, o] = D();
  return _e(
    async () => {
      const l = await e.realms.findOne({ realm: i });
      if (!l)
        throw new Error(t("notFound"));
      return l;
    },
    (l) => {
      o(l);
    },
    []
  ), s ? /* @__PURE__ */ x(
    Ka,
    {
      activeKey: n,
      onSelect: (l, c) => r(c),
      mountOnEnter: !0,
      unmountOnExit: !0,
      children: [
        /* @__PURE__ */ a(
          Ee,
          {
            id: "passwordPolicy",
            eventKey: 1,
            title: /* @__PURE__ */ a(Pe, { children: t("passwordPolicy") }),
            children: /* @__PURE__ */ a(cz, { realm: s, realmUpdated: o })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            id: "otpPolicy",
            eventKey: 2,
            title: /* @__PURE__ */ a(Pe, { children: t("otpPolicy") }),
            children: /* @__PURE__ */ a(rz, { realm: s, realmUpdated: o })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            id: "webauthnPolicy",
            eventKey: 3,
            title: /* @__PURE__ */ a(Pe, { children: t("webauthnPolicy") }),
            children: /* @__PURE__ */ a(HC, { realm: s, realmUpdated: o })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            id: "webauthnPasswordlessPolicy",
            eventKey: 4,
            title: /* @__PURE__ */ a(Pe, { children: t("webauthnPasswordlessPolicy") }),
            children: /* @__PURE__ */ a(HC, { realm: s, realmUpdated: o, isPasswordLess: !0 })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            "data-testid": "tab-ciba-policy",
            eventKey: 5,
            title: /* @__PURE__ */ a(Pe, { children: t("cibaPolicy") }),
            children: /* @__PURE__ */ a(nz, { realm: s, realmUpdated: o })
          }
        )
      ]
    }
  ) : /* @__PURE__ */ a(bt, {});
}, gz = Be(() => Promise.resolve().then(() => xz)), Bg = {
  path: "/:realm/authentication",
  element: /* @__PURE__ */ a(gz, {}),
  breadcrumb: (e) => e("authentication"),
  handle: {
    access: ["view-realm", "view-identity-providers", "view-clients"]
  }
}, QO = {
  ...Bg,
  path: "/:realm/authentication/:tab"
}, zC = (e) => {
  const t = e.tab ? QO.path : Bg.path;
  return {
    pathname: We(t, e)
  };
}, bz = Be(() => import("./CreateFlow-CgrG-zrj.js")), ek = {
  path: "/:realm/authentication/flows/create",
  element: /* @__PURE__ */ a(bz, {}),
  breadcrumb: (e) => e("createFlow"),
  handle: {
    access: "manage-authorization"
  }
}, vz = (e) => ({
  pathname: We(ek.path, e)
}), yz = ({ id: e, alias: t, usedBy: n, builtIn: r }) => {
  const { t: i } = H(), { realm: s } = ye();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      Ae,
      {
        to: $g({
          realm: s,
          id: e,
          usedBy: n?.type || "notInUse",
          builtIn: r ? "builtIn" : void 0
        }),
        children: t
      },
      `link-${e}`
    ),
    " ",
    r && /* @__PURE__ */ a(pn, { children: i("buildIn") }, `label-${e}`)
  ] });
};
function Cz() {
  const { adminClient: e } = de(), { t } = H(), { realm: n, realmRepresentation: r } = ye(), [i, s] = D(0), o = () => s(i + 1), { addAlert: l, addError: c } = we(), d = ba(), [u, p] = D(), [m, f] = st(), [g, b] = st(), v = async () => {
    const T = await (await Ai(
      `${wi(
        e.baseUrl
      )}admin/realms/${n}/ui-ext/authentication-management/flows`,
      {
        method: "GET",
        headers: so(await e.getAccessToken())
      }
    )).json();
    return T ? wr(
      d(T, mr("alias")),
      (O) => O.usedBy?.type
    ) : [];
  }, y = (k) => Kn(zC({ realm: n, tab: k })), C = y("flows"), S = y("required-actions"), P = y("policies"), [w, A] = Ve({
    titleKey: "deleteConfirmFlow",
    children: /* @__PURE__ */ x(as, { i18nKey: "deleteConfirmFlowMessage", children: [
      " ",
      /* @__PURE__ */ a("strong", { children: { flow: u ? u.alias : "" } }),
      "."
    ] }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.authenticationManagement.deleteFlow({
          flowId: u.id
        }), o(), l(t("deleteFlowSuccess"), pe.success);
      } catch (k) {
        c("deleteFlowError", k);
      }
    }
  });
  return r ? /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(A, {}),
    m && /* @__PURE__ */ a(
      GH,
      {
        name: u ? u.alias : "",
        description: u?.description,
        toggleDialog: f,
        onComplete: () => {
          o(), f();
        }
      }
    ),
    g && /* @__PURE__ */ a(
      HH,
      {
        onClose: () => {
          b(), o();
        },
        flowAlias: u?.alias
      }
    ),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "titleAuthentication",
        subKey: "authenticationExplain",
        helpUrl: sa.authenticationUrl,
        divider: !1
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ x(
      Vn,
      {
        isBox: !0,
        defaultLocation: zC({ realm: n, tab: "flows" }),
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "flows",
              title: /* @__PURE__ */ a(Pe, { children: t("flows") }),
              ...C,
              children: /* @__PURE__ */ a(
                xt,
                {
                  loader: v,
                  ariaLabelKey: "titleAuthentication",
                  searchPlaceholderKey: "searchForFlow",
                  toolbarItem: /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
                    z,
                    {
                      component: (k) => /* @__PURE__ */ a(
                        Ae,
                        {
                          ...k,
                          to: vz({ realm: n })
                        }
                      ),
                      children: t("createFlow")
                    }
                  ) }),
                  actionResolver: ({ data: k }) => [
                    {
                      title: t("duplicate"),
                      onClick: () => {
                        f(), p(k);
                      }
                    },
                    ...k.usedBy?.type !== "DEFAULT" ? [
                      {
                        title: t("bindFlow"),
                        onClick: () => {
                          b(), p(k);
                        }
                      }
                    ] : [],
                    ...!k.builtIn && !k.usedBy ? [
                      {
                        title: t("delete"),
                        onClick: () => {
                          p(k), w();
                        }
                      }
                    ] : []
                  ],
                  columns: [
                    {
                      name: "alias",
                      displayKey: "flowName",
                      cellRenderer: (k) => /* @__PURE__ */ a(yz, { ...k })
                    },
                    {
                      name: "usedBy",
                      displayKey: "usedBy",
                      cellRenderer: (k) => /* @__PURE__ */ a(ZH, { authType: k })
                    },
                    {
                      name: "description",
                      displayKey: "description"
                    }
                  ],
                  emptyState: /* @__PURE__ */ a(
                    ct,
                    {
                      message: t("emptyEvents"),
                      instructions: t("emptyEventsInstructions")
                    }
                  )
                },
                i
              )
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "requiredActions",
              title: /* @__PURE__ */ a(Pe, { children: t("requiredActions") }),
              ...S,
              children: /* @__PURE__ */ a(XH, {})
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "policies",
              title: /* @__PURE__ */ a(Pe, { children: t("policies") }),
              ...P,
              children: /* @__PURE__ */ a(hz, {})
            }
          )
        ]
      }
    ) })
  ] }) : /* @__PURE__ */ a(bt, {});
}
const xz = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Cz
}, Symbol.toStringTag, { value: "Module" })), Sz = (e) => {
  const { t } = H(), n = Tt(), r = e.protocol, i = n.protocolMapperTypes[r], s = n.builtinProtocolMappers[r], [o, l] = D([]), [c, d] = D([]), u = ba(), p = nt(
    () => u(s, mr("name")).map((y) => {
      const C = i.find(
        (S) => S.id === y.protocolMapper
      );
      return {
        item: y,
        id: y.name,
        description: C.helpText
      };
    }),
    [s, i]
  ), [m, f] = D(p);
  if (e.filter && e.filter.length !== o.length) {
    l(e.filter);
    const y = e.filter.map((C) => C.name);
    f([...p.filter((C) => !y.includes(C.item.name))]);
  }
  const g = nt(
    () => u(i, mr("name")),
    [i]
  ), b = !!e.filter, v = [t("name"), t("description")];
  return /* @__PURE__ */ x(
    ft,
    {
      "aria-label": t(b ? "addPredefinedMappers" : "emptySecondaryAction"),
      variant: Et.medium,
      header: /* @__PURE__ */ x(
        Rt,
        {
          role: "dialog",
          "aria-label": t(b ? "addPredefinedMappers" : "emptySecondaryAction"),
          children: [
            /* @__PURE__ */ a(tt, { component: Qt.h1, children: t(b ? "addPredefinedMappers" : "emptySecondaryAction") }),
            /* @__PURE__ */ a(tt, { children: t(b ? "predefinedMappingDescription" : "configureMappingDescription") })
          ]
        }
      ),
      isOpen: e.open,
      onClose: e.toggleDialog,
      actions: b ? [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            "data-testid": "confirm",
            isDisabled: m.length === 0 || c.length === 0,
            onClick: () => {
              e.onConfirm(c.map(({ item: y }) => y)), e.toggleDialog();
            },
            children: t("add")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => {
              e.toggleDialog();
            },
            children: t("cancel")
          },
          "cancel"
        )
      ] : [],
      children: [
        !b && /* @__PURE__ */ x(
          Er,
          {
            onSelectDataListItem: (y, C) => {
              const S = i.find((P) => P.id === C);
              e.onConfirm(S), e.toggleDialog();
            },
            "aria-label": t("addPredefinedMappers"),
            isCompact: !0,
            children: [
              /* @__PURE__ */ a(Pa, { "aria-label": t("headerName"), id: "header", children: /* @__PURE__ */ a(Va, { children: /* @__PURE__ */ a(
                Ua,
                {
                  dataListCells: v.map((y) => /* @__PURE__ */ a(oa, { style: { fontWeight: 700 }, children: y }, y))
                }
              ) }) }),
              g.map((y) => /* @__PURE__ */ a(
                Pa,
                {
                  "aria-label": y.name,
                  id: y.id,
                  children: /* @__PURE__ */ a(Va, { children: /* @__PURE__ */ a(
                    Ua,
                    {
                      dataListCells: [
                        /* @__PURE__ */ a(oa, { children: y.name }, `name-${y.id}`),
                        /* @__PURE__ */ a(oa, { children: y.helpText }, `helpText-${y.id}`)
                      ]
                    }
                  ) })
                },
                y.id
              ))
            ]
          }
        ),
        b && /* @__PURE__ */ a(
          xt,
          {
            loader: m,
            onSelect: d,
            canSelectAll: !0,
            ariaLabelKey: "addPredefinedMappers",
            searchPlaceholderKey: "searchForMapper",
            columns: [
              {
                name: "id",
                displayKey: "name"
              },
              {
                name: "description",
                displayKey: "description"
              }
            ],
            emptyState: /* @__PURE__ */ a(
              ct,
              {
                message: t("emptyMappers"),
                instructions: t("emptyBuiltInMappersInstructions")
              }
            )
          }
        )
      ]
    }
  );
}, wz = ({ id: e, name: t, detailLink: n }) => /* @__PURE__ */ a(Ae, { to: n(e), children: t }), tk = ({
  model: e,
  onAdd: t,
  onDelete: n,
  detailLink: r
}) => {
  const { t: i } = H(), [s, o] = D(!1), l = e.protocolMappers, c = Tt().protocolMapperTypes[e.protocol], [d, u] = D(0);
  ze(() => u(d + 1), [l]);
  const [p, m] = D(!1), [f, g] = D(e.protocolMappers), b = (y) => {
    g(y ? l || [] : void 0), m(!p);
  }, v = async () => l ? l.reduce((C, S) => {
    const P = c.find(
      ({ id: w }) => w === S.protocolMapper
    );
    return P ? C.concat({
      ...S,
      category: P.category,
      type: P.name,
      priority: P.priority
    }) : C;
  }, []).sort((C, S) => C.priority - S.priority) : [];
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      Sz,
      {
        protocol: e.protocol,
        filter: f,
        onConfirm: t,
        open: p,
        toggleDialog: () => m(!p)
      }
    ),
    /* @__PURE__ */ a(
      xt,
      {
        loader: v,
        ariaLabelKey: "clientScopeList",
        searchPlaceholderKey: "searchForMapper",
        toolbarItem: /* @__PURE__ */ a(
          Kt,
          {
            onSelect: () => o(!1),
            onOpenChange: (y) => o(y),
            toggle: (y) => /* @__PURE__ */ a(
              ut,
              {
                ref: y,
                variant: "primary",
                id: "mapperAction",
                onClick: () => o(!s),
                children: i("addMapper")
              }
            ),
            isOpen: s,
            children: /* @__PURE__ */ x(Xt, { children: [
              /* @__PURE__ */ a(Ue, { onClick: () => b(!0), children: i("fromPredefinedMapper") }),
              /* @__PURE__ */ a(Ue, { onClick: () => b(!1), children: i("byConfiguration") })
            ] })
          }
        ),
        actions: [
          {
            title: i("delete"),
            onRowClick: n
          }
        ],
        columns: [
          {
            name: "name",
            cellRenderer: (y) => /* @__PURE__ */ a(wz, { ...y, detailLink: r })
          },
          { name: "category" },
          {
            name: "type"
          },
          {
            name: "priority"
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: i("emptyMappers"),
            instructions: i("emptyMappersInstructions"),
            secondaryActions: [
              {
                text: i("emptyPrimaryAction"),
                onClick: () => b(!0)
              },
              {
                text: i("emptySecondaryAction"),
                onClick: () => b(!1)
              }
            ]
          }
        )
      },
      d
    )
  ] });
}, Oz = Be(() => Promise.resolve().then(() => $G)), Ug = {
  path: "/:realm/clients/:clientId/clientScopes/dedicated",
  element: /* @__PURE__ */ a(Oz, {}),
  breadcrumb: (e) => e("dedicatedScopes"),
  handle: {
    access: "view-clients"
  }
}, nk = {
  ...Ug,
  path: "/:realm/clients/:clientId/clientScopes/dedicated/:tab"
}, Eu = (e) => {
  const t = e.tab ? nk.path : Ug.path;
  return {
    pathname: We(t, e)
  };
}, kz = Be(() => Promise.resolve().then(() => Vz)), ak = {
  path: "/:realm/client-scopes/:id/:tab",
  element: /* @__PURE__ */ a(kz, {}),
  breadcrumb: (e) => e("clientScopeDetails"),
  handle: {
    access: "view-clients"
  }
}, nd = (e) => {
  const t = ak.path;
  return {
    pathname: We(t, e)
  };
}, Tz = Be(() => Promise.resolve().then(() => rk)), Vg = {
  path: "/:realm/client-scopes/:id/mappers/:mapperId",
  element: /* @__PURE__ */ a(Tz, {}),
  breadcrumb: (e) => e("mappingDetails"),
  handle: {
    access: "view-clients"
  }
}, qC = (e) => ({
  pathname: We(Vg.path, e)
});
function Iz() {
  const { adminClient: e } = de(), { t } = H(), { addAlert: n, addError: r } = we(), { id: i, mapperId: s } = zt(), o = Ke(), { setValue: l, handleSubmit: c } = o, [d, u] = D(), [p, m] = D(), f = Xe(), { realm: g } = ye(), b = Tt(), y = !!/^[{]?[0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}[}]?$/.exec(s), C = !!Do(Vg.path), S = () => C ? nd({ realm: g, id: i, tab: "mappers" }) : Eu({ realm: g, clientId: i, tab: "mappers" });
  _e(
    async () => {
      let k;
      if (y) {
        if (C ? k = await e.clientScopes.findProtocolMapper({
          id: i,
          mapperId: s
        }) : k = await e.clients.findProtocolMapperById({
          id: i,
          mapperId: s
        }), !k)
          throw new Error(t("notFound"));
        const O = b.protocolMapperTypes[k.protocol].find(
          (I) => I.id === k.protocolMapper
        );
        return {
          config: {
            protocol: k.protocol,
            protocolMapper: k.protocolMapper
          },
          mapping: O,
          data: k
        };
      } else {
        const T = C ? await e.clientScopes.findOne({ id: i }) : await e.clients.findOne({ id: i });
        if (!T)
          throw new Error(t("notFound"));
        const I = b.protocolMapperTypes[T.protocol].find(
          (_) => _.id === s
        );
        if (!I)
          throw new Error(t("notFound"));
        return {
          mapping: I,
          config: {
            protocol: T.protocol,
            protocolMapper: s
          }
        };
      }
    },
    ({ config: k, mapping: T, data: O }) => {
      m(k), u(T), O && Pn(O, l);
    },
    []
  );
  const [P, w] = Ve({
    titleKey: "deleteMappingTitle",
    messageKey: "deleteMappingConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        C ? await e.clientScopes.delProtocolMapper({
          id: i,
          mapperId: s
        }) : await e.clients.delProtocolMapper({
          id: i,
          mapperId: s
        }), n(t("mappingDeletedSuccess"), pe.success), f(S());
      } catch (k) {
        r("mappingDeletedError", k);
      }
    }
  }), A = async (k) => {
    const T = y ? "Updated" : "Created";
    try {
      const O = { ...p, ...ta(k) };
      y ? C ? await e.clientScopes.updateProtocolMapper(
        { id: i, mapperId: s },
        { id: s, ...O }
      ) : await e.clients.updateProtocolMapper(
        { id: i, mapperId: s },
        { id: s, ...O }
      ) : C ? await e.clientScopes.addProtocolMapper({ id: i }, O) : await e.clients.addProtocolMapper({ id: i }, O), n(t(`mapping${T}Success`), pe.success);
    } catch (O) {
      r(`mapping${T}Error`, O);
    }
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(w, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: y ? d?.name : t("addMapper"),
        subKey: y ? s : "addMapperExplain",
        dropdownItems: y ? [
          /* @__PURE__ */ a(
            Ue,
            {
              value: "delete",
              onClick: P,
              children: t("delete")
            },
            "delete"
          )
        ] : void 0
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(He, { ...o, children: /* @__PURE__ */ x(
      je,
      {
        isHorizontal: !0,
        onSubmit: c(A),
        role: "manage-clients",
        children: [
          /* @__PURE__ */ a(re, { label: t("mapperType"), fieldId: "mapperType", children: /* @__PURE__ */ a(
            gt,
            {
              type: "text",
              id: "mapperType",
              name: "mapperType",
              readOnlyVariant: "default",
              value: d?.name
            }
          ) }),
          /* @__PURE__ */ a(
            ve,
            {
              name: "name",
              label: t("name"),
              labelIcon: t("mapperNameHelp"),
              readOnlyVariant: y ? "default" : void 0,
              rules: { required: { value: !0, message: t("required") } }
            }
          ),
          /* @__PURE__ */ a(
            gr,
            {
              properties: d?.properties || [],
              isNew: !y,
              stringify: !0
            }
          ),
          /* @__PURE__ */ x(ot, { children: [
            /* @__PURE__ */ a(z, { variant: "primary", type: "submit", children: t("save") }),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                component: (k) => /* @__PURE__ */ a(Ae, { ...k, to: S() }),
                children: t("cancel")
              }
            )
          ] })
        ]
      }
    ) }) })
  ] });
}
const rk = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Iz
}, Symbol.toStringTag, { value: "Module" })), nc = (e) => e.attributes?.realm_client === "true", yl = (e, t) => {
  switch (t) {
    case "openid-connect":
      return e("protocolTypes.openid-connect");
    case "saml":
      return e("protocolTypes.saml");
    case "oid4vc":
      return e("protocolTypes.oid4vc");
    default:
      return t;
  }
}, ik = [
  {
    key: "custom",
    name: "Custom Attribute...",
    custom: !0
  },
  {
    key: "kc.identity.authc.method",
    name: "Authentication Method",
    values: [
      {
        key: "pwd",
        name: "Password"
      },
      {
        key: "otp",
        name: "One-Time Password"
      },
      {
        key: "kbr",
        name: "Kerberos"
      }
    ]
  },
  {
    key: "kc.realm.name",
    name: "Realm"
  },
  {
    key: "kc.time.date_time",
    name: "Date/Time (MM/dd/yyyy hh:mm:ss)"
  },
  {
    key: "kc.client.network.ip_address",
    name: "Client IPv4 Address"
  },
  {
    key: "kc.client.network.host",
    name: "Client Host"
  },
  {
    key: "kc.client.user_agent",
    name: "Client/User Agent"
  }
], vt = (e) => {
  const { t } = H();
  return /* @__PURE__ */ a(ro, { ...e, labelOn: t("on"), labelOff: t("off") });
};
var Pi = /* @__PURE__ */ ((e) => (e.default = "default", e.optional = "optional", e))(Pi || {}), $a = /* @__PURE__ */ ((e) => (e.none = "none", e))($a || {});
const Kg = Object.keys(Pi), Pu = Object.keys({
  ...$a,
  ...Pi
}), Hg = (e, t = Kg) => t.map((n) => /* @__PURE__ */ a(Re, { value: n, children: e(`clientScopeType.${n}`) }, n)), Ez = (e, t) => Kg.map((n) => /* @__PURE__ */ a(Ue, { onClick: () => t(n), children: e(`clientScopeType.${n}`) }, n)), sk = ({
  clientScope: e,
  type: t,
  onSelect: n,
  all: r = !1,
  isDisabled: i,
  ...s
}) => {
  const { t: o } = H(), [l, c] = D(!1);
  return /* @__PURE__ */ a(
    Dn,
    {
      toggle: (d) => /* @__PURE__ */ a(
        ut,
        {
          "data-testid": "cell-dropdown",
          className: `keycloak__client-scope__${t}`,
          ref: d,
          onClick: () => c(!l),
          isExpanded: l,
          isDisabled: i,
          children: o(`clientScopeType.${t}`)
        }
      ),
      isOpen: l,
      onOpenChange: (d) => c(d),
      selected: [t],
      onSelect: (d, u) => {
        n(
          u
        ), c(!1);
      },
      ...s,
      children: Hg(
        o,
        r ? Pu : Kg
      )
    },
    e.id
  );
}, wp = async (e, t, n) => {
  await lk(e, t), await Pz(e, t, n);
}, ok = (e) => e.clientScopes, lk = async (e, t) => {
  t.type !== "none" && await ok(e)[`delDefault${t.type === "optional" ? "Optional" : ""}ClientScope`]({
    id: t.id
  });
}, Pz = async (e, t, n) => {
  n !== "none" && await ok(e)[`addDefault${n === "optional" ? "Optional" : ""}ClientScope`]({
    id: t.id
  });
}, ck = async (e, t, n, r, i) => {
  r !== "none" && await Jf(e, t, n, r), await dk(e, t, n, i);
}, Jf = async (e, t, n, r) => {
  const i = `del${Ia(r)}ClientScope`;
  await e.clients[i]({
    id: t,
    clientScopeId: n.id
  });
}, dk = async (e, t, n, r) => {
  const i = `add${Ia(r)}ClientScope`;
  await e.clients[i]({
    id: t,
    clientScopeId: n.id
  });
}, _z = Be(() => Promise.resolve().then(() => $z)), uk = {
  path: "/:realm/client-scopes",
  element: /* @__PURE__ */ a(_z, {}),
  breadcrumb: (e) => e("clientScopeList"),
  handle: {
    access: "view-clients"
  }
}, pk = (e) => ({
  pathname: We(uk.path, e)
}), mk = ({ clientScope: e, save: t }) => {
  const { t: n } = H(), r = Ke({ mode: "onChange" }), { control: i, handleSubmit: s, setValue: o, formState: l } = r, { isDirty: c, isValid: d } = l, { realm: u } = ye(), p = yO(), f = aa()(Fn.DynamicScopes), g = rt({
    control: i,
    name: Fe("attributes.display.on.consent.screen"),
    defaultValue: e?.attributes?.["display.on.consent.screen"] ?? "true"
  }), b = rt({
    control: i,
    name: Fe(
      "attributes.is.dynamic.scope"
    ),
    defaultValue: "false"
  }), v = (y, C) => o(
    Fe(
      "attributes.dynamic.scope.regexp"
    ),
    C ? `${y}:*` : y,
    { shouldDirty: !0 }
    // Mark the field as dirty when we modify the field
  );
  return ze(() => {
    Pn(e ?? {}, o);
  }, [e]), /* @__PURE__ */ a(
    je,
    {
      role: "manage-clients",
      onSubmit: s(t),
      isHorizontal: !0,
      children: /* @__PURE__ */ x(He, { ...r, children: [
        /* @__PURE__ */ a(
          ve,
          {
            name: "name",
            label: n("name"),
            labelIcon: n("scopeNameHelp"),
            rules: {
              required: {
                value: !0,
                message: n("required")
              },
              onChange: (y) => {
                f && v(y.target.validated, !0);
              }
            }
          }
        ),
        f && /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(
            vt,
            {
              name: Fe(
                "attributes.is.dynamic.scope"
              ),
              label: n("dynamicScope"),
              labelIcon: n("dynamicScopeHelp"),
              onChange: (y, C) => {
                v(
                  C && r.getValues("name") || "",
                  C
                );
              },
              stringify: !0
            }
          ),
          b === "true" && /* @__PURE__ */ a(
            ve,
            {
              name: Fe(
                "attributes.dynamic.scope.regexp"
              ),
              label: n("dynamicScopeFormat"),
              labelIcon: n("dynamicScopeFormatHelp"),
              isDisabled: !0
            }
          )
        ] }),
        /* @__PURE__ */ a(
          pr,
          {
            name: "description",
            label: n("description"),
            labelIcon: n("scopeDescriptionHelp"),
            rules: {
              maxLength: {
                value: 255,
                message: n("maxLength")
              }
            }
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            id: "kc-type",
            name: "type",
            label: n("type"),
            labelIcon: n("scopeTypeHelp"),
            controller: { defaultValue: Pu[0] },
            options: Pu.map((y) => ({
              key: y,
              value: n(`clientScopeType.${y}`)
            }))
          }
        ),
        !e && /* @__PURE__ */ a(
          at,
          {
            id: "kc-protocol",
            name: "protocol",
            label: n("protocol"),
            labelIcon: n("protocolHelp"),
            controller: { defaultValue: p[0] },
            options: p.map((y) => ({
              key: y,
              value: yl(n, y)
            }))
          }
        ),
        /* @__PURE__ */ a(
          vt,
          {
            name: Fe(
              "attributes.display.on.consent.screen"
            ),
            defaultValue: g,
            label: n("displayOnConsentScreen"),
            labelIcon: n("displayOnConsentScreenHelp"),
            stringify: !0
          }
        ),
        g === "true" && /* @__PURE__ */ a(
          pr,
          {
            name: Fe(
              "attributes.consent.screen.text"
            ),
            label: n("consentScreenText"),
            labelIcon: n("consentScreenTextHelp")
          }
        ),
        /* @__PURE__ */ a(
          vt,
          {
            name: Fe(
              "attributes.include.in.token.scope"
            ),
            label: n("includeInTokenScope"),
            labelIcon: n("includeInTokenScopeHelp"),
            stringify: !0
          }
        ),
        /* @__PURE__ */ a(
          ve,
          {
            name: Fe(
              "attributes.gui.order"
            ),
            label: n("guiOrder"),
            labelIcon: n("guiOrderHelp"),
            type: "number",
            min: 0
          }
        ),
        /* @__PURE__ */ x(ot, { children: [
          /* @__PURE__ */ a(
            io,
            {
              formState: l,
              disabled: !c || !d,
              children: n("save")
            }
          ),
          /* @__PURE__ */ a(
            z,
            {
              variant: "link",
              component: (y) => /* @__PURE__ */ a(Ae, { ...y, to: pk({ realm: u }) }),
              children: n("cancel")
            }
          )
        ] })
      ] })
    }
  );
}, Rz = ["all", "saml", "openid-connect"], fk = (e = "") => (t) => t.name?.includes(e), hk = (e) => (t) => e === $a.none || t.type === e, Az = (e) => (t) => e === "all" || t.protocol === e, _u = ({
  searchType: e,
  withProtocol: t = !1,
  onSelect: n
}) => {
  const { t: r } = H(), [i, s] = D(!1), o = (c) => /* @__PURE__ */ a(
    Ue,
    {
      onClick: () => {
        n(c), s(!1);
      },
      children: r(`clientScopeSearch.${c}`)
    },
    c
  ), l = [o("name"), o("type")];
  return t && l.push(o("protocol")), /* @__PURE__ */ a(
    Kt,
    {
      onOpenChange: (c) => s(c),
      toggle: (c) => /* @__PURE__ */ x(
        ut,
        {
          "data-testid": "clientScopeSearch",
          ref: c,
          id: "toggle-id",
          onClick: () => s(!i),
          children: [
            /* @__PURE__ */ a(ls, {}),
            " ",
            r(`clientScopeSearch.${e}`)
          ]
        }
      ),
      isOpen: i,
      children: /* @__PURE__ */ a(Xt, { children: l })
    }
  );
}, gk = ({
  searchType: e,
  onSelect: t,
  type: n,
  onType: r,
  protocol: i,
  onProtocol: s
}) => {
  const { t: o } = H(), [l, c] = D(!1);
  return /* @__PURE__ */ x(te, { children: [
    e === "type" && /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
        _u,
        {
          searchType: e,
          onSelect: t,
          withProtocol: !!i
        }
      ) }),
      /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
        Dn,
        {
          toggle: (d) => /* @__PURE__ */ a(
            ut,
            {
              "data-testid": "clientScopeSearchType",
              ref: d,
              isExpanded: l,
              onClick: () => c(!l),
              children: n === $a.none ? o("allTypes") : o(`clientScopeTypes.${n}`)
            }
          ),
          onOpenChange: (d) => c(d),
          isOpen: l,
          selected: n === $a.none ? o("allTypes") : o(`clientScopeTypes.${n}`),
          onSelect: (d, u) => {
            r(u), c(!1);
          },
          children: /* @__PURE__ */ x(ea, { children: [
            /* @__PURE__ */ a(Re, { value: $a.none, children: o("allTypes") }),
            Hg(o)
          ] })
        }
      ) })
    ] }),
    e === "protocol" && !!i && /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
        _u,
        {
          searchType: e,
          onSelect: t,
          withProtocol: !0
        }
      ) }),
      /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
        Dn,
        {
          toggle: (d) => /* @__PURE__ */ a(
            ut,
            {
              "data-testid": "clientScopeSearchProtocol",
              ref: d,
              isExpanded: l,
              onClick: () => c(!l),
              children: o(`protocolTypes.${i}`)
            }
          ),
          onOpenChange: (d) => c(d),
          isOpen: l,
          selected: o(`protocolTypes.${i}`),
          onSelect: (d, u) => {
            s?.(u), c(!1);
          },
          children: /* @__PURE__ */ a(ea, { children: Rz.map((d) => /* @__PURE__ */ a(Re, { value: d, children: o(`protocolTypes.${d}`) }, d)) })
        }
      ) })
    ] })
  ] });
}, bk = ({
  clientId: e,
  selectedRows: t,
  refresh: n
}) => {
  const { adminClient: r } = de(), { t: i } = H(), [s, o] = D(!1), { addAlert: l, addError: c } = we();
  return /* @__PURE__ */ a(
    Dn,
    {
      "aria-label": "change-type-to",
      onOpenChange: (d) => o(d),
      isOpen: s,
      toggle: (d) => /* @__PURE__ */ a(
        ut,
        {
          id: "change-type-dropdown",
          isDisabled: t.length === 0,
          ref: d,
          onClick: () => o(!s),
          isExpanded: s,
          children: i("changeTypeTo")
        }
      ),
      onSelect: async (d, u) => {
        try {
          await Promise.all(
            t.map((p) => e ? ck(
              r,
              e,
              p,
              p.type,
              u
            ) : wp(r, p, u))
          ), o(!1), n(), l(i("clientScopeSuccess"), pe.success);
        } catch (p) {
          c("clientScopeError", p);
        }
      },
      children: /* @__PURE__ */ a(ea, { children: Hg(
        i,
        e ? void 0 : Pu
      ) })
    }
  );
}, Lz = Be(() => Promise.resolve().then(() => Bz)), vk = {
  path: "/:realm/client-scopes/new",
  element: /* @__PURE__ */ a(Lz, {}),
  breadcrumb: (e) => e("createClientScope"),
  handle: {
    access: "manage-clients"
  }
}, Nz = (e) => ({
  pathname: We(vk.path, e)
}), Dz = (e) => {
  const { adminClient: t } = de(), { t: n } = H(), { addAlert: r, addError: i } = we();
  return /* @__PURE__ */ a(
    sk,
    {
      clientScope: e,
      type: e.type,
      all: !0,
      onSelect: async (s) => {
        try {
          await wp(t, e, s), r(n("clientScopeSuccess"), pe.success), e.refresh();
        } catch (o) {
          i("clientScopeError", o);
        }
      }
    }
  );
}, Mz = ({
  id: e,
  name: t
}) => {
  const { realm: n } = ye();
  return /* @__PURE__ */ a(Ae, { to: nd({ realm: n, id: e, tab: "settings" }), children: t }, e);
};
function Fz() {
  const { adminClient: e } = de(), { realm: t } = ye(), { t: n } = H(), { addAlert: r, addError: i } = we(), [s, o] = D(!1), [l, c] = D([]), [d, u] = D("name"), [p, m] = D(
    $a.none
  ), [f, g] = D("all"), b = ba(), [v, y] = D(0), C = () => {
    c([]), y(v + 1);
  }, S = async (A, k, T) => {
    const O = await e.clientScopes.listDefaultClientScopes(), I = await e.clientScopes.listDefaultOptionalClientScopes(), _ = await e.clientScopes.find(), E = d === "name" ? fk(T) : d === "type" ? hk(p) : Az(f), L = _.map((F) => ({
      ...F,
      type: O.find(
        (M) => M.name === F.name
      ) ? Pi.default : I.find(
        (M) => M.name === F.name
      ) ? Pi.optional : $a.none
    })).filter(E);
    return b(L, mr("name")).slice(
      A,
      Number(A) + Number(k)
    );
  }, [P, w] = Ve({
    titleKey: n("deleteClientScope", {
      count: l.length,
      name: l[0]?.name
    }),
    messageKey: "deleteConfirmClientScopes",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      const A = await e.clientScopes.find();
      if (Object.keys(A).length - l.length > 0)
        try {
          for (const T of l) {
            try {
              await lk(e, T);
            } catch (O) {
              console.warn(
                "could not remove scope",
                O.response?.data?.errorMessage || O
              );
            }
            await e.clientScopes.del({ id: T.id });
          }
          r(n("deletedSuccessClientScope"), pe.success), C();
        } catch (T) {
          i("deleteErrorClientScope", T);
        }
      else
        r(n("notAllowedToDeleteAllClientScopes"), pe.danger);
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(w, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "clientScopes",
        subKey: "clientScopeExplain",
        helpUrl: sa.clientScopesUrl
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(
      xt,
      {
        loader: S,
        ariaLabelKey: "clientScopeList",
        searchPlaceholderKey: d === "name" ? "searchForClientScope" : void 0,
        isSearching: d !== "name",
        searchTypeComponent: /* @__PURE__ */ a(
          _u,
          {
            searchType: d,
            onSelect: (A) => u(A),
            withProtocol: !0
          }
        ),
        isPaginated: !0,
        onSelect: (A) => c([...A]),
        canSelectAll: !0,
        toolbarItem: /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(
            gk,
            {
              searchType: d,
              type: p,
              onSelect: (A) => {
                u(A), g("all"), m($a.none), C();
              },
              onType: (A) => {
                m(A), g("all"), C();
              },
              protocol: f,
              onProtocol: (A) => {
                g(A), m($a.none), C();
              }
            }
          ),
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            z,
            {
              component: (A) => /* @__PURE__ */ a(Ae, { ...A, to: Nz({ realm: t }) }),
              children: n("createClientScope")
            }
          ) }),
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            bk,
            {
              selectedRows: l,
              refresh: C
            }
          ) }),
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            Kt,
            {
              shouldFocusToggleOnSelect: !0,
              onOpenChange: (A) => o(A),
              toggle: (A) => /* @__PURE__ */ a(
                ut,
                {
                  "data-testid": "kebab",
                  "aria-label": "Kebab toggle",
                  ref: A,
                  onClick: () => o(!s),
                  variant: "plain",
                  children: /* @__PURE__ */ a(hr, {})
                }
              ),
              isOpen: s,
              children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
                Ue,
                {
                  "data-testid": "delete",
                  isDisabled: l.length === 0,
                  onClick: () => {
                    P(), o(!1);
                  },
                  children: n("delete")
                }
              ) })
            }
          ) })
        ] }),
        actions: [
          {
            title: n("delete"),
            onRowClick: (A) => {
              c([A]), P();
            }
          }
        ],
        columns: [
          {
            name: "name",
            cellRenderer: Mz
          },
          {
            name: "type",
            displayKey: "assignedType",
            cellRenderer: (A) => /* @__PURE__ */ a(Dz, { ...A, refresh: C })
          },
          {
            name: "protocol",
            displayKey: "protocol",
            cellRenderer: (A) => yl(n, A.protocol ?? "openid-connect"),
            transforms: [Ft(15)]
          },
          {
            name: "attributes['gui.order']",
            displayKey: "displayOrder",
            cellFormatters: [un()],
            transforms: [Ft(15)]
          },
          { name: "description", cellFormatters: [un()] }
        ]
      },
      v
    ) })
  ] });
}
const $z = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Fz
}, Symbol.toStringTag, { value: "Module" }));
function jz() {
  const { adminClient: e } = de(), { t } = H(), n = Xe(), { realm: r } = ye(), { addAlert: i, addError: s } = we();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(wt, { titleKey: "createClientScope" }),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(mk, { save: async (l) => {
      const c = ta({
        ...l,
        name: l.name?.trim().replace(/ /g, "_")
      });
      try {
        await e.clientScopes.create(c);
        const d = await e.clientScopes.findOneByName({
          name: c.name
        });
        if (!d)
          throw new Error(t("notFound"));
        await wp(
          e,
          { ...c, id: d.id },
          c.type
        ), i(t("createClientScopeSuccess", pe.success)), n(
          nd({
            realm: r,
            id: d.id,
            tab: "settings"
          })
        );
      } catch (d) {
        s("createClientScopeError", d);
      }
    } }) }) })
  ] });
}
const Bz = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: jz
}, Symbol.toStringTag, { value: "Module" }));
function Uz() {
  const { adminClient: e } = de(), { t } = H(), n = Xe(), { realm: r } = ye(), { id: i } = zt(), { addAlert: s, addError: o } = we(), { enabled: l } = Dr(), [c, d] = D(), [u, p] = D(0), m = () => p(u + 1);
  _e(
    async () => {
      const T = await e.clientScopes.findOne({ id: i });
      if (!T)
        throw new Error(t("notFound"));
      return {
        ...T,
        type: await f(T)
      };
    },
    (T) => {
      d(T);
    },
    [u, i]
  );
  async function f(T) {
    return (await e.clientScopes.listDefaultClientScopes()).find(
      (L) => L.name === T.name
    ) ? Pi.default : (await e.clientScopes.listDefaultOptionalClientScopes()).find(
      (L) => L.name === T.name
    ) ? Pi.optional : $a.none;
  }
  const g = (T) => Kn(
    nd({
      realm: r,
      id: i,
      tab: T
    })
  ), b = g("settings"), v = g("mappers"), y = g("scope"), C = async (T) => {
    const O = ta({
      ...T,
      name: T.name?.trim().replace(/ /g, "_")
    });
    try {
      await e.clientScopes.update({ id: i }, O), await wp(e, { ...O, id: i }, O.type), s(t("updateSuccessClientScope"), pe.success);
    } catch (I) {
      o("updateErrorClientScope", I);
    }
  }, [S, P] = Ve({
    titleKey: t("deleteClientScope", {
      count: 1,
      name: c?.name
    }),
    messageKey: "deleteConfirmClientScopes",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.clientScopes.del({ id: i }), s(t("deletedSuccessClientScope"), pe.success), n(pk({ realm: r }));
      } catch (T) {
        o("deleteErrorClientScope", T);
      }
    }
  }), w = async (T) => {
    try {
      const O = T.filter((I) => I.client === void 0).map((I) => I.role).flat();
      await e.clientScopes.addRealmScopeMappings(
        {
          id: i
        },
        O
      ), await Promise.all(
        T.filter((I) => I.client !== void 0).map(
          (I) => e.clientScopes.addClientScopeMappings(
            {
              id: i,
              client: I.client.id
            },
            [I.role]
          )
        )
      ), s(t("roleMappingUpdatedSuccess"), pe.success);
    } catch (O) {
      o("roleMappingUpdatedError", O);
    }
  }, A = async (T) => {
    if (Array.isArray(T))
      try {
        await e.clientScopes.addMultipleProtocolMappers(
          { id: c.id },
          T
        ), m(), s(t("mappingCreatedSuccess"), pe.success);
      } catch (O) {
        o("mappingCreatedError", O);
      }
    else {
      const O = T;
      n(
        qC({
          realm: r,
          id: c.id,
          mapperId: O.id
        })
      );
    }
  }, k = async (T) => {
    try {
      await e.clientScopes.delProtocolMapper({
        id: c.id,
        mapperId: T.id
      }), s(t("mappingDeletedSuccess"), pe.success), m();
    } catch (O) {
      o("mappingDeletedError", O);
    }
    return !0;
  };
  return c ? /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(P, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: c.name,
        dropdownItems: [
          /* @__PURE__ */ a(Ue, { onClick: S, children: t("delete") }, "delete")
        ],
        badges: [{ text: c.protocol }],
        divider: !1
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ x(Vn, { isBox: !0, children: [
      /* @__PURE__ */ a(
        Ee,
        {
          id: "settings",
          "data-testid": "settings",
          title: /* @__PURE__ */ a(Pe, { children: t("settings") }),
          ...b,
          children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(mk, { save: C, clientScope: c }) })
        }
      ),
      /* @__PURE__ */ a(
        Ee,
        {
          id: "mappers",
          "data-testid": "mappers",
          title: /* @__PURE__ */ a(Pe, { children: t("mappers") }),
          ...v,
          children: /* @__PURE__ */ a(
            tk,
            {
              model: c,
              onAdd: A,
              onDelete: k,
              detailLink: (T) => qC({ realm: r, id: c.id, mapperId: T })
            }
          )
        }
      ),
      /* @__PURE__ */ x(
        Ee,
        {
          id: "scope",
          "data-testid": "scopeTab",
          title: /* @__PURE__ */ a(Pe, { children: t("scope") }),
          ...y,
          children: [
            l && /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ a(
              En,
              {
                variant: "info",
                isInline: !0,
                title: t("clientScopesRolesScope"),
                component: "h2"
              }
            ) }),
            /* @__PURE__ */ a(
              oo,
              {
                id: c.id,
                name: c.name,
                type: "clientScopes",
                save: w
              }
            )
          ]
        }
      )
    ] }) })
  ] }) : /* @__PURE__ */ a(bt, {});
}
const Vz = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Uz
}, Symbol.toStringTag, { value: "Module" })), jm = ["UNANIMOUS", "AFFIRMATIVE", "CONSENSUS"], yk = ({
  helpLabel: e,
  isDisabled: t = !1,
  isLimited: n = !1
}) => {
  const { t: r } = H(), { control: i } = De();
  return /* @__PURE__ */ a(
    re,
    {
      label: r("decisionStrategy"),
      labelIcon: /* @__PURE__ */ a(
        le,
        {
          helpText: r(e || "decisionStrategyHelp"),
          fieldLabelId: "decisionStrategy"
        }
      ),
      fieldId: "decisionStrategy",
      hasNoPaddingTop: !0,
      children: /* @__PURE__ */ a(
        be,
        {
          name: "decisionStrategy",
          "data-testid": "decisionStrategy",
          defaultValue: jm[0],
          control: i,
          render: ({ field: s }) => /* @__PURE__ */ a(te, { children: (n ? jm.slice(0, 2) : jm).map((o) => /* @__PURE__ */ a(
            sn,
            {
              id: o,
              "data-testid": o,
              isChecked: s.value === o,
              isDisabled: t,
              name: "decisionStrategy",
              onChange: () => s.onChange(o),
              label: r(`decisionStrategies.${o}`),
              className: "pf-v5-u-mb-md"
            },
            o
          )) })
        }
      )
    }
  );
}, zg = ({
  id: e,
  onChange: t,
  helpText: n = "helpFileUpload",
  unWrap: r = !1,
  language: i,
  extension: s,
  ...o
}) => {
  const { t: l } = H(), c = {
    value: "",
    filename: "",
    isLoading: !1,
    modal: !1
  }, [d, u] = D(c), p = () => u({ ...d, modal: !1 }), m = (b, v) => {
    u({ ...d, filename: v.name });
  }, f = (b) => {
    u({ ...d, value: b }), t(b);
  }, g = () => {
    u({ ...d, modal: !0 });
  };
  return /* @__PURE__ */ x(te, { children: [
    d.modal && /* @__PURE__ */ a(
      ft,
      {
        variant: Et.small,
        title: l("clearFile"),
        isOpen: !0,
        onClose: p,
        actions: [
          /* @__PURE__ */ a(
            z,
            {
              variant: "primary",
              "data-testid": "clear-button",
              onClick: () => {
                u(c), t("");
              },
              children: l("clear")
            },
            "confirm"
          ),
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "cancel",
              variant: "link",
              onClick: p,
              children: l("cancel")
            },
            "cancel"
          )
        ],
        children: l("clearFileExplain")
      }
    ),
    r && /* @__PURE__ */ a(
      Go,
      {
        id: e,
        ...o,
        type: "text",
        value: d.value,
        filename: d.filename,
        onFileInputChange: m,
        onDataChange: f,
        onTextChange: f,
        onClearClick: g,
        onReadStarted: () => u({ ...d, isLoading: !0 }),
        onReadFinished: () => u({ ...d, isLoading: !1 }),
        isLoading: d.isLoading,
        dropzoneProps: {
          accept: { "application/text": [s] }
        }
      }
    ),
    !r && /* @__PURE__ */ x(re, { label: l("resourceFile"), fieldId: e, children: [
      /* @__PURE__ */ a(
        Go,
        {
          "data-testid": e,
          id: e,
          ...o,
          type: "text",
          value: d.value,
          filename: d.filename,
          onFileInputChange: m,
          onDataChange: f,
          onTextChange: f,
          onClearClick: g,
          onReadStarted: () => u({ ...d, isLoading: !0 }),
          onReadFinished: () => u({ ...d, isLoading: !1 }),
          isLoading: d.isLoading,
          hideDefaultPreview: !0,
          children: !o.hideDefaultPreview && /* @__PURE__ */ a(
            fr,
            {
              isLineNumbersVisible: !0,
              code: d.value,
              language: i,
              height: "128px",
              onChange: f,
              isReadOnly: !o.allowEditingUploadedText
            }
          )
        }
      ),
      /* @__PURE__ */ a(sl, { children: /* @__PURE__ */ a(Yr, { children: /* @__PURE__ */ a(Jr, { children: l(n) }) }) })
    ] })
  ] });
}, Op = ({ onChange: e, ...t }) => {
  const n = (r) => {
    try {
      e(JSON.parse(r));
    } catch {
      e({}), console.warn("Invalid json, ignoring value using {}");
    }
  };
  return /* @__PURE__ */ a(
    zg,
    {
      ...t,
      language: Ln.json,
      extension: ".json",
      onChange: n
    }
  );
}, Kz = ({ onConfirm: e, closeDialog: t }) => {
  const { t: n } = H(), [r, i] = D({});
  return /* @__PURE__ */ x(
    ft,
    {
      title: n("import"),
      isOpen: !0,
      variant: "small",
      onClose: t,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            onClick: () => {
              e(r), t();
            },
            "data-testid": "confirm",
            children: n("confirm")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel",
            id: "modal-cancel",
            variant: xe.link,
            onClick: () => {
              t();
            },
            children: n("cancel")
          },
          "cancel"
        )
      ],
      children: [
        /* @__PURE__ */ a(St, { children: /* @__PURE__ */ a(Op, { id: "import-resource", onChange: i }) }),
        Object.keys(r).length !== 0 && /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(Pt, {}),
          /* @__PURE__ */ a("p", { className: "pf-v5-u-my-lg", children: n("importResources") }),
          /* @__PURE__ */ x(St, { isHorizontal: !0, children: [
            /* @__PURE__ */ a(
              re,
              {
                label: n("policyEnforcementMode"),
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: n("policyEnforcementModeHelp"),
                    fieldLabelId: "policyEnforcementMode"
                  }
                ),
                fieldId: "policyEnforcementMode",
                hasNoPaddingTop: !0,
                children: /* @__PURE__ */ a(
                  sn,
                  {
                    id: "policyEnforcementMode",
                    name: "policyEnforcementMode",
                    label: n(
                      `policyEnforcementModes.${r.policyEnforcementMode}`
                    ),
                    isChecked: !0,
                    isDisabled: !0,
                    className: "pf-v5-u-mb-md"
                  }
                )
              }
            ),
            /* @__PURE__ */ a(
              re,
              {
                label: n("decisionStrategy"),
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: n("decisionStrategyHelp"),
                    fieldLabelId: "decisionStrategy"
                  }
                ),
                fieldId: "decisionStrategy",
                hasNoPaddingTop: !0,
                children: /* @__PURE__ */ a(
                  sn,
                  {
                    id: "decisionStrategy",
                    name: "decisionStrategy",
                    isChecked: !0,
                    isDisabled: !0,
                    label: n(`decisionStrategies.${r.decisionStrategy}`),
                    className: "pf-v5-u-mb-md"
                  }
                )
              }
            ),
            /* @__PURE__ */ a(
              re,
              {
                hasNoPaddingTop: !0,
                label: n("allowRemoteResourceManagement"),
                fieldId: "allowRemoteResourceManagement",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: n("allowRemoteResourceManagement"),
                    fieldLabelId: "allowRemoteResourceManagement"
                  }
                ),
                children: /* @__PURE__ */ a(
                  Je,
                  {
                    id: "allowRemoteResourceManagement",
                    label: n("on"),
                    labelOff: n("off"),
                    isChecked: r.allowRemoteResourceManagement,
                    isDisabled: !0,
                    "aria-label": n("allowRemoteResourceManagement")
                  }
                )
              }
            )
          ] }),
          /* @__PURE__ */ a("div", { className: "pf-v5-u-mt-md", children: Object.entries(r).filter(([, s]) => Array.isArray(s)).map(([s, o]) => /* @__PURE__ */ x(Ea, { children: [
            /* @__PURE__ */ a(Pt, {}),
            /* @__PURE__ */ a("p", { className: "pf-v5-u-my-sm", children: /* @__PURE__ */ x("strong", { children: [
              o.length,
              " ",
              n(s)
            ] }) })
          ] }, s)) }),
          /* @__PURE__ */ a(Pt, {}),
          /* @__PURE__ */ a(
            En,
            {
              variant: "warning",
              className: "pf-v5-u-mt-lg",
              isInline: !0,
              title: n("importWarning")
            }
          )
        ] })
      ]
    }
  );
}, GC = [
  "ENFORCING",
  "PERMISSIVE",
  "DISABLED"
], Hz = ({ clientId: e }) => {
  const { adminClient: t } = de(), { t: n } = H(), [r, i] = D(), [s, o] = st(), l = Ke({}), { control: c, reset: d, handleSubmit: u } = l, { addAlert: p, addError: m } = we(), { hasAccess: f } = Nt(), g = !f("manage-authorization");
  _e(
    () => t.clients.getResourceServer({ id: e }),
    (y) => {
      i(y), d(y);
    },
    []
  );
  const b = async (y) => {
    try {
      await t.clients.importResource({ id: e }, y), p(n("importResourceSuccess"), pe.success), d({ ...y });
    } catch (C) {
      m("importResourceError", C);
    }
  }, v = async (y) => {
    try {
      await t.clients.updateResourceServer(
        { id: e },
        y
      ), p(n("updateResourceSuccess"), pe.success);
    } catch (C) {
      m("resourceSaveError", C);
    }
  };
  return r ? /* @__PURE__ */ x(Te, { variant: "light", children: [
    s && /* @__PURE__ */ a(
      Kz,
      {
        onConfirm: b,
        closeDialog: o
      }
    ),
    /* @__PURE__ */ x(
      je,
      {
        role: "manage-authorization",
        isHorizontal: !0,
        onSubmit: u(v),
        children: [
          /* @__PURE__ */ a(
            re,
            {
              label: n("import"),
              fieldId: "import",
              labelIcon: /* @__PURE__ */ a(le, { helpText: n("importHelp"), fieldLabelId: "import" }),
              children: /* @__PURE__ */ a(z, { variant: "secondary", onClick: o, children: n("import") })
            }
          ),
          /* @__PURE__ */ a(Pt, {}),
          /* @__PURE__ */ a(
            re,
            {
              label: n("policyEnforcementMode"),
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: n("policyEnforcementModeHelp"),
                  fieldLabelId: "policyEnforcementMode"
                }
              ),
              fieldId: "policyEnforcementMode",
              hasNoPaddingTop: !0,
              children: /* @__PURE__ */ a(
                be,
                {
                  name: "policyEnforcementMode",
                  "data-testid": "policyEnforcementMode",
                  defaultValue: GC[0],
                  control: c,
                  render: ({ field: y }) => /* @__PURE__ */ a(te, { children: GC.map((C) => /* @__PURE__ */ a(
                    sn,
                    {
                      id: C,
                      "data-testid": C,
                      isChecked: y.value === C,
                      isDisabled: g,
                      name: "policyEnforcementMode",
                      onChange: () => y.onChange(C),
                      label: n(`policyEnforcementModes.${C}`),
                      className: "pf-v5-u-mb-md"
                    },
                    C
                  )) })
                }
              )
            }
          ),
          /* @__PURE__ */ x(He, { ...l, children: [
            /* @__PURE__ */ a(yk, { isLimited: !0 }),
            /* @__PURE__ */ a(
              vt,
              {
                name: "allowRemoteResourceManagement",
                label: n("allowRemoteResourceManagement"),
                labelIcon: n("allowRemoteResourceManagementHelp")
              }
            )
          ] }),
          /* @__PURE__ */ a(
            Mr,
            {
              name: "authenticationSettings",
              reset: () => d(r),
              isSubmit: !0
            }
          )
        ]
      }
    )
  ] }) : /* @__PURE__ */ a(bt, {});
}, Ck = ({
  protocol: e = "openid-connect"
}) => {
  const { t } = H(), { watch: n } = De(), r = n("standardFlowEnabled"), i = n("implicitFlowEnabled");
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        type: "url",
        name: "rootUrl",
        label: t("rootUrl"),
        labelIcon: t("rootURLHelp")
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        type: "url",
        name: "baseUrl",
        label: t("homeURL"),
        labelIcon: t("homeURLHelp")
      }
    ),
    (r || i) && /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a(
        re,
        {
          label: t("validRedirectUri"),
          fieldId: "kc-redirect",
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: t("validRedirectURIsHelp"),
              fieldLabelId: "validRedirectUri"
            }
          ),
          children: /* @__PURE__ */ a(
            Or,
            {
              id: "kc-redirect",
              name: "redirectUris",
              "aria-label": t("validRedirectUri"),
              addButtonLabel: "addRedirectUri"
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: t("validPostLogoutRedirectUri"),
          fieldId: "kc-postLogoutRedirect",
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: t("validPostLogoutRedirectURIsHelp"),
              fieldLabelId: "validPostLogoutRedirectUri"
            }
          ),
          children: /* @__PURE__ */ a(
            Or,
            {
              id: "kc-postLogoutRedirect",
              name: Fe(
                "attributes.post.logout.redirect.uris"
              ),
              "aria-label": t("validPostLogoutRedirectUri"),
              addButtonLabel: "addPostLogoutRedirectUri",
              stringify: !0
            }
          )
        }
      )
    ] }),
    e === "saml" && /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a(
        ve,
        {
          name: "attributes.saml_idp_initiated_sso_url_name",
          label: t("idpInitiatedSsoUrlName"),
          labelIcon: t("idpInitiatedSsoUrlNameHelp")
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "attributes.saml_idp_initiated_sso_relay_state",
          label: t("idpInitiatedSsoRelayState"),
          labelIcon: t("idpInitiatedSsoRelayStateHelp")
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          type: "url",
          name: "adminUrl",
          label: t("masterSamlProcessingUrl"),
          labelIcon: t("masterSamlProcessingUrlHelp")
        }
      )
    ] }),
    e !== "saml" && r && /* @__PURE__ */ a(
      re,
      {
        label: t("webOrigins"),
        fieldId: "kc-web-origins",
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: t("webOriginsHelp"),
            fieldLabelId: "webOrigins"
          }
        ),
        children: /* @__PURE__ */ a(
          Or,
          {
            id: "kc-web-origins",
            name: "webOrigins",
            "aria-label": t("webOrigins"),
            addButtonLabel: "addWebOrigins"
          }
        )
      }
    )
  ] });
}, zz = ({
  client: e,
  save: t,
  reset: n
}) => {
  const { t: r } = H(), { watch: i } = De(), { hasAccess: s } = Nt(), o = s("manage-clients") || e.access?.configure, l = i("protocol");
  return /* @__PURE__ */ x(
    je,
    {
      isHorizontal: !0,
      fineGrainedAccess: e.access?.configure,
      role: "manage-clients",
      children: [
        !e.bearerOnly && /* @__PURE__ */ a(Ck, { protocol: l }),
        l !== "saml" && /* @__PURE__ */ a(
          ve,
          {
            type: "url",
            name: "adminUrl",
            label: r("adminURL"),
            labelIcon: r("adminURLHelp")
          }
        ),
        e.bearerOnly && /* @__PURE__ */ a(
          Mr,
          {
            name: "settings",
            save: t,
            reset: n,
            isDisabled: o
          }
        )
      ]
    }
  );
}, qg = ({
  unWrap: e,
  protocol: t
}) => {
  const { t: n } = H(), { control: r, watch: i, setValue: s } = De(), o = t || i("protocol"), l = i("publicClient"), c = i("authorizationServicesEnabled"), d = aa();
  return /* @__PURE__ */ x(
    je,
    {
      isHorizontal: !0,
      role: "manage-clients",
      unWrap: e,
      className: "keycloak__capability-config__form",
      "data-testid": "capability-config-form",
      children: [
        o === "openid-connect" && /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(
            re,
            {
              hasNoPaddingTop: !0,
              label: n("clientAuthentication"),
              fieldId: "kc-authentication",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: n("authenticationHelp"),
                  fieldLabelId: "authentication"
                }
              ),
              children: /* @__PURE__ */ a(
                be,
                {
                  name: "publicClient",
                  defaultValue: !1,
                  control: r,
                  render: ({ field: u }) => /* @__PURE__ */ a(
                    Je,
                    {
                      "data-testid": "authentication",
                      id: "kc-authentication-switch",
                      label: n("on"),
                      labelOff: n("off"),
                      isChecked: !u.value,
                      onChange: (p, m) => {
                        u.onChange(!m), m || (s("authorizationServicesEnabled", !1), s("serviceAccountsEnabled", !1), s(
                          Fe(
                            "attributes.oidc.ciba.grant.enabled"
                          ),
                          !1
                        ));
                      },
                      "aria-label": n("clientAuthentication")
                    }
                  )
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            re,
            {
              hasNoPaddingTop: !0,
              label: n("clientAuthorization"),
              fieldId: "kc-authorization",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: n("authorizationHelp"),
                  fieldLabelId: "authorization"
                }
              ),
              children: /* @__PURE__ */ a(
                be,
                {
                  name: "authorizationServicesEnabled",
                  defaultValue: !1,
                  control: r,
                  render: ({ field: u }) => /* @__PURE__ */ a(
                    Je,
                    {
                      "data-testid": "authorization",
                      id: "kc-authorization-switch",
                      label: n("on"),
                      labelOff: n("off"),
                      isChecked: u.value && !l,
                      onChange: (p, m) => {
                        u.onChange(m), m && s("serviceAccountsEnabled", !0);
                      },
                      isDisabled: l,
                      "aria-label": n("clientAuthorization")
                    }
                  )
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            re,
            {
              hasNoPaddingTop: !0,
              label: n("authenticationFlow"),
              fieldId: "kc-flow",
              children: /* @__PURE__ */ x(Ha, { id: "authenticationFlowGrid", hasGutter: !0, children: [
                /* @__PURE__ */ a(Wt, { lg: 4, sm: 6, children: /* @__PURE__ */ a(
                  be,
                  {
                    name: "standardFlowEnabled",
                    defaultValue: !0,
                    control: r,
                    render: ({ field: u }) => /* @__PURE__ */ x(nn, { children: [
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        Zt,
                        {
                          "data-testid": "standard",
                          label: n("standardFlow"),
                          id: "kc-flow-standard",
                          isChecked: u.value?.toString() === "true",
                          onChange: u.onChange
                        }
                      ) }),
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        le,
                        {
                          helpText: n("standardFlowHelp"),
                          fieldLabelId: "standardFlow"
                        }
                      ) })
                    ] })
                  }
                ) }),
                /* @__PURE__ */ a(Wt, { lg: 8, sm: 6, children: /* @__PURE__ */ a(
                  be,
                  {
                    name: "directAccessGrantsEnabled",
                    defaultValue: !0,
                    control: r,
                    render: ({ field: u }) => /* @__PURE__ */ x(nn, { children: [
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        Zt,
                        {
                          "data-testid": "direct",
                          label: n("directAccess"),
                          id: "kc-flow-direct",
                          isChecked: u.value,
                          onChange: u.onChange
                        }
                      ) }),
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        le,
                        {
                          helpText: n("directAccessHelp"),
                          fieldLabelId: "directAccess"
                        }
                      ) })
                    ] })
                  }
                ) }),
                /* @__PURE__ */ a(Wt, { lg: 4, sm: 6, children: /* @__PURE__ */ a(
                  be,
                  {
                    name: "implicitFlowEnabled",
                    defaultValue: !0,
                    control: r,
                    render: ({ field: u }) => /* @__PURE__ */ x(nn, { children: [
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        Zt,
                        {
                          "data-testid": "implicit",
                          label: n("implicitFlow"),
                          id: "kc-flow-implicit",
                          isChecked: u.value?.toString() === "true",
                          onChange: u.onChange
                        }
                      ) }),
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        le,
                        {
                          helpText: n("implicitFlowHelp"),
                          fieldLabelId: "implicitFlow"
                        }
                      ) })
                    ] })
                  }
                ) }),
                /* @__PURE__ */ a(Wt, { lg: 8, sm: 6, children: /* @__PURE__ */ a(
                  be,
                  {
                    name: "serviceAccountsEnabled",
                    defaultValue: !1,
                    control: r,
                    render: ({ field: u }) => /* @__PURE__ */ x(nn, { children: [
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        Zt,
                        {
                          "data-testid": "service-account",
                          label: n("serviceAccount"),
                          id: "kc-flow-service-account",
                          isChecked: u.value?.toString() === "true" || l && c,
                          onChange: u.onChange,
                          isDisabled: l && !c || !l && c
                        }
                      ) }),
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        le,
                        {
                          helpText: n("serviceAccountHelp"),
                          fieldLabelId: "serviceAccount"
                        }
                      ) })
                    ] })
                  }
                ) }),
                d(Fn.DeviceFlow) && /* @__PURE__ */ a(Wt, { lg: 8, sm: 6, children: /* @__PURE__ */ a(
                  be,
                  {
                    name: Fe("attributes.oauth2.device.authorization.grant.enabled"),
                    defaultValue: !1,
                    control: r,
                    render: ({ field: u }) => /* @__PURE__ */ x(nn, { children: [
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        Zt,
                        {
                          "data-testid": "oauth-device-authorization-grant",
                          label: n("oauthDeviceAuthorizationGrant"),
                          id: "kc-oauth-device-authorization-grant",
                          name: "oauth2.device.authorization.grant.enabled",
                          isChecked: u.value.toString() === "true",
                          onChange: u.onChange
                        }
                      ) }),
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        le,
                        {
                          helpText: n("oauthDeviceAuthorizationGrantHelp"),
                          fieldLabelId: "oauthDeviceAuthorizationGrant"
                        }
                      ) })
                    ] })
                  }
                ) }),
                /* @__PURE__ */ a(Wt, { lg: 8, sm: 6, children: /* @__PURE__ */ a(
                  be,
                  {
                    name: Fe(
                      "attributes.oidc.ciba.grant.enabled"
                    ),
                    defaultValue: !1,
                    control: r,
                    render: ({ field: u }) => /* @__PURE__ */ x(nn, { children: [
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        Zt,
                        {
                          "data-testid": "oidc-ciba-grant",
                          label: n("oidcCibaGrant"),
                          id: "kc-oidc-ciba-grant",
                          name: "oidc.ciba.grant.enabled",
                          isChecked: u.value.toString() === "true",
                          onChange: u.onChange,
                          isDisabled: l
                        }
                      ) }),
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        le,
                        {
                          helpText: n("oidcCibaGrantHelp"),
                          fieldLabelId: "oidcCibaGrant"
                        }
                      ) })
                    ] })
                  }
                ) })
              ] })
            }
          )
        ] }),
        o === "saml" && /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(
            vt,
            {
              name: Fe(
                "attributes.saml.encrypt"
              ),
              label: n("encryptAssertions"),
              labelIcon: n("encryptAssertionsHelp")
            }
          ),
          /* @__PURE__ */ a(
            vt,
            {
              name: Fe(
                "attributes.saml.client.signature"
              ),
              label: n("clientSignature"),
              labelIcon: n("clientSignatureHelp")
            }
          )
        ] })
      ]
    }
  );
}, Gg = ({
  hasConfigureAccess: e
}) => {
  const { t } = H();
  return /* @__PURE__ */ x(je, { role: "manage-clients", fineGrainedAccess: e, unWrap: !0, children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "clientId",
        label: t("clientId"),
        labelIcon: t("clientIdHelp"),
        rules: { required: { value: !0, message: t("required") } }
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "name",
        label: t("name"),
        labelIcon: t("clientNameHelp")
      }
    ),
    /* @__PURE__ */ a(
      pr,
      {
        name: "description",
        label: t("description"),
        labelIcon: t("clientDescriptionHelp"),
        rules: {
          maxLength: {
            value: 255,
            message: t("maxLength", { length: 255 })
          }
        }
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "alwaysDisplayInConsole",
        label: t("alwaysDisplayInUI"),
        labelIcon: t("alwaysDisplayInUIHelp")
      }
    )
  ] });
}, qz = () => {
  const { t: e } = H(), t = yO();
  return /* @__PURE__ */ x(je, { isHorizontal: !0, role: "manage-clients", children: [
    /* @__PURE__ */ a(
      at,
      {
        name: "protocol",
        label: e("clientType"),
        labelIcon: e("clientTypeHelp"),
        controller: {
          defaultValue: ""
        },
        options: t.map((n) => ({
          key: n,
          value: yl(e, n)
        }))
      }
    ),
    /* @__PURE__ */ a(Gg, { hasConfigureAccess: !0 })
  ] });
}, Gz = ({ access: e }) => {
  const { t } = H(), { watch: n } = De(), r = Tt().themes.login, i = n("consentRequired"), s = n(
    Fe(
      "attributes.display.on.consent.screen"
    )
  );
  return /* @__PURE__ */ x(je, { isHorizontal: !0, fineGrainedAccess: e, role: "manage-clients", children: [
    /* @__PURE__ */ a(
      at,
      {
        name: "attributes.login_theme",
        label: t("loginTheme"),
        labelIcon: t("loginThemeHelp"),
        controller: {
          defaultValue: ""
        },
        options: [
          { key: "", value: t("choose") },
          ...r.map(({ name: o }) => ({ key: o, value: o }))
        ]
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "consentRequired",
        label: t("consentRequired"),
        labelIcon: t("consentRequiredHelp")
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: Fe(
          "attributes.display.on.consent.screen"
        ),
        label: t("displayOnClient"),
        labelIcon: t("displayOnClientHelp"),
        isDisabled: !i,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      pr,
      {
        name: Fe(
          "attributes.consent.screen.text"
        ),
        label: t("consentScreenText"),
        labelIcon: t("consentScreenTextHelp"),
        isDisabled: !(i && s === "true")
      }
    )
  ] });
}, WC = (e, t) => (e?.startsWith("https://") || e?.startsWith("http://")) && !e.includes("*") || e === "" || t, Wz = ({
  save: e,
  reset: t,
  client: { access: n }
}) => {
  const { t: r } = H(), { control: i, watch: s } = De(), { hasAccess: o } = Nt(), l = o("manage-clients") || n?.configure, c = s("protocol"), d = s("frontchannelLogout");
  return /* @__PURE__ */ x(
    je,
    {
      isHorizontal: !0,
      fineGrainedAccess: n?.configure,
      role: "manage-clients",
      children: [
        /* @__PURE__ */ a(
          re,
          {
            label: r("frontchannelLogout"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("frontchannelLogoutHelp"),
                fieldLabelId: "frontchannelLogout"
              }
            ),
            fieldId: "kc-frontchannelLogout",
            hasNoPaddingTop: !0,
            children: /* @__PURE__ */ a(
              be,
              {
                name: "frontchannelLogout",
                defaultValue: !0,
                control: i,
                render: ({ field: u }) => /* @__PURE__ */ a(
                  Je,
                  {
                    id: "kc-frontchannelLogout-switch",
                    label: r("on"),
                    labelOff: r("off"),
                    isChecked: u.value,
                    onChange: u.onChange,
                    "aria-label": r("frontchannelLogout")
                  }
                )
              }
            )
          }
        ),
        c === "openid-connect" && d && /* @__PURE__ */ a(
          ve,
          {
            "data-testid": "frontchannelLogoutUrl",
            type: "url",
            name: Fe(
              "attributes.frontchannel.logout.url"
            ),
            label: r("frontchannelLogoutUrl"),
            labelIcon: r("frontchannelLogoutUrlHelp"),
            rules: {
              validate: (u) => WC(u, r("frontchannelUrlInvalid").toString())
            }
          }
        ),
        c === "openid-connect" && /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(
            ve,
            {
              "data-testid": "backchannelLogoutUrl",
              type: "url",
              name: Fe(
                "attributes.backchannel.logout.url"
              ),
              label: r("backchannelLogoutUrl"),
              labelIcon: r("backchannelLogoutUrlHelp"),
              rules: {
                validate: (u) => WC(u, r("backchannelUrlInvalid").toString())
              }
            }
          ),
          /* @__PURE__ */ a(
            re,
            {
              label: r("backchannelLogoutSessionRequired"),
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: r("backchannelLogoutSessionRequiredHelp"),
                  fieldLabelId: "backchannelLogoutSessionRequired"
                }
              ),
              fieldId: "backchannelLogoutSessionRequired",
              hasNoPaddingTop: !0,
              children: /* @__PURE__ */ a(
                be,
                {
                  name: Fe(
                    "attributes.backchannel.logout.session.required"
                  ),
                  defaultValue: "true",
                  control: i,
                  render: ({ field: u }) => /* @__PURE__ */ a(
                    Je,
                    {
                      id: "backchannelLogoutSessionRequired",
                      label: r("on"),
                      labelOff: r("off"),
                      isChecked: u.value === "true",
                      onChange: (p, m) => u.onChange(m.toString()),
                      "aria-label": r("backchannelLogoutSessionRequired")
                    }
                  )
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            re,
            {
              label: r("backchannelLogoutRevokeOfflineSessions"),
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: r("backchannelLogoutRevokeOfflineSessionsHelp"),
                  fieldLabelId: "backchannelLogoutRevokeOfflineSessions"
                }
              ),
              fieldId: "backchannelLogoutRevokeOfflineSessions",
              hasNoPaddingTop: !0,
              children: /* @__PURE__ */ a(
                be,
                {
                  name: Fe(
                    "attributes.backchannel.logout.revoke.offline.tokens"
                  ),
                  defaultValue: "false",
                  control: i,
                  render: ({ field: u }) => /* @__PURE__ */ a(
                    Je,
                    {
                      id: "backchannelLogoutRevokeOfflineSessions",
                      label: r("on"),
                      labelOff: r("off"),
                      isChecked: u.value === "true",
                      onChange: (p, m) => u.onChange(m.toString()),
                      "aria-label": r("backchannelLogoutRevokeOfflineSessions")
                    }
                  )
                }
              )
            }
          )
        ] }),
        /* @__PURE__ */ a(
          Mr,
          {
            name: "settings",
            save: e,
            reset: t,
            isDisabled: !l
          }
        )
      ]
    }
  );
}, Xz = Be(() => Promise.resolve().then(() => pb)), xk = {
  path: "/:realm/clients/:clientId/:tab",
  element: /* @__PURE__ */ a(Xz, {}),
  breadcrumb: (e) => e("clientSettings"),
  handle: {
    access: "query-clients"
  }
}, _i = (e) => ({
  pathname: We(xk.path, e)
}), Yz = Be(() => Promise.resolve().then(() => Qk)), Wg = {
  path: "/:realm/clients",
  element: /* @__PURE__ */ a(Yz, {}),
  breadcrumb: (e) => e("clientList"),
  handle: {
    access: "query-clients"
  }
}, Sk = {
  ...Wg,
  path: "/:realm/clients/:tab"
}, js = (e) => {
  const t = e.tab ? Sk.path : Wg.path;
  return {
    pathname: We(t, e)
  };
}, Jz = (e) => {
  const { t } = H(), { trigger: n } = e, { activeStep: r, goToNextStep: i, goToPrevStep: s, close: o } = Ws(), l = async (c) => {
    await n() && c?.();
  };
  return /* @__PURE__ */ a(
    Hc,
    {
      activeStep: r,
      onNext: () => l(i),
      onBack: s,
      onClose: o,
      isBackDisabled: r.index === 1,
      backButtonText: t("back"),
      nextButtonText: t("next"),
      cancelButtonText: t("cancel")
    }
  );
};
function Zz() {
  const { adminClient: e } = de(), { t } = H(), { realm: n } = ye(), r = Xe(), [i, s] = D(!1), { addAlert: o, addError: l } = we(), c = Ke({
    defaultValues: {
      protocol: "openid-connect",
      clientId: "",
      name: "",
      description: "",
      publicClient: !0,
      authorizationServicesEnabled: !1,
      serviceAccountsEnabled: !1,
      implicitFlowEnabled: !1,
      directAccessGrantsEnabled: !0,
      standardFlowEnabled: !0,
      frontchannelLogout: !0,
      attributes: {
        saml_idp_initiated_sso_url_name: ""
      }
    }
  }), { getValues: d, watch: u } = c, p = u("protocol"), m = async () => {
    if (i) return;
    s(!0);
    const g = ta(d());
    try {
      const b = await e.clients.create({
        ...g,
        clientId: g.clientId?.trim()
      });
      o(t("createClientSuccess"), pe.success), r(_i({ realm: n, clientId: b.id, tab: "settings" }));
    } catch (b) {
      l("createClientError", b);
    } finally {
      s(!1);
    }
  }, f = t("createClient");
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(wt, { titleKey: "createClient", subKey: "clientsExplain" }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(He, { ...c, children: /* @__PURE__ */ x(
      Xu,
      {
        onClose: () => r(js({ realm: n })),
        navAriaLabel: `${f} steps`,
        onSave: m,
        footer: /* @__PURE__ */ a(Jz, { ...c }),
        children: [
          /* @__PURE__ */ a(
            pa,
            {
              name: t("generalSettings"),
              id: "generalSettings",
              children: /* @__PURE__ */ a(qz, {})
            },
            "generalSettings"
          ),
          /* @__PURE__ */ a(
            pa,
            {
              name: t("capabilityConfig"),
              id: "capabilityConfig",
              isHidden: p === "saml",
              children: /* @__PURE__ */ a(qg, { protocol: p })
            },
            "capabilityConfig"
          ),
          /* @__PURE__ */ a(
            pa,
            {
              name: t("loginSettings"),
              id: "loginSettings",
              footer: {
                backButtonText: t("back"),
                nextButtonText: t("save"),
                cancelButtonText: t("cancel")
              },
              children: /* @__PURE__ */ a(je, { isHorizontal: !0, role: "manage-clients", children: /* @__PURE__ */ a(Ck, { protocol: p }) })
            },
            "loginSettings"
          )
        ]
      }
    ) }) })
  ] });
}
const Qz = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Zz
}, Symbol.toStringTag, { value: "Module" })), pi = ({ name: e, label: t }) => {
  const { t: n } = H();
  return /* @__PURE__ */ a(
    vt,
    {
      name: e,
      label: n(t),
      labelIcon: n(`${t}Help`),
      stringify: !0
    }
  );
}, eq = () => {
  const { t: e } = H();
  return /* @__PURE__ */ x(
    je,
    {
      isHorizontal: !0,
      role: "manage-clients",
      className: "keycloak__capability-config__form",
      children: [
        /* @__PURE__ */ a(
          at,
          {
            name: "attributes.saml_name_id_format",
            label: e("nameIdFormat"),
            labelIcon: e("nameIdFormatHelp"),
            controller: {
              defaultValue: "username"
            },
            options: ["username", "email", "transient", "persistent"]
          }
        ),
        /* @__PURE__ */ a(
          pi,
          {
            name: "attributes.saml_force_name_id_format",
            label: "forceNameIdFormat"
          }
        ),
        /* @__PURE__ */ a(
          pi,
          {
            name: Fe("attributes.saml.force.post.binding"),
            label: "forcePostBinding"
          }
        ),
        /* @__PURE__ */ a(
          pi,
          {
            name: Fe("attributes.saml.artifact.binding"),
            label: "forceArtifactBinding"
          }
        ),
        /* @__PURE__ */ a(
          pi,
          {
            name: Fe("attributes.saml.authnstatement"),
            label: "includeAuthnStatement"
          }
        ),
        /* @__PURE__ */ a(
          pi,
          {
            name: Fe(
              "attributes.saml.onetimeuse.condition"
            ),
            label: "includeOneTimeUseCondition"
          }
        ),
        /* @__PURE__ */ a(
          pi,
          {
            name: Fe(
              "attributes.saml.server.signature.keyinfo.ext"
            ),
            label: "optimizeLookup"
          }
        ),
        /* @__PURE__ */ a(
          pi,
          {
            name: Fe("attributes.saml.allow.ecp.flow"),
            label: "allowEcpFlow"
          }
        )
      ]
    }
  );
}, XC = [
  "RSA_SHA1",
  "RSA_SHA256",
  "RSA_SHA256_MGF1",
  "RSA_SHA512",
  "RSA_SHA512_MGF1",
  "DSA_SHA1"
], YC = ["NONE", "KEY_ID", "CERT_SUBJECT"], JC = [
  { name: "EXCLUSIVE", value: "http://www.w3.org/2001/10/xml-exc-c14n#" },
  {
    name: "EXCLUSIVE_WITH_COMMENTS",
    value: "http://www.w3.org/2001/10/xml-exc-c14n#WithComments"
  },
  {
    name: "INCLUSIVE",
    value: "http://www.w3.org/TR/2001/REC-xml-c14n-20010315"
  },
  {
    name: "INCLUSIVE_WITH_COMMENTS",
    value: "http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments"
  }
], tq = () => {
  const { t: e } = H(), { watch: t } = De(), n = t(
    Fe("attributes.saml.server.signature")
  ), r = t(
    Fe(
      "attributes.saml.assertion.signature"
    )
  );
  return /* @__PURE__ */ x(
    je,
    {
      isHorizontal: !0,
      role: "manage-clients",
      className: "keycloak__capability-config__form",
      children: [
        /* @__PURE__ */ a(
          pi,
          {
            name: Fe("attributes.saml.server.signature"),
            label: "signDocuments"
          }
        ),
        /* @__PURE__ */ a(
          pi,
          {
            name: Fe("attributes.saml.assertion.signature"),
            label: "signAssertions"
          }
        ),
        (n === "true" || r === "true") && /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(
            at,
            {
              name: Fe(
                "attributes.saml.signature.algorithm"
              ),
              label: e("signatureAlgorithm"),
              labelIcon: e("signatureAlgorithmHelp"),
              controller: {
                defaultValue: XC[0]
              },
              options: [...XC]
            }
          ),
          /* @__PURE__ */ a(
            at,
            {
              name: Fe(
                "attributes.saml.server.signature.keyinfo.xmlSigKeyInfoKeyNameTransformer"
              ),
              label: e("signatureKeyName"),
              labelIcon: e("signatureKeyNameHelp"),
              controller: {
                defaultValue: YC[0]
              },
              options: [...YC]
            }
          ),
          /* @__PURE__ */ a(
            at,
            {
              name: "attributes.saml_signature_canonicalization_method",
              label: e("canonicalization"),
              labelIcon: e("canonicalizationHelp"),
              controller: {
                defaultValue: JC[0].value
              },
              options: JC.map(({ name: i, value: s }) => ({
                key: s,
                value: i
              }))
            }
          )
        ] })
      ]
    }
  );
}, nq = ({
  clientId: e,
  isOpen: t,
  onAdded: n,
  onClose: r
}) => {
  const { adminClient: i } = de(), { t: s } = H(), o = Ke(), {
    handleSubmit: l,
    formState: { isDirty: c, isValid: d }
  } = o, { addAlert: u, addError: p } = we();
  async function m({ node: f }) {
    try {
      await i.clients.addClusterNode({
        id: e,
        node: f
      }), n(f), u(s("addedNodeSuccess"), pe.success);
    } catch (g) {
      p("addedNodeFail", g);
    }
    r();
  }
  return /* @__PURE__ */ a(
    ft,
    {
      title: s("addNode"),
      isOpen: t,
      onClose: r,
      variant: "small",
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "add-node-confirm",
            type: "submit",
            form: "add-host-form",
            isDisabled: !c || !d,
            children: s("save")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "add-node-cancel",
            variant: xe.link,
            onClick: r,
            children: s("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(He, { ...o, children: /* @__PURE__ */ a(St, { id: "add-host-form", onSubmit: l(m), isHorizontal: !0, children: /* @__PURE__ */ a(
        ve,
        {
          name: "node",
          label: s("nodeHost"),
          rules: {
            required: s("required")
          }
        }
      ) }) })
    }
  );
}, aq = ({
  selectItems: e,
  keyValue: t,
  ...n
}) => {
  const { t: r } = H(), { field: i } = Ys(n), [s, o] = D(!1), l = nt(
    () => e.find((c) => c.key === t),
    [e, t]
  );
  return l?.values ? /* @__PURE__ */ a(
    ht,
    {
      onToggle: (c) => o(c),
      isOpen: s,
      onSelect: (c) => {
        i.onChange(c), o(!1);
      },
      selections: i.value ? [i.value] : r("choose"),
      placeholderText: r("valuePlaceholder"),
      children: l.values.map((c) => /* @__PURE__ */ a(Re, { value: c, children: c }, c))
    }
  ) : /* @__PURE__ */ a(
    gt,
    {
      "aria-label": r("customValue"),
      "data-testid": n.name,
      ...i
    }
  );
}, ad = ({
  name: e,
  label: t = "attributes",
  defaultKeyValue: n,
  isDisabled: r = !1
}) => {
  const { t: i } = H(), {
    control: s,
    register: o,
    formState: { errors: l }
  } = De(), { fields: c, append: d, remove: u } = ig({
    shouldUnregister: !0,
    control: s,
    name: e
  }), p = () => d({ key: "", value: "" }), m = rt({
    name: e,
    control: s,
    defaultValue: []
  });
  return c.length > 0 ? /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ x(Ha, { hasGutter: !0, children: [
      /* @__PURE__ */ a(Wt, { className: "pf-v5-c-form__label", span: 5, children: /* @__PURE__ */ a("span", { className: "pf-v5-c-form__label-text", children: i("key") }) }),
      /* @__PURE__ */ a(Wt, { className: "pf-v5-c-form__label", span: 7, children: /* @__PURE__ */ a("span", { className: "pf-v5-c-form__label-text", children: i("value") }) }),
      c.map((f, g) => {
        const b = l[e]?.[g], v = !!b?.key, y = !!b?.value || !!b?.message, C = b?.message || i("valueError");
        return /* @__PURE__ */ x(Ea, { children: [
          /* @__PURE__ */ x(Wt, { span: 5, children: [
            n ? /* @__PURE__ */ a(
              KO,
              {
                name: `${e}.${g}.key`,
                selectItems: n,
                rules: { required: !0 }
              }
            ) : /* @__PURE__ */ a(
              gt,
              {
                placeholder: i("keyPlaceholder"),
                "aria-label": i("key"),
                "data-testid": `${e}-key`,
                ...o(`${e}.${g}.key`, { required: !0 }),
                validated: v ? "error" : "default",
                isRequired: !0,
                isDisabled: r
              }
            ),
            v && /* @__PURE__ */ a(Yr, { children: /* @__PURE__ */ a(Jr, { variant: "error", children: i("keyError") }) })
          ] }),
          /* @__PURE__ */ x(Wt, { span: 5, children: [
            n ? /* @__PURE__ */ a(
              aq,
              {
                name: `${e}.${g}.value`,
                keyValue: m[g]?.key,
                selectItems: n,
                rules: { required: !0 }
              }
            ) : /* @__PURE__ */ a(
              gt,
              {
                placeholder: i("valuePlaceholder"),
                "aria-label": i("value"),
                "data-testid": `${e}-value`,
                ...o(`${e}.${g}.value`, { required: !0 }),
                validated: y ? "error" : "default",
                isRequired: !0,
                isDisabled: r
              }
            ),
            y && /* @__PURE__ */ a(Yr, { children: /* @__PURE__ */ a(Jr, { variant: "error", children: C }) })
          ] }),
          /* @__PURE__ */ a(Wt, { span: 2, children: /* @__PURE__ */ a(
            z,
            {
              variant: "link",
              title: i("removeAttribute"),
              onClick: () => u(g),
              "data-testid": `${e}-remove`,
              isDisabled: r,
              children: /* @__PURE__ */ a($i, {})
            }
          ) })
        ] }, f.id);
      })
    ] }),
    /* @__PURE__ */ a(Uu, { children: /* @__PURE__ */ a(xi, { children: /* @__PURE__ */ a(
      z,
      {
        "data-testid": `${e}-add-row`,
        className: "pf-v5-u-px-0 pf-v5-u-mt-sm",
        variant: "link",
        icon: /* @__PURE__ */ a(_a, {}),
        onClick: p,
        isDisabled: r,
        children: i("addAttribute", { label: t })
      }
    ) }) })
  ] }) : /* @__PURE__ */ x(
    Pr,
    {
      "data-testid": `${e}-empty-state`,
      className: "pf-v5-u-p-0",
      variant: "xs",
      children: [
        /* @__PURE__ */ a(Di, { children: i("missingAttributes", { label: t }) }),
        /* @__PURE__ */ a(ss, { children: /* @__PURE__ */ a(
          z,
          {
            "data-testid": `${e}-add-row`,
            variant: "link",
            icon: /* @__PURE__ */ a(_a, {}),
            size: "sm",
            onClick: p,
            isDisabled: r,
            children: i("addAttribute", { label: t })
          }
        ) })
      ]
    }
  );
}, Bm = "tokenLifespan.inherited", Um = "tokenLifespan.expires", Dl = ({
  id: e,
  name: t,
  defaultValue: n,
  units: r
}) => {
  const { t: i } = H(), [s, o] = D(!1), [l, c] = D(!1), d = () => c(!0), u = () => c(!1), { control: p } = De(), m = (f) => typeof f == "number" || typeof f == "string" && f !== "" || l;
  return /* @__PURE__ */ a(
    re,
    {
      label: i(e),
      fieldId: e,
      labelIcon: /* @__PURE__ */ a(le, { helpText: i(`${e}Help`), fieldLabelId: e }),
      "data-testid": `token-lifespan-${e}`,
      children: /* @__PURE__ */ a(
        be,
        {
          name: t,
          defaultValue: "",
          control: p,
          render: ({ field: f }) => /* @__PURE__ */ x(ca, { hasGutter: !0, children: [
            /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(
              Dn,
              {
                toggle: (g) => /* @__PURE__ */ a(
                  ut,
                  {
                    ref: g,
                    onClick: () => o(!s),
                    isExpanded: s,
                    children: m(f.value) ? i(Um) : i(Bm)
                  }
                ),
                isOpen: s,
                onOpenChange: (g) => o(g),
                onSelect: (g, b) => {
                  f.onChange(b), o(!1);
                },
                selected: m(f.value) ? i(Um) : i(Bm),
                children: /* @__PURE__ */ x(ea, { children: [
                  /* @__PURE__ */ a(Re, { value: "", children: i(Bm) }),
                  /* @__PURE__ */ a(Re, { value: 60, children: i(Um) })
                ] })
              }
            ) }),
            /* @__PURE__ */ a($t, { hidden: !m(f.value), children: /* @__PURE__ */ a(
              ln,
              {
                validated: m(f.value) && f.value < 1 ? "warning" : "default",
                units: r,
                value: f.value === "" ? n : f.value,
                onChange: f.onChange,
                onFocus: d,
                onBlur: u,
                min: 1,
                isDisabled: !m(f.value)
              }
            ) })
          ] })
        }
      )
    }
  );
}, rq = ({
  save: e,
  reset: t,
  protocol: n,
  hasConfigureAccess: r
}) => {
  const { t: i } = H(), [s, o] = D(!1), { realmRepresentation: l } = ye(), d = aa()(Fn.DPoP), { control: u } = De();
  return /* @__PURE__ */ x(
    je,
    {
      role: "manage-realm",
      fineGrainedAccess: r,
      isHorizontal: !0,
      children: [
        n !== "openid-connect" && /* @__PURE__ */ a(
          re,
          {
            label: i("assertionLifespan"),
            fieldId: "assertionLifespan",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: i("assertionLifespanHelp"),
                fieldLabelId: "assertionLifespan"
              }
            ),
            children: /* @__PURE__ */ a(
              be,
              {
                name: Fe(
                  "attributes.saml.assertion.lifespan"
                ),
                defaultValue: "",
                control: u,
                render: ({ field: p }) => /* @__PURE__ */ a(
                  ln,
                  {
                    units: ["minute", "day", "hour"],
                    value: p.value,
                    onChange: p.onChange
                  }
                )
              }
            )
          }
        ),
        n === "openid-connect" && /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(
            Dl,
            {
              id: "accessTokenLifespan",
              name: Fe(
                "attributes.access.token.lifespan"
              ),
              defaultValue: l?.accessTokenLifespan,
              units: ["minute", "day", "hour"]
            }
          ),
          /* @__PURE__ */ a(
            Dl,
            {
              id: "clientSessionIdle",
              name: Fe(
                "attributes.client.session.idle.timeout"
              ),
              defaultValue: l?.clientSessionIdleTimeout,
              units: ["minute", "day", "hour"]
            }
          ),
          /* @__PURE__ */ a(
            Dl,
            {
              id: "clientSessionMax",
              name: Fe(
                "attributes.client.session.max.lifespan"
              ),
              defaultValue: l?.clientSessionMaxLifespan,
              units: ["minute", "day", "hour"]
            }
          ),
          /* @__PURE__ */ a(
            Dl,
            {
              id: "clientOfflineSessionIdle",
              name: Fe(
                "attributes.client.offline.session.idle.timeout"
              ),
              defaultValue: l?.offlineSessionIdleTimeout,
              units: ["minute", "day", "hour"]
            }
          ),
          l?.offlineSessionMaxLifespanEnabled && /* @__PURE__ */ a(
            Dl,
            {
              id: "clientOfflineSessionMax",
              name: Fe(
                "attributes.client.offline.session.max.lifespan"
              ),
              defaultValue: l?.offlineSessionMaxLifespanEnabled ? l.offlineSessionMaxLifespan : void 0,
              units: ["minute", "day", "hour"]
            }
          ),
          /* @__PURE__ */ a(
            vt,
            {
              name: Fe(
                "attributes.tls.client.certificate.bound.access.tokens"
              ),
              label: i("oAuthMutual"),
              labelIcon: i("oAuthMutualHelp"),
              stringify: !0
            }
          ),
          d && /* @__PURE__ */ a(
            vt,
            {
              name: Fe(
                "attributes.dpop.bound.access.tokens"
              ),
              label: i("oAuthDPoP"),
              labelIcon: i("oAuthDPoPHelp"),
              stringify: !0
            }
          ),
          /* @__PURE__ */ a(
            re,
            {
              label: i("keyForCodeExchange"),
              fieldId: "keyForCodeExchange",
              hasNoPaddingTop: !0,
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: i("keyForCodeExchangeHelp"),
                  fieldLabelId: "keyForCodeExchange"
                }
              ),
              children: /* @__PURE__ */ a(
                be,
                {
                  name: Fe(
                    "attributes.pkce.code.challenge.method"
                  ),
                  defaultValue: "",
                  control: u,
                  render: ({ field: p }) => /* @__PURE__ */ a(
                    Dn,
                    {
                      toggle: (m) => /* @__PURE__ */ a(
                        ut,
                        {
                          id: "keyForCodeExchange",
                          ref: m,
                          onClick: () => o(!s),
                          isExpanded: s,
                          children: [p.value || i("choose")]
                        }
                      ),
                      isOpen: s,
                      onOpenChange: (m) => o(m),
                      onSelect: (m, f) => {
                        p.onChange(f), o(!1);
                      },
                      selected: p.value,
                      children: /* @__PURE__ */ a(ea, { children: ["", "S256", "plain"].map((m) => /* @__PURE__ */ a(Re, { value: m, children: m || i("choose") }, m)) })
                    }
                  )
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            vt,
            {
              name: Fe(
                "attributes.require.pushed.authorization.requests"
              ),
              label: i("pushedAuthorizationRequestRequired"),
              labelIcon: i("pushedAuthorizationRequestRequiredHelp"),
              stringify: !0
            }
          ),
          /* @__PURE__ */ a(
            vt,
            {
              name: Fe(
                "attributes.client.use.lightweight.access.token.enabled"
              ),
              label: i("lightweightAccessToken"),
              labelIcon: i("lightweightAccessTokenHelp"),
              stringify: !0
            }
          ),
          /* @__PURE__ */ a(
            vt,
            {
              name: Fe(
                "attributes.client.introspection.response.allow.jwt.claim.enabled"
              ),
              label: i("supportJwtClaimInIntrospectionResponse"),
              labelIcon: i("supportJwtClaimInIntrospectionResponseHelp"),
              stringify: !0
            }
          ),
          /* @__PURE__ */ a(
            re,
            {
              label: i("acrToLoAMapping"),
              fieldId: "acrToLoAMapping",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: i("acrToLoAMappingHelp"),
                  fieldLabelId: "acrToLoAMapping"
                }
              ),
              children: /* @__PURE__ */ a(
                ad,
                {
                  label: i("acrToLoAMapping"),
                  name: Fe("attributes.acr.loa.map")
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            re,
            {
              label: i("defaultACRValues"),
              fieldId: "defaultACRValues",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: i("defaultACRValuesHelp"),
                  fieldLabelId: "defaultACRValues"
                }
              ),
              children: /* @__PURE__ */ a(
                Or,
                {
                  id: "defaultACRValues",
                  "aria-label": "defaultACRValues",
                  name: Fe("attributes.default.acr.values"),
                  stringify: !0
                }
              )
            }
          )
        ] }),
        /* @__PURE__ */ x(ot, { children: [
          /* @__PURE__ */ a(
            z,
            {
              variant: "secondary",
              onClick: e,
              "data-testid": "OIDCAdvancedSave",
              children: i("save")
            }
          ),
          /* @__PURE__ */ a(z, { variant: "link", onClick: t, "data-testid": "OIDCAdvancedRevert", children: i("revert") })
        ] })
      ]
    }
  );
}, wk = (e) => {
  const { t } = H();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.logoUri",
        label: t("logoUrl"),
        labelIcon: t("logoUrlHelp"),
        type: "url",
        ...e
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.policyUri",
        label: t("policyUrl"),
        labelIcon: t("policyUrlHelp"),
        type: "url",
        ...e
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.tosUri",
        label: t("termsOfServiceUrl"),
        labelIcon: t("termsOfServiceUrlHelp"),
        type: "url",
        ...e
      }
    )
  ] });
}, iq = ({
  protocol: e,
  save: t,
  reset: n,
  hasConfigureAccess: r
}) => {
  const { adminClient: i } = de(), { t: s } = H(), [o, l] = D([]);
  return _e(
    () => i.authenticationManagement.getFlows(),
    (c) => {
      let d = [
        ...c.filter((u) => u.providerId !== "client-flow")
      ];
      d = wr(d, [(u) => u.alias]), l(d);
    },
    []
  ), /* @__PURE__ */ x(
    je,
    {
      role: "manage-clients",
      fineGrainedAccess: r,
      isHorizontal: !0,
      children: [
        /* @__PURE__ */ a(
          at,
          {
            name: "authenticationFlowBindingOverrides.browser",
            label: s("browserFlow"),
            labelIcon: s("browserFlowHelp"),
            controller: {
              defaultValue: ""
            },
            options: [
              { key: "", value: s("choose") },
              ...o.map(({ id: c, alias: d }) => ({ key: c, value: d }))
            ]
          }
        ),
        e === "openid-connect" && /* @__PURE__ */ a(
          at,
          {
            name: "authenticationFlowBindingOverrides.direct_grant",
            label: s("directGrant"),
            labelIcon: s("directGrantHelp"),
            controller: {
              defaultValue: ""
            },
            options: [
              { key: "", value: s("choose") },
              ...o.map(({ id: c, alias: d }) => ({ key: c, value: d }))
            ]
          }
        ),
        /* @__PURE__ */ x(ot, { children: [
          /* @__PURE__ */ a(
            z,
            {
              variant: "secondary",
              onClick: t,
              "data-testid": "OIDCAuthFlowOverrideSave",
              children: s("save")
            }
          ),
          /* @__PURE__ */ a(
            z,
            {
              variant: "link",
              onClick: n,
              "data-testid": "OIDCAuthFlowOverrideRevert",
              children: s("revert")
            }
          )
        ] })
      ]
    }
  );
}, sq = (e) => {
  const { field: t } = Ys(e);
  return /* @__PURE__ */ a(ln, { ...e, ...t });
}, Ac = {
  dateStyle: "long",
  timeStyle: "short"
};
function ai() {
  const { whoAmI: e } = ga(), t = e.getLocale();
  return function(r, i) {
    return r.toLocaleString(t, i);
  };
}
const oq = ({
  save: e,
  reset: t,
  hasConfigureAccess: n
}) => {
  const { t: r } = H(), i = Tt().providers, s = i?.clientSignature.providers, o = i?.contentencryption.providers, l = i?.cekmanagement.providers, c = i?.signature.providers, d = (f) => gp(f).map((g) => ({ key: g, value: g })), u = (f) => [
    { key: "", value: r("choose") },
    ...d(f)
  ], p = (f) => [
    { key: "any", value: r("any") },
    ...d(f)
  ], m = (f) => [
    { key: "none", value: r("none") },
    ...d(f)
  ];
  return /* @__PURE__ */ x(
    je,
    {
      role: "manage-clients",
      fineGrainedAccess: n,
      isHorizontal: !0,
      children: [
        /* @__PURE__ */ a(wk, {}),
        /* @__PURE__ */ a(
          at,
          {
            name: Fe(
              "attributes.access.token.signed.response.alg"
            ),
            label: r("accessTokenSignatureAlgorithm"),
            labelIcon: r("accessTokenSignatureAlgorithmHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(s)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Fe(
              "attributes.id.token.signed.response.alg"
            ),
            label: r("idTokenSignatureAlgorithm"),
            labelIcon: r("idTokenSignatureAlgorithmHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(s)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Fe(
              "attributes.id.token.encrypted.response.alg"
            ),
            label: r("idTokenEncryptionKeyManagementAlgorithm"),
            labelIcon: r("idTokenEncryptionKeyManagementAlgorithmHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(l)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Fe(
              "attributes.id.token.encrypted.response.enc"
            ),
            label: r("idTokenEncryptionContentEncryptionAlgorithm"),
            labelIcon: r("idTokenEncryptionContentEncryptionAlgorithmHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(o)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Fe(
              "attributes.user.info.response.signature.alg"
            ),
            label: r("userInfoSignedResponseAlgorithm"),
            labelIcon: r("userInfoSignedResponseAlgorithmHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(c)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Fe(
              "attributes.user.info.encrypted.response.alg"
            ),
            label: r("userInfoResponseEncryptionKeyManagementAlgorithm"),
            labelIcon: r("userInfoResponseEncryptionKeyManagementAlgorithmHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(l)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Fe(
              "attributes.user.info.encrypted.response.enc"
            ),
            label: r("userInfoResponseEncryptionContentEncryptionAlgorithm"),
            labelIcon: r(
              "userInfoResponseEncryptionContentEncryptionAlgorithmHelp"
            ),
            controller: {
              defaultValue: ""
            },
            options: u(o)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Fe(
              "attributes.request.object.signature.alg"
            ),
            label: r("requestObjectSignatureAlgorithm"),
            labelIcon: r("requestObjectSignatureAlgorithmHelp"),
            controller: {
              defaultValue: ""
            },
            options: [
              { key: "any", value: r("any") },
              ...m(s)
            ]
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Fe(
              "attributes.request.object.encryption.alg"
            ),
            label: r("requestObjectEncryption"),
            labelIcon: r("requestObjectEncryptionHelp"),
            controller: {
              defaultValue: ""
            },
            options: p(l)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Fe(
              "attributes.request.object.encryption.enc"
            ),
            label: r("requestObjectEncoding"),
            labelIcon: r("requestObjectEncodingHelp"),
            controller: {
              defaultValue: ""
            },
            options: p(o)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Fe(
              "attributes.request.object.required"
            ),
            label: r("requestObjectRequired"),
            labelIcon: r("requestObjectRequiredHelp"),
            controller: {
              defaultValue: ""
            },
            options: [
              "not required",
              "request or request_uri",
              "request only",
              "request_uri only"
            ].map((f) => ({
              key: f,
              value: r(`requestObject.${f}`)
            }))
          }
        ),
        /* @__PURE__ */ a(
          re,
          {
            label: r("validRequestURIs"),
            fieldId: "validRequestURIs",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("validRequestURIsHelp"),
                fieldLabelId: "validRequestURIs"
              }
            ),
            children: /* @__PURE__ */ a(
              Or,
              {
                name: Fe("attributes.request.uris"),
                "aria-label": r("validRequestURIs"),
                addButtonLabel: "addRequestUri",
                stringify: !0
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Fe(
              "attributes.authorization.signed.response.alg"
            ),
            label: r("authorizationSignedResponseAlg"),
            labelIcon: r("authorizationSignedResponseAlgHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(c)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Fe(
              "attributes.authorization.encrypted.response.alg"
            ),
            label: r("authorizationEncryptedResponseAlg"),
            labelIcon: r("authorizationEncryptedResponseAlgHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(l)
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Fe(
              "attributes.authorization.encrypted.response.enc"
            ),
            label: r("authorizationEncryptedResponseEnc"),
            labelIcon: r("authorizationEncryptedResponseEncHelp"),
            controller: {
              defaultValue: ""
            },
            options: u(o)
          }
        ),
        /* @__PURE__ */ x(ot, { children: [
          /* @__PURE__ */ a(z, { variant: "secondary", id: "fineGrainSave", onClick: e, children: r("save") }),
          /* @__PURE__ */ a(z, { id: "fineGrainRevert", variant: "link", onClick: t, children: r("revert") })
        ] })
      ]
    }
  );
}, lq = ({
  save: e,
  reset: t
}) => {
  const { t: n } = H();
  return /* @__PURE__ */ x(je, { role: "manage-realm", isHorizontal: !0, children: [
    /* @__PURE__ */ a(wk, {}),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.saml_assertion_consumer_url_post",
        label: n("assertionConsumerServicePostBindingURL"),
        labelIcon: n("assertionConsumerServicePostBindingURLHelp"),
        type: "url"
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.saml_assertion_consumer_url_redirect",
        label: n("assertionConsumerServiceRedirectBindingURL"),
        labelIcon: n("assertionConsumerServiceRedirectBindingURLHelp"),
        type: "url"
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.saml_single_logout_service_url_post",
        label: n("logoutServicePostBindingURL"),
        labelIcon: n("logoutServicePostBindingURLHelp"),
        type: "url"
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.saml_single_logout_service_url_redirect",
        label: n("logoutServiceRedirectBindingURL"),
        labelIcon: n("logoutServiceRedirectBindingURLHelp"),
        type: "url"
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.saml_single_logout_service_url_soap",
        label: n("logoutServiceSoapBindingUrl"),
        labelIcon: n("logoutServiceSoapBindingUrlHelp"),
        type: "url"
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.saml_single_logout_service_url_artifact",
        label: n("logoutServiceArtifactBindingUrl"),
        labelIcon: n("logoutServiceArtifactBindingUrlHelp"),
        type: "url"
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.saml_artifact_binding_url",
        label: n("artifactBindingUrl"),
        labelIcon: n("artifactBindingUrlHelp"),
        type: "url"
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "attributes.saml_artifact_resolution_service_url",
        label: n("artifactResolutionService"),
        labelIcon: n("artifactResolutionServiceHelp"),
        type: "url"
      }
    ),
    /* @__PURE__ */ x(ot, { children: [
      /* @__PURE__ */ a(z, { variant: "tertiary", onClick: e, "data-testid": "fineGrainSave", children: n("save") }),
      /* @__PURE__ */ a(z, { variant: "link", onClick: t, "data-testid": "fineGrainRevert", children: n("revert") })
    ] })
  ] });
}, cq = ({
  save: e,
  reset: t,
  hasConfigureAccess: n
}) => {
  const { t: r } = H(), { control: i } = De();
  return /* @__PURE__ */ x(
    je,
    {
      role: "manage-clients",
      fineGrainedAccess: n,
      isHorizontal: !0,
      children: [
        /* @__PURE__ */ a(
          re,
          {
            label: r("excludeSessionStateFromAuthenticationResponse"),
            fieldId: "excludeSessionStateFromAuthenticationResponse",
            hasNoPaddingTop: !0,
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("excludeSessionStateFromAuthenticationResponseHelp"),
                fieldLabelId: "excludeSessionStateFromAuthenticationResponse"
              }
            ),
            children: /* @__PURE__ */ a(
              be,
              {
                name: Fe(
                  "attributes.exclude.session.state.from.auth.response"
                ),
                defaultValue: "",
                control: i,
                render: ({ field: s }) => /* @__PURE__ */ a(
                  Je,
                  {
                    id: "excludeSessionStateFromAuthenticationResponse-switch",
                    label: r("on"),
                    labelOff: r("off"),
                    isChecked: s.value === "true",
                    onChange: (o, l) => s.onChange(l.toString()),
                    "aria-label": r("excludeSessionStateFromAuthenticationResponse")
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          re,
          {
            label: r("excludeIssuerFromAuthenticationResponse"),
            fieldId: "excludeIssuerFromAuthenticationResponse",
            hasNoPaddingTop: !0,
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("excludeIssuerFromAuthenticationResponseHelp"),
                fieldLabelId: "excludeIssuerFromAuthenticationResponse"
              }
            ),
            children: /* @__PURE__ */ a(
              be,
              {
                name: Fe(
                  "attributes.exclude.issuer.from.auth.response"
                ),
                defaultValue: "",
                control: i,
                render: ({ field: s }) => /* @__PURE__ */ a(
                  Je,
                  {
                    id: "excludeIssuerFromAuthenticationResponse-switch",
                    label: r("on"),
                    labelOff: r("off"),
                    isChecked: s.value === "true",
                    onChange: (o, l) => s.onChange(l.toString()),
                    "aria-label": r("excludeIssuerFromAuthenticationResponse")
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          re,
          {
            label: r("useRefreshTokens"),
            fieldId: "useRefreshTokens",
            hasNoPaddingTop: !0,
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("useRefreshTokensHelp"),
                fieldLabelId: "useRefreshTokens"
              }
            ),
            children: /* @__PURE__ */ a(
              be,
              {
                name: Fe(
                  "attributes.use.refresh.tokens"
                ),
                defaultValue: "true",
                control: i,
                render: ({ field: s }) => /* @__PURE__ */ a(
                  Je,
                  {
                    id: "useRefreshTokens",
                    label: r("on"),
                    labelOff: r("off"),
                    isChecked: s.value === "true",
                    onChange: (o, l) => s.onChange(l.toString()),
                    "aria-label": r("useRefreshTokens")
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          re,
          {
            label: r("useRefreshTokenForClientCredentialsGrant"),
            fieldId: "useRefreshTokenForClientCredentialsGrant",
            hasNoPaddingTop: !0,
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("useRefreshTokenForClientCredentialsGrantHelp"),
                fieldLabelId: "useRefreshTokenForClientCredentialsGrant"
              }
            ),
            children: /* @__PURE__ */ a(
              be,
              {
                name: Fe(
                  "attributes.client_credentials.use_refresh_token"
                ),
                defaultValue: "false",
                control: i,
                render: ({ field: s }) => /* @__PURE__ */ a(
                  Je,
                  {
                    id: "useRefreshTokenForClientCredentialsGrant",
                    label: r("on"),
                    labelOff: r("off"),
                    isChecked: s.value === "true",
                    onChange: (o, l) => s.onChange(l.toString()),
                    "aria-label": r("useRefreshTokenForClientCredentialsGrant")
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          re,
          {
            label: r("useLowerCaseBearerType"),
            fieldId: "useLowerCaseBearerType",
            hasNoPaddingTop: !0,
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("useLowerCaseBearerTypeHelp"),
                fieldLabelId: "useLowerCaseBearerType"
              }
            ),
            children: /* @__PURE__ */ a(
              be,
              {
                name: Fe(
                  "attributes.token.response.type.bearer.lower-case"
                ),
                defaultValue: "false",
                control: i,
                render: ({ field: s }) => /* @__PURE__ */ a(
                  Je,
                  {
                    id: "useLowerCaseBearerType",
                    label: r("on"),
                    labelOff: r("off"),
                    isChecked: s.value === "true",
                    onChange: (o, l) => s.onChange(l.toString()),
                    "aria-label": r("useLowerCaseBearerType")
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ x(ot, { children: [
          /* @__PURE__ */ a(
            z,
            {
              variant: "secondary",
              onClick: e,
              "data-testid": "OIDCCompatabilitySave",
              children: r("save")
            }
          ),
          /* @__PURE__ */ a(
            z,
            {
              variant: "link",
              onClick: t,
              "data-testid": "OIDCCompatabilityRevert",
              children: r("revert")
            }
          )
        ] })
      ]
    }
  );
}, dq = (e, t, n, r) => {
  const i = e.successRequests?.length || 0, s = e.failedRequests?.length || 0;
  i === 0 && s === 0 ? n(r("noAdminUrlSet"), pe.warning) : s > 0 ? (n(
    r(t + "Success", { successNodes: e.successRequests }),
    pe.success
  ), n(
    r(t + "Fail", { failedNodes: e.failedRequests }),
    pe.danger
  )) : n(
    r(t + "Success", { successNodes: e.successRequests }),
    pe.success
  );
}, uq = ({ save: e, client: t }) => {
  const { t: n } = H(), r = "openid-connect", { setValue: i } = De(), {
    publicClient: s,
    attributes: o,
    protocol: l,
    authenticationFlowBindingOverrides: c
  } = t, d = (u) => {
    for (const p of u)
      i(
        Fe(`attributes.${p}`),
        o?.[p] || ""
      );
  };
  return /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-py-0", children: /* @__PURE__ */ a(
    gl,
    {
      label: n("jumpToSection"),
      sections: [
        {
          title: n("clustering"),
          isHidden: !s,
          panel: /* @__PURE__ */ a(pq, { client: t, save: e })
        },
        {
          title: n("fineGrainOpenIdConnectConfiguration"),
          isHidden: l !== r,
          panel: /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(tt, { className: "pf-v5-u-pb-lg", children: n("fineGrainOpenIdConnectConfigurationHelp") }),
            /* @__PURE__ */ a(
              oq,
              {
                save: e,
                reset: () => {
                  d([
                    "logoUri",
                    "policyUri",
                    "tosUri",
                    "access.token.signed.response.alg",
                    "id.token.signed.response.alg",
                    "id.token.encrypted.response.alg",
                    "id.token.encrypted.response.enc",
                    "user.info.response.signature.alg",
                    "user.info.encrypted.response.alg",
                    "user.info.encrypted.response.enc",
                    "request.object.signature.alg",
                    "request.object.encryption.alg",
                    "request.object.encryption.enc",
                    "request.object.required",
                    "request.uris",
                    "authorization.signed.response.alg",
                    "authorization.encrypted.response.alg",
                    "authorization.encrypted.response.enc"
                  ]);
                }
              }
            )
          ] })
        },
        {
          title: n("openIdConnectCompatibilityModes"),
          isHidden: l !== r,
          panel: /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(tt, { className: "pf-v5-u-pb-lg", children: n("openIdConnectCompatibilityModesHelp") }),
            /* @__PURE__ */ a(
              cq,
              {
                save: () => e(),
                reset: () => d([
                  "exclude.session.state.from.auth.response",
                  "use.refresh.tokens",
                  "client_credentials.use_refresh_token",
                  "token.response.type.bearer.lower-case"
                ])
              }
            )
          ] })
        },
        {
          title: n("fineGrainSamlEndpointConfig"),
          isHidden: l === r,
          panel: /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(tt, { className: "pf-v5-u-pb-lg", children: n("fineGrainSamlEndpointConfigHelp") }),
            /* @__PURE__ */ a(
              lq,
              {
                save: () => e(),
                reset: () => d([
                  "logoUri",
                  "policyUri",
                  "tosUri",
                  "saml_assertion_consumer_url_post",
                  "saml_assertion_consumer_url_redirect",
                  "saml_single_logout_service_url_post",
                  "saml_single_logout_service_url_redirect",
                  "saml_single_logout_service_url_artifact",
                  "saml_artifact_binding_url",
                  "saml_artifact_resolution_service_url"
                ])
              }
            )
          ] })
        },
        {
          title: n("advancedSettings"),
          panel: /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(tt, { className: "pf-v5-u-pb-lg", children: n("advancedSettings" + Ia(l || "")) }),
            /* @__PURE__ */ a(
              rq,
              {
                protocol: l,
                save: () => e(),
                reset: () => {
                  d([
                    "saml.assertion.lifespan",
                    "access.token.lifespan",
                    "tls.client.certificate.bound.access.tokens",
                    "pkce.code.challenge.method"
                  ]);
                }
              }
            )
          ] })
        },
        {
          title: n("authenticationOverrides"),
          panel: /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(tt, { className: "pf-v5-u-pb-lg", children: n("authenticationOverridesHelp") }),
            /* @__PURE__ */ a(
              iq,
              {
                protocol: l,
                save: () => e(),
                reset: () => {
                  i(
                    "authenticationFlowBindingOverrides.browser",
                    c?.browser
                  ), i(
                    "authenticationFlowBindingOverrides.direct_grant",
                    c?.direct_grant
                  );
                }
              }
            )
          ] })
        }
      ],
      borders: !0
    }
  ) });
}, pq = ({
  save: e,
  client: { id: t, registeredNodes: n, access: r }
}) => {
  const { adminClient: i } = de(), { t: s } = H(), { addAlert: o, addError: l } = we(), c = ai(), [d, u] = D(n || {}), [p, m] = D(!1), [f, g] = D(""), [b, v] = D(!1), [y, C] = D(0), S = () => C((/* @__PURE__ */ new Date()).getTime()), P = async () => {
    const k = await i.clients.testNodesAvailable({ id: t });
    dq(k, "testCluster", o, s);
  }, [w, A] = Ve({
    titleKey: "deleteNode",
    messageKey: s("deleteNodeBody", {
      node: f
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await i.clients.deleteClusterNode({
          id: t,
          node: f
        }), u({
          ...Object.keys(d).reduce((k, T) => (T !== f && (k[T] = d[T]), k), {})
        }), S(), o(s("deleteNodeSuccess"), pe.success);
      } catch (k) {
        l("deleteNodeFail", k);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      je,
      {
        role: "manage-clients",
        fineGrainedAccess: r?.configure,
        isHorizontal: !0,
        children: /* @__PURE__ */ a(
          re,
          {
            label: s("nodeReRegistrationTimeout"),
            fieldId: "kc-node-reregistration-timeout",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: s("nodeReRegistrationTimeoutHelp"),
                fieldLabelId: "nodeReRegistrationTimeout"
              }
            ),
            children: /* @__PURE__ */ x(ca, { hasGutter: !0, children: [
              /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(sq, { name: "nodeReRegistrationTimeout" }) }),
              /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(z, { variant: xe.secondary, onClick: () => e(), children: s("save") }) })
            ] })
          }
        )
      }
    ),
    /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a(A, {}),
      /* @__PURE__ */ a(
        nq,
        {
          clientId: t,
          isOpen: b,
          onAdded: (k) => {
            d[k] = Date.now() / 1e3, S();
          },
          onClose: () => v(!1)
        }
      ),
      /* @__PURE__ */ a(
        ps,
        {
          toggleText: s("registeredClusterNodes"),
          onToggle: (k, T) => m(T),
          isExpanded: p,
          children: /* @__PURE__ */ a(
            xt,
            {
              ariaLabelKey: "registeredClusterNodes",
              loader: () => Promise.resolve(
                Object.entries(d || {}).map((k) => ({ host: k[0], registration: k[1] }))
              ),
              toolbarItem: /* @__PURE__ */ x(te, { children: [
                /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
                  z,
                  {
                    id: "testClusterAvailability",
                    onClick: P,
                    variant: xe.secondary,
                    isDisabled: Object.keys(d).length === 0,
                    children: s("testClusterAvailability")
                  }
                ) }),
                /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
                  z,
                  {
                    id: "registerNodeManually",
                    onClick: () => v(!0),
                    variant: xe.tertiary,
                    children: s("registerNodeManually")
                  }
                ) })
              ] }),
              actions: [
                {
                  title: s("delete"),
                  onRowClick: (k) => {
                    g(k.host), w();
                  }
                }
              ],
              columns: [
                {
                  name: "host",
                  displayKey: "nodeHost"
                },
                {
                  name: "registration",
                  displayKey: "lastRegistration",
                  cellFormatters: [
                    (k) => k ? c(
                      new Date(parseInt(k.toString()) * 1e3),
                      Ac
                    ) : ""
                  ]
                }
              ],
              emptyState: /* @__PURE__ */ a(
                ct,
                {
                  message: s("noNodes"),
                  instructions: s("noNodesInstructions"),
                  primaryActionText: s("registerNodeManually"),
                  onPrimaryAction: () => v(!0)
                }
              )
            },
            y
          )
        }
      )
    ] })
  ] });
}, mq = Be(
  () => import("./PermissionDetails-iql8o0Gw.js")
), Xg = {
  path: "/:realm/clients/:id/authorization/permission/new/:permissionType",
  element: /* @__PURE__ */ a(mq, {}),
  breadcrumb: (e) => e("createPermission"),
  handle: {
    access: (e) => e.hasAny("manage-clients", "manage-authorization")
  }
}, Ok = {
  ...Xg,
  path: "/:realm/clients/:id/authorization/permission/new/:permissionType/:selectedId"
}, Lc = (e) => {
  const t = e.selectedId ? Ok.path : Xg.path;
  return {
    pathname: We(t, e)
  };
}, fq = Be(() => import("./ResourceDetails-mKMKQiPp.js")), kk = {
  path: "/:realm/clients/:id/authorization/resource/new",
  element: /* @__PURE__ */ a(fq, {}),
  breadcrumb: (e) => e("createResource"),
  handle: {
    access: (e) => e.hasAny("manage-clients", "manage-authorization")
  }
}, ZC = (e) => ({
  pathname: We(kk.path, e)
}), hq = Be(() => import("./ResourceDetails-mKMKQiPp.js")), Yg = {
  path: "/:realm/clients/:id/authorization/resource",
  element: /* @__PURE__ */ a(hq, {}),
  breadcrumb: (e) => e("resourceDetails"),
  handle: {
    access: (e) => e.hasAny(
      "manage-clients",
      "view-authorization",
      "manage-authorization"
    )
  }
}, Tk = {
  ...Yg,
  path: "/:realm/clients/:id/authorization/resource/:resourceId"
}, Jg = (e) => {
  const t = e.resourceId ? Tk.path : Yg.path;
  return {
    pathname: We(t, e)
  };
}, gq = Be(
  () => import("./PermissionDetails-iql8o0Gw.js")
), Ik = {
  path: "/:realm/clients/:id/authorization/permission/:permissionType/:permissionId",
  element: /* @__PURE__ */ a(gq, {}),
  breadcrumb: (e) => e("permissionDetails"),
  handle: {
    access: (e) => e.hasAny(
      "manage-clients",
      "view-authorization",
      "manage-authorization"
    )
  }
}, Bs = (e) => ({
  pathname: We(Ik.path, e)
}), bq = Be(() => import("./ScopeDetails-Y3ciNXJx.js")), Zg = {
  path: "/:realm/clients/:id/authorization/scope",
  element: /* @__PURE__ */ a(bq, {}),
  breadcrumb: (e) => e("authorizationScopeDetails"),
  handle: {
    access: (e) => e.hasAny("manage-clients", "view-authorization")
  }
}, Ek = {
  ...Zg,
  path: "/:realm/clients/:id/authorization/scope/:scopeId"
}, Pk = (e) => {
  const t = e.scopeId ? Ek.path : Zg.path;
  return {
    pathname: We(t, e)
  };
};
function vq(e) {
  return /* @__PURE__ */ a(Us, { ...e });
}
function Us({
  name: e,
  array: t,
  convert: n,
  link: r
}) {
  const { t: i } = H();
  return /* @__PURE__ */ x(Vr, { children: [
    /* @__PURE__ */ a(nr, { children: i(e) }),
    /* @__PURE__ */ x(tr, { children: [
      t?.map((s) => {
        const o = typeof s == "string" ? s : n(s);
        return r ? /* @__PURE__ */ a(Ae, { to: r(s), className: "pf-v5-u-pr-sm", children: o }, o) : /* @__PURE__ */ a("span", { className: "pf-v5-u-pr-sm", children: o }, o);
      }),
      t?.length === 0 && /* @__PURE__ */ a("i", { children: i("none") })
    ] })
  ] });
}
const yq = ({ id: e, clientId: t, uris: n }) => {
  const { adminClient: r } = de(), { realm: i } = ye(), [s, o] = D(), [l, c] = D();
  return _e(
    () => Promise.all([
      r.clients.listScopesByResource({
        id: t,
        resourceName: e
      }),
      r.clients.listPermissionsByResource({
        id: t,
        resourceId: e
      })
    ]),
    ([d, u]) => {
      o(d), c(u);
    },
    []
  ), !l || !s ? /* @__PURE__ */ a(bt, {}) : /* @__PURE__ */ x(ir, { isHorizontal: !0, className: "keycloak_resource_details", children: [
    /* @__PURE__ */ a(vq, { name: "uris", array: n }),
    /* @__PURE__ */ a(
      Us,
      {
        name: "scopes",
        array: s,
        convert: (d) => d.name,
        link: (d) => Pk({ id: t, realm: i, scopeId: d.id })
      }
    ),
    /* @__PURE__ */ a(
      Us,
      {
        name: "associatedPermissions",
        array: l,
        convert: (d) => d.name,
        link: (d) => Bs({
          id: t,
          realm: i,
          permissionId: d.id,
          permissionType: "resource"
        })
      }
    )
  ] });
}, Qg = ({ array: e }) => {
  const { t } = H();
  return !e || e.length <= 1 ? null : /* @__PURE__ */ a(pn, { color: "blue", children: t("more", { count: e.length - 1 }) });
}, eb = ({
  types: e,
  search: t,
  onSearch: n,
  type: r
}) => {
  const { t: i } = H(), s = Ke({ mode: "onChange" }), {
    reset: o,
    formState: { isDirty: l },
    handleSubmit: c
  } = s, [d, u] = st(), p = (m) => {
    u(), n(m);
  };
  return ze(() => o(t), [t]), /* @__PURE__ */ a(
    Kt,
    {
      onOpenChange: u,
      toggle: (m) => /* @__PURE__ */ x(
        ut,
        {
          "data-testid": "searchdropdown_dorpdown",
          ref: m,
          onClick: u,
          className: "keycloak__client_authentication__searchdropdown",
          children: [
            r === "resource" && i("searchClientAuthorizationResource"),
            r === "policy" && i("searchClientAuthorizationPolicy"),
            r === "permission" && i("searchClientAuthorizationPermission")
          ]
        }
      ),
      isOpen: d,
      children: /* @__PURE__ */ a(He, { ...s, children: /* @__PURE__ */ x(
        St,
        {
          isHorizontal: !0,
          className: "keycloak__client_authentication__searchdropdown_form",
          onSubmit: c(p),
          children: [
            /* @__PURE__ */ a(ve, { name: "name", label: i("name") }),
            r === "resource" && /* @__PURE__ */ x(te, { children: [
              /* @__PURE__ */ a(ve, { name: "type", label: i("type") }),
              /* @__PURE__ */ a(ve, { name: "uris", label: i("uris") }),
              /* @__PURE__ */ a(ve, { name: "owner", label: i("owner") })
            ] }),
            r !== "resource" && r !== "policy" && /* @__PURE__ */ a(ve, { name: "resource", label: i("resource") }),
            r !== "policy" && /* @__PURE__ */ a(ve, { name: "scope", label: i("scope") }),
            r !== "resource" && /* @__PURE__ */ a(
              at,
              {
                name: "type",
                label: i("type"),
                controller: {
                  defaultValue: ""
                },
                options: [
                  { key: "", value: i("allTypes") },
                  ...(e || []).map(({ type: m, name: f }) => ({
                    key: m,
                    value: f
                  }))
                ]
              }
            ),
            /* @__PURE__ */ x(ot, { children: [
              /* @__PURE__ */ a(
                z,
                {
                  variant: "primary",
                  type: "submit",
                  "data-testid": "search-btn",
                  isDisabled: !l,
                  children: i("search")
                }
              ),
              /* @__PURE__ */ a(
                z,
                {
                  variant: "link",
                  "data-testid": "revert-btn",
                  onClick: () => n({}),
                  children: i("clear")
                }
              )
            ] })
          ]
        }
      ) })
    }
  );
}, Cq = ({ row: e }) => /* @__PURE__ */ x(Oa, { wrapModifier: "truncate", children: [
  e.uris?.[0],
  " ",
  /* @__PURE__ */ a(Qg, { array: e.uris })
] }), xq = ({
  clientId: e,
  isDisabled: t = !1
}) => {
  const { adminClient: n } = de(), { t: r } = H(), i = Xe(), { addAlert: s, addError: o } = we(), { realm: l } = ye(), [c, d] = D(), [u, p] = D(), [m, f] = D(), [g, b] = D(0), v = () => b(g + 1), [y, C] = D(10), [S, P] = D(0), [w, A] = D({});
  _e(
    () => {
      const E = {
        first: S,
        max: y + 1,
        deep: !1,
        ...w
      };
      return n.clients.listResources({
        ...E,
        id: e
      });
    },
    (E) => d(
      E.map((L) => ({ ...L, isExpanded: !1 }))
    ),
    [g, w, S, y]
  );
  const k = async (E) => n.clients.listPermissionsByResource({
    id: e,
    resourceId: E
  }), [T, O] = Ve({
    titleKey: "deleteResource",
    children: /* @__PURE__ */ x(te, { children: [
      r("deleteResourceConfirm"),
      m?.length && /* @__PURE__ */ a(
        En,
        {
          variant: "warning",
          isInline: !0,
          isPlain: !0,
          title: r("deleteResourceWarning"),
          className: "pf-v5-u-pt-lg",
          children: /* @__PURE__ */ a("p", { className: "pf-v5-u-pt-xs", children: m.map((E) => /* @__PURE__ */ a("strong", { className: "pf-v5-u-pr-md", children: E.name }, E.id)) })
        }
      )
    ] }),
    continueButtonLabel: "confirm",
    onConfirm: async () => {
      try {
        await n.clients.delResource({
          id: e,
          resourceId: u?._id
        }), s(r("resourceDeletedSuccess"), pe.success), v();
      } catch (E) {
        o("resourceDeletedError", E);
      }
    }
  });
  if (!c)
    return /* @__PURE__ */ a(bt, {});
  const I = c.length === 0, _ = Object.keys(w).length !== 0;
  return /* @__PURE__ */ x(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
    /* @__PURE__ */ a(O, {}),
    (!I || _) && /* @__PURE__ */ a(
      Ui,
      {
        count: c.length,
        first: S,
        max: y,
        onNextClick: P,
        onPreviousClick: P,
        onPerPageSelect: (E, L) => {
          P(E), C(L);
        },
        toolbarItem: /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            eb,
            {
              search: w,
              onSearch: A,
              type: "resource"
            }
          ) }),
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            z,
            {
              "data-testid": "createResource",
              isDisabled: t,
              component: (E) => /* @__PURE__ */ a(
                Ae,
                {
                  ...E,
                  to: ZC({ realm: l, id: e })
                }
              ),
              children: r("createResource")
            }
          ) })
        ] }),
        children: !I && /* @__PURE__ */ x(Cn, { "aria-label": r("resources"), variant: "compact", children: [
          /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
            /* @__PURE__ */ a(Ne, { "aria-hidden": "true" }),
            /* @__PURE__ */ a(Ne, { children: r("name") }),
            /* @__PURE__ */ a(Ne, { children: r("displayName") }),
            /* @__PURE__ */ a(Ne, { children: r("type") }),
            /* @__PURE__ */ a(Ne, { children: r("owner") }),
            /* @__PURE__ */ a(Ne, { children: r("uris") }),
            !t && /* @__PURE__ */ x(te, { children: [
              /* @__PURE__ */ a(Ne, { "aria-hidden": "true" }),
              /* @__PURE__ */ a(Ne, { "aria-hidden": "true" })
            ] })
          ] }) }),
          c.map((E, L) => /* @__PURE__ */ x(yn, { isExpanded: E.isExpanded, children: [
            /* @__PURE__ */ x(it, { children: [
              /* @__PURE__ */ a(
                ke,
                {
                  expand: {
                    rowIndex: L,
                    isExpanded: E.isExpanded,
                    onToggle: (F, R) => {
                      const M = c.map(
                        (U, K) => K === R ? {
                          ...U,
                          isExpanded: !U.isExpanded
                        } : U
                      );
                      d(M);
                    }
                  }
                }
              ),
              /* @__PURE__ */ a(ke, { "data-testid": `name-column-${E.name}`, children: /* @__PURE__ */ a(Oa, { wrapModifier: "truncate", children: /* @__PURE__ */ a(
                Ae,
                {
                  to: Jg({
                    realm: l,
                    id: e,
                    resourceId: E._id
                  }),
                  children: E.name
                }
              ) }) }),
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(Oa, { wrapModifier: "truncate", children: E.displayName }) }),
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(Oa, { wrapModifier: "truncate", children: E.type }) }),
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(Oa, { wrapModifier: "truncate", children: E.owner?.name }) }),
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(Cq, { row: E }) }),
              !t && /* @__PURE__ */ x(te, { children: [
                /* @__PURE__ */ a(ke, { width: 10, children: /* @__PURE__ */ a(
                  z,
                  {
                    variant: "link",
                    component: (F) => /* @__PURE__ */ a(
                      Ae,
                      {
                        ...F,
                        to: Lc({
                          realm: l,
                          id: e,
                          permissionType: "resource",
                          selectedId: E._id
                        })
                      }
                    ),
                    children: r("createPermission")
                  }
                ) }),
                /* @__PURE__ */ a(
                  ke,
                  {
                    actions: {
                      items: [
                        {
                          title: r("delete"),
                          onClick: async () => {
                            p(E), f(
                              await k(E._id)
                            ), T();
                          }
                        }
                      ]
                    }
                  }
                )
              ] })
            ] }),
            /* @__PURE__ */ x(
              it,
              {
                isExpanded: E.isExpanded,
                children: [
                  /* @__PURE__ */ a(ke, {}),
                  /* @__PURE__ */ a(ke, { colSpan: 4, children: /* @__PURE__ */ a(ms, { children: E.isExpanded && /* @__PURE__ */ a(
                    yq,
                    {
                      clientId: e,
                      id: E._id,
                      uris: E.uris
                    }
                  ) }) })
                ]
              },
              `child-${E._id}`
            )
          ] }, E._id))
        ] })
      }
    ),
    I && _ && /* @__PURE__ */ a(
      ct,
      {
        isSearchVariant: !0,
        message: r("noSearchResults"),
        instructions: r("noSearchResultsInstructions")
      }
    ),
    I && !_ && /* @__PURE__ */ a(
      ct,
      {
        message: r("emptyResources"),
        instructions: r("emptyResourcesInstructions"),
        isDisabled: t,
        primaryActionText: r("createResource"),
        onPrimaryAction: () => i(ZC({ realm: l, id: e }))
      }
    )
  ] });
}, Sq = Be(() => import("./ScopeDetails-Y3ciNXJx.js")), _k = {
  path: "/:realm/clients/:id/authorization/scope/new",
  element: /* @__PURE__ */ a(Sq, {}),
  breadcrumb: (e) => e("createAuthorizationScope"),
  handle: {
    access: (e) => e.hasAny("manage-clients", "manage-authorization")
  }
}, QC = (e) => ({
  pathname: We(_k.path, e)
}), wq = ({
  clientId: e,
  selectedScope: t,
  refresh: n,
  open: r,
  toggleDialog: i
}) => {
  const { adminClient: s } = de(), { t: o } = H(), { addAlert: l, addError: c } = we();
  return /* @__PURE__ */ x(
    hs,
    {
      open: r,
      toggleDialog: i,
      titleKey: "deleteScope",
      continueButtonLabel: "confirm",
      onConfirm: async () => {
        try {
          await s.clients.delAuthorizationScope({
            id: e,
            scopeId: t?.id
          }), l(o("resourceScopeSuccess"), pe.success), n();
        } catch (d) {
          c("resourceScopeError", d);
        }
      },
      children: [
        o("deleteScopeConfirm"),
        t && "permissions" in t && t.permissions && t.permissions.length > 0 && /* @__PURE__ */ a(
          En,
          {
            variant: "warning",
            isInline: !0,
            isPlain: !0,
            title: o("deleteScopeWarning"),
            className: "pf-v5-u-pt-lg",
            children: /* @__PURE__ */ a("p", { className: "pf-v5-u-pt-xs", children: t.permissions.map((d) => /* @__PURE__ */ a("strong", { className: "pf-v5-u-pr-md", children: d.name }, d.id)) })
          }
        )
      ]
    }
  );
}, Oq = ({
  clientId: e,
  isDisabled: t = !1
}) => {
  const { adminClient: n } = de(), { t: r } = H(), i = Xe(), { realm: s } = ye(), [o, l] = st(), [c, d] = D(), [u, p] = D(), [m, f] = D([]), [g, b] = D(0), v = () => b(g + 1), [y, C] = D(10), [S, P] = D(0), [w, A] = D("");
  _e(
    () => {
      const _ = {
        first: S,
        max: y + 1,
        deep: !1,
        name: w
      };
      return n.clients.listAllScopes({
        ..._,
        id: e
      });
    },
    (_) => {
      d(_.map((E) => ({ ...E, isLoaded: !1 }))), f(_.map((E) => ({ id: E.id, isExpanded: !1 })));
    },
    [g, w, S, y]
  );
  const k = (_) => c?.find((E) => E.id === _), T = (_) => m.find((E) => E.id === _)?.isExpanded || !1;
  if (_e(
    () => {
      const _ = m.filter((E) => E.isExpanded).map(({ id: E }) => k(E)).filter((E) => !E.isLoaded);
      return Promise.all(
        _.map(async (E) => {
          const [L, F] = await Promise.all([
            n.clients.listAllResourcesByScope({
              id: e,
              scopeId: E.id
            }),
            n.clients.listAllPermissionsByScope({
              id: e,
              scopeId: E.id
            })
          ]);
          return {
            ...E,
            resources: L,
            permissions: F,
            isLoaded: !0
          };
        })
      );
    },
    (_) => {
      let E = [...c || []];
      _.forEach((L) => {
        const F = c?.findIndex(
          (R) => L.id === R.id
        );
        E = [
          ...E.slice(0, F),
          L,
          ...E.slice(F + 1)
        ];
      }), d(E);
    },
    [m]
  ), !c)
    return /* @__PURE__ */ a(bt, {});
  const O = c.length === 0, I = w !== "";
  return /* @__PURE__ */ x(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
    /* @__PURE__ */ a(
      wq,
      {
        clientId: e,
        open: o,
        toggleDialog: l,
        selectedScope: u,
        refresh: v
      }
    ),
    (!O || I) && /* @__PURE__ */ a(
      Ui,
      {
        count: c.length,
        first: S,
        max: y,
        onNextClick: P,
        onPreviousClick: P,
        onPerPageSelect: (_, E) => {
          P(_), C(E);
        },
        inputGroupName: "search",
        inputGroupPlaceholder: r("searchByName"),
        inputGroupOnEnter: A,
        toolbarItem: /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
          z,
          {
            "data-testid": "createAuthorizationScope",
            component: (_) => /* @__PURE__ */ a(Ae, { ..._, to: QC({ realm: s, id: e }) }),
            children: r("createAuthorizationScope")
          }
        ) }),
        children: !O && /* @__PURE__ */ x(Cn, { "aria-label": r("scopes"), variant: "compact", children: [
          /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
            /* @__PURE__ */ a(Ne, { "aria-hidden": "true" }),
            /* @__PURE__ */ a(Ne, { children: r("name") }),
            /* @__PURE__ */ a(Ne, { children: r("displayName") }),
            /* @__PURE__ */ a(Ne, { "aria-hidden": "true" }),
            /* @__PURE__ */ a(Ne, { "aria-hidden": "true" })
          ] }) }),
          c.map((_, E) => /* @__PURE__ */ x(yn, { isExpanded: T(_.id), children: [
            /* @__PURE__ */ x(it, { children: [
              /* @__PURE__ */ a(
                ke,
                {
                  expand: {
                    rowIndex: E,
                    isExpanded: T(_.id),
                    onToggle: (L, F, R) => {
                      f([
                        ...m.slice(0, F),
                        { id: _.id, isExpanded: R },
                        ...m.slice(F + 1)
                      ]);
                    }
                  }
                }
              ),
              /* @__PURE__ */ a(ke, { "data-testid": `name-column-${_.name}`, children: /* @__PURE__ */ a(
                Ae,
                {
                  to: Pk({
                    realm: s,
                    id: e,
                    scopeId: _.id
                  }),
                  children: _.name
                }
              ) }),
              /* @__PURE__ */ a(ke, { children: _.displayName }),
              /* @__PURE__ */ a(ke, { width: 10, children: /* @__PURE__ */ a(
                z,
                {
                  variant: "link",
                  component: (L) => /* @__PURE__ */ a(
                    Ae,
                    {
                      ...L,
                      to: Lc({
                        realm: s,
                        id: e,
                        permissionType: "scope",
                        selectedId: _.id
                      })
                    }
                  ),
                  children: r("createPermission")
                }
              ) }),
              /* @__PURE__ */ a(
                ke,
                {
                  isActionCell: !0,
                  actions: {
                    items: [
                      {
                        title: r("delete"),
                        onClick: () => {
                          p(_), l();
                        }
                      }
                    ]
                  }
                }
              )
            ] }),
            /* @__PURE__ */ x(
              it,
              {
                isExpanded: T(_.id),
                children: [
                  /* @__PURE__ */ a(ke, {}),
                  /* @__PURE__ */ a(ke, { colSpan: 4, children: /* @__PURE__ */ a(ms, { children: T(_.id) && _.isLoaded ? /* @__PURE__ */ x(
                    ir,
                    {
                      isHorizontal: !0,
                      className: "keycloak_resource_details",
                      children: [
                        /* @__PURE__ */ a(
                          Us,
                          {
                            name: "resources",
                            array: _.resources,
                            convert: (L) => L.name,
                            link: (L) => Jg({
                              id: e,
                              realm: s,
                              resourceId: L._id
                            })
                          }
                        ),
                        /* @__PURE__ */ a(
                          Us,
                          {
                            name: "associatedPermissions",
                            array: _.permissions,
                            convert: (L) => L.name,
                            link: (L) => Bs({
                              id: e,
                              realm: s,
                              permissionId: L.id,
                              permissionType: L.type
                            })
                          }
                        )
                      ]
                    }
                  ) : /* @__PURE__ */ a(bt, {}) }) })
                ]
              },
              `child-${_.id}`
            )
          ] }, _.id))
        ] })
      }
    ),
    O && !I && /* @__PURE__ */ a(
      ct,
      {
        message: r("emptyAuthorizationScopes"),
        instructions: r("emptyAuthorizationInstructions"),
        isDisabled: t,
        onPrimaryAction: () => i(QC({ id: e, realm: s })),
        primaryActionText: r("createAuthorizationScope")
      }
    ),
    O && I && /* @__PURE__ */ a(
      ct,
      {
        isSearchVariant: !0,
        isDisabled: t,
        message: r("noSearchResults"),
        instructions: r("noSearchResultsInstructions")
      }
    )
  ] });
}, kq = Be(
  () => Promise.resolve().then(() => Dk)
), Rk = {
  path: "/:realm/clients/:id/authorization/policy/new/:policyType",
  element: /* @__PURE__ */ a(kq, {}),
  breadcrumb: (e) => e("createPolicy"),
  handle: {
    access: (e) => e.hasAny("manage-clients", "manage-authorization")
  }
}, Zf = (e) => ({
  pathname: We(Rk.path, e)
}), Tq = Be(
  () => Promise.resolve().then(() => Dk)
), Ak = {
  path: "/:realm/clients/:id/authorization/policy/:policyId/:policyType",
  element: /* @__PURE__ */ a(Tq, {}),
  breadcrumb: (e) => e("policyDetails"),
  handle: {
    access: (e) => e.hasAny(
      "manage-clients",
      "view-authorization",
      "manage-authorization"
    )
  }
}, rd = (e) => ({
  pathname: We(Ak.path, e)
}), Iq = Be(() => Promise.resolve().then(() => pb)), Lk = {
  path: "/:realm/clients/:clientId/authorization/:tab",
  element: /* @__PURE__ */ a(Iq, {}),
  breadcrumb: (e) => e("clientSettings"),
  handle: {
    access: (e) => e.hasAny("view-authorization", "manage-authorization")
  }
}, Ru = (e) => ({
  pathname: We(Lk.path, e)
}), Eq = {
  resources: {
    searchFunction: "listResources",
    fetchFunction: "getAssociatedResources"
  },
  policies: {
    searchFunction: "listPolicies",
    fetchFunction: "getAssociatedPolicies"
  }
}, Pq = ({
  name: e,
  clientId: t,
  permissionId: n,
  variant: r = mt.typeaheadMulti,
  preSelected: i,
  isRequired: s = !1
}) => {
  const { adminClient: o } = de(), { realm: l } = ye(), { t: c } = H(), d = Xe(), {
    control: u,
    formState: { errors: p, isDirty: m }
  } = De(), [f, g] = D([]), [b, v] = D(""), [y, C] = D(!1), [S, P] = st(), [w, A] = D(), [k, T] = D(), O = Eq[e], I = (M) => ({
    id: "_id" in M ? M._id : "id" in M ? M.id : void 0,
    name: M.name,
    type: M.type
  });
  _e(
    async () => {
      const M = Object.assign(
        { id: t, first: 0, max: 10, permission: "false" },
        b === "" ? null : { name: b }
      );
      return await Promise.all([
        o.clients.listPolicyProviders({ id: t }),
        o.clients[O.searchFunction](M),
        n ? o.clients[O.fetchFunction]({
          id: t,
          permissionId: n
        }) : Promise.resolve([])
      ]);
    },
    ([M, ...U]) => {
      A(
        M.filter((K) => K.type !== "resource" && K.type !== "scope")
      ), g(
        U.flat().filter(
          (K) => typeof K != "string"
        ).map(I).filter(
          ({ id: K }, G, N) => G === N.findIndex(({ id: $ }) => K === $)
        )
      );
    },
    [b]
  );
  const [_, E] = Ve({
    titleKey: c("unsavedChangesTitle"),
    messageKey: c("unsavedChangesConfirm"),
    continueButtonLabel: c("continue"),
    continueButtonVariant: xe.danger,
    onConfirm: () => k?.()
  }), L = (M) => e === "policies" ? rd({
    realm: l,
    id: t,
    policyId: M.id,
    policyType: M.type
  }) : Jg({
    realm: l,
    id: t,
    resourceId: M.id
  }), F = () => f.map((M) => /* @__PURE__ */ a(Re, { value: M.id, children: M.name }, M.id)), R = (M) => /* @__PURE__ */ a(vn, { children: M.value?.map((U) => {
    const K = f.find(
      (N) => N.id === U
    );
    if (!K) return;
    const G = L(K);
    return /* @__PURE__ */ a(
      Vt,
      {
        onClick: () => {
          M.onChange(M.value?.filter((N) => N !== K.id));
        },
        children: /* @__PURE__ */ a(
          Ae,
          {
            to: G,
            onClick: (N) => {
              m && (N.preventDefault(), T(() => () => d(G)), _());
            },
            children: K.name
          }
        )
      },
      K.id
    );
  }) });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(E, {}),
    S && /* @__PURE__ */ a(
      eh,
      {
        policyProviders: w,
        onSelect: (M) => {
          d(
            Zf({ id: t, realm: l, policyType: M.type })
          );
        },
        toggleDialog: P
      }
    ),
    /* @__PURE__ */ a(
      be,
      {
        name: e,
        defaultValue: i ? [i] : [],
        control: u,
        rules: { validate: (M) => !s || M.length > 0 },
        render: ({ field: M }) => /* @__PURE__ */ a(
          ht,
          {
            toggleId: e,
            variant: r,
            onToggle: (U) => C(U),
            onFilter: (U) => (v(U), F()),
            onClear: () => {
              M.onChange([]), v("");
            },
            selections: M.value,
            onSelect: (U) => {
              const K = U.toString();
              if (r === mt.typeaheadMulti) {
                const G = M.value?.find(
                  (N) => N === K
                ) ? M.value.filter((N) => N !== K) : [...M.value, K];
                M.onChange(G);
              } else
                M.onChange([K]);
              v("");
            },
            isOpen: y,
            "aria-label": c(e),
            validated: p[e] ? "error" : "default",
            typeAheadAriaLabel: c(e),
            chipGroupComponent: R(M),
            footer: e === "policies" ? /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                isInline: !0,
                onClick: () => {
                  m ? (C(!1), T(
                    () => P
                  ), _()) : P();
                },
                children: c("createPolicy")
              }
            ) : void 0,
            children: F()
          }
        )
      }
    )
  ] });
}, _q = () => {
  const { t: e } = H(), { id: t } = zt();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      re,
      {
        label: e("applyPolicy"),
        fieldId: "policies",
        labelIcon: /* @__PURE__ */ a(le, { helpText: e("applyPolicyHelp"), fieldLabelId: "policies" }),
        children: /* @__PURE__ */ a(Pq, { name: "policies", clientId: t })
      }
    ),
    /* @__PURE__ */ a(yk, { helpLabel: "policyDecisionStagey" })
  ] });
}, Rq = () => {
  const { t: e } = H();
  return /* @__PURE__ */ a(
    Lg,
    {
      name: "clients",
      label: e("clients"),
      helpText: e("policyClientHelp"),
      required: !0,
      defaultValue: [],
      variant: "typeaheadMulti"
    }
  );
}, Nk = ({
  clientScopes: e,
  clientName: t,
  open: n,
  toggleDialog: r,
  onAdd: i,
  isClientScopesConditionType: s
}) => {
  const { t: o } = H(), [l, c] = D(!1), [d, u] = D([]), [p, m] = D(
    "Name"
    /* Name */
  ), [f, g] = D(
    "All"
    /* All */
  ), [b, v] = st(), [y, C] = st(!1), S = nt(() => f === "OpenID Connect" ? e.filter((T) => T.protocol === "openid-connect") : f === "SAML" ? e.filter((T) => T.protocol === "saml") : e, [e, p, f]), P = (T) => {
    const O = d.map((I) => ({ scope: I, type: T }));
    i(O), c(!1), r();
  }, w = (T) => {
    T === "Name" ? m(
      "Protocol"
      /* Protocol */
    ) : T === "Protocol" && (m(
      "Name"
      /* Name */
    ), g(
      "All"
      /* All */
    )), v();
  }, A = (T) => {
    T === "SAML" ? g(
      "SAML"
      /* SAML */
    ) : T === "OpenID Connect" ? g(
      "OpenID Connect"
      /* OpenIDConnect */
    ) : T === "All" && g(
      "All"
      /* All */
    ), C();
  }, k = [
    /* @__PURE__ */ a(Re, { value: "SAML", children: o("protocolTypes.saml") }, 1),
    /* @__PURE__ */ a(Re, { value: "OpenID Connect", children: o("protocolTypes.openid-connect") }, 2),
    /* @__PURE__ */ a(Re, { value: "All", children: o("protocolTypes.all") }, 3)
  ];
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.medium,
      title: s ? o("addClientScope") : o("addClientScopesTo", { clientName: t }),
      isOpen: n,
      onClose: r,
      actions: s ? [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-add",
            "data-testid": "confirm",
            variant: xe.primary,
            onClick: () => {
              const T = d.map((O) => ({ scope: O }));
              i(T), r();
            },
            isDisabled: d.length === 0,
            children: o("add")
          },
          "add"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => {
              u([]), r();
            },
            children: o("cancel")
          },
          "cancel"
        )
      ] : [
        /* @__PURE__ */ a(
          Kt,
          {
            popperProps: {
              direction: "up"
            },
            onOpenChange: (T) => c(T),
            className: "keycloak__client-scopes-add__add-dropdown",
            isOpen: l,
            toggle: (T) => /* @__PURE__ */ a(
              ut,
              {
                ref: T,
                isDisabled: d.length === 0,
                onClick: () => c(!l),
                variant: "primary",
                id: "add-dropdown",
                statusIcon: /* @__PURE__ */ a(eL, {}),
                children: o("add")
              }
            ),
            children: /* @__PURE__ */ a(Xt, { children: Ez(o, P) })
          },
          "add-dropdown"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            variant: xe.link,
            onClick: () => {
              u([]), r();
            },
            children: o("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        xt,
        {
          loader: S,
          ariaLabelKey: "chooseAMapperType",
          searchPlaceholderKey: p === "Name" ? "searchForClientScope" : void 0,
          isSearching: p !== "Name",
          searchTypeComponent: /* @__PURE__ */ a(
            Kt,
            {
              onSelect: () => {
                w(p);
              },
              onOpenChange: v,
              toggle: (T) => /* @__PURE__ */ a(
                ut,
                {
                  ref: T,
                  "data-testid": "filter-type-dropdown",
                  id: "toggle-id-9",
                  onClick: v,
                  icon: /* @__PURE__ */ a(ls, {}),
                  statusIcon: /* @__PURE__ */ a(jo, {}),
                  children: p
                }
              ),
              isOpen: b,
              children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
                Ue,
                {
                  "data-testid": "filter-type-dropdown-item",
                  children: o(p === "Name" ? "protocol" : "name")
                },
                "filter-type"
              ) })
            }
          ),
          toolbarItem: p === "Protocol" && /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(
              Kt,
              {
                onSelect: () => {
                  w(p);
                },
                onOpenChange: v,
                "data-testid": "filter-type-dropdown",
                toggle: (T) => /* @__PURE__ */ a(
                  ut,
                  {
                    ref: T,
                    id: "toggle-id-9",
                    onClick: v,
                    statusIcon: /* @__PURE__ */ a(jo, {}),
                    icon: /* @__PURE__ */ a(ls, {}),
                    children: p
                  }
                ),
                isOpen: b,
                children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
                  Ue,
                  {
                    "data-testid": "filter-type-dropdown-item",
                    children: o("name")
                  },
                  "filter-type"
                ) })
              }
            ),
            /* @__PURE__ */ a(
              ht,
              {
                className: "kc-protocolType-select",
                "aria-label": o("selectOne"),
                onToggle: C,
                onSelect: (T) => A(T.toString()),
                selections: f,
                isOpen: y,
                children: k
              }
            )
          ] }),
          canSelectAll: !0,
          onSelect: (T) => u(T),
          columns: [
            {
              name: "name"
            },
            {
              name: "protocol",
              displayKey: "protocol",
              cellRenderer: (T) => yl(o, T.protocol ?? "openid-connect")
            },
            {
              name: "description"
            }
          ],
          emptyState: /* @__PURE__ */ a(
            ct,
            {
              message: o("emptyAddClientScopes"),
              instructions: o("emptyAddClientScopesInstructions")
            }
          )
        }
      )
    }
  );
}, Aq = () => {
  const { adminClient: e } = de(), { t } = H(), {
    control: n,
    getValues: r,
    setValue: i,
    formState: { errors: s }
  } = De(), [o, l] = D(!1), [c, d] = D([]), [u, p] = D([]), m = ba();
  return _e(
    () => e.clientScopes.find(),
    (f) => {
      p(
        r("clientScopes").map(
          (g) => f.find((b) => b.id === g.id)
        )
      ), d(m(f, mr("name")));
    },
    []
  ), /* @__PURE__ */ x(
    re,
    {
      label: t("clientScopes"),
      labelIcon: /* @__PURE__ */ a(
        le,
        {
          helpText: t("clientsClientScopesHelp"),
          fieldLabelId: "clientScopes"
        }
      ),
      fieldId: "clientScopes",
      isRequired: !0,
      children: [
        /* @__PURE__ */ a(
          be,
          {
            name: "clientScopes",
            control: n,
            defaultValue: [],
            rules: {
              validate: (f) => f.filter((g) => g.id).length > 0
            },
            render: ({ field: f }) => /* @__PURE__ */ x(te, { children: [
              o && /* @__PURE__ */ a(
                Nk,
                {
                  clientScopes: c.filter(
                    (g) => !f.value.map((b) => b.id).includes(g.id)
                  ),
                  isClientScopesConditionType: !0,
                  open: o,
                  toggleDialog: () => l(!o),
                  onAdd: (g) => {
                    p([
                      ...u,
                      ...g.map((b) => b.scope)
                    ]), f.onChange([
                      ...f.value,
                      ...g.map((b) => b.scope).map((b) => ({ id: b.id, required: !1 }))
                    ]);
                  }
                }
              ),
              /* @__PURE__ */ a(
                z,
                {
                  "data-testid": "select-scope-button",
                  variant: "secondary",
                  onClick: () => {
                    l(!0);
                  },
                  children: t("addClientScopes")
                }
              )
            ] })
          }
        ),
        u.length > 0 && /* @__PURE__ */ x(Cn, { variant: "compact", children: [
          /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
            /* @__PURE__ */ a(Ne, { children: t("clientScopeTitle") }),
            /* @__PURE__ */ a(Ne, { children: t("required") }),
            /* @__PURE__ */ a(Ne, { "aria-hidden": "true" })
          ] }) }),
          /* @__PURE__ */ a(yn, { children: u.map((f, g) => /* @__PURE__ */ x(it, { children: [
            /* @__PURE__ */ a(ke, { children: f.name }),
            /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
              be,
              {
                name: `clientScopes.${g}.required`,
                defaultValue: !1,
                control: n,
                render: ({ field: b }) => /* @__PURE__ */ a(
                  Zt,
                  {
                    id: "required",
                    "data-testid": "standard",
                    name: "required",
                    isChecked: b.value,
                    onChange: b.onChange
                  }
                )
              }
            ) }),
            /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                className: "keycloak__client-authorization__policy-row-remove",
                icon: /* @__PURE__ */ a($i, {}),
                onClick: () => {
                  i("clientScopes", [
                    ...r("clientScopes").filter(
                      (b) => b.id !== f.id
                    )
                  ]), p([
                    ...u.filter((b) => b.id !== f.id)
                  ]);
                }
              }
            ) })
          ] }, f.id)) })
        ] }),
        s.clientScopes && /* @__PURE__ */ a(kn, { message: t("requiredClientScope") })
      ]
    }
  );
}, Lq = () => {
  const { adminClient: e } = de(), { t } = H(), {
    control: n,
    getValues: r,
    setValue: i,
    formState: { errors: s }
  } = De(), o = r("groups"), [l, c] = D(!1), [d, u] = D(
    []
  );
  return _e(
    () => o && o.length > 0 ? Promise.all(
      o.map((p) => e.groups.findOne({ id: p.id }))
    ) : Promise.resolve([]),
    (p) => {
      const m = p.filter((f) => f);
      u(m);
    },
    []
  ), /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "groupsClaim",
        label: t("groupsClaim"),
        labelIcon: t("groupsClaimHelp")
      }
    ),
    /* @__PURE__ */ x(
      re,
      {
        label: t("groups"),
        labelIcon: /* @__PURE__ */ a(le, { helpText: t("policyGroupsHelp"), fieldLabelId: "groups" }),
        fieldId: "groups",
        isRequired: !0,
        children: [
          /* @__PURE__ */ a(
            be,
            {
              name: "groups",
              control: n,
              defaultValue: [],
              rules: {
                validate: (p) => p && p.filter(({ id: m }) => m).length > 0
              },
              render: ({ field: p }) => /* @__PURE__ */ x(te, { children: [
                l && /* @__PURE__ */ a(
                  bl,
                  {
                    type: "selectMany",
                    text: {
                      title: "addGroupsToGroupPolicy",
                      ok: "add"
                    },
                    onConfirm: (m) => {
                      p.onChange([
                        ...p.value || [],
                        ...(m || []).map(({ id: f }) => ({ id: f }))
                      ]), u([...d, ...m || []]), c(!1);
                    },
                    onClose: () => {
                      c(!1);
                    },
                    filterGroups: d
                  }
                ),
                /* @__PURE__ */ a(
                  z,
                  {
                    "data-testid": "select-group-button",
                    variant: "secondary",
                    onClick: () => {
                      c(!0);
                    },
                    children: t("addGroups")
                  }
                )
              ] })
            }
          ),
          d.length > 0 && /* @__PURE__ */ x(Cn, { variant: "compact", children: [
            /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
              /* @__PURE__ */ a(Ne, { children: t("groups") }),
              /* @__PURE__ */ a(Ne, { children: t("extendToChildren") }),
              /* @__PURE__ */ a(Ne, { "aria-hidden": "true" })
            ] }) }),
            /* @__PURE__ */ a(yn, { children: d.map((p, m) => /* @__PURE__ */ x(it, { children: [
              /* @__PURE__ */ a(ke, { children: p.path }),
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
                be,
                {
                  name: `groups.${m}.extendChildren`,
                  defaultValue: !1,
                  control: n,
                  render: ({ field: f }) => /* @__PURE__ */ a(
                    Zt,
                    {
                      id: "extendChildren",
                      "data-testid": "standard",
                      name: "extendChildren",
                      isChecked: f.value,
                      onChange: f.onChange,
                      isDisabled: p.subGroupCount === 0
                    }
                  )
                }
              ) }),
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
                z,
                {
                  variant: "link",
                  className: "keycloak__client-authorization__policy-row-remove",
                  icon: /* @__PURE__ */ a($i, {}),
                  onClick: () => {
                    i("groups", [
                      ...(o || []).filter(({ id: f }) => f !== p.id)
                    ]), u([
                      ...d.filter(({ id: f }) => f !== p.id)
                    ]);
                  }
                }
              ) })
            ] }, p.id)) })
          ] }),
          s.groups && /* @__PURE__ */ a(kn, { message: t("requiredGroups") })
        ]
      }
    )
  ] });
}, Nq = () => {
  const { t: e } = H(), { control: t } = De();
  return /* @__PURE__ */ a(
    re,
    {
      label: e("code"),
      labelIcon: /* @__PURE__ */ a(le, { helpText: e("policyCodeHelp"), fieldLabelId: "code" }),
      fieldId: "code",
      isRequired: !0,
      children: /* @__PURE__ */ a(
        be,
        {
          name: "code",
          defaultValue: "",
          control: t,
          render: ({ field: n }) => /* @__PURE__ */ a(
            fr,
            {
              id: "code",
              "data-testid": "code",
              onChange: n.onChange,
              code: n.value,
              height: "600px",
              language: Ln.javascript,
              isReadOnly: !0
            }
          )
        }
      )
    }
  );
}, ex = ["POSITIVE", "NEGATIVE"], Dq = ({ isDisabled: e }) => {
  const { t } = H(), { control: n } = De();
  return /* @__PURE__ */ a(
    re,
    {
      label: t("logic"),
      labelIcon: /* @__PURE__ */ a(le, { helpText: t("logicHelp"), fieldLabelId: "logic" }),
      fieldId: "logic",
      hasNoPaddingTop: !0,
      children: /* @__PURE__ */ a(
        be,
        {
          name: "logic",
          "data-testid": "logic",
          defaultValue: ex[0],
          control: n,
          render: ({ field: r }) => /* @__PURE__ */ a(te, { children: ex.map((i) => /* @__PURE__ */ a(
            sn,
            {
              id: i,
              "data-testid": i,
              isChecked: r.value === i,
              name: "logic",
              onChange: () => r.onChange(i),
              label: t(`logicType.${i.toLowerCase()}`),
              className: "pf-v5-u-mb-md",
              isDisabled: e
            },
            i
          )) })
        }
      )
    }
  );
}, Mq = ({ isDisabled: e }) => {
  const { t } = H();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "name",
        label: t("name"),
        rules: { required: t("required") },
        isDisabled: e
      }
    ),
    /* @__PURE__ */ a(
      pr,
      {
        name: "description",
        label: t("description"),
        rules: {
          maxLength: { message: t("maxLength", { length: 255 }), value: 255 }
        },
        isDisabled: e
      }
    )
  ] });
}, Fq = () => {
  const { t: e } = H();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "targetClaim",
        label: e("targetClaim"),
        labelIcon: e("targetClaimHelp"),
        rules: { required: e("required") }
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "pattern",
        label: e("regexPattern"),
        labelIcon: e("regexPatternHelp"),
        rules: { required: e("required") }
      }
    ),
    /* @__PURE__ */ a(
      ro,
      {
        name: "targetContextAttributes",
        label: e("targetContextAttributes"),
        labelIcon: e("targetContextAttributesHelp"),
        labelOn: e("yes"),
        labelOff: e("no")
      }
    )
  ] });
}, $q = () => {
  const { adminClient: e } = de(), { t } = H(), {
    control: n,
    getValues: r,
    setValue: i,
    formState: { errors: s }
  } = De(), o = r("roles"), [l, c] = D(!1), [d, u] = D([]);
  return _e(
    async () => {
      if (o && o.length > 0) {
        const p = await Promise.all(
          o.map((m) => e.roles.findOneById({ id: m.id }))
        );
        return Promise.all(
          p.map(async (m) => ({
            role: m,
            client: m.clientRole ? await e.clients.findOne({
              id: m?.containerId
            }) : void 0
          }))
        );
      }
      return Promise.resolve([]);
    },
    u,
    []
  ), /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ x(
      re,
      {
        label: t("roles"),
        labelIcon: /* @__PURE__ */ a(le, { helpText: t("policyRolesHelp"), fieldLabelId: "roles" }),
        fieldId: "roles",
        isRequired: !0,
        children: [
          /* @__PURE__ */ a(
            be,
            {
              name: "roles",
              control: n,
              defaultValue: [],
              rules: {
                validate: (p) => p && p.filter((m) => m.id).length > 0
              },
              render: ({ field: p }) => /* @__PURE__ */ x(te, { children: [
                l && /* @__PURE__ */ a(
                  xp,
                  {
                    id: "role",
                    type: "roles",
                    onAssign: (m) => {
                      p.onChange([
                        ...p.value || [],
                        ...m.map((f) => ({ id: f.role.id }))
                      ]), u([...d, ...m]), c(!1);
                    },
                    onClose: () => {
                      c(!1);
                    },
                    isLDAPmapper: !0
                  }
                ),
                /* @__PURE__ */ a(
                  z,
                  {
                    "data-testid": "select-role-button",
                    variant: "secondary",
                    onClick: () => {
                      c(!0);
                    },
                    children: t("addRoles")
                  }
                )
              ] })
            }
          ),
          d.length > 0 && /* @__PURE__ */ x(Cn, { variant: "compact", children: [
            /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
              /* @__PURE__ */ a(Ne, { children: t("roles") }),
              /* @__PURE__ */ a(Ne, { children: t("required") }),
              /* @__PURE__ */ a(Ne, { "aria-hidden": "true" })
            ] }) }),
            /* @__PURE__ */ a(yn, { children: d.map((p, m) => /* @__PURE__ */ x(it, { children: [
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(Cp, { role: p.role, client: p.client }) }),
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
                be,
                {
                  name: `roles.${m}.required`,
                  defaultValue: !1,
                  control: n,
                  render: ({ field: f }) => /* @__PURE__ */ a(
                    Zt,
                    {
                      id: "required",
                      "data-testid": "standard",
                      name: "required",
                      isChecked: f.value,
                      onChange: f.onChange
                    }
                  )
                }
              ) }),
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
                z,
                {
                  variant: "link",
                  className: "keycloak__client-authorization__policy-row-remove",
                  icon: /* @__PURE__ */ a($i, {}),
                  onClick: () => {
                    i("roles", [
                      ...(o || []).filter((f) => f.id !== p.role.id)
                    ]), u([
                      ...d.filter(
                        (f) => f.role.id !== p.role.id
                      )
                    ]);
                  }
                }
              ) })
            ] }, p.role.id)) })
          ] }),
          s.roles && /* @__PURE__ */ a(kn, { message: t("requiredRoles") })
        ]
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "fetchRoles",
        label: t("fetchRoles"),
        labelIcon: t("fetchRolesHelp")
      }
    )
  ] });
}, Vm = /(\d\d\d\d-\d\d-\d\d)? (\d\d?):(\d\d?)/, tx = (e) => e.toString().padStart(2, "0"), nx = ({ name: e }) => {
  const { control: t } = De(), n = (i, s) => {
    if (!s)
      return i;
    const o = Vm.exec(i);
    return `${[
      s.getFullYear(),
      tx(s.getMonth() + 1),
      tx(s.getDate())
    ].join("-")} ${o ? o[2] : "00"}:${o ? o[3] : "00"}:00`;
  }, r = (i, s, o) => {
    const l = Vm.exec(i);
    return o != null ? `${l ? l[1] : ""} ${s}:${o < 10 ? `0${o}` : o}:00` : i;
  };
  return /* @__PURE__ */ a(
    be,
    {
      name: e,
      defaultValue: "",
      control: t,
      rules: { required: !0 },
      render: ({ field: i }) => {
        const s = i.value.match(Vm) || [
          "",
          "",
          "0",
          "00"
        ];
        return /* @__PURE__ */ x(ca, { hasGutter: !0, id: e, children: [
          /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(
            Bo,
            {
              value: s[1],
              onChange: (o, l, c) => {
                i.onChange(n(i.value, c));
              }
            }
          ) }),
          /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(
            Jh,
            {
              time: `${s[2]}:${s[3]}`,
              onChange: (o, l, c, d) => i.onChange(r(i.value, c, d)),
              is24Hour: !0
            }
          ) })
        ] });
      }
    }
  );
}, ax = ({ name: e, min: t, max: n }) => {
  const { control: r } = De(), i = (s) => Math.min(s, n);
  return /* @__PURE__ */ a(
    be,
    {
      name: e,
      defaultValue: "",
      control: r,
      render: ({ field: s }) => /* @__PURE__ */ a(
        os,
        {
          id: e,
          value: s.value,
          min: t,
          max: n,
          onPlus: () => s.onChange(Number(s.value) + 1),
          onMinus: () => s.onChange(Number(s.value) - 1),
          onChange: (o) => {
            const l = Number(o.currentTarget.value);
            s.onChange(i(isNaN(l) ? 0 : l));
          }
        }
      )
    }
  );
}, Ed = ({ name: e, ...t }) => {
  const { t: n } = H();
  return /* @__PURE__ */ a(
    re,
    {
      label: n(e),
      fieldId: e,
      labelIcon: /* @__PURE__ */ a(le, { helpText: n(`${e}Help`), fieldLabelId: e }),
      children: /* @__PURE__ */ x(ca, { hasGutter: !0, children: [
        /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(ax, { name: e, ...t }) }),
        /* @__PURE__ */ a($t, { children: n("to") }),
        /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(ax, { name: `${e}End`, ...t }) })
      ] })
    }
  );
}, jq = () => {
  const { t: e } = H(), {
    getValues: t,
    formState: { errors: n }
  } = De(), [r, i] = D(t("month"));
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      re,
      {
        label: e("repeat"),
        fieldId: "repeat",
        labelIcon: /* @__PURE__ */ a(le, { helpText: e("repeatHelp"), fieldLabelId: "repeat" }),
        children: /* @__PURE__ */ x(Qn, { children: [
          /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
            sn,
            {
              id: "notRepeat",
              "data-testid": "notRepeat",
              isChecked: !r,
              name: "repeat",
              onChange: () => i(!1),
              label: e("notRepeat"),
              className: "pf-v5-u-mb-md"
            }
          ) }),
          /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
            sn,
            {
              id: "repeat",
              "data-testid": "repeat",
              isChecked: r,
              name: "repeat",
              onChange: () => i(!0),
              label: e("repeat"),
              className: "pf-v5-u-mb-md"
            }
          ) })
        ] })
      }
    ),
    r && /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a(Ed, { name: "month", min: 1, max: 12 }),
      /* @__PURE__ */ a(Ed, { name: "dayMonth", min: 1, max: 31 }),
      /* @__PURE__ */ a(Ed, { name: "hour", min: 0, max: 23 }),
      /* @__PURE__ */ a(Ed, { name: "minute", min: 0, max: 59 })
    ] }),
    /* @__PURE__ */ x(
      re,
      {
        label: e("startTime"),
        fieldId: "notBefore",
        labelIcon: /* @__PURE__ */ a(le, { helpText: e("startTimeHelp"), fieldLabelId: "startTime" }),
        isRequired: !0,
        children: [
          /* @__PURE__ */ a(nx, { name: "notBefore" }),
          n.notBefore && /* @__PURE__ */ a(kn, { message: e("required") })
        ]
      }
    ),
    /* @__PURE__ */ x(
      re,
      {
        label: e("expireTime"),
        fieldId: "notOnOrAfter",
        labelIcon: /* @__PURE__ */ a(le, { helpText: e("expireTimeHelp"), fieldLabelId: "expireTime" }),
        isRequired: !0,
        children: [
          /* @__PURE__ */ a(nx, { name: "notOnOrAfter" }),
          n.notOnOrAfter && /* @__PURE__ */ a(kn, { message: e("required") })
        ]
      }
    )
  ] });
}, tb = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  isRequired: i,
  variant: s = "typeaheadMulti"
}) => {
  const { adminClient: o } = de(), { t: l } = H(), {
    control: c,
    getValues: d,
    formState: { errors: u }
  } = De(), p = d(e), [m, f, g] = st(), [b, v] = D([]), [y, C] = D(""), [S, P] = D(""), w = Ct(), A = bn(Cg(P, 1e3), []);
  _e(
    () => {
      const T = {
        max: 20
      };
      return S && (T.username = S), p?.length && !S ? Promise.all(
        p.map((O) => o.users.findOne({ id: O }))
      ) : o.users.find(T);
    },
    v,
    [S]
  );
  const k = (T) => T.filter((O) => O !== void 0).map((O) => /* @__PURE__ */ a(
    Re,
    {
      value: O.id,
      selected: p?.includes(O.id),
      children: O.username
    },
    O.id
  ));
  return /* @__PURE__ */ x(
    re,
    {
      label: l(t),
      isRequired: i,
      labelIcon: /* @__PURE__ */ a(le, { helpText: n, fieldLabelId: t }),
      fieldId: e,
      children: [
        /* @__PURE__ */ a(
          be,
          {
            name: e,
            defaultValue: r,
            control: c,
            rules: i && s === "typeaheadMulti" ? { validate: (T) => T.length > 0 } : { required: i },
            render: ({ field: T }) => /* @__PURE__ */ a(
              Dn,
              {
                id: e,
                onOpenChange: f,
                toggle: (O) => /* @__PURE__ */ a(
                  ut,
                  {
                    "data-testid": e,
                    ref: O,
                    variant: "typeahead",
                    onClick: f,
                    isExpanded: m,
                    isFullWidth: !0,
                    status: u[e] ? "danger" : void 0,
                    children: /* @__PURE__ */ x(zs, { isPlain: !0, children: [
                      /* @__PURE__ */ a(
                        qs,
                        {
                          value: y,
                          onClick: f,
                          onChange: (I, _) => {
                            g(!0), C(_), A(_);
                          },
                          autoComplete: "off",
                          innerRef: w,
                          placeholderText: l("selectAUser"),
                          ...T.value && {
                            "aria-activedescendant": T.value
                          },
                          role: "combobox",
                          isExpanded: m,
                          "aria-controls": "select-create-typeahead-listbox",
                          children: s === "typeaheadMulti" && Array.isArray(T.value) && /* @__PURE__ */ a(vn, { "aria-label": "Current selections", children: T.value.map(
                            (I, _) => /* @__PURE__ */ a(
                              Vt,
                              {
                                onClick: (E) => {
                                  E.stopPropagation(), T.onChange(
                                    T.value.filter(
                                      (L) => L !== I
                                    )
                                  );
                                },
                                children: b.find((E) => E?.id === I)?.username
                              },
                              _
                            )
                          ) })
                        }
                      ),
                      /* @__PURE__ */ a(Gs, { children: !!S && /* @__PURE__ */ a(
                        z,
                        {
                          variant: "plain",
                          onClick: () => {
                            C(""), P(""), T.onChange([]), w?.current?.focus();
                          },
                          "aria-label": "Clear input value",
                          children: /* @__PURE__ */ a(fa, { "aria-hidden": !0 })
                        }
                      ) })
                    ] })
                  }
                ),
                isOpen: m,
                selected: T.value,
                onSelect: (O, I) => {
                  const _ = I?.toString();
                  if (s !== "typeaheadMulti") {
                    const E = T.value.includes(_);
                    E ? T.onChange([]) : T.onChange([_]), C(
                      E ? "" : b.find((L) => L?.id === _)?.username || ""
                    ), g(!1);
                  } else {
                    const E = T.value.find(
                      (L) => L === _
                    ) ? T.value.filter((L) => L !== _) : [...T.value, _];
                    T.onChange(E);
                  }
                },
                "aria-label": l(e),
                children: /* @__PURE__ */ a(ea, { children: k(b) })
              }
            )
          }
        ),
        u[e] && /* @__PURE__ */ a(kn, { message: l("required") })
      ]
    }
  );
}, Bq = () => {
  const { t: e } = H();
  return /* @__PURE__ */ a(
    tb,
    {
      name: "users",
      label: "users",
      helpText: e("policyUsers"),
      defaultValue: [],
      variant: "typeaheadMulti",
      isRequired: !0
    }
  );
}, Qf = {
  aggregate: _q,
  client: Rq,
  user: Bq,
  "client-scope": Aq,
  group: Lq,
  regex: Fq,
  role: $q,
  time: jq,
  js: Nq
}, nb = (e) => e in Qf;
function Uq() {
  const { adminClient: e } = de(), { t } = H(), { id: n, realm: r, policyId: i, policyType: s } = zt(), o = Xe(), l = Ke(), { reset: c, handleSubmit: d } = l, { addAlert: u, addError: p } = we(), [m, f] = D(), g = s === "js";
  _e(
    async () => {
      if (i) {
        const P = await Promise.all([
          e.clients.findOnePolicy({
            id: n,
            type: s,
            policyId: i
          }),
          e.clients.getAssociatedPolicies({
            id: n,
            permissionId: i
          })
        ]);
        if (!P[0])
          throw new Error(t("notFound"));
        return {
          policy: P[0],
          policies: P[1].map((w) => w.id)
        };
      }
      return {};
    },
    ({ policy: P, policies: w }) => {
      c({ ...P, policies: w }), f(P);
    },
    [n, s, i]
  );
  const b = async (P) => {
    P.groups = P.groups?.filter((w) => w.id), P.clientScopes = P.clientScopes?.filter((w) => w.id), P.roles = P.roles?.filter((w) => w.id).map((w) => ({ ...w, required: w.required || !1 }));
    try {
      if (i)
        await e.clients.updatePolicy(
          { id: n, type: s, policyId: i },
          P
        );
      else {
        const w = await e.clients.createPolicy(
          { id: n, type: s },
          P
        );
        o(
          rd({
            realm: r,
            id: n,
            policyType: s,
            policyId: w.id
          })
        );
      }
      u(
        t((i ? "update" : "create") + "PolicySuccess"),
        pe.success
      );
    } catch (w) {
      p("policySaveError", w);
    }
  }, [v, y] = Ve({
    titleKey: "deletePolicy",
    messageKey: "deletePolicyConfirm",
    continueButtonLabel: "confirm",
    onConfirm: async () => {
      try {
        await e.clients.delPolicy({
          id: n,
          policyId: i
        }), u(t("policyDeletedSuccess"), pe.success), o(Ru({ realm: r, clientId: n, tab: "policies" }));
      } catch (P) {
        p("policyDeletedError", P);
      }
    }
  });
  if (i && !m)
    return /* @__PURE__ */ a(bt, {});
  function C() {
    return nb(s) ? Qf[s] : Qf.js;
  }
  const S = C();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(y, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: i ? m?.name : t("createPolicyOfType", { policyType: s }),
        dropdownItems: i ? [
          /* @__PURE__ */ a(
            Ue,
            {
              "data-testid": "delete-policy",
              onClick: () => v(),
              children: t("delete")
            },
            "delete"
          )
        ] : void 0
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ x(
      je,
      {
        isHorizontal: !0,
        onSubmit: d(b),
        role: "anyone",
        children: [
          /* @__PURE__ */ x(He, { ...l, children: [
            /* @__PURE__ */ a(Mq, { isDisabled: g }),
            /* @__PURE__ */ a(S, {}),
            /* @__PURE__ */ a(Dq, { isDisabled: g })
          ] }),
          /* @__PURE__ */ a(ot, { children: /* @__PURE__ */ x("div", { className: "pf-v5-u-mt-md", children: [
            /* @__PURE__ */ a(
              z,
              {
                isDisabled: g,
                variant: xe.primary,
                className: "pf-v5-u-mr-md",
                type: "submit",
                "data-testid": "save",
                children: t("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                "data-testid": "cancel",
                component: (P) => /* @__PURE__ */ a(
                  Ae,
                  {
                    ...P,
                    to: Ru({
                      realm: r,
                      clientId: n,
                      tab: "policies"
                    })
                  }
                ),
                children: t("cancel")
              }
            )
          ] }) })
        ]
      }
    ) })
  ] });
}
const Dk = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Uq,
  isValidComponentType: nb
}, Symbol.toStringTag, { value: "Module" })), eh = ({
  policyProviders: e,
  onSelect: t,
  toggleDialog: n
}) => {
  const { t: r } = H(), i = ba(), s = nt(
    () => e ? i(e, mr("name")) : [],
    [e]
  );
  return /* @__PURE__ */ a(
    ft,
    {
      "aria-label": r("createPolicy"),
      variant: Et.medium,
      header: /* @__PURE__ */ x(Rt, { children: [
        /* @__PURE__ */ a(tt, { component: Qt.h1, children: r("chooseAPolicyType") }),
        /* @__PURE__ */ a(tt, { children: r("chooseAPolicyTypeInstructions") })
      ] }),
      isOpen: !0,
      onClose: n,
      children: /* @__PURE__ */ x(Cn, { "aria-label": r("policies"), variant: "compact", children: [
        /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
          /* @__PURE__ */ a(Ne, { children: r("name") }),
          /* @__PURE__ */ a(Ne, { children: r("description") })
        ] }) }),
        /* @__PURE__ */ a(yn, { children: s.map((o) => /* @__PURE__ */ x(
          it,
          {
            "data-testid": o.type,
            onRowClick: () => t(o),
            isClickable: !0,
            children: [
              /* @__PURE__ */ a(ke, { children: o.name }),
              /* @__PURE__ */ a(ke, { style: { textWrap: "wrap" }, children: nb(o.type) && r(`policyProvider.${o.type}`) })
            ]
          },
          o.type
        )) })
      ] })
    }
  );
}, Vq = ({
  row: e
}) => /* @__PURE__ */ x(te, { children: [
  e.dependentPolicies?.[0]?.name,
  " ",
  /* @__PURE__ */ a(Qg, { array: e.dependentPolicies })
] }), Kq = ({
  clientId: e,
  isDisabled: t = !1
}) => {
  const { adminClient: n } = de(), { t: r } = H(), { addAlert: i, addError: s } = we(), { realm: o } = ye(), l = Xe(), [c, d] = D(), [u, p] = D(), [m, f] = D(), [g, b] = D(0), v = () => b(g + 1), [y, C] = D(10), [S, P] = D(0), [w, A] = D({}), [k, T] = st();
  _e(
    async () => {
      const L = await n.clients.listPolicies({
        first: S,
        max: y + 1,
        id: e,
        permission: "false",
        ...w
      });
      return await Promise.all([
        n.clients.listPolicyProviders({ id: e }),
        ...(L || []).map(async (F) => {
          const R = await n.clients.listDependentPolicies({
            id: e,
            policyId: F.id
          });
          return {
            ...F,
            dependentPolicies: R,
            isExpanded: !1
          };
        })
      ]);
    },
    ([L, ...F]) => {
      f(
        L.filter((R) => R.type !== "resource" && R.type !== "scope")
      ), d(F);
    },
    [g, w, S, y]
  );
  const [O, I] = Ve({
    titleKey: "deletePolicy",
    children: /* @__PURE__ */ x(te, { children: [
      r("deletePolicyConfirm"),
      u?.dependentPolicies && u.dependentPolicies.length > 0 && /* @__PURE__ */ a(
        En,
        {
          variant: "warning",
          isInline: !0,
          isPlain: !0,
          component: "p",
          title: r("deletePolicyWarning"),
          className: "pf-v5-u-pt-lg",
          children: /* @__PURE__ */ a("p", { className: "pf-v5-u-pt-xs", children: u.dependentPolicies.map((L) => /* @__PURE__ */ a("strong", { className: "pf-v5-u-pr-md", children: L.name }, L.id)) })
        }
      )
    ] }),
    continueButtonLabel: "confirm",
    onConfirm: async () => {
      try {
        await n.clients.delPolicy({
          id: e,
          policyId: u?.id
        }), i(r("policyDeletedSuccess"), pe.success), v();
      } catch (L) {
        s("policyDeletedError", L);
      }
    }
  });
  if (!c)
    return /* @__PURE__ */ a(bt, {});
  const _ = c.length === 0, E = Object.keys(w).length !== 0;
  return /* @__PURE__ */ x(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
    /* @__PURE__ */ a(I, {}),
    (!_ || E) && /* @__PURE__ */ x(te, { children: [
      k && /* @__PURE__ */ a(
        eh,
        {
          policyProviders: m,
          onSelect: (L) => l(
            Zf({ id: e, realm: o, policyType: L.type })
          ),
          toggleDialog: T
        }
      ),
      /* @__PURE__ */ a(
        Ui,
        {
          count: c.length,
          first: S,
          max: y,
          onNextClick: P,
          onPreviousClick: P,
          onPerPageSelect: (L, F) => {
            P(L), C(F);
          },
          toolbarItem: /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
              eb,
              {
                types: m,
                search: w,
                onSearch: A,
                type: "policy"
              }
            ) }),
            /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
              z,
              {
                "data-testid": "createPolicy",
                onClick: T,
                isDisabled: t,
                children: r("createPolicy")
              }
            ) })
          ] }),
          children: !_ && /* @__PURE__ */ x(Cn, { "aria-label": r("resources"), variant: "compact", children: [
            /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
              /* @__PURE__ */ a(Ne, { "aria-hidden": "true" }),
              /* @__PURE__ */ a(Ne, { children: r("name") }),
              /* @__PURE__ */ a(Ne, { children: r("type") }),
              /* @__PURE__ */ a(Ne, { children: r("dependentPermission") }),
              /* @__PURE__ */ a(Ne, { children: r("description") }),
              /* @__PURE__ */ a(Ne, { "aria-hidden": "true" })
            ] }) }),
            c.map((L, F) => /* @__PURE__ */ x(yn, { isExpanded: L.isExpanded, children: [
              /* @__PURE__ */ x(it, { children: [
                /* @__PURE__ */ a(
                  ke,
                  {
                    expand: {
                      rowIndex: F,
                      isExpanded: L.isExpanded,
                      onToggle: (R, M) => {
                        const U = c.map(
                          (K, G) => G === M ? { ...K, isExpanded: !K.isExpanded } : K
                        );
                        d(U);
                      }
                    }
                  }
                ),
                /* @__PURE__ */ a(ke, { "data-testid": `name-column-${L.name}`, children: /* @__PURE__ */ a(
                  Ae,
                  {
                    to: rd({
                      realm: o,
                      id: e,
                      policyType: L.type,
                      policyId: L.id
                    }),
                    children: L.name
                  }
                ) }),
                /* @__PURE__ */ a(ke, { children: Ia(L.type) }),
                /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(Vq, { row: L }) }),
                /* @__PURE__ */ a(ke, { children: L.description }),
                !t && /* @__PURE__ */ a(
                  ke,
                  {
                    actions: {
                      items: [
                        {
                          title: r("delete"),
                          onClick: () => {
                            p(L), O();
                          }
                        }
                      ]
                    }
                  }
                )
              ] }),
              /* @__PURE__ */ x(
                it,
                {
                  isExpanded: L.isExpanded,
                  children: [
                    /* @__PURE__ */ a(ke, {}),
                    /* @__PURE__ */ a(ke, { colSpan: 3 + (t ? 0 : 1), children: /* @__PURE__ */ a(ms, { children: L.isExpanded && /* @__PURE__ */ a(
                      ir,
                      {
                        isHorizontal: !0,
                        className: "keycloak_resource_details",
                        children: /* @__PURE__ */ a(
                          Us,
                          {
                            name: "dependentPermission",
                            array: L.dependentPolicies,
                            convert: (R) => R.name,
                            link: (R) => Bs({
                              realm: o,
                              id: e,
                              permissionId: R.id,
                              permissionType: R.type
                            })
                          }
                        )
                      }
                    ) }) })
                  ]
                },
                `child-${L.id}`
              )
            ] }, L.id))
          ] })
        }
      )
    ] }),
    _ && E && /* @__PURE__ */ a(
      ct,
      {
        isSearchVariant: !0,
        isDisabled: t,
        message: r("noSearchResults"),
        instructions: r("noSearchResultsInstructions")
      }
    ),
    _ && !E && /* @__PURE__ */ x(te, { children: [
      k && /* @__PURE__ */ a(
        eh,
        {
          policyProviders: m?.filter(
            (L) => L.type !== "aggregate"
          ),
          onSelect: (L) => l(
            Zf({ id: e, realm: o, policyType: L.type })
          ),
          toggleDialog: T
        }
      ),
      /* @__PURE__ */ a(
        ct,
        {
          message: r("emptyPolicies"),
          instructions: r("emptyPoliciesInstructions"),
          isDisabled: t,
          primaryActionText: r("createPolicy"),
          onPrimaryAction: T
        }
      )
    ] })
  ] });
}, rx = ({
  permissionType: e,
  disabled: t = !1,
  clientId: n
}) => {
  const { t: r } = H(), { realm: i } = ye(), s = Xe();
  return /* @__PURE__ */ a(
    z,
    {
      "data-testid": `create-${e}`,
      className: t ? "keycloak__permissions__empty_state " : "pf-v5-u-m-sm",
      variant: "secondary",
      onClick: () => !t && s(Lc({ realm: i, id: n, permissionType: e })),
      children: r(`create${Ia(e)}BasedPermission`)
    }
  );
}, ix = ({
  permissionType: e,
  disabled: t,
  ...n
}) => {
  const { t: r } = H();
  return t ? /* @__PURE__ */ a(Ht, { content: r(`no${Ia(e)}CreateHint`), children: /* @__PURE__ */ a(
    rx,
    {
      ...n,
      disabled: t,
      permissionType: e
    }
  ) }) : /* @__PURE__ */ a(
    rx,
    {
      ...n,
      disabled: t,
      permissionType: e
    }
  );
}, Hq = ({
  clientId: e,
  isResourceEnabled: t,
  isScopeEnabled: n
}) => {
  const { t: r } = H();
  return /* @__PURE__ */ x(Pr, { "data-testid": "empty-state", variant: "lg", children: [
    /* @__PURE__ */ a(
      Ei,
      {
        titleText: /* @__PURE__ */ a(te, { children: r("emptyPermissions") }),
        icon: /* @__PURE__ */ a(As, { icon: _a }),
        headingLevel: "h1"
      }
    ),
    /* @__PURE__ */ a(Di, { children: r("emptyPermissionInstructions") }),
    /* @__PURE__ */ x(ss, { children: [
      /* @__PURE__ */ a(
        ix,
        {
          permissionType: "resource",
          disabled: t,
          clientId: e
        }
      ),
      /* @__PURE__ */ a("br", {}),
      /* @__PURE__ */ a(
        ix,
        {
          permissionType: "scope",
          disabled: n,
          clientId: e
        }
      )
    ] })
  ] });
}, zq = ({
  row: e
}) => /* @__PURE__ */ x(te, { children: [
  e.associatedPolicies?.[0]?.name || "—",
  " ",
  /* @__PURE__ */ a(Qg, { array: e.associatedPolicies })
] }), qq = ({
  clientId: e,
  isDisabled: t = !1
}) => {
  const { adminClient: n } = de(), { t: r } = H(), i = Xe(), { addAlert: s, addError: o } = we(), { realm: l } = ye(), [c, d] = D(), [u, p] = D(), [m, f] = D(), [g, b] = D(), [v, y] = st(), [C, S] = D({}), [P, w] = D(0), A = () => w(P + 1), [k, T] = D(10), [O, I] = D(0);
  _e(
    async () => {
      const R = await n.clients.findPermissions({
        first: O,
        max: k + 1,
        id: e,
        ...C
      });
      return await Promise.all(
        R.map(async (M) => {
          const U = await n.clients.getAssociatedPolicies({
            id: e,
            permissionId: M.id
          });
          return {
            ...M,
            associatedPolicies: U,
            isExpanded: !1
          };
        })
      );
    },
    d,
    [P, C, O, k]
  ), _e(
    async () => {
      const R = {
        first: 0,
        max: 1
      }, [M, U, K] = await Promise.all([
        n.clients.listPolicyProviders({
          id: e
        }),
        n.clients.listResources({ ...R, id: e }),
        n.clients.listAllScopes({ ...R, id: e })
      ]);
      return {
        policies: M.filter(
          (G) => G.type === "resource" || G.type === "scope"
        ),
        resources: U.length !== 1,
        scopes: K.length !== 1
      };
    },
    ({ policies: R, resources: M, scopes: U }) => {
      f(R), b({ resources: M, scopes: U });
    },
    []
  );
  const [_, E] = Ve({
    titleKey: "deletePermission",
    messageKey: r("deletePermissionConfirm", {
      permission: u?.name
    }),
    continueButtonVariant: xe.danger,
    continueButtonLabel: "confirm",
    onConfirm: async () => {
      try {
        await n.clients.delPermission({
          id: e,
          type: u?.type,
          permissionId: u?.id
        }), s(r("permissionDeletedSuccess"), pe.success), A();
      } catch (R) {
        o("permissionDeletedError", R);
      }
    }
  });
  if (!c)
    return /* @__PURE__ */ a(bt, {});
  const L = c.length === 0, F = Object.keys(C).length !== 0;
  return /* @__PURE__ */ x(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
    /* @__PURE__ */ a(E, {}),
    (!L || F) && /* @__PURE__ */ a(
      Ui,
      {
        count: c.length,
        first: O,
        max: k,
        onNextClick: I,
        onPreviousClick: I,
        onPerPageSelect: (R, M) => {
          I(R), T(M);
        },
        toolbarItem: /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            eb,
            {
              types: m,
              search: C,
              onSearch: S,
              type: "permission"
            }
          ) }),
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            Kt,
            {
              onOpenChange: y,
              toggle: (R) => /* @__PURE__ */ a(
                ut,
                {
                  ref: R,
                  onClick: y,
                  isDisabled: t,
                  variant: "primary",
                  "data-testid": "permissionCreateDropdown",
                  children: r("createPermission")
                }
              ),
              isOpen: v,
              children: /* @__PURE__ */ x(Xt, { children: [
                /* @__PURE__ */ a(
                  Ue,
                  {
                    "data-testid": "create-resource",
                    isDisabled: t || g?.resources,
                    component: "button",
                    onClick: () => i(
                      Lc({
                        realm: l,
                        id: e,
                        permissionType: "resource"
                      })
                    ),
                    children: r("createResourceBasedPermission")
                  }
                ),
                /* @__PURE__ */ a(Pt, {}),
                /* @__PURE__ */ x(
                  Ue,
                  {
                    "data-testid": "create-scope",
                    isDisabled: t || g?.scopes,
                    component: "button",
                    onClick: () => i(
                      Lc({
                        realm: l,
                        id: e,
                        permissionType: "scope"
                      })
                    ),
                    children: [
                      r("createScopeBasedPermission"),
                      g?.scopes && /* @__PURE__ */ a(
                        En,
                        {
                          className: "pf-v5-u-mt-sm",
                          variant: "warning",
                          isInline: !0,
                          isPlain: !0,
                          title: r("noScopeCreateHint")
                        }
                      )
                    ]
                  }
                )
              ] })
            }
          ) })
        ] }),
        children: !L && /* @__PURE__ */ x(Cn, { "aria-label": r("resources"), variant: "compact", children: [
          /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
            /* @__PURE__ */ a(Ne, { "aria-hidden": "true" }),
            /* @__PURE__ */ a(Ne, { children: r("name") }),
            /* @__PURE__ */ a(Ne, { children: r("type") }),
            /* @__PURE__ */ a(Ne, { children: r("associatedPolicy") }),
            /* @__PURE__ */ a(Ne, { children: r("description") }),
            /* @__PURE__ */ a(Ne, { "aria-hidden": "true" })
          ] }) }),
          c.map((R, M) => /* @__PURE__ */ x(yn, { isExpanded: R.isExpanded, children: [
            /* @__PURE__ */ x(it, { children: [
              /* @__PURE__ */ a(
                ke,
                {
                  expand: {
                    rowIndex: M,
                    isExpanded: R.isExpanded,
                    onToggle: (U, K) => {
                      const G = c.map(
                        (N, $) => $ === K ? { ...N, isExpanded: !N.isExpanded } : N
                      );
                      d(G);
                    }
                  }
                }
              ),
              /* @__PURE__ */ a(ke, { "data-testid": `name-column-${R.name}`, children: /* @__PURE__ */ a(
                Ae,
                {
                  to: Bs({
                    realm: l,
                    id: e,
                    permissionType: R.type,
                    permissionId: R.id
                  }),
                  children: R.name
                }
              ) }),
              /* @__PURE__ */ a(ke, { children: m?.find((U) => U.type === R.type)?.name }),
              /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(zq, { row: R }) }),
              /* @__PURE__ */ a(ke, { children: R.description || "—" }),
              /* @__PURE__ */ a(
                ke,
                {
                  actions: {
                    items: [
                      {
                        title: r("delete"),
                        onClick: async () => {
                          p(R), _();
                        }
                      }
                    ]
                  }
                }
              )
            ] }),
            /* @__PURE__ */ x(
              it,
              {
                isExpanded: R.isExpanded,
                children: [
                  /* @__PURE__ */ a(ke, {}),
                  /* @__PURE__ */ a(ke, { colSpan: 5, children: /* @__PURE__ */ a(ms, { children: R.isExpanded && /* @__PURE__ */ a(
                    ir,
                    {
                      isHorizontal: !0,
                      className: "keycloak_resource_details",
                      children: /* @__PURE__ */ a(
                        Us,
                        {
                          name: "associatedPolicy",
                          array: R.associatedPolicies,
                          convert: (U) => U.name,
                          link: (U) => rd({
                            id: e,
                            realm: l,
                            policyId: U.id,
                            policyType: U.type
                          })
                        }
                      )
                    }
                  ) }) })
                ]
              },
              `child-${R.id}`
            )
          ] }, R.id))
        ] })
      }
    ),
    L && !F && /* @__PURE__ */ a(
      Hq,
      {
        clientId: e,
        isResourceEnabled: !t && g?.resources,
        isScopeEnabled: !t && g?.scopes
      }
    ),
    L && F && /* @__PURE__ */ a(
      ct,
      {
        isSearchVariant: !0,
        message: r("noSearchResults"),
        instructions: r("noSearchResultsInstructions")
      }
    )
  ] });
}, Mk = ({
  permissionNeeded: e
}) => {
  const { t } = H(), n = Array.isArray(e) ? e : [e];
  return /* @__PURE__ */ x(Te, { children: [
    t("forbidden", { count: n.length }),
    " ",
    n.map((r) => r.toString()).join(", ")
  ] });
}, Gq = ({
  name: e,
  rowIndex: t,
  attribute: n,
  selectableValues: r,
  resources: i
}) => {
  const { t: s } = H(), { control: o, register: l, getValues: c } = De(), [d, u] = D([!1]), p = (b, v) => {
    const y = [...d];
    y[b] = v, u(y);
  }, m = nt(() => {
    let b = [];
    return r && (b = ik.find(
      (v) => v.key === c().context?.[t]?.key
    )?.values), b;
  }, [c]), f = () => {
    const b = i?.find(
      (v) => v.name === c().resources?.[t]?.key
    )?.scopes;
    if (m?.length && !i)
      return m.map((v) => /* @__PURE__ */ a(Re, { value: v.key, children: v.name }, v.key));
    if (b?.length)
      return b.map((v) => /* @__PURE__ */ a(Re, { value: v.name, children: v.name }, v.name));
  }, g = (b) => Rf(b).replace(/\W/g, "");
  return /* @__PURE__ */ a(ke, { children: i || m?.length ? /* @__PURE__ */ a(
    be,
    {
      name: `${e}.${t}.value`,
      defaultValue: [],
      control: o,
      render: ({ field: b }) => /* @__PURE__ */ a(
        ht,
        {
          toggleId: `${n.id}-value`,
          className: "kc-attribute-value-selectable",
          chipGroupProps: {
            numChips: 1,
            expandedText: s("hide"),
            collapsedText: s("showRemaining")
          },
          onToggle: (v) => p(t, v),
          isOpen: d[t],
          variant: mt.typeahead,
          typeAheadAriaLabel: s("selectOrTypeAKey"),
          placeholderText: s("selectOrTypeAKey"),
          selections: b.value,
          onSelect: (v) => {
            b.onChange(v), p(t, !1);
          },
          children: f()
        }
      )
    }
  ) : /* @__PURE__ */ a(
    gt,
    {
      id: `${g(n.key)}-value`,
      className: "value-input",
      defaultValue: n.value,
      "data-testid": "attribute-value-input",
      "aria-label": s("value"),
      ...l(`${e}.${t}.value`)
    }
  ) });
}, sx = ({
  name: e,
  selectableValues: t,
  resources: n
}) => {
  const { t: r } = H(), { control: i, watch: s } = De(), { fields: o, append: l, remove: c } = ig({
    control: i,
    name: e
  }), [d, u] = D([!1]), p = (f, g) => {
    const b = [...d];
    b[f] = g, u(b);
  };
  ze(() => {
    o.length || l({ key: "", value: "" }, { shouldFocus: !1 });
  }, [o]);
  const m = s(`${e}.${o.length - 1}.value`, "");
  return /* @__PURE__ */ x(
    Cn,
    {
      className: "kc-attributes__table",
      "aria-label": "Role attribute keys and values",
      variant: "compact",
      children: [
        /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
          /* @__PURE__ */ a(Ne, { width: 40, children: r("key") }),
          /* @__PURE__ */ a(Ne, { width: 40, children: r("value") })
        ] }) }),
        /* @__PURE__ */ x(yn, { children: [
          o.map((f, g) => /* @__PURE__ */ x(it, { "data-testid": "attribute-row", children: [
            /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
              be,
              {
                name: `${e}.${g}.key`,
                defaultValue: "",
                control: i,
                render: ({ field: b }) => /* @__PURE__ */ a(
                  ht,
                  {
                    toggleId: `${e}.${g}.key`,
                    className: "kc-attribute-key-selectable",
                    onToggle: (v) => p(g, v),
                    isOpen: d[g],
                    variant: mt.typeahead,
                    typeAheadAriaLabel: r("selectOrTypeAKey"),
                    placeholderText: r("selectOrTypeAKey"),
                    selections: b.value,
                    onSelect: (v) => {
                      b.onChange(v.toString()), p(g, !1);
                    },
                    children: t?.map((v) => /* @__PURE__ */ a(
                      Re,
                      {
                        selected: v.name === b.value,
                        value: n ? v.name : v.key,
                        children: v.name
                      },
                      v.key
                    ))
                  }
                )
              }
            ) }),
            /* @__PURE__ */ a(
              Gq,
              {
                name: e,
                attribute: f,
                rowIndex: g,
                selectableValues: t,
                resources: n
              }
            ),
            /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
              z,
              {
                id: `${e}-minus-button-${g}`,
                variant: "link",
                className: "kc-attributes__minus-icon",
                onClick: () => c(g),
                "aria-label": r("remove"),
                children: /* @__PURE__ */ a($i, {})
              }
            ) })
          ] }, f.id)),
          /* @__PURE__ */ a(it, { children: /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
            z,
            {
              "aria-label": r("addAttribute", { label: r("attribute") }),
              id: `${e}-plus-icon`,
              variant: "link",
              className: "kc-attributes__plus-icon",
              onClick: () => {
                l({ key: "", value: "" }), u([...d, !1]);
              },
              icon: /* @__PURE__ */ a(_a, {}),
              isDisabled: !m,
              "data-testid": "attribute-add-row",
              children: r("addAttribute", { label: r("attribute") })
            }
          ) }) })
        ] })
      ]
    }
  );
}, Wq = ({
  data: e
}) => {
  const { t } = H(), [n, r] = st();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      z,
      {
        "data-testid": "authorization-revert",
        onClick: r,
        variant: "secondary",
        children: t("showAuthData")
      }
    ),
    /* @__PURE__ */ a(
      ft,
      {
        variant: Et.medium,
        isOpen: n,
        "aria-label": t("authData"),
        header: /* @__PURE__ */ x(Rt, { children: [
          /* @__PURE__ */ a(tt, { component: Qt.h1, children: t("authData") }),
          /* @__PURE__ */ a(tt, { children: t("authDataDescription") })
        ] }),
        onClose: r,
        actions: [
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "cancel",
              id: "modal-cancel",
              onClick: r,
              children: t("cancel")
            },
            "cancel"
          )
        ],
        children: /* @__PURE__ */ a(Mi, { readOnly: !0, rows: 20, value: ja(e) })
      }
    )
  ] });
};
var ox;
(function(e) {
  e.AFFIRMATIVE = "AFFIRMATIVE", e.UNANIMOUS = "UNANIMOUS", e.CONSENSUS = "CONSENSUS";
})(ox || (ox = {}));
var Au;
(function(e) {
  e.Permit = "PERMIT", e.Deny = "DENY";
})(Au || (Au = {}));
var lx;
(function(e) {
  e.POSITIVE = "POSITIVE", e.NEGATIVE = "NEGATIVE";
})(lx || (lx = {}));
const Xq = ({
  idx: e,
  rowIndex: t,
  outerPolicy: n,
  resource: r
}) => {
  const [i, s] = D(!1), { t: o } = H(), { realm: l } = ye(), { clientId: c } = zt();
  return /* @__PURE__ */ x(yn, { isExpanded: i, children: [
    /* @__PURE__ */ x(it, { children: [
      /* @__PURE__ */ a(
        ke,
        {
          expand: {
            rowIndex: t,
            isExpanded: i,
            onToggle: () => s((d) => !d)
          }
        }
      ),
      /* @__PURE__ */ a(ke, { "data-testid": `name-column-${r.resource}`, children: /* @__PURE__ */ a(
        Ae,
        {
          to: Bs({
            realm: l,
            id: c,
            permissionType: n.policy?.type,
            permissionId: n.policy?.id
          }),
          children: n.policy?.name
        }
      ) }),
      /* @__PURE__ */ a(ke, { id: n.status?.toLowerCase(), children: o(n.status?.toLowerCase()) }),
      /* @__PURE__ */ a(ke, { children: o(`${n.policy?.decisionStrategy?.toLowerCase()}`) }),
      /* @__PURE__ */ a(ke, { children: n.status === Au.Permit ? r.policies?.[t]?.scopes?.join(", ") : "-" }),
      /* @__PURE__ */ a(ke, { children: n.status === Au.Deny && r.policies?.[t]?.scopes?.length ? r.policies[t].scopes?.join(", ") : "-" })
    ] }),
    /* @__PURE__ */ x(it, { isExpanded: i, children: [
      /* @__PURE__ */ a(ke, {}),
      /* @__PURE__ */ a(ke, { colSpan: 5, children: i && /* @__PURE__ */ a(ms, { children: /* @__PURE__ */ a(
        ir,
        {
          isHorizontal: !0,
          className: "keycloak_resource_details",
          children: /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ a(H0, { children: n.associatedPolicies?.map((d) => /* @__PURE__ */ x(z0, { children: [
            /* @__PURE__ */ a(
              Ae,
              {
                to: rd({
                  realm: l,
                  id: c,
                  policyType: d.policy?.type,
                  policyId: d.policy?.id
                }),
                children: d.policy?.name
              }
            ),
            o("votedToStatus", {
              status: sc(d.status)
            })
          ] }, "policyDetails")) }) })
        }
      ) }) })
    ] }, `child-${r.resource}`)
  ] }, e);
}, Yq = ({
  rowIndex: e,
  resource: t,
  evaluateResults: n
}) => {
  const [r, i] = D(!1), { t: s } = H();
  return /* @__PURE__ */ x(yn, { isExpanded: r, children: [
    /* @__PURE__ */ x(it, { children: [
      /* @__PURE__ */ a(
        ke,
        {
          expand: {
            rowIndex: e,
            isExpanded: r,
            onToggle: () => i((o) => !o)
          }
        }
      ),
      /* @__PURE__ */ a(ke, { "data-testid": `name-column-${t.resource}`, children: t.resource?.name }),
      /* @__PURE__ */ a(ke, { id: t.status?.toLowerCase(), children: s(`${t.status?.toLowerCase()}`) }),
      /* @__PURE__ */ a(ke, { children: t.allowedScopes?.length ? t.allowedScopes.map((o) => o.name) : "-" })
    ] }),
    /* @__PURE__ */ x(it, { isExpanded: r, children: [
      /* @__PURE__ */ a(ke, {}),
      /* @__PURE__ */ a(ke, { colSpan: 5, children: /* @__PURE__ */ a(ms, { children: r && /* @__PURE__ */ a(
        ir,
        {
          isHorizontal: !0,
          className: "keycloak_resource_details",
          children: /* @__PURE__ */ x(Cn, { "aria-label": s("evaluationResults"), children: [
            /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
              /* @__PURE__ */ a(Ne, { "aria-hidden": "true" }),
              /* @__PURE__ */ a(Ne, { children: s("permission") }),
              /* @__PURE__ */ a(Ne, { children: s("results") }),
              /* @__PURE__ */ a(Ne, { children: s("decisionStrategy") }),
              /* @__PURE__ */ a(Ne, { children: s("grantedScopes") }),
              /* @__PURE__ */ a(Ne, { children: s("deniedScopes") }),
              /* @__PURE__ */ a(Ne, { "aria-hidden": "true" })
            ] }) }),
            Object.values(n[e].policies).map(
              (o, l) => /* @__PURE__ */ a(
                Xq,
                {
                  idx: l,
                  rowIndex: e,
                  outerPolicy: o,
                  resource: t
                },
                l
              )
            )
          ] })
        }
      ) }) })
    ] }, `child-${t.resource}`)
  ] });
};
function Jq(e, t) {
  switch (t) {
    case "STATUS_PERMITTED":
      return e.filter(({ status: n }) => n === "PERMIT");
    case "STATUS_DENIED":
      return e.filter(({ status: n }) => n === "DENY");
    default:
      return e;
  }
}
const Zq = ({ evaluateResult: e, refresh: t, back: n }) => {
  const { t: r } = H(), [i, s] = st(), [o, l] = D(
    "ALL"
    /* All */
  ), [c, d] = D(""), [u, p] = D(""), m = () => {
    d(u);
  }, f = (y) => {
    y.key === "Enter" && m();
  }, g = nt(
    () => Jq(e.results, o).filter(
      ({ resource: y }) => y?.name?.includes(c) ?? !1
    ),
    [e.results, o, c]
  ), b = e.results.length === 0, v = g.length === 0;
  return /* @__PURE__ */ x(Te, { children: [
    /* @__PURE__ */ a(Ta, { children: /* @__PURE__ */ x(ru, { className: "providers-toolbar", children: [
      /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ x(nn, { children: [
        /* @__PURE__ */ a(dt, { isFill: !0, children: /* @__PURE__ */ a(
          gt,
          {
            name: "inputGroupName",
            id: "inputGroupName",
            type: "search",
            "aria-label": r("search"),
            placeholder: r("search"),
            onChange: (y, C) => p(C),
            onKeyDown: f
          }
        ) }),
        /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
          z,
          {
            variant: xe.control,
            "aria-label": r("search"),
            onClick: () => m(),
            children: /* @__PURE__ */ a(is, {})
          }
        ) })
      ] }) }),
      /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
        Dn,
        {
          "data-testid": "filter-type-select",
          isOpen: i,
          className: "kc-filter-type-select",
          toggle: (y) => /* @__PURE__ */ a(
            ut,
            {
              ref: y,
              onClick: s,
              isExpanded: i,
              style: { width: "300px" },
              children: o
            }
          ),
          onSelect: (y, C) => {
            l(C), s(), t();
          },
          selected: o,
          children: /* @__PURE__ */ x(ea, { children: [
            /* @__PURE__ */ a(
              Re,
              {
                "data-testid": "all-results-option",
                value: "ALL",
                children: r("allResults")
              }
            ),
            /* @__PURE__ */ a(
              Re,
              {
                "data-testid": "result-permit-option",
                value: "STATUS_PERMITTED",
                children: r("resultPermit")
              }
            ),
            /* @__PURE__ */ a(
              Re,
              {
                "data-testid": "result-deny-option",
                value: "STATUS_DENIED",
                children: r("resultDeny")
              }
            )
          ] })
        }
      ) })
    ] }) }),
    !v && /* @__PURE__ */ x(Cn, { "aria-label": r("evaluationResults"), children: [
      /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
        /* @__PURE__ */ a(Ne, { "aria-hidden": "true" }),
        /* @__PURE__ */ a(Ne, { children: r("resource") }),
        /* @__PURE__ */ a(Ne, { children: r("overallResults") }),
        /* @__PURE__ */ a(Ne, { children: r("scopes") }),
        /* @__PURE__ */ a(Ne, { "aria-hidden": "true" })
      ] }) }),
      g.map((y, C) => /* @__PURE__ */ a(
        Yq,
        {
          rowIndex: C,
          resource: y,
          evaluateResults: e.results
        },
        C
      ))
    ] }),
    (v || b) && /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a(Pt, {}),
      /* @__PURE__ */ a(
        ct,
        {
          isSearchVariant: !0,
          message: r("noSearchResults"),
          instructions: r("noSearchResultsInstructions")
        }
      )
    ] }),
    /* @__PURE__ */ a(St, { children: /* @__PURE__ */ x(Mr, { name: "authorization", children: [
      /* @__PURE__ */ a(z, { "data-testid": "authorization-eval", id: "back-btn", onClick: n, children: r("back") }),
      " ",
      /* @__PURE__ */ a(
        z,
        {
          "data-testid": "authorization-reevaluate",
          id: "reevaluate-btn",
          variant: "secondary",
          onClick: t,
          children: r("reevaluate")
        }
      ),
      " ",
      /* @__PURE__ */ a(Wq, { data: e.rpt })
    ] }) })
  ] });
}, Qq = (e) => {
  const { hasAccess: t } = Nt();
  return t("view-users") ? /* @__PURE__ */ a(eG, { ...e }) : /* @__PURE__ */ a(Mk, { permissionNeeded: "view-users" });
}, eG = ({ client: e }) => {
  const { adminClient: t } = de(), n = Ke({ mode: "onChange" }), {
    control: r,
    reset: i,
    trigger: s,
    formState: { isValid: o }
  } = n, { t: l } = H(), { addError: c } = we(), d = ye(), [u, p] = D(!1), [m, f] = D(!1), [g, b] = D([]), [v, y] = D([]), [C, S] = D(), [P, w] = D([]);
  _e(
    () => t.roles.find(),
    (O) => {
      w(O);
    },
    []
  ), _e(
    () => Promise.all([
      t.clients.listResources({
        id: e.id
      }),
      t.clients.listAllScopes({
        id: e.id
      })
    ]),
    ([O, I]) => {
      b(O), y(I);
    },
    []
  );
  const A = async () => {
    if (!await s())
      return;
    const O = n.getValues(), I = qo(O.resources), _ = {
      roleIds: O.roleIds ?? [],
      clientId: O.client.id,
      userId: O.user[0],
      resources: g.filter((E) => Object.keys(I).includes(E.name)).map((E) => ({
        ...E,
        scopes: E.scopes?.filter(
          (L) => Object.values(I).flatMap((F) => F).includes(L.name)
        )
      })),
      entitlements: !1,
      context: {
        attributes: Object.fromEntries(
          O.context.attributes.filter((E) => E.key || E.value !== "").map(({ key: E, value: L }) => [E, L])
        )
      }
    };
    try {
      const E = await t.clients.evaluateResource(
        { id: e.id, realm: d.realm },
        _
      );
      S(E);
    } catch (E) {
      c("evaluateError", E);
    }
  }, k = rt({ control: r, name: "user", defaultValue: [] }), T = rt({ control: r, name: "roleIds", defaultValue: [] });
  return C ? /* @__PURE__ */ a(
    Zq,
    {
      evaluateResult: C,
      refresh: A,
      back: () => S(void 0)
    }
  ) : /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ x(He, { ...n, children: [
    /* @__PURE__ */ x(Jd, { children: [
      /* @__PURE__ */ a(lf, { children: /* @__PURE__ */ a(lr, { headingLevel: "h2", children: l("identityInformation") }) }),
      /* @__PURE__ */ a(Zd, { children: /* @__PURE__ */ x(je, { isHorizontal: !0, role: "view-clients", children: [
        /* @__PURE__ */ a(
          Lg,
          {
            name: "client",
            label: "client",
            helpText: "clientHelp",
            defaultValue: e.clientId
          }
        ),
        /* @__PURE__ */ a(
          tb,
          {
            name: "user",
            label: "users",
            helpText: l("selectUser"),
            defaultValue: [],
            variant: "typeahead",
            isRequired: T?.length === 0
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: "roleIds",
            label: l("roles"),
            labelIcon: l("rolesHelp"),
            variant: "typeaheadMulti",
            placeholderText: l("selectARole"),
            controller: {
              defaultValue: [],
              rules: {
                required: {
                  value: k.length === 0,
                  message: l("required")
                }
              }
            },
            options: P.map((O) => O.name)
          }
        )
      ] }) })
    ] }),
    /* @__PURE__ */ x(Jd, { children: [
      /* @__PURE__ */ a(lf, { children: /* @__PURE__ */ a(lr, { headingLevel: "h2", children: l("permissions") }) }),
      /* @__PURE__ */ a(Zd, { children: /* @__PURE__ */ x(je, { isHorizontal: !0, role: "view-clients", children: [
        /* @__PURE__ */ a(
          re,
          {
            label: l("applyToResourceType"),
            fieldId: "applyToResourceType",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: l("applyToResourceTypeHelp"),
                fieldLabelId: "applyToResourceType"
              }
            ),
            children: /* @__PURE__ */ a(
              Je,
              {
                id: "applyToResource-switch",
                label: l("on"),
                labelOff: l("off"),
                isChecked: m,
                onChange: (O, I) => f(I),
                "aria-label": l("applyToResourceType")
              }
            )
          }
        ),
        m ? /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(
            ve,
            {
              name: "alias",
              label: l("resourceType"),
              labelIcon: l("resourceTypeHelp"),
              rules: { required: l("required") }
            }
          ),
          /* @__PURE__ */ a(
            at,
            {
              name: "authScopes",
              label: l("authScopes"),
              labelIcon: l("scopesSelect"),
              controller: {
                defaultValue: []
              },
              variant: "typeaheadMulti",
              options: v.map((O) => O.name)
            }
          )
        ] }) : /* @__PURE__ */ a(
          re,
          {
            label: l("resourcesAndScopes"),
            id: "resourcesAndScopes",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: l("contextualAttributesHelp"),
                fieldLabelId: "resourcesAndScopes"
              }
            ),
            fieldId: "resourcesAndScopes",
            children: /* @__PURE__ */ a(
              sx,
              {
                selectableValues: g.map((O) => ({
                  name: O.name,
                  key: O._id
                })),
                resources: g,
                name: "resources"
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          ps,
          {
            toggleText: l("contextualInfo"),
            onToggle: () => p(!u),
            isExpanded: u,
            children: /* @__PURE__ */ a(
              re,
              {
                label: l("contextualAttributes"),
                id: "contextualAttributes",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: l("contextualAttributesHelp"),
                    fieldLabelId: "contextualAttributes"
                  }
                ),
                fieldId: "contextualAttributes",
                children: /* @__PURE__ */ a(
                  sx,
                  {
                    selectableValues: ik,
                    name: "context.attributes"
                  }
                )
              }
            )
          }
        )
      ] }) })
    ] }),
    /* @__PURE__ */ x(ot, { children: [
      /* @__PURE__ */ a(
        z,
        {
          "data-testid": "authorization-eval",
          id: "authorization-eval",
          className: "pf-v5-u-mr-md",
          isDisabled: !o,
          onClick: () => A(),
          children: l("evaluate")
        }
      ),
      /* @__PURE__ */ a(
        z,
        {
          "data-testid": "authorization-revert",
          id: "authorization-revert",
          className: "pf-v5-u-mr-md",
          variant: "link",
          onClick: () => i(),
          children: l("revert")
        }
      )
    ] })
  ] }) });
}, tG = () => {
  const { adminClient: e } = de(), { t } = H(), { clientId: n } = zt(), { addAlert: r, addError: i } = we(), [s, o] = D(), [l, c] = D();
  _e(
    () => e.clients.exportResource({
      id: n
    }),
    (u) => {
      o(JSON.stringify(u, null, 2)), c(u);
    },
    []
  );
  const d = () => {
    try {
      gs.saveAs(
        new Blob([ja(l)], {
          type: "application/json"
        }),
        "test-authz-config.json"
      ), r(t("exportAuthDetailsSuccess"), pe.success);
    } catch (u) {
      i("exportAuthDetailsError", u);
    }
  };
  return s ? /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ x(
    je,
    {
      isHorizontal: !0,
      role: "manage-authorization",
      className: "pf-v5-u-mt-lg",
      children: [
        /* @__PURE__ */ a(
          pr,
          {
            name: "authDetails",
            label: t("authDetails"),
            labelIcon: t("authDetailsHelp"),
            resizeOrientation: "vertical",
            defaultValue: s,
            readOnly: !0,
            rows: 10
          }
        ),
        /* @__PURE__ */ x(ot, { children: [
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "authorization-export-download",
              onClick: () => d(),
              children: t("download")
            }
          ),
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "authorization-export-copy",
              variant: "secondary",
              onClick: async () => {
                try {
                  await navigator.clipboard.writeText(s), r(t("copied"), pe.success);
                } catch (u) {
                  i("copyError", u);
                }
              },
              children: t("copy")
            }
          )
        ] })
      ]
    }
  ) }) : /* @__PURE__ */ a(bt, {});
};
function nG(e) {
  const [t, n] = D(null), [r, i] = D(
    null
  );
  function s(o) {
    i({
      name: o.name,
      state: o.state
    });
  }
  return ze(() => {
    n(null), i(null), navigator.permissions.query({ name: e }).then((o) => {
      n(o), s(o);
    });
  }, [e]), ze(() => {
    if (!t)
      return;
    function o() {
      t && s(t);
    }
    return t.addEventListener("change", o), () => t.removeEventListener("change", o);
  }, [t]), r;
}
const Fk = ({
  id: e,
  label: t,
  text: n,
  variant: r = "plain"
}) => {
  const { t: i } = H(), s = aO(), l = nG("clipboard-write")?.state === "denied", [c, d] = D(
    0
    /* Ready */
  ), u = nt(() => {
    if (l)
      return "clipboardCopyDenied";
    switch (c) {
      case 0:
        return "copyToClipboard";
      case 1:
        return "copySuccess";
      case 2:
        return "clipboardCopyError";
    }
  }, [l, c]);
  ze(() => {
    if (c !== 0)
      return s(() => d(
        0
        /* Ready */
      ), 1e3);
  }, [c, s]);
  const p = async (m) => {
    try {
      await navigator.clipboard.writeText(m), d(
        1
        /* Copied */
      );
    } catch {
      d(
        2
        /* Error */
      );
    }
  };
  return /* @__PURE__ */ a(
    Yd,
    {
      id: `copy-button-${e}`,
      textId: t,
      "aria-label": i("copyToClipboard"),
      onClick: () => p(n),
      exitDelay: 600,
      variant: r,
      children: i(u)
    }
  );
}, cx = ({
  id: e,
  buttonLabel: t,
  client: n,
  secret: r,
  toggle: i
}) => {
  const { t: s } = H(), o = De(), { hasAccess: l } = Nt(), c = l("manage-clients") || n.access?.configure;
  return /* @__PURE__ */ x(ca, { hasGutter: !0, children: [
    /* @__PURE__ */ a($t, { isFilled: !0, children: /* @__PURE__ */ x(nn, { children: [
      /* @__PURE__ */ a(dt, { isFill: !0, children: /* @__PURE__ */ a(Ic, { id: e, value: r, readOnly: !0 }) }),
      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
        Fk,
        {
          id: e,
          text: r,
          label: "clientSecret",
          variant: "control"
        }
      ) })
    ] }) }),
    /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(
      z,
      {
        variant: "secondary",
        isDisabled: o.formState.isDirty || !c,
        onClick: i,
        children: s(t)
      }
    ) })
  ] });
}, dx = ({ time: e }) => {
  const { t } = H(), n = ai();
  return /* @__PURE__ */ a("div", { className: "pf-v5-u-my-md", children: ((i) => i ? t("secretExpiresOn", {
    time: n(new Date(i * 1e3), {
      dateStyle: "full",
      timeStyle: "long"
    })
  }) : void 0)(e) });
}, aG = ({ client: e, secret: t, toggle: n }) => {
  const { adminClient: r } = de(), { t: i } = H(), { addAlert: s, addError: o } = we(), [l, c] = D(
    e.attributes?.["client.secret.rotated"]
  ), d = e.attributes?.["client.secret.expiration.time"], u = e.attributes?.["client.secret.rotated.expiration.time"], p = (g) => (/* @__PURE__ */ new Date()).getTime() >= g * 1e3, [m, f] = Ve({
    titleKey: "invalidateRotatedSecret",
    messageKey: "invalidateRotatedSecretExplain",
    continueButtonLabel: "confirm",
    onConfirm: async () => {
      try {
        await r.clients.invalidateSecret({
          id: e.id
        }), c(void 0), s(i("invalidateRotatedSuccess"));
      } catch (g) {
        o("invalidateRotatedError", g);
      }
    }
  });
  return ze(() => {
    l !== e.attributes?.["client.secret.rotated"] && c(e.attributes?.["client.secret.rotated"]);
  }, [e, l]), /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(f, {}),
    /* @__PURE__ */ x(
      re,
      {
        label: i("clientSecret"),
        fieldId: "kc-client-secret",
        className: "pf-v5-u-my-md",
        children: [
          /* @__PURE__ */ a(
            cx,
            {
              id: "kc-client-secret",
              client: e,
              secret: t,
              toggle: n,
              buttonLabel: "regenerate"
            }
          ),
          /* @__PURE__ */ a(dx, { time: d }),
          p(d) && /* @__PURE__ */ a(En, { variant: "warning", isInline: !0, title: i("secretHasExpired") })
        ]
      }
    ),
    l && /* @__PURE__ */ x(re, { label: i("secretRotated"), fieldId: "secretRotated", children: [
      /* @__PURE__ */ a(
        cx,
        {
          id: "secretRotated",
          client: e,
          secret: l,
          toggle: m,
          buttonLabel: "invalidateSecret"
        }
      ),
      /* @__PURE__ */ a(dx, { time: u })
    ] })
  ] });
}, rG = ({ clientAuthenticatorType: e }) => {
  const { cryptoInfo: t } = Tt(), n = e === "client-jwt" ? t?.clientSignatureAsymmetricAlgorithms ?? [] : t?.clientSignatureSymmetricAlgorithms ?? [], { t: r } = H();
  return /* @__PURE__ */ a(
    at,
    {
      name: Fe(
        "attributes.token.endpoint.auth.signing.alg"
      ),
      label: r("signatureAlgorithm"),
      labelIcon: r("signatureAlgorithmHelp"),
      controller: {
        defaultValue: ""
      },
      isScrollable: !0,
      maxMenuHeight: "200px",
      options: [
        { key: "", value: r("anyAlgorithm") },
        ...n.map((i) => ({ key: i, value: i }))
      ]
    }
  );
}, iG = () => {
  const { t: e } = H();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      vt,
      {
        name: Fe(
          "attributes.x509.allow.regex.pattern.comparison"
        ),
        label: e("allowRegexComparison"),
        labelIcon: e("allowRegexComparisonHelp")
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: Fe("attributes.x509.subjectdn"),
        label: e("subject"),
        labelIcon: e("subjectHelp"),
        rules: {
          required: e("required")
        }
      }
    )
  ] });
}, sG = ({ client: e, save: t, refresh: n }) => {
  const { adminClient: r } = de(), { t: i } = H(), { addAlert: s, addError: o } = we(), l = e.id, [c, d] = D([]), {
    control: u,
    formState: { isDirty: p },
    handleSubmit: m
  } = De(), f = rt({
    control: u,
    name: "clientAuthenticatorType",
    defaultValue: ""
  }), [g, b] = D(""), [v, y] = D(""), C = c.find(
    (I) => I.id === f
  );
  _e(
    () => Promise.all([
      r.authenticationManagement.getClientAuthenticatorProviders(),
      r.clients.getClientSecret({
        id: l
      })
    ]),
    ([I, _]) => {
      d(I), b(_.value);
    },
    []
  );
  async function S(I, _) {
    try {
      const E = await I(l);
      return s(i(`${_}Success`), pe.success), E;
    } catch (E) {
      o(`${_}Error`, E);
    }
  }
  const P = async () => {
    const I = await S(
      (_) => r.clients.generateNewClientSecret({ id: _ }),
      "clientSecret"
    );
    b(I?.value || ""), n();
  }, [w, A] = Ve({
    titleKey: "confirmClientSecretTitle",
    messageKey: "confirmClientSecretBody",
    continueButtonLabel: "yes",
    cancelButtonLabel: "no",
    onConfirm: P
  }), k = async () => {
    const I = await S(
      (_) => r.clients.generateRegistrationAccessToken({ id: _ }),
      "accessToken"
    );
    y(I?.registrationAccessToken || "");
  }, [T, O] = Ve({
    titleKey: "confirmAccessTokenTitle",
    messageKey: "confirmAccessTokenBody",
    continueButtonLabel: "yes",
    cancelButtonLabel: "no",
    onConfirm: k
  });
  return /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ x(
    je,
    {
      onSubmit: m(t),
      isHorizontal: !0,
      className: "pf-v5-u-mt-md",
      role: "manage-clients",
      fineGrainedAccess: e.access?.configure,
      children: [
        /* @__PURE__ */ a(A, {}),
        /* @__PURE__ */ a(O, {}),
        /* @__PURE__ */ x(ka, { isFlat: !0, children: [
          /* @__PURE__ */ x(ma, { children: [
            /* @__PURE__ */ a(
              at,
              {
                name: "clientAuthenticatorType",
                label: i("clientAuthenticator"),
                labelIcon: i("clientAuthenticatorTypeHelp"),
                controller: {
                  defaultValue: ""
                },
                options: c.map(({ id: I, displayName: _ }) => ({
                  key: I,
                  value: _ || I
                }))
              }
            ),
            (f === "client-jwt" || f === "client-secret-jwt") && /* @__PURE__ */ a(rG, { clientAuthenticatorType: f }),
            f === "client-jwt" && /* @__PURE__ */ a(re, { children: /* @__PURE__ */ a(En, { variant: "info", isInline: !0, title: i("signedJWTConfirm") }) }),
            f === "client-x509" && /* @__PURE__ */ a(iG, {}),
            /* @__PURE__ */ a(ot, { children: /* @__PURE__ */ a(z, { variant: "primary", type: "submit", isDisabled: !p, children: i("save") }) })
          ] }),
          C?.supportsSecret && /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(Pt, {}),
            /* @__PURE__ */ a(ma, { children: /* @__PURE__ */ a(
              aG,
              {
                client: e,
                secret: g,
                toggle: w
              }
            ) })
          ] })
        ] }),
        /* @__PURE__ */ a(ka, { isFlat: !0, children: /* @__PURE__ */ a(ma, { children: /* @__PURE__ */ a(
          re,
          {
            label: i("registrationAccessToken"),
            fieldId: "kc-access-token",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: i("registrationAccessTokenHelp"),
                fieldLabelId: "registrationAccessToken"
              }
            ),
            children: /* @__PURE__ */ x(ca, { hasGutter: !0, children: [
              /* @__PURE__ */ a($t, { isFilled: !0, children: /* @__PURE__ */ a(ni, { id: "kc-access-token", isReadOnly: !0, children: v }) }),
              /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(
                z,
                {
                  variant: "secondary",
                  onClick: T,
                  children: i("regenerate")
                }
              ) })
            ] })
          }
        ) }) })
      ]
    }
  ) });
}, oG = (e) => e.match(/(<.[^(><.)]+>)/g);
function lG() {
  const { adminClient: e } = de(), { t } = H(), n = Xe(), { realm: r } = ye(), i = Ke(), { handleSubmit: s, setValue: o, formState: l } = i, [c, d] = D({}), { addAlert: u, addError: p } = we(), m = async (b) => {
    try {
      const v = await f(b);
      Pn(v, o), d(v);
    } catch (v) {
      p("importParseError", v);
    }
  };
  async function f(b) {
    if (!oG(b))
      return JSON.parse(b);
    const v = await Ai(
      `${wi(
        e.baseUrl
      )}admin/realms/${r}/client-description-converter`,
      {
        method: "POST",
        body: b,
        headers: so(await e.getAccessToken())
      }
    );
    if (!v.ok)
      throw new Error(
        `Server responded with invalid status: ${v.statusText}`
      );
    return v.json();
  }
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(wt, { titleKey: "importClient", subKey: "clientsExplain" }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(
      je,
      {
        isHorizontal: !0,
        onSubmit: s(async (b) => {
          try {
            const v = await e.clients.create({
              ...c,
              ...ta({
                ...b,
                attributes: b.attributes || {}
              })
            });
            u(t("clientImportSuccess"), pe.success), n(_i({ realm: r, clientId: v.id, tab: "settings" }));
          } catch (v) {
            p("clientImportError", v);
          }
        }),
        role: "manage-clients",
        children: /* @__PURE__ */ x(He, { ...i, children: [
          /* @__PURE__ */ a(
            zg,
            {
              id: "realm-file",
              language: Ln.json,
              extension: ".json,.xml",
              helpText: t("helpFileUploadClient"),
              onChange: m
            }
          ),
          /* @__PURE__ */ a(Gg, { hasConfigureAccess: !0 }),
          /* @__PURE__ */ a(ve, { name: "protocol", label: t("type"), readOnly: !0 }),
          /* @__PURE__ */ a(qg, { unWrap: !0 }),
          /* @__PURE__ */ x(ot, { children: [
            /* @__PURE__ */ a(
              io,
              {
                formState: l,
                allowInvalid: !0,
                allowNonDirty: !0,
                children: t("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                component: (b) => /* @__PURE__ */ a(Ae, { ...b, to: js({ realm: r }) }),
                children: t("cancel")
              }
            )
          ] })
        ] })
      }
    ) })
  ] });
}
const cG = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: lG
}, Symbol.toStringTag, { value: "Module" })), dG = ({
  token: e,
  toggleDialog: t
}) => {
  const { t: n } = H();
  return /* @__PURE__ */ x(
    ft,
    {
      title: n("initialAccessTokenDetails"),
      isOpen: !0,
      onClose: t,
      variant: Et.medium,
      children: [
        /* @__PURE__ */ a(
          En,
          {
            title: n("copyInitialAccessToken"),
            component: "h2",
            isInline: !0,
            variant: pe.warning
          }
        ),
        /* @__PURE__ */ a(St, { className: "pf-v5-u-mt-md", children: /* @__PURE__ */ a(re, { label: n("initialAccessToken"), fieldId: "initialAccessToken", children: /* @__PURE__ */ a(ni, { id: "initialAccessToken", isReadOnly: !0, children: e }) }) })
      ]
    }
  );
};
function uG() {
  const { adminClient: e } = de(), { t } = H(), n = Ke({ mode: "onChange" }), {
    handleSubmit: r,
    formState: { isValid: i }
  } = n, { realm: s } = ye(), { addAlert: o, addError: l } = we(), c = Xe(), [d, u] = D("");
  return /* @__PURE__ */ x(He, { ...n, children: [
    d && /* @__PURE__ */ a(
      dG,
      {
        token: d,
        toggleDialog: () => {
          u(""), o(t("tokenSaveSuccess"), pe.success), c(js({ realm: s, tab: "initial-access-token" }));
        }
      }
    ),
    /* @__PURE__ */ a(wt, { titleKey: "createToken", subKey: "createTokenHelp" }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ x(
      je,
      {
        isHorizontal: !0,
        role: "create-client",
        onSubmit: r(async (m) => {
          try {
            const f = await e.realms.createClientsInitialAccess(
              { realm: s },
              m
            );
            u(f.token);
          } catch (f) {
            l("tokenSaveError", f);
          }
        }),
        children: [
          /* @__PURE__ */ a(
            vl,
            {
              name: "expiration",
              label: t("expiration"),
              labelIcon: t("tokenExpirationHelp"),
              controller: {
                defaultValue: 86400,
                rules: {
                  min: {
                    value: 1,
                    message: t("expirationValueNotValid")
                  }
                }
              }
            }
          ),
          /* @__PURE__ */ a(
            ts,
            {
              name: "count",
              label: t("count"),
              labelIcon: t("countHelp"),
              controller: {
                rules: {
                  min: 1
                },
                defaultValue: 1
              }
            }
          ),
          /* @__PURE__ */ x(ot, { children: [
            /* @__PURE__ */ a(
              z,
              {
                variant: "primary",
                type: "submit",
                "data-testid": "save",
                isDisabled: !i,
                children: t("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                "data-testid": "cancel",
                variant: "link",
                component: (m) => /* @__PURE__ */ a(
                  Ae,
                  {
                    ...m,
                    to: js({ realm: s, tab: "initial-access-token" })
                  }
                ),
                children: t("cancel")
              }
            )
          ] })
        ]
      }
    ) })
  ] });
}
const pG = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: uG
}, Symbol.toStringTag, { value: "Module" })), mG = Be(
  () => Promise.resolve().then(() => pG)
), $k = {
  path: "/:realm/clients/initialAccessToken/create",
  element: /* @__PURE__ */ a(mG, {}),
  breadcrumb: (e) => e("createToken"),
  handle: {
    access: "manage-clients"
  }
}, ux = (e) => ({
  pathname: We($k.path, e)
}), jk = () => {
  const { adminClient: e } = de(), { t } = H(), { addAlert: n, addError: r } = we(), { realm: i } = ye(), s = ai(), o = Xe(), [l, c] = D(), d = async () => {
    try {
      return await e.realms.getClientsInitialAccess({ realm: i });
    } catch {
      return [];
    }
  }, [u, p] = Ve({
    titleKey: "tokenDeleteConfirmTitle",
    messageKey: t("tokenDeleteConfirm", { id: l?.id }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.realms.delClientsInitialAccess({
          realm: i,
          id: l.id
        }), n(t("tokenDeleteSuccess"), pe.success), c(void 0);
      } catch (m) {
        r("tokenDeleteError", m);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(p, {}),
    /* @__PURE__ */ a(
      xt,
      {
        ariaLabelKey: "initialAccessToken",
        searchPlaceholderKey: "searchInitialAccessToken",
        loader: d,
        toolbarItem: /* @__PURE__ */ a(
          z,
          {
            component: (m) => /* @__PURE__ */ a(Ae, { ...m, to: ux({ realm: i }) }),
            children: t("create")
          }
        ),
        actions: [
          {
            title: t("delete"),
            onRowClick: (m) => {
              c(m), u();
            }
          }
        ],
        columns: [
          {
            name: "id",
            displayKey: "id"
          },
          {
            name: "timestamp",
            displayKey: "timestamp",
            cellRenderer: (m) => s(new Date(m.timestamp * 1e3), Ac)
          },
          {
            name: "expiration",
            displayKey: "expires",
            cellRenderer: (m) => s(
              new Date(m.timestamp * 1e3 + m.expiration * 1e3),
              Ac
            )
          },
          {
            name: "count",
            displayKey: "count"
          },
          {
            name: "remainingCount",
            displayKey: "remainingCount",
            transforms: [SF]
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: t("noTokens"),
            instructions: t("noTokensInstructions"),
            primaryActionText: t("create"),
            onPrimaryAction: () => o(ux({ realm: i }))
          }
        )
      },
      l?.id
    )
  ] });
}, oee = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  InitialAccessTokenList: jk
}, Symbol.toStringTag, { value: "Module" })), px = ({ id: e, keyInfo: t }) => {
  const { t: n } = H();
  return /* @__PURE__ */ a(
    Mi,
    {
      readOnly: !0,
      rows: 5,
      id: e,
      "data-testid": "certificate",
      value: t?.certificate,
      "aria-label": n("certificate")
    }
  );
}, ab = ({ keyInfo: e, plain: t = !1 }) => {
  const { t: n } = H(), r = Fu();
  return t ? /* @__PURE__ */ a(px, { id: r, keyInfo: e }) : /* @__PURE__ */ a(
    re,
    {
      label: n("certificate"),
      fieldId: r,
      labelIcon: /* @__PURE__ */ a(le, { helpText: n("certificateHelp"), fieldLabelId: r }),
      children: /* @__PURE__ */ a(px, { id: r, keyInfo: e })
    }
  );
}, Bk = ({
  hidePassword: e = !1,
  isSaml: t = !1
}) => {
  const { t: n } = H();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "keyAlias",
        label: n("keyAlias"),
        labelIcon: n("keyAliasHelp"),
        rules: {
          required: n("required")
        }
      }
    ),
    !e && /* @__PURE__ */ a(
      zo,
      {
        name: "keyPassword",
        label: n("keyPassword"),
        labelIcon: n("keyPasswordHelp"),
        rules: {
          required: n("required")
        }
      }
    ),
    t && /* @__PURE__ */ a(
      ve,
      {
        name: "realmAlias",
        label: n("realmCertificateAlias"),
        labelIcon: n("realmCertificateAliasHelp")
      }
    ),
    /* @__PURE__ */ a(
      zo,
      {
        name: "storePassword",
        label: n("storePassword"),
        labelIcon: n("storePasswordHelp"),
        rules: {
          required: n("required")
        }
      }
    )
  ] });
}, mx = "Certificate PEM", fG = /* @__PURE__ */ new Map([
  ["PKCS12", "p12"],
  ["JKS", "jks"],
  ["BCFKS", "bcfks"]
]), Uk = (e) => fG.get(e), kp = ({
  isSaml: e = !1,
  hasPem: t = !1,
  useFile: n = !1
}) => {
  const { t: r } = H(), [i, s] = D(), { control: o, watch: l } = De(), c = l("format"), { cryptoInfo: d } = Tt(), u = [
    ...d?.supportedKeystoreTypes ?? [],
    ...t ? [mx] : []
  ];
  return /* @__PURE__ */ x(St, { className: "pf-v5-u-pt-lg", children: [
    /* @__PURE__ */ a(
      at,
      {
        name: "format",
        label: r("archiveFormat"),
        labelIcon: r("archiveFormatHelp"),
        controller: {
          defaultValue: u[0]
        },
        menuAppendTo: "parent",
        options: u
      }
    ),
    n && /* @__PURE__ */ a(
      re,
      {
        label: r("importFile"),
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: r("importFileHelp"),
            fieldLabelId: "importFile"
          }
        ),
        fieldId: "importFile",
        children: /* @__PURE__ */ a(
          be,
          {
            name: "file",
            defaultValue: "",
            control: o,
            render: ({ field: p }) => /* @__PURE__ */ a(
              Go,
              {
                id: "importFile",
                value: p.value,
                filename: i,
                browseButtonText: r("browse"),
                onChange: (m, f) => {
                  s(f), p.onChange(m);
                }
              }
            )
          }
        )
      }
    ),
    c !== mx && /* @__PURE__ */ a(Bk, { hidePassword: n, isSaml: e })
  ] });
}, hG = ({
  clientId: e,
  save: t,
  toggleDialog: n
}) => {
  const { t: r } = H(), i = Ke({
    defaultValues: { keyAlias: e },
    mode: "onChange"
  }), {
    handleSubmit: s,
    formState: { isValid: o }
  } = i;
  return /* @__PURE__ */ x(
    ft,
    {
      variant: Et.medium,
      title: r("generateKeys"),
      isOpen: !0,
      onClose: n,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            "data-testid": "confirm",
            isDisabled: !o,
            onClick: () => {
              s((l) => {
                t(l), n();
              })();
            },
            children: r("generate")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => {
              n();
            },
            children: r("cancel")
          },
          "cancel"
        )
      ],
      children: [
        /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ a(tt, { children: r("generateKeysDescription") }) }),
        /* @__PURE__ */ a(He, { ...i, children: /* @__PURE__ */ a(kp, {}) })
      ]
    }
  );
}, gG = ({
  clientId: e,
  close: t,
  keyType: n
}) => {
  const { adminClient: r } = de(), { t: i } = H(), { realm: s } = ye(), { addAlert: o, addError: l } = we(), c = Ke({
    defaultValues: { realmAlias: s }
  }), d = async (u) => {
    try {
      const p = await r.clients.downloadKey(
        {
          id: e,
          attr: n
        },
        u
      );
      gs.saveAs(
        new Blob([p], { type: "application/octet-stream" }),
        `keystore.${Uk(u.format ?? "")}`
      ), o(i("samlKeysExportSuccess")), t();
    } catch (p) {
      l("samlKeysExportError", p);
    }
  };
  return /* @__PURE__ */ a(
    ft,
    {
      variant: "medium",
      title: i("exportSamlKeyTitle"),
      isOpen: !0,
      onClose: t,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            "data-testid": "confirm",
            type: "submit",
            form: "export-saml-key-form",
            children: i("export")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: "link",
            onClick: () => {
              t();
            },
            children: i("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        St,
        {
          id: "export-saml-key-form",
          className: "pf-v5-u-pt-lg",
          onSubmit: c.handleSubmit(d),
          children: /* @__PURE__ */ a(He, { ...c, children: /* @__PURE__ */ a(kp, { isSaml: !0 }) })
        }
      )
    }
  );
}, bG = ({
  save: e,
  toggleDialog: t
}) => {
  const { t: n } = H(), r = Ke(), { control: i, handleSubmit: s } = r, o = Tt().cryptoInfo?.supportedKeystoreTypes ?? [], l = o.concat([
    "Certificate PEM",
    "Public Key PEM",
    "JSON Web Key Set"
  ]), c = rt({
    control: i,
    name: "keystoreFormat",
    defaultValue: l[0]
  });
  return /* @__PURE__ */ x(
    ft,
    {
      variant: Et.medium,
      title: n("generateKeys"),
      isOpen: !0,
      onClose: t,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            "data-testid": "confirm",
            onClick: () => {
              s((d) => {
                e(d), t();
              })();
            },
            children: n("import")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => {
              t();
            },
            children: n("cancel")
          },
          "cancel"
        )
      ],
      children: [
        /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ a(tt, { children: n("generateKeysDescription") }) }),
        /* @__PURE__ */ a(St, { className: "pf-v5-u-pt-lg", children: /* @__PURE__ */ x(He, { ...r, children: [
          /* @__PURE__ */ a(
            at,
            {
              name: "keystoreFormat",
              label: n("archiveFormat"),
              labelIcon: n("archiveFormatHelp"),
              controller: {
                defaultValue: l[0]
              },
              options: l
            }
          ),
          o.includes(c) && /* @__PURE__ */ a(Bk, { hidePassword: !0 }),
          /* @__PURE__ */ a(re, { label: n("importFile"), fieldId: "importFile", children: /* @__PURE__ */ a(
            be,
            {
              name: "file",
              control: i,
              defaultValue: { filename: "" },
              render: ({ field: d }) => /* @__PURE__ */ a(
                Go,
                {
                  id: "importFile",
                  value: d.value.value,
                  filename: d.value.filename,
                  onChange: (u, p) => d.onChange({ value: u, filename: p })
                }
              )
            }
          ) })
        ] }) })
      ]
    }
  );
}, Km = "jwt.credential", vG = ({ clientId: e, save: t, hasConfigureAccess: n }) => {
  const { adminClient: r } = de(), { t: i } = H(), {
    control: s,
    getValues: o,
    formState: { isDirty: l }
  } = De(), { addAlert: c, addError: d } = we(), [u, p] = D(), [m, f, g] = st(), [b, v, y] = st(), [C, S] = D(0), P = () => S(C + 1), w = rt({
    control: s,
    name: Fe("attributes.use.jwks.url"),
    defaultValue: "false"
  });
  _e(
    () => r.clients.getKeyInfo({ id: e, attr: Km }),
    (T) => p(T),
    [C]
  );
  const A = async (T) => {
    try {
      const O = await r.clients.generateAndDownloadKey(
        {
          id: e,
          attr: Km
        },
        T
      );
      gs.saveAs(
        new Blob([O], { type: "application/octet-stream" }),
        `keystore.${Uk(T.format ?? "")}`
      ), c(i("generateSuccess"), pe.success), P();
    } catch (O) {
      d("generateError", O);
    }
  }, k = async (T) => {
    try {
      const O = new FormData(), { file: I, ..._ } = T;
      for (const [E, L] of Object.entries(_))
        O.append(E, L);
      O.append("file", I.value), await r.clients.uploadCertificate(
        { id: e, attr: Km },
        O
      ), c(i("importSuccess"), pe.success), P();
    } catch (O) {
      d("importError", O);
    }
  };
  return /* @__PURE__ */ x(Te, { variant: "light", className: "keycloak__form", children: [
    m && /* @__PURE__ */ a(
      hG,
      {
        clientId: o("clientId"),
        toggleDialog: f,
        save: A
      }
    ),
    b && /* @__PURE__ */ a(bG, { toggleDialog: v, save: k }),
    /* @__PURE__ */ x(ka, { isFlat: !0, children: [
      /* @__PURE__ */ a(Uc, { children: /* @__PURE__ */ a(Sr, { children: i("jwksUrlConfig") }) }),
      /* @__PURE__ */ a(ma, { children: /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ a(tt, { children: i("keysIntro") }) }) }),
      /* @__PURE__ */ a(ma, { children: /* @__PURE__ */ x(
        je,
        {
          role: "manage-clients",
          fineGrainedAccess: n,
          isHorizontal: !0,
          children: [
            /* @__PURE__ */ a(
              vt,
              {
                name: Fe("attributes.use.jwks.url"),
                label: i("useJwksUrl"),
                labelIcon: i("useJwksUrlHelp"),
                stringify: !0
              }
            ),
            w !== "true" && (u ? /* @__PURE__ */ a(ab, { plain: !0, keyInfo: u }) : "No client certificate configured"),
            w === "true" && /* @__PURE__ */ a(
              ve,
              {
                name: Fe("attributes.jwks.url"),
                label: i("jwksUrl"),
                labelIcon: i("jwksUrlHelp"),
                type: "url"
              }
            ),
            /* @__PURE__ */ x(ot, { children: [
              /* @__PURE__ */ a(
                z,
                {
                  "data-testid": "saveKeys",
                  onClick: t,
                  isDisabled: !l,
                  children: i("save")
                }
              ),
              /* @__PURE__ */ a(
                z,
                {
                  "data-testid": "generate",
                  variant: "secondary",
                  onClick: () => g(!0),
                  children: i("generateNewKeys")
                }
              ),
              /* @__PURE__ */ a(
                z,
                {
                  "data-testid": "import",
                  variant: "secondary",
                  onClick: () => y(!0),
                  isDisabled: w === "true",
                  children: i("import")
                }
              )
            ] })
          ]
        }
      ) })
    ] })
  ] });
}, Vk = async (e, t, n, r, i) => {
  try {
    const s = new FormData(), { file: o, ...l } = t;
    Object.entries(l).map(
      ([c, d]) => s.append(
        c === "format" ? "keystoreFormat" : c,
        d.toString()
      )
    ), s.append("file", o), await e.clients.uploadKey({ id: n, attr: r }, s), i();
  } catch (s) {
    i(s);
  }
}, yG = ({
  id: e,
  attr: t,
  onClose: n,
  onCancel: r
}) => {
  const { adminClient: i } = de(), { t: s } = H(), [o, l] = D(!1), [c, d] = D(), u = Ke({ mode: "onChange" }), {
    handleSubmit: p,
    formState: { isValid: m }
  } = u, { addAlert: f, addError: g } = we(), b = (y) => {
    Vk(i, y, e, t, (C) => {
      C ? g("importError", C) : f(s("importSuccess"), pe.success);
    });
  }, v = async () => {
    try {
      const y = await i.clients.generateKey({
        id: e,
        attr: t
      });
      d(y), gs.saveAs(
        new Blob([y.privateKey], {
          type: "application/octet-stream"
        }),
        "private.key"
      ), f(s("generateSuccess"), pe.success);
    } catch (y) {
      g("generateError", y);
    }
  };
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.medium,
      "aria-label": s("enableClientSignatureRequiredModal"),
      header: /* @__PURE__ */ x(Rt, { children: [
        /* @__PURE__ */ a(lr, { headingLevel: "h1", children: s("enableClientSignatureRequired") }),
        /* @__PURE__ */ a(tt, { children: s("enableClientSignatureRequiredExplain") })
      ] }),
      isOpen: !0,
      onClose: n,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            "data-testid": "confirm",
            variant: "primary",
            isDisabled: !m && !c,
            onClick: () => {
              o && p(b)(), n();
            },
            children: s("confirm")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: r,
            children: s("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ x(He, { ...u, children: [
        /* @__PURE__ */ x(St, { isHorizontal: !0, children: [
          /* @__PURE__ */ a(
            re,
            {
              label: s("selectMethod"),
              fieldId: "selectMethod",
              hasNoPaddingTop: !0,
              children: /* @__PURE__ */ x(Qn, { children: [
                /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
                  sn,
                  {
                    isChecked: !o,
                    name: "selectMethodType",
                    onChange: () => l(!1),
                    label: s("selectMethodType.generate"),
                    id: "selectMethodType-generate"
                  }
                ) }),
                /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
                  sn,
                  {
                    isChecked: o,
                    name: "selectMethodType",
                    onChange: () => l(!0),
                    label: s("selectMethodType.import"),
                    id: "selectMethodType-import"
                  }
                ) })
              ] })
            }
          ),
          !o && /* @__PURE__ */ a(
            re,
            {
              label: s("certificate"),
              fieldId: "certificate",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: s("certificateHelp"),
                  fieldLabelId: "certificate"
                }
              ),
              children: /* @__PURE__ */ x(ca, { hasGutter: !0, children: [
                /* @__PURE__ */ a($t, { isFilled: !0, children: /* @__PURE__ */ a(ab, { plain: !0, keyInfo: c }) }),
                /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(
                  z,
                  {
                    variant: "secondary",
                    "data-testid": "generate",
                    onClick: v,
                    children: s("generate")
                  }
                ) })
              ] })
            }
          )
        ] }),
        o && /* @__PURE__ */ a(kp, { useFile: !0 })
      ] })
    }
  );
}, CG = ({
  id: e,
  attr: t,
  onClose: n
}) => {
  const { adminClient: r } = de(), { t: i } = H(), s = De(), { handleSubmit: o } = s, { addAlert: l, addError: c } = we(), d = (u) => {
    Vk(r, u, e, t, (p) => {
      p ? c("importError", p) : l(i("importSuccess"), pe.success);
    });
  };
  return /* @__PURE__ */ a(
    hs,
    {
      open: !0,
      toggleDialog: n,
      continueButtonLabel: "import",
      titleKey: "importKey",
      onConfirm: () => {
        o(d)(), n();
      },
      children: /* @__PURE__ */ a(He, { ...s, children: /* @__PURE__ */ a(kp, { useFile: !0, hasPem: !0 }) })
    }
  );
}, Hm = ["saml.signing", "saml.encryption"], Lo = {
  "saml.signing": {
    name: Fe("attributes.saml.client.signature"),
    title: "signingKeysConfig",
    key: "clientSignature"
  },
  "saml.encryption": {
    name: Fe("attributes.saml.encrypt"),
    title: "encryptionKeysConfig",
    key: "encryptAssertions"
  }
}, xG = ({
  clientId: e,
  keyInfo: t,
  attr: n,
  onChanged: r,
  onGenerate: i,
  onImport: s
}) => {
  const { t: o } = H(), { control: l, watch: c } = De(), d = Lo[n].title, u = Lo[n].key, p = Lo[n].name, [m, f] = st(), g = c(p);
  return /* @__PURE__ */ x(te, { children: [
    m && /* @__PURE__ */ a(
      gG,
      {
        keyType: n,
        clientId: e,
        close: f
      }
    ),
    /* @__PURE__ */ x(Zn, { title: o(d), className: "kc-form-panel__panel", children: [
      /* @__PURE__ */ a(Rt, { className: "pf-v5-u-pb-lg", children: /* @__PURE__ */ a(tt, { children: o(`${d}Explain`) }) }),
      /* @__PURE__ */ a(je, { role: "manage-clients", isHorizontal: !0, children: /* @__PURE__ */ a(
        re,
        {
          labelIcon: /* @__PURE__ */ a(le, { helpText: o(`${u}Help`), fieldLabelId: u }),
          label: o(u),
          fieldId: u,
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            be,
            {
              name: p,
              control: l,
              defaultValue: "false",
              render: ({ field: b }) => /* @__PURE__ */ a(
                Je,
                {
                  "data-testid": u,
                  id: u,
                  label: o("on"),
                  labelOff: o("off"),
                  isChecked: b.value === "true",
                  onChange: (v, y) => {
                    const C = y.toString();
                    C === "true" ? (r(n), b.onChange(C)) : i(n, !1);
                  },
                  "aria-label": o(u)
                }
              )
            }
          )
        }
      ) })
    ] }),
    t?.certificate && g === "true" && /* @__PURE__ */ a(ka, { isFlat: !0, children: /* @__PURE__ */ a(ma, { className: "kc-form-panel__body", children: /* @__PURE__ */ x(St, { isHorizontal: !0, children: [
      /* @__PURE__ */ a(ab, { keyInfo: t }),
      /* @__PURE__ */ x(ot, { children: [
        /* @__PURE__ */ a(
          z,
          {
            variant: "secondary",
            onClick: () => i(n, !0),
            children: o("regenerate")
          }
        ),
        /* @__PURE__ */ a(z, { variant: "secondary", onClick: () => s(n), children: o("importKey") }),
        /* @__PURE__ */ a(z, { variant: "tertiary", onClick: f, children: o("export") })
      ] })
    ] }) }) })
  ] });
}, SG = ({ clientId: e, save: t }) => {
  const { adminClient: n } = de(), { t: r } = H(), [i, s] = D(), [o, l] = D(), [c, d] = D(), [u, p] = D(), [m, f] = D(0), { setValue: g } = De(), { addAlert: b, addError: v } = we();
  _e(
    () => Promise.all(
      Hm.map(
        (k) => n.clients.getKeyInfo({ id: e, attr: k })
      )
    ),
    (k) => l(k),
    [m]
  );
  const y = async (k) => {
    const T = Hm.indexOf(k);
    try {
      const O = [...o || []];
      O[T] = await n.clients.generateKey({
        id: e,
        attr: k
      }), l(O), gs.saveAs(
        new Blob([O[T].privateKey], {
          type: "application/octet-stream"
        }),
        "private.key"
      ), b(r("generateSuccess"), pe.success);
    } catch (O) {
      v("generateError", O);
    }
  }, C = c ? Lo[c].key : "", [S, P] = Ve({
    titleKey: r("disableSigning", {
      key: r(C)
    }),
    messageKey: r("disableSigningExplain", {
      key: r(C)
    }),
    continueButtonLabel: "yes",
    cancelButtonLabel: "no",
    onConfirm: () => {
      g(Lo[c].name, "false"), t();
    }
  }), [w, A] = Ve({
    titleKey: "reGenerateSigning",
    messageKey: "reGenerateSigningExplain",
    continueButtonLabel: "yes",
    cancelButtonLabel: "no",
    onConfirm: () => {
      y(c);
    }
  });
  return /* @__PURE__ */ x(Te, { variant: "light", className: "keycloak__form", children: [
    i && /* @__PURE__ */ a(
      yG,
      {
        id: e,
        attr: i,
        onClose: () => {
          s(void 0), t(), f(m + 1);
        },
        onCancel: () => {
          g(Lo[c].name, "false"), s(void 0);
        }
      }
    ),
    /* @__PURE__ */ a(P, {}),
    /* @__PURE__ */ a(A, {}),
    Hm.map((k, T) => /* @__PURE__ */ x(Ea, { children: [
      u === k && /* @__PURE__ */ a(
        CG,
        {
          id: e,
          attr: k,
          onClose: () => p(void 0)
        }
      ),
      /* @__PURE__ */ a(
        xG,
        {
          clientId: e,
          keyInfo: o?.[T],
          attr: k,
          onChanged: s,
          onGenerate: (O, I) => {
            d(O), I ? w() : S();
          },
          onImport: () => p(k)
        }
      )
    ] }, k))
  ] });
}, wG = ({
  onConfirm: e,
  toggleDialog: t
}) => {
  const { t: n } = H(), r = Tt(), i = Object.keys(
    r.providers?.["client-registration-policy"].providers || []
  ), s = r.componentTypes?.["org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy"], o = ba(), l = nt(
    () => o(
      s?.filter((c) => i.includes(c.id)) || [],
      mr("id")
    ),
    [i, s]
  );
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.medium,
      title: n("chooseAPolicyProvider"),
      isOpen: !0,
      onClose: t,
      children: /* @__PURE__ */ x(
        Er,
        {
          onSelectDataListItem: (c, d) => {
            e(d), t();
          },
          "aria-label": n("addPredefinedMappers"),
          isCompact: !0,
          children: [
            /* @__PURE__ */ a(Pa, { "aria-label": n("headerName"), id: "header", children: /* @__PURE__ */ a(Va, { children: /* @__PURE__ */ a(
              Ua,
              {
                dataListCells: [n("name"), n("description")].map((c) => /* @__PURE__ */ a(oa, { style: { fontWeight: 700 }, children: c }, c))
              }
            ) }) }),
            l.map((c) => /* @__PURE__ */ a(
              Pa,
              {
                "aria-label": c.id,
                "data-testid": c.id,
                id: c.id,
                children: /* @__PURE__ */ a(Va, { children: /* @__PURE__ */ a(
                  Ua,
                  {
                    dataListCells: [
                      /* @__PURE__ */ a(oa, { width: 2, children: c.id }, `name-${c.id}`),
                      /* @__PURE__ */ a(oa, { width: 4, children: c.helpText }, `description-${c.id}`)
                    ]
                  }
                ) })
              },
              c.id
            ))
          ]
        }
      )
    }
  );
}, OG = Be(() => Promise.resolve().then(() => Qk)), Kk = {
  path: "/:realm/clients/client-registration/:subTab",
  element: /* @__PURE__ */ a(OG, {}),
  breadcrumb: (e) => e("clientRegistration"),
  handle: {
    access: "view-clients"
  }
}, Lu = (e) => ({
  pathname: We(Kk.path, e)
}), kG = Be(() => Promise.resolve().then(() => PG)), rb = {
  path: "/:realm/clients/client-registration/:subTab/:providerId",
  element: /* @__PURE__ */ a(kG, {}),
  breadcrumb: (e) => e("clientSettings"),
  handle: {
    access: "manage-clients"
  }
}, Hk = {
  ...rb,
  path: "/:realm/clients/client-registration/:subTab/:providerId/:id"
}, ib = (e) => {
  const t = e.id ? Hk.path : rb.path;
  return {
    pathname: We(t, e)
  };
}, TG = (e) => {
  const { realm: t } = ye(), { subTab: n } = na();
  return /* @__PURE__ */ a(
    Ae,
    {
      to: ib({
        realm: t,
        subTab: n || "anonymous",
        providerId: e.providerId,
        id: e.id
      }),
      children: e.name
    },
    e.id
  );
}, fx = ({
  subType: e
}) => {
  const { adminClient: t } = de(), { t: n } = H(), { subTab: r } = na(), i = Xe(), { addAlert: s, addError: o } = we(), { realm: l } = ye(), [c, d] = D([]), [u, p] = D(), [m, f] = st();
  _e(
    () => t.components.find({
      type: "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy"
    }),
    (v) => d(v.filter((y) => y.subType === e)),
    [u]
  );
  const [g, b] = Ve({
    titleKey: "clientRegisterPolicyDeleteConfirmTitle",
    messageKey: n("clientRegisterPolicyDeleteConfirm", {
      name: u?.name
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await t.components.del({
          realm: l,
          id: u?.id
        }), s(n("clientRegisterPolicyDeleteSuccess")), p(void 0);
      } catch (v) {
        o("clientRegisterPolicyDeleteError", v);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    m && /* @__PURE__ */ a(
      wG,
      {
        onConfirm: (v) => i(
          ib({
            realm: l,
            subTab: r || "anonymous",
            providerId: v
          })
        ),
        toggleDialog: f
      }
    ),
    /* @__PURE__ */ a(b, {}),
    /* @__PURE__ */ a(
      xt,
      {
        ariaLabelKey: "clientRegistration",
        searchPlaceholderKey: n("searchClientRegistration"),
        "data-testid": `clientRegistration-${e}`,
        loader: c,
        toolbarItem: /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
          z,
          {
            "data-testid": `createPolicy-${e}`,
            onClick: f,
            children: n("createPolicy")
          }
        ) }),
        actions: [
          {
            title: n("delete"),
            onRowClick: (v) => {
              p(v), g();
            }
          }
        ],
        columns: [
          {
            name: "name",
            displayKey: "name",
            cellRenderer: TG
          },
          {
            name: "providerId",
            displayKey: "providerId"
          }
        ]
      }
    )
  ] });
}, IG = () => {
  const { t: e } = H(), { realm: t } = ye(), n = (s) => Kn(Lu({ realm: t, subTab: s })), r = n("anonymous"), i = n("authenticated");
  return /* @__PURE__ */ x(
    Vn,
    {
      defaultLocation: Lu({ realm: t, subTab: "anonymous" }),
      mountOnEnter: !0,
      children: [
        /* @__PURE__ */ a(
          Ee,
          {
            "data-testid": "anonymous",
            title: /* @__PURE__ */ x(Pe, { children: [
              e("anonymousAccessPolicies"),
              " ",
              /* @__PURE__ */ a(
                le,
                {
                  fieldLabelId: "",
                  helpText: e("anonymousAccessPoliciesHelp"),
                  noVerticalAlign: !1,
                  unWrap: !0
                }
              )
            ] }),
            ...r,
            children: /* @__PURE__ */ a(fx, { subType: "anonymous" })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            "data-testid": "authenticated",
            title: /* @__PURE__ */ x(Pe, { children: [
              e("authenticatedAccessPolicies"),
              " ",
              /* @__PURE__ */ a(
                le,
                {
                  fieldLabelId: "",
                  helpText: e("authenticatedAccessPoliciesHelp"),
                  noVerticalAlign: !1,
                  unWrap: !0
                }
              )
            ] }),
            ...i,
            children: /* @__PURE__ */ a(fx, { subType: "authenticated" })
          }
        )
      ]
    }
  );
};
function EG() {
  const { adminClient: e } = de(), { t } = H(), { id: n, providerId: r, subTab: i } = zt(), s = Xe(), o = Ke({
    defaultValues: { providerId: r }
  }), { control: l, handleSubmit: c, reset: d } = o, { realm: u, realmRepresentation: p } = ye(), { addAlert: m, addError: f } = we(), [g, b] = D();
  _e(
    async () => await Promise.all([
      e.realms.getClientRegistrationPolicyProviders({ realm: u }),
      n ? e.components.findOne({ id: n }) : Promise.resolve()
    ]),
    ([P, w]) => {
      b(P.find((A) => A.id === r)), d(w || { providerId: r });
    },
    []
  );
  const v = rt({ control: l, defaultValue: "", name: "name" }), y = async (P) => {
    P.config && Object.entries(P.config).forEach(
      ([w, A]) => P.config[w] = Array.isArray(A) ? A : [A]
    );
    try {
      const w = {
        ...P,
        subType: i,
        parentId: p?.id,
        providerType: "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy",
        providerId: r
      };
      if (n)
        await e.components.update({ id: n }, w);
      else {
        const { id: A } = await e.components.create(w);
        s(ib({ id: A, realm: u, subTab: i, providerId: r }));
      }
      m(t(`provider${n ? "Updated" : "Create"}Success`));
    } catch (w) {
      f(`provider${n ? "Updated" : "Create"}Error`, w);
    }
  }, [C, S] = Ve({
    titleKey: "clientRegisterPolicyDeleteConfirmTitle",
    messageKey: t("clientRegisterPolicyDeleteConfirm", {
      name: v
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.components.del({
          realm: u,
          id: n
        }), m(t("clientRegisterPolicyDeleteSuccess")), s(Lu({ realm: u, subTab: i }));
      } catch (P) {
        f("clientRegisterPolicyDeleteError", P);
      }
    }
  });
  return g ? /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: n ? v : "createPolicy",
        subKey: n,
        dropdownItems: n ? [
          /* @__PURE__ */ a(
            Ue,
            {
              "data-testid": "delete",
              onClick: C,
              children: t("delete")
            },
            "delete"
          )
        ] : void 0
      }
    ),
    /* @__PURE__ */ a(S, {}),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(He, { ...o, children: /* @__PURE__ */ x(
      je,
      {
        role: "manage-clients",
        isHorizontal: !0,
        onSubmit: c(y),
        children: [
          /* @__PURE__ */ a(ve, { name: "providerId", label: t("provider"), readOnly: !0 }),
          /* @__PURE__ */ a(
            ve,
            {
              name: "name",
              label: t("name"),
              labelIcon: t("clientPolicyNameHelp"),
              rules: { required: t("required") }
            }
          ),
          /* @__PURE__ */ a(gr, { properties: g.properties }),
          /* @__PURE__ */ x(ot, { children: [
            /* @__PURE__ */ a(z, { "data-testid": "save", type: "submit", children: t("save") }),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                component: (P) => /* @__PURE__ */ a(
                  Ae,
                  {
                    ...P,
                    to: Lu({ realm: u, subTab: i })
                  }
                ),
                children: t("cancel")
              }
            )
          ] })
        ]
      }
    ) }) })
  ] }) : /* @__PURE__ */ a(bt, {});
}
const PG = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: EG
}, Symbol.toStringTag, { value: "Module" })), sb = ({
  form: { formState: e },
  onSubmit: t,
  cancelLink: n,
  role: r,
  editMode: i
}) => {
  const { t: s } = H(), { control: o, handleSubmit: l } = De(), c = rt({
    control: o,
    defaultValue: void 0,
    name: "name"
  });
  return /* @__PURE__ */ x(te, { children: [
    !i && /* @__PURE__ */ a(wt, { titleKey: s("createRole") }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ x(
      je,
      {
        isHorizontal: !0,
        onSubmit: l(t),
        role: r,
        className: "pf-v5-u-mt-lg",
        fineGrainedAccess: !0,
        children: [
          /* @__PURE__ */ a(
            ve,
            {
              name: "name",
              label: s("roleName"),
              rules: {
                required: i ? void 0 : s("required"),
                validate(d) {
                  if (!d?.trim())
                    return s("required");
                }
              },
              isDisabled: i
            }
          ),
          /* @__PURE__ */ a(
            pr,
            {
              name: "description",
              label: s("description"),
              rules: {
                maxLength: {
                  value: 255,
                  message: s("maxLength", { length: 255 })
                }
              },
              isDisabled: c?.includes("default-roles") ?? !1
            }
          ),
          /* @__PURE__ */ x(ot, { children: [
            /* @__PURE__ */ a(
              io,
              {
                formState: e,
                "data-testid": "save",
                allowInvalid: !0,
                allowNonDirty: !0,
                children: s("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                "data-testid": "cancel",
                variant: "link",
                component: (d) => /* @__PURE__ */ a(Ae, { ...d, to: n }),
                children: s("cancel")
              }
            )
          ] })
        ]
      }
    ) })
  ] });
}, _G = Be(() => Promise.resolve().then(() => pI)), ob = {
  path: "/:realm/clients/:clientId/roles/:id/:tab",
  element: /* @__PURE__ */ a(_G, {}),
  breadcrumb: (e) => e("roleDetails"),
  handle: {
    access: "query-clients"
  }
}, lb = (e) => ({
  pathname: We(ob.path, e)
});
function RG() {
  const { adminClient: e } = de(), { t } = H(), n = Ke({ mode: "onChange" }), r = Xe(), { clientId: i } = na(), { realm: s } = ye(), { addAlert: o, addError: l } = we();
  return /* @__PURE__ */ a(He, { ...n, children: /* @__PURE__ */ a(
    sb,
    {
      form: n,
      onSubmit: async (d) => {
        const u = {
          ...d,
          name: d.name?.trim(),
          attributes: {}
        };
        try {
          await e.clients.createRole({
            id: i,
            ...u
          });
          const p = await e.clients.findRole({
            id: i,
            roleName: u.name
          });
          o(t("roleCreated"), pe.success), r(
            lb({
              realm: s,
              clientId: i,
              id: p.id,
              tab: "details"
            })
          );
        } catch (p) {
          l("roleCreateError", p);
        }
      },
      cancelLink: _i({
        realm: s,
        clientId: i,
        tab: "roles"
      }),
      role: "manage-clients",
      editMode: !1
    }
  ) });
}
const AG = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: RG
}, Symbol.toStringTag, { value: "Module" })), Bd = "dedicated", LG = ({
  clientId: e,
  refresh: t,
  fineGrainedAccess: n,
  ...r
}) => {
  const { adminClient: i } = de(), { t: s } = H(), { addAlert: o, addError: l } = we(), { hasAccess: c } = Nt(), d = (p) => p.id === Bd, u = c("manage-clients") || n;
  return /* @__PURE__ */ a(
    sk,
    {
      isDisabled: d(r) || !u,
      clientScope: r,
      type: r.type,
      onSelect: async (p) => {
        try {
          await ck(
            i,
            e,
            r,
            r.type,
            p
          ), o(s("clientScopeSuccess"), pe.success), t();
        } catch (m) {
          l("clientScopeError", m);
        }
      }
    }
  );
}, NG = ({
  clientId: e,
  protocol: t,
  clientName: n,
  fineGrainedAccess: r
}) => {
  const { adminClient: i } = de(), { t: s } = H(), { addAlert: o, addError: l } = we(), { realm: c } = ye(), d = ba(), [u, p] = D("name"), [m, f] = D(
    $a.none
  ), [g, b] = D(!1), [v, y] = D(), [C, S] = D([]), P = (U) => S(U.filter(({ id: K }) => K !== Bd)), [w, A] = D(!1), [k, T] = D(0), O = () => T(k + 1), I = (U) => U.id === Bd, { hasAccess: _ } = Nt(), E = _("manage-clients") || r, L = _("view-clients") || r, F = async (U, K, G) => {
    const N = await i.clients.listDefaultClientScopes({ id: e }), $ = await i.clients.listOptionalClientScopes({ id: e }), q = await i.clientScopes.find(), V = (ee) => q.find((ce) => ee === ce.id), B = $.map((ee) => {
      const ce = V(ee.id);
      return {
        ...ee,
        type: Pi.optional,
        description: ce?.description
      };
    }), Z = N.map((ee) => {
      const ce = V(ee.id);
      return {
        ...ee,
        type: Pi.default,
        description: ce?.description
      };
    });
    let X = [...B, ...Z];
    const Q = X.map((ee) => ee.name);
    y(
      q.filter((ee) => !Q.includes(ee.name)).filter((ee) => ee.protocol === t)
    ), X = d(X, mr("name")), L && X.unshift({
      id: Bd,
      name: s("dedicatedScopeName", { clientName: n }),
      type: $a.none,
      description: s("dedicatedScopeDescription")
    });
    const ie = u === "name" ? fk(G) : hk(m), me = Number(U);
    return X.filter(ie).slice(me, me + Number(K));
  }, [R, M] = Ve({
    titleKey: s("deleteClientScope", {
      count: C.length,
      name: C[0]?.name
    }),
    messageKey: "deleteConfirmClientScopes",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await Jf(
          i,
          e,
          C[0],
          C[0].type
        ), o(s("clientScopeRemoveSuccess"), pe.success), O();
      } catch (U) {
        l("clientScopeRemoveError", U);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    v && /* @__PURE__ */ a(
      Nk,
      {
        clientScopes: v,
        clientName: n,
        open: g,
        toggleDialog: () => b(!g),
        onAdd: async (U) => {
          try {
            await Promise.all(
              U.map(
                async (K) => await dk(
                  i,
                  e,
                  K.scope,
                  K.type
                )
              )
            ), o(s("clientScopeSuccess"), pe.success), O();
          } catch (K) {
            l("clientScopeError", K);
          }
        }
      }
    ),
    /* @__PURE__ */ a(
      xt,
      {
        loader: F,
        ariaLabelKey: `clientScopeList-${k}`,
        searchPlaceholderKey: u === "name" ? "searchByName" : void 0,
        canSelectAll: !0,
        isPaginated: !0,
        isSearching: u === "type",
        onSelect: (U) => P([...U]),
        searchTypeComponent: /* @__PURE__ */ a(
          _u,
          {
            searchType: u,
            onSelect: (U) => p(U)
          }
        ),
        toolbarItem: /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(
            gk,
            {
              searchType: u,
              type: m,
              onSelect: (U) => p(U),
              onType: (U) => {
                f(U), O();
              }
            }
          ),
          E && /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(M, {}),
            /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(z, { onClick: () => b(!0), children: s("addClientScope") }) }),
            /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
              bk,
              {
                clientId: e,
                selectedRows: C,
                refresh: O
              }
            ) }),
            /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
              Kt,
              {
                onOpenChange: (U) => A(U),
                toggle: (U) => /* @__PURE__ */ a(
                  ut,
                  {
                    "data-testid": "kebab",
                    "aria-label": "Kebab toggle",
                    ref: U,
                    variant: "plain",
                    onClick: () => A(!w),
                    isExpanded: w,
                    children: /* @__PURE__ */ a(hr, {})
                  }
                ),
                isOpen: w,
                children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
                  Ue,
                  {
                    isDisabled: C.length === 0,
                    onClick: async () => {
                      try {
                        await Promise.all(
                          C.map(
                            (U) => Jf(
                              i,
                              e,
                              { ...U },
                              U.type
                            )
                          )
                        ), A(!1), P([]), o(s("clientScopeRemoveSuccess")), O();
                      } catch (U) {
                        l("clientScopeRemoveError", U);
                      }
                    },
                    children: s("remove")
                  },
                  "deleteAll"
                ) })
              }
            ) })
          ] })
        ] }),
        columns: [
          {
            name: "name",
            displayKey: "assignedClientScope",
            cellRenderer: (U) => I(U) ? /* @__PURE__ */ a(Ae, { to: Eu({ realm: c, clientId: e }), children: U.name }) : U.name
          },
          {
            name: "type",
            displayKey: "assignedType",
            cellRenderer: (U) => /* @__PURE__ */ a(LG, { clientId: e, refresh: O, ...U })
          },
          { name: "description", cellFormatters: [Vi(s)] }
        ],
        actions: E ? [
          {
            title: s("remove"),
            onRowClick: async (U) => (P([U]), R(), !0)
          }
        ] : [],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: s("emptyClientScopes"),
            instructions: s("emptyClientScopesInstructions"),
            primaryActionText: s("emptyClientScopesPrimaryAction"),
            onPrimaryAction: () => b(!0)
          }
        )
      },
      k
    )
  ] });
}, DG = ({
  client: e
}) => {
  const { adminClient: t } = de(), { t: n } = H(), { addAlert: r, addError: i } = we(), [s, o] = D(e), { hasAccess: l } = Nt(), c = l("manage-clients") || s.access?.manage, d = async (p) => {
    try {
      const m = p.filter((f) => f.client === void 0).map((f) => f.role).flat();
      await Promise.all([
        t.clients.addRealmScopeMappings(
          {
            id: s.id
          },
          m
        ),
        ...p.filter((f) => f.client !== void 0).map(
          (f) => t.clients.addClientScopeMappings(
            {
              id: s.id,
              client: f.client.id
            },
            [f.role]
          )
        )
      ]), r(n("clientScopeSuccess"), pe.success);
    } catch (m) {
      i("clientScopeError", m);
    }
  }, u = async () => {
    const p = { ...s, fullScopeAllowed: !s.fullScopeAllowed };
    try {
      await t.clients.update({ id: s.id }, p), r(n("clientScopeSuccess"), pe.success), o(p);
    } catch (m) {
      i("clientScopeError", m);
    }
  };
  return /* @__PURE__ */ x(Te, { children: [
    /* @__PURE__ */ a(
      je,
      {
        role: "manage-clients",
        fineGrainedAccess: s.access?.manage,
        isHorizontal: !0,
        children: /* @__PURE__ */ a(
          re,
          {
            hasNoPaddingTop: !0,
            label: n("fullScopeAllowed"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: n("fullScopeAllowedHelp"),
                fieldLabelId: "fullScopeAllowed"
              }
            ),
            fieldId: "fullScopeAllowed",
            children: /* @__PURE__ */ a(
              Je,
              {
                id: "fullScopeAllowed",
                label: n("on"),
                labelOff: n("off"),
                isChecked: s.fullScopeAllowed,
                onChange: u,
                "aria-label": n("fullScopeAllowed")
              }
            )
          }
        )
      }
    ),
    !s.fullScopeAllowed && /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a(Pt, {}),
      /* @__PURE__ */ a(
        oo,
        {
          name: s.clientId,
          id: s.id,
          type: "clients",
          save: d,
          isManager: c
        }
      )
    ] })
  ] });
}, MG = Be(
  () => Promise.resolve().then(() => rk)
), zk = {
  path: "/:realm/clients/:id/clientScopes/dedicated/mappers/:mapperId",
  element: /* @__PURE__ */ a(MG, {}),
  breadcrumb: (e) => e("mappingDetails"),
  handle: {
    access: "view-clients"
  }
}, hx = (e) => ({
  pathname: We(zk.path, e)
});
function FG() {
  const { adminClient: e } = de(), { t } = H(), n = Xe(), { realm: r, clientId: i } = zt(), { addAlert: s, addError: o } = we(), [l, c] = D();
  _e(() => e.clients.findOne({ id: i }), c, []);
  const d = (g) => Kn(Eu({ realm: r, clientId: i, tab: g })), u = d("mappers"), p = d("scope");
  if (!l)
    return /* @__PURE__ */ a(bt, {});
  const m = async (g) => {
    if (Array.isArray(g))
      try {
        await e.clients.addMultipleProtocolMappers(
          { id: l.id },
          g
        ), c(await e.clients.findOne({ id: l.id })), s(t("mappingCreatedSuccess"), pe.success);
      } catch (b) {
        o("mappingCreatedError", b);
      }
    else {
      const b = g;
      n(
        hx({
          realm: r,
          id: l.id,
          mapperId: b.id
        })
      );
    }
  }, f = async (g) => {
    try {
      await e.clients.delProtocolMapper({
        id: l.id,
        mapperId: g.id
      }), c({
        ...l,
        protocolMappers: l.protocolMappers?.filter(
          (b) => b.id !== g.id
        )
      }), s(t("mappingDeletedSuccess"), pe.success);
    } catch (b) {
      o("mappingDeletedError", b);
    }
    return !0;
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: l.clientId + "-dedicated",
        subKey: "dedicatedScopeExplain",
        divider: !1
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ x(
      Vn,
      {
        isBox: !0,
        mountOnEnter: !0,
        defaultLocation: Eu({
          realm: r,
          clientId: i,
          tab: "mappers"
        }),
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("mappers") }),
              "data-testid": "mappersTab",
              ...u,
              children: /* @__PURE__ */ a(
                tk,
                {
                  model: l,
                  onAdd: m,
                  onDelete: f,
                  detailLink: (g) => hx({ realm: r, id: l.id, mapperId: g })
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("scope") }),
              "data-testid": "scopeTab",
              ...p,
              children: /* @__PURE__ */ a(DG, { client: l })
            }
          )
        ]
      }
    ) })
  ] });
}
const $G = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: FG
}, Symbol.toStringTag, { value: "Module" })), zm = ({
  text: e,
  user: t,
  label: n
}) => {
  const { t: r } = H();
  return t ? /* @__PURE__ */ a(
    YS,
    {
      id: n,
      actions: /* @__PURE__ */ a(JS, { children: /* @__PURE__ */ a(Fk, { id: "code", text: e, label: n }) }),
      children: /* @__PURE__ */ a(
        Mi,
        {
          id: `text-area-${n}`,
          rows: 20,
          value: e,
          "aria-label": n
        }
      )
    }
  ) : /* @__PURE__ */ x(Pr, { variant: "lg", id: n, children: [
    /* @__PURE__ */ a(Ei, { titleText: /* @__PURE__ */ a(te, { children: r(`${n}No`) }), headingLevel: "h2" }),
    /* @__PURE__ */ a(Di, { children: r(`${n}IsDisabled`) })
  ] });
}, jG = ({
  protocolMappers: e
}) => {
  const [t, n] = D(0);
  return ze(() => {
    n(t + 1);
  }, [e]), /* @__PURE__ */ a(
    xt,
    {
      loader: () => Promise.resolve(e),
      ariaLabelKey: "effectiveProtocolMappers",
      searchPlaceholderKey: "searchForProtocol",
      "data-testid": "effective-protocol-mappers",
      columns: [
        {
          name: "mapperName",
          displayKey: "name"
        },
        {
          name: "containerName",
          displayKey: "parentClientScope"
        },
        {
          name: "type.category",
          displayKey: "category"
        },
        {
          name: "type.priority",
          displayKey: "priority"
        }
      ]
    },
    t
  );
}, BG = ({
  effectiveRoles: e
}) => {
  const [t, n] = D(0);
  return ze(() => {
    n(t + 1);
  }, [e]), /* @__PURE__ */ a(
    xt,
    {
      loader: () => Promise.resolve(e),
      ariaLabelKey: "effectiveRoleScopeMappings",
      searchPlaceholderKey: "searchForRole",
      "data-testid": "effective-role-scope-mappings",
      columns: [
        {
          name: "name",
          displayKey: "role"
        },
        {
          name: "containerId",
          displayKey: "origin"
        }
      ]
    },
    t
  );
}, UG = ({ clientId: e, protocol: t }) => {
  const { adminClient: n } = de(), r = "openid", { t: i } = H(), { enabled: s } = Dr(), { realm: o } = ye(), l = Tt().protocolMapperTypes[t], [c, d] = D([]), [u, p] = D(!1), [m, f] = D([r]), [g, b] = D(0), [v, y] = D(""), C = () => y(`${(/* @__PURE__ */ new Date()).getTime()}`), [S, P] = D(
    []
  ), [w, A] = D([]), [k, T] = D(""), [O, I] = D(""), [_, E] = D(""), L = Ct(null), F = Ct(null), R = Ct(null), M = Ct(null), U = Ct(null), K = Ke(), { hasAccess: G } = Nt(), N = G("view-users");
  return _e(
    () => n.clients.listOptionalClientScopes({ id: e }),
    ($) => d($),
    []
  ), _e(
    async () => {
      const $ = m.join(" "), q = await n.clients.evaluatePermission({
        id: e,
        roleContainer: o,
        scope: $,
        type: "granted"
      });
      return {
        mapperList: await n.clients.evaluateListProtocolMapper({
          id: e,
          scope: $
        }),
        effectiveRoles: q
      };
    },
    ({ mapperList: $, effectiveRoles: q }) => {
      P(q), $.map((V) => {
        V.type = l.find(
          (B) => B.id === V.protocolMapper
        );
      }), A($), C();
    },
    [m]
  ), _e(
    async () => {
      const $ = m.join(" "), q = K.getValues("user");
      return q ? await Promise.all([
        n.clients.evaluateGenerateAccessToken({
          id: e,
          userId: q[0],
          scope: $
        }),
        n.clients.evaluateGenerateUserInfo({
          id: e,
          userId: q[0],
          scope: $
        }),
        n.clients.evaluateGenerateIdToken({
          id: e,
          userId: q[0],
          scope: $
        })
      ]) : [];
    },
    ([$, q, V]) => {
      T(ja($)), I(ja(q)), E(ja(V));
    },
    [K.getValues("user"), m]
  ), /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ x(Te, { variant: "light", children: [
      s && /* @__PURE__ */ a(Rt, { className: "keycloak__section_intro__help", children: /* @__PURE__ */ x(tt, { children: [
        /* @__PURE__ */ a(zc, {}),
        " ",
        i("evaluateExplain")
      ] }) }),
      /* @__PURE__ */ x(St, { isHorizontal: !0, children: [
        /* @__PURE__ */ a(
          re,
          {
            label: i("scopeParameter"),
            fieldId: "scopeParameter",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: i("scopeParameterHelp"),
                fieldLabelId: "scopeParameter"
              }
            ),
            children: /* @__PURE__ */ x(ca, { hasGutter: !0, children: [
              /* @__PURE__ */ a($t, { isFilled: !0, children: /* @__PURE__ */ a(
                ht,
                {
                  toggleId: "scopeParameter",
                  variant: mt.typeaheadMulti,
                  typeAheadAriaLabel: i("scopeParameter"),
                  onToggle: () => p(!u),
                  isOpen: u,
                  selections: m,
                  onSelect: ($) => {
                    const q = $;
                    m.includes(q) ? q !== r && f(m.filter((V) => V !== q)) : f([...m, q]);
                  },
                  "aria-labelledby": i("scopeParameter"),
                  placeholderText: i("scopeParameterPlaceholder"),
                  children: c.map(($, q) => /* @__PURE__ */ a(Re, { value: $.name, children: $.name }, q))
                }
              ) }),
              /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(ni, { className: "keycloak__scopes_evaluate__clipboard-copy", children: m.join(" ") }) })
            ] })
          }
        ),
        N && /* @__PURE__ */ a(He, { ...K, children: /* @__PURE__ */ a(
          tb,
          {
            name: "user",
            label: "users",
            helpText: i("userHelp"),
            defaultValue: "",
            variant: mt.typeahead,
            isRequired: !0
          }
        ) })
      ] })
    ] }),
    /* @__PURE__ */ x(Ha, { hasGutter: !0, className: "keycloak__scopes_evaluate__tabs", children: [
      /* @__PURE__ */ x(Wt, { span: 8, children: [
        /* @__PURE__ */ a(
          vo,
          {
            "aria-labelledby": "pf-tab-0-effectiveProtocolMappers",
            eventKey: 0,
            id: "effectiveProtocolMappers",
            ref: L,
            children: /* @__PURE__ */ a(jG, { protocolMappers: w })
          }
        ),
        /* @__PURE__ */ a(
          vo,
          {
            "aria-labelledby": "pf-tab-0-effectiveRoleScopeMappings",
            eventKey: 1,
            id: "effectiveRoleScopeMappings",
            ref: F,
            hidden: !0,
            children: /* @__PURE__ */ a(BG, { effectiveRoles: S })
          }
        ),
        /* @__PURE__ */ a(
          vo,
          {
            "aria-labelledby": i("generatedAccessToken"),
            eventKey: 2,
            id: "tab-generated-access-token",
            ref: R,
            hidden: !0,
            children: /* @__PURE__ */ a(
              zm,
              {
                text: k,
                user: K.getValues("user"),
                label: "generatedAccessToken"
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          vo,
          {
            "aria-labelledby": i("generatedIdToken"),
            eventKey: 3,
            id: "tab-generated-id-token",
            ref: M,
            hidden: !0,
            children: /* @__PURE__ */ a(
              zm,
              {
                text: _,
                user: K.getValues("user"),
                label: "generatedIdToken"
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          vo,
          {
            "aria-labelledby": i("generatedUserInfo"),
            eventKey: 4,
            id: "tab-generated-user-info",
            ref: U,
            hidden: !0,
            children: /* @__PURE__ */ a(
              zm,
              {
                text: O,
                user: K.getValues("user"),
                label: "generatedUserInfo"
              }
            )
          }
        )
      ] }),
      /* @__PURE__ */ a(Wt, { span: 4, children: /* @__PURE__ */ x(
        Ka,
        {
          id: "tabs",
          isVertical: !0,
          activeKey: g,
          onSelect: ($, q) => b(q),
          children: [
            /* @__PURE__ */ a(
              Ee,
              {
                id: "effectiveProtocolMappers",
                "aria-controls": "effectiveProtocolMappers",
                "data-testid": "effective-protocol-mappers-tab",
                eventKey: 0,
                title: /* @__PURE__ */ x(Pe, { children: [
                  i("effectiveProtocolMappers"),
                  " ",
                  /* @__PURE__ */ a(
                    le,
                    {
                      fieldLabelId: "effectiveProtocolMappers",
                      helpText: i("effectiveProtocolMappersHelp"),
                      noVerticalAlign: !1,
                      unWrap: !0
                    }
                  )
                ] }),
                tabContentRef: L
              }
            ),
            /* @__PURE__ */ a(
              Ee,
              {
                id: "effectiveRoleScopeMappings",
                "aria-controls": "effectiveRoleScopeMappings",
                "data-testid": "effective-role-scope-mappings-tab",
                eventKey: 1,
                title: /* @__PURE__ */ x(Pe, { children: [
                  i("effectiveRoleScopeMappings"),
                  " ",
                  /* @__PURE__ */ a(
                    le,
                    {
                      fieldLabelId: "effectiveRoleScopeMappings",
                      helpText: i("effectiveRoleScopeMappingsHelp"),
                      noVerticalAlign: !1,
                      unWrap: !0
                    }
                  )
                ] }),
                tabContentRef: F
              }
            ),
            /* @__PURE__ */ a(
              Ee,
              {
                id: "generatedAccessToken",
                "aria-controls": "generatedAccessToken",
                "data-testid": "generated-access-token-tab",
                eventKey: 2,
                title: /* @__PURE__ */ x(Pe, { children: [
                  i("generatedAccessToken"),
                  " ",
                  /* @__PURE__ */ a(
                    le,
                    {
                      fieldLabelId: "generatedAccessToken",
                      helpText: i("generatedAccessTokenHelp"),
                      noVerticalAlign: !1,
                      unWrap: !0
                    }
                  )
                ] }),
                tabContentRef: R
              }
            ),
            /* @__PURE__ */ a(
              Ee,
              {
                id: "generatedIdToken",
                "aria-controls": "generatedIdToken",
                "data-testid": "generated-id-token-tab",
                eventKey: 3,
                title: /* @__PURE__ */ x(Pe, { children: [
                  i("generatedIdToken"),
                  " ",
                  /* @__PURE__ */ a(
                    le,
                    {
                      fieldLabelId: "generatedIdToken",
                      helpText: i("generatedIdTokenHelp"),
                      noVerticalAlign: !1,
                      unWrap: !0
                    }
                  )
                ] }),
                tabContentRef: M
              }
            ),
            /* @__PURE__ */ a(
              Ee,
              {
                id: "generatedUserInfo",
                "aria-controls": "generatedUserInfo",
                "data-testid": "generated-user-info-tab",
                eventKey: 4,
                title: /* @__PURE__ */ x(Pe, { children: [
                  i("generatedUserInfo"),
                  " ",
                  /* @__PURE__ */ a(
                    le,
                    {
                      fieldLabelId: "generatedUserInfo",
                      helpText: i("generatedUserInfoHelp"),
                      noVerticalAlign: !1,
                      unWrap: !0
                    }
                  )
                ] }),
                tabContentRef: U
              }
            )
          ]
        },
        v
      ) })
    ] })
  ] });
}, VG = Be(() => Promise.resolve().then(() => _Q)), cb = {
  path: "/:realm/users/:id/:tab",
  element: /* @__PURE__ */ a(VG, {}),
  breadcrumb: (e) => e("userDetails"),
  handle: {
    access: "query-users"
  }
}, ri = (e) => ({
  pathname: We(cb.path, e)
}), KG = ({ client: e }) => {
  const { adminClient: t } = de(), { t: n } = H(), { addAlert: r, addError: i } = we(), { realm: s } = ye(), [o, l] = D(), { hasAccess: c } = Nt(), d = c("manage-clients");
  _e(
    () => t.clients.getServiceAccountUser({
      id: e.id
    }),
    (p) => l(p),
    []
  );
  const u = async (p) => {
    try {
      const m = p.filter((f) => f.client === void 0).map((f) => f.role).flat();
      await t.users.addRealmRoleMappings({
        id: o?.id,
        roles: m
      }), await Promise.all(
        p.filter((f) => f.client !== void 0).map(
          (f) => t.users.addClientRoleMappings({
            id: o?.id,
            clientUniqueId: f.client.id,
            roles: [f.role]
          })
        )
      ), r(n("roleMappingUpdatedSuccess"), pe.success);
    } catch (m) {
      i("roleMappingUpdatedError", m);
    }
  };
  return o ? /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ x(Te, { className: "pf-v5-u-pb-0", children: [
      /* @__PURE__ */ a(Ni, { className: "pf-v5-c-alert__icon keycloak--service-account--info-text" }),
      /* @__PURE__ */ a("span", { className: "pf-v5-u-pl-sm", children: /* @__PURE__ */ x(as, { i18nKey: "manageServiceAccountUser", children: [
        "",
        /* @__PURE__ */ a(
          Ae,
          {
            to: ri({ realm: s, id: o.id, tab: "settings" }),
            children: { link: o.username }
          }
        )
      ] }) })
    ] }),
    /* @__PURE__ */ a(
      oo,
      {
        name: e.clientId,
        id: o.id,
        type: "users",
        isManager: d || e.access?.configure,
        save: u
      }
    )
  ] }) : /* @__PURE__ */ a(bt, {});
}, HG = ({
  id: e,
  open: t,
  toggleDialog: n,
  protocol: r = "openid-connect"
}) => {
  const { adminClient: i } = de(), { realm: s } = ye(), { t: o } = H(), { enabled: l } = Dr(), d = Tt().clientInstallations[r], [u, p] = D(
    d[d.length - 1].id
  ), [m, f] = D(), [g, b] = D(!1), v = nt(
    () => d.find((C) => C.id === u) ?? null,
    [u]
  ), y = (C) => C.replace(
    /<PrivateKeyPem>.*<\/PrivateKeyPem>/gs,
    `<PrivateKeyPem>${o("privateKeyMask")}</PrivateKeyPem>`
  );
  return _e(
    async () => {
      if (v?.mediaType === "application/zip")
        return (await Ai(
          `${wi(
            i.baseUrl
          )}admin/realms/${s}/clients/${e}/installation/providers/${u}`,
          {
            method: "GET",
            headers: so(
              await i.getAccessToken()
            )
          }
        )).arrayBuffer();
      {
        const C = await i.clients.getInstallationProviders({
          id: e,
          providerId: u
        });
        return typeof C == "string" ? y(C) : ja(C);
      }
    },
    (C) => f(C),
    [e, u]
  ), ze(() => f(""), [e, u]), /* @__PURE__ */ a(
    hs,
    {
      titleKey: o("downloadAdaptorTitle"),
      continueButtonLabel: o("download"),
      onConfirm: () => {
        gs.saveAs(
          new Blob([m], { type: v?.mediaType }),
          v?.filename
        );
      },
      open: t,
      toggleDialog: n,
      variant: Et.medium,
      children: /* @__PURE__ */ a(St, { children: /* @__PURE__ */ x(Xs, { hasGutter: !0, children: [
        /* @__PURE__ */ a(Jn, { children: /* @__PURE__ */ a(
          re,
          {
            fieldId: "type",
            label: o("formatOption"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: o("downloadType"),
                fieldLabelId: "formatOption"
              }
            ),
            children: /* @__PURE__ */ a(
              Dn,
              {
                isOpen: g,
                onOpenChange: (C) => b(C),
                toggle: (C) => /* @__PURE__ */ a(
                  ut,
                  {
                    id: "type",
                    ref: C,
                    onClick: () => b(!g),
                    isExpanded: g,
                    children: u
                  }
                ),
                selected: u,
                onSelect: (C, S) => {
                  p(S?.toString() || ""), b(!1);
                },
                "aria-label": o("selectOne"),
                popperProps: {
                  appendTo: document.body
                },
                children: /* @__PURE__ */ a(ea, { children: d.map((C) => /* @__PURE__ */ a(
                  Re,
                  {
                    value: C.id,
                    isSelected: u === C.id,
                    description: l ? C.helpText : void 0,
                    children: C.displayType
                  },
                  C.id
                )) })
              }
            )
          }
        ) }),
        !v?.downloadOnly && /* @__PURE__ */ a(Jn, { isFilled: !0, children: /* @__PURE__ */ a(
          re,
          {
            fieldId: "details",
            label: o("details"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: o("detailsHelp"),
                fieldLabelId: "details"
              }
            ),
            children: /* @__PURE__ */ a(
              Mi,
              {
                id: "details",
                readOnly: !0,
                rows: 12,
                resizeOrientation: "vertical",
                value: m && typeof m == "string" ? m : "",
                "aria-label": "text area example"
              }
            )
          }
        ) })
      ] }) })
    }
  );
}, id = ({ id: e, type: t }) => {
  const { adminClient: n } = de(), { t: r } = H(), i = Xe(), { realm: s } = ye(), [o, l] = D(""), [c, d] = D(), u = ba(), p = (g) => {
    switch (t) {
      case "clients":
        return n.clients.updateFineGrainPermission(
          { id: e },
          { enabled: g }
        );
      case "users":
        return n.realms.updateUsersManagementPermissions({
          realm: s,
          enabled: g
        });
      case "groups":
        return n.groups.updatePermission({ id: e }, { enabled: g });
      case "roles":
        return n.roles.updatePermission({ id: e }, { enabled: g });
      case "identityProviders":
        return n.identityProviders.updatePermission(
          { alias: e },
          { enabled: g }
        );
    }
  };
  _e(
    () => Promise.all([
      n.clients.find({
        search: !0,
        clientId: s === "master" ? "master-realm" : "realm-management"
      }),
      (() => {
        switch (t) {
          case "clients":
            return n.clients.listFineGrainPermissions({ id: e });
          case "users":
            return n.realms.getUsersManagementPermissions({
              realm: s
            });
          case "groups":
            return n.groups.listPermissions({ id: e });
          case "roles":
            return n.roles.listPermissions({ id: e });
          case "identityProviders":
            return n.identityProviders.listPermissions({
              alias: e
            });
        }
      })()
    ]),
    ([g, b]) => {
      l(g[0]?.id), d(b);
    },
    [e]
  );
  const [m, f] = Ve({
    titleKey: "permissionsDisable",
    messageKey: "permissionsDisableConfirm",
    continueButtonLabel: "confirm",
    onConfirm: async () => {
      const g = await p(!1);
      d(g);
    }
  });
  return c ? /* @__PURE__ */ x(Te, { variant: "light", children: [
    /* @__PURE__ */ a(f, {}),
    /* @__PURE__ */ x(ka, { isFlat: !0, children: [
      /* @__PURE__ */ a(Sr, { children: r("permissions") }),
      /* @__PURE__ */ x(ma, { children: [
        r(`${t}PermissionsHint`),
        /* @__PURE__ */ a(St, { isHorizontal: !0, className: "pf-v5-u-pt-md", children: /* @__PURE__ */ a(
          re,
          {
            hasNoPaddingTop: !0,
            className: "permission-label",
            label: r("permissionsEnabled"),
            fieldId: "permissionsEnabled",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("permissionsEnabledHelp"),
                fieldLabelId: "permissionsEnabled"
              }
            ),
            children: /* @__PURE__ */ a(
              Je,
              {
                id: "permissionsEnabled",
                "data-testid": "permissionSwitch",
                label: r("on"),
                labelOff: r("off"),
                isChecked: c.enabled,
                onChange: async (g, b) => {
                  if (b) {
                    const v = await p(b);
                    d(v);
                  } else
                    m();
                },
                "aria-label": r("permissionsEnabled")
              }
            )
          }
        ) })
      ] })
    ] }),
    c.enabled && /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ x(ka, { isFlat: !0, className: "pf-v5-u-mt-lg", children: [
        /* @__PURE__ */ a(Sr, { children: r("permissionsList") }),
        /* @__PURE__ */ a(ma, { children: /* @__PURE__ */ x(as, { i18nKey: "permissionsListIntro", children: [
          " ",
          /* @__PURE__ */ a("strong", { children: {
            realm: s === "master" ? "master-realm" : "realm-management"
          } }),
          "."
        ] }) })
      ] }),
      /* @__PURE__ */ a(ka, { isFlat: !0, className: "keycloak__permission__permission-table", children: /* @__PURE__ */ a(ma, { className: "pf-v5-u-p-0", children: /* @__PURE__ */ x(Cn, { "aria-label": r("permissionsList"), variant: "compact", children: [
        /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
          /* @__PURE__ */ a(Ne, { id: "permissionsScopeName", children: r("permissionsScopeName") }),
          /* @__PURE__ */ a(Ne, { id: "description", children: r("description") })
        ] }) }),
        /* @__PURE__ */ a(yn, { children: u(
          Object.entries(c.scopePermissions || {}),
          ([g]) => g
        ).map(([g, b]) => /* @__PURE__ */ x(it, { children: [
          /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
            Ae,
            {
              to: Bs({
                realm: s,
                id: o,
                permissionType: "scope",
                permissionId: b
              }),
              children: g
            }
          ) }),
          /* @__PURE__ */ a(ke, { children: r(`scopePermissions.${t}.${g}-description`) }),
          /* @__PURE__ */ a(ke, { isActionCell: !0, children: /* @__PURE__ */ a(
            dl,
            {
              items: [
                {
                  title: r("edit"),
                  onClick() {
                    i(
                      Bs({
                        realm: s,
                        id: o,
                        permissionType: "scope",
                        permissionId: b
                      })
                    );
                  }
                }
              ]
            }
          ) })
        ] }, b)) })
      ] }) }) })
    ] })
  ] }) : /* @__PURE__ */ a(bt, {});
}, zG = Be(() => Promise.resolve().then(() => Ap)), db = {
  path: "/:realm/realm-settings",
  element: /* @__PURE__ */ a(zG, {}),
  breadcrumb: (e) => e("realmSettings"),
  handle: {
    access: "view-realm"
  }
}, qk = {
  ...db,
  path: "/:realm/realm-settings/:tab"
}, ac = (e) => {
  const t = e.tab ? qk.path : db.path;
  return {
    pathname: We(t, e)
  };
}, qG = ({
  defaultRoleName: e,
  toDetail: t,
  messageBundle: n,
  ...r
}) => {
  const { t: i } = H(n), { realm: s } = ye(), { hasAccess: o, hasSomeAccess: l } = Nt(), c = o("view-realm") && l("view-clients", "manage-clients");
  return r.name !== e ? /* @__PURE__ */ a(Ae, { to: t(r.id), children: r.name }) : /* @__PURE__ */ x(te, { children: [
    c ? /* @__PURE__ */ a(Ae, { to: ac({ realm: s, tab: "user-registration" }), children: r.name }) : /* @__PURE__ */ a("span", { children: r.name }),
    /* @__PURE__ */ a(
      le,
      {
        helpText: i(`${n}:defaultRole`),
        fieldLabelId: "defaultRole"
      }
    )
  ] });
}, Gk = ({
  loader: e,
  paginated: t = !0,
  parentRoleId: n,
  messageBundle: r = "roles",
  toCreate: i,
  toDetail: s,
  isReadOnly: o
}) => {
  const { adminClient: l } = de(), { t: c } = H(), d = Xe(), { addAlert: u, addError: p } = we(), { realmRepresentation: m } = ye(), [f, g] = D(), [b, v] = Ve({
    titleKey: "roleDeleteConfirm",
    messageKey: c("roleDeleteConfirmDialog", {
      selectedRoleName: f ? f.name : ""
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        n ? await l.roles.delCompositeRoles({ id: n }, [
          f
        ]) : await l.roles.delById({
          id: f.id
        }), g(void 0), u(c("roleDeletedSuccess"), pe.success);
      } catch (y) {
        p("roleDeleteError", y);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(v, {}),
    /* @__PURE__ */ a(
      xt,
      {
        loader: e,
        ariaLabelKey: "roleList",
        searchPlaceholderKey: "searchForRoles",
        isPaginated: t,
        toolbarItem: !o && /* @__PURE__ */ a(
          z,
          {
            "data-testid": "create-role",
            component: (y) => /* @__PURE__ */ a(Ae, { ...y, to: i }),
            children: c("createRole")
          }
        ),
        actions: o ? void 0 : [
          {
            title: c("delete"),
            onRowClick: (y) => {
              g(y), m?.defaultRole && y.name === m.defaultRole.name ? u(
                c("defaultRoleDeleteError"),
                pe.danger
              ) : b();
            }
          }
        ],
        columns: [
          {
            name: "name",
            displayKey: "roleName",
            cellRenderer: (y) => /* @__PURE__ */ a(
              qG,
              {
                ...y,
                defaultRoleName: m?.defaultRole?.name,
                toDetail: s,
                messageBundle: r
              }
            )
          },
          {
            name: "composite",
            displayKey: "composite",
            cellFormatters: [ed(), un()]
          },
          {
            name: "description",
            cellFormatters: [Vi(c)]
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            hasIcon: !0,
            message: c(`noRoles-${r}`),
            instructions: o ? "" : c(`noRolesInstructions-${r}`),
            primaryActionText: o ? "" : c("createRole"),
            onPrimaryAction: () => d(i)
          }
        )
      },
      f ? f.id : "roleList"
    )
  ] });
}, GG = Be(() => Promise.resolve().then(() => AQ)), ub = {
  path: "/:realm/users",
  element: /* @__PURE__ */ a(GG, {}),
  breadcrumb: (e) => e("titleUsers"),
  handle: {
    access: "query-users"
  }
}, Wk = {
  ...ub,
  path: "/:realm/users/:tab"
}, Vs = (e) => {
  const t = e.tab ? Wk.path : ub.path;
  return {
    pathname: We(t, e)
  };
}, th = (e) => e?.startsWith("lightweight-"), WG = (e) => {
  const { realm: t } = ye(), { t: n } = H();
  return /* @__PURE__ */ x(Ae, { to: ri({ realm: t, id: e.userId, tab: "sessions" }), children: [
    e.username,
    e.transientUser && /* @__PURE__ */ x(te, { children: [
      " ",
      /* @__PURE__ */ a(Ht, { content: n("transientUserTooltip"), children: /* @__PURE__ */ a(
        pn,
        {
          "data-testid": "user-details-label-transient-user",
          icon: /* @__PURE__ */ a(Ni, {}),
          isCompact: !0,
          children: n("transientUser")
        }
      ) })
    ] })
  ] });
}, XG = (e) => {
  const { realm: t } = ye();
  return /* @__PURE__ */ a(au, { variant: gc.inline, children: Object.entries(e.clients).map(([n, r]) => /* @__PURE__ */ a(Hh, { children: /* @__PURE__ */ a(Ae, { to: _i({ realm: t, clientId: n, tab: "sessions" }), children: r }) }, n)) });
};
function Tp({
  loader: e,
  hiddenColumns: t = [],
  emptyInstructions: n,
  logoutUser: r,
  filter: i,
  isSearching: s,
  isPaginated: o
}) {
  const { keycloak: l } = La(), { adminClient: c } = de(), { realm: d } = ye(), { whoAmI: u } = ga(), p = Xe(), { t: m } = H(), { addError: f } = we(), g = ai(), [b, v] = D(0), y = () => v((T) => T + 1), C = !!Do(cb.path), S = nt(() => [
    {
      name: "username",
      displayKey: "user",
      cellRenderer: WG
    },
    {
      name: "type",
      displayKey: "type"
    },
    {
      name: "start",
      displayKey: "started",
      cellRenderer: (O) => g(new Date(O.start))
    },
    {
      name: "lastAccess",
      displayKey: "lastAccess",
      cellRenderer: (O) => g(new Date(O.lastAccess))
    },
    {
      name: "ipAddress",
      displayKey: "ipAddress"
    },
    {
      name: "clients",
      displayKey: "clients",
      cellRenderer: XG
    }
  ].filter(
    ({ name: O }) => !t.includes(O)
  ), [d, t]), [P, w] = Ve({
    titleKey: "logoutAllSessions",
    messageKey: "logoutAllDescription",
    continueButtonLabel: "confirm",
    onConfirm: async () => {
      try {
        await c.users.logout({ id: r }), C && th(r) ? p(Vs({ realm: d })) : y();
      } catch (T) {
        f("logoutAllSessionsError", T);
      }
    }
  });
  async function A(T) {
    const O = T.data;
    await c.realms.deleteSession({
      realm: d,
      session: O.id,
      isOffline: !0
    }), y();
  }
  async function k(T) {
    const O = T.data;
    await c.realms.deleteSession({
      realm: d,
      session: O.id,
      isOffline: !1
    }), O.userId === u.getUserId() ? await l.logout({ redirectUri: "" }) : C && th(O.userId) ? p(Vs({ realm: d })) : y();
  }
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(w, {}),
    /* @__PURE__ */ a(
      xt,
      {
        loader: e,
        ariaLabelKey: "titleSessions",
        searchPlaceholderKey: "searchForSession",
        isPaginated: o,
        isSearching: s,
        searchTypeComponent: i,
        toolbarItem: r && /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(z, { onClick: P, children: m("logoutAllSessions") }) }),
        columns: S,
        actionResolver: (T) => T.data.type === "Offline" || T.data.type === "OFFLINE" ? [
          {
            title: m("revoke"),
            onClick: () => A(T)
          }
        ] : [
          {
            title: m("signOut"),
            onClick: () => k(T)
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            hasIcon: !0,
            icon: pw,
            message: m("noSessions"),
            instructions: n || m("noSessionsDescription")
          }
        )
      },
      b
    )
  ] });
}
const lee = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: Tp
}, Symbol.toStringTag, { value: "Module" })), YG = ({ client: e }) => {
  const { adminClient: t } = de(), { t: n } = H();
  return /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(
    Tp,
    {
      loader: async (i, s) => {
        const o = (c) => (d) => d.map((u) => ({
          type: c,
          ...u
        }));
        return (await Promise.all([
          t.clients.listSessions({ id: e.id, first: i, max: s }).then(o(n("sessionsType.regularSSO"))),
          t.clients.listOfflineSessions({
            id: e.id,
            first: i,
            max: s
          }).then(o(n("sessionsType.offline")))
        ])).flat();
      },
      hiddenColumns: ["clients"],
      emptyInstructions: n("noSessionsForClient")
    }
  ) });
}, JG = (e) => {
  const { t } = H(), { watch: n } = De(), r = n("protocol"), { client: i } = e;
  return /* @__PURE__ */ a(
    gl,
    {
      label: t("jumpToSection"),
      className: "pf-v5-u-px-lg pf-v5-u-pb-lg",
      sections: [
        {
          title: t("generalSettings"),
          panel: /* @__PURE__ */ a(St, { isHorizontal: !0, children: /* @__PURE__ */ a(
            Gg,
            {
              protocol: i.protocol,
              hasConfigureAccess: i.access?.configure
            }
          ) })
        },
        {
          title: t("accessSettings"),
          panel: /* @__PURE__ */ a(zz, { ...e })
        },
        {
          title: t("samlCapabilityConfig"),
          isHidden: r !== "saml" || i.bearerOnly,
          panel: /* @__PURE__ */ a(eq, {})
        },
        {
          title: t("signatureAndEncryption"),
          isHidden: r !== "saml" || i.bearerOnly,
          panel: /* @__PURE__ */ a(tq, {})
        },
        {
          title: t("capabilityConfig"),
          isHidden: r !== "openid-connect" || i.bearerOnly,
          panel: /* @__PURE__ */ a(qg, {})
        },
        {
          title: t("loginSettings"),
          isHidden: i.bearerOnly,
          panel: /* @__PURE__ */ a(Gz, { access: i.access?.configure })
        },
        {
          title: t("logoutSettings"),
          isHidden: i.bearerOnly,
          panel: /* @__PURE__ */ a(Wz, { ...e })
        }
      ]
    }
  );
}, ZG = Be(() => Promise.resolve().then(() => pb)), Xk = {
  path: "/:realm/clients/:clientId/clientScopes/:tab",
  element: /* @__PURE__ */ a(ZG, {}),
  breadcrumb: (e) => e("clientSettings"),
  handle: {
    access: "view-clients"
  }
}, gx = (e) => ({
  pathname: We(Xk.path, e)
}), QG = Be(() => Promise.resolve().then(() => AG)), Yk = {
  path: "/:realm/clients/:clientId/roles/new",
  element: /* @__PURE__ */ a(QG, {}),
  breadcrumb: (e) => e("createRole"),
  handle: {
    access: "query-clients"
  }
}, eW = (e) => ({
  pathname: We(Yk.path, e)
}), tW = ({
  onChange: e,
  value: t,
  save: n,
  client: r,
  toggleDownloadDialog: i,
  toggleDeleteDialog: s
}) => {
  const { t: o } = H(), [l, c] = Ve({
    titleKey: "disableConfirmClientTitle",
    messageKey: "disableConfirmClient",
    continueButtonLabel: "disable",
    onConfirm: () => {
      e(!t), n();
    }
  }), d = nt(() => {
    const f = yl(
      o,
      r.protocol ?? "openid-connect"
    );
    return [{ text: r.bearerOnly ? /* @__PURE__ */ a(
      Ht,
      {
        "data-testid": "bearer-only-explainer-tooltip",
        content: o("explainBearerOnly"),
        children: /* @__PURE__ */ a(
          pn,
          {
            "data-testid": "bearer-only-explainer-label",
            icon: /* @__PURE__ */ a(Ni, {}),
            children: f
          }
        )
      }
    ) : /* @__PURE__ */ a(pn, { children: f }) }];
  }, [r, o]), { hasAccess: u } = Nt(), p = u("manage-clients") || r.access?.configure, m = [
    /* @__PURE__ */ a(Ue, { onClick: i, children: o("downloadAdapterConfig") }, "download"),
    /* @__PURE__ */ a(Ue, { onClick: () => gO(r), children: o("export") }, "export"),
    ...!nc(r) && p ? [
      /* @__PURE__ */ a(Pt, {}, "divider"),
      /* @__PURE__ */ a(
        Ue,
        {
          "data-testid": "delete-client",
          onClick: s,
          children: o("delete")
        },
        "delete"
      )
    ] : []
  ];
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(c, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: r.clientId,
        subKey: "clientsExplain",
        badges: d,
        divider: !1,
        isReadOnly: !p,
        helpTextKey: "enableDisable",
        dropdownItems: m,
        isEnabled: t,
        onToggle: (f) => {
          f ? (e(f), n()) : l();
        }
      }
    )
  ] });
};
function nW() {
  const { adminClient: e } = de(), { t } = H(), { addAlert: n, addError: r } = we(), { realm: i } = ye(), { hasAccess: s } = Nt(), o = aa(), l = s("manage-authorization"), c = s("view-authorization"), d = s("manage-clients"), u = s("view-clients"), p = s("view-users"), m = o(Fn.AdminFineGrainedAuthz) && (l || c), f = Xe(), [g, b] = st(), [v, y] = st(), C = Ke(), { clientId: S } = zt(), [P, w] = D(0), A = rt({
    control: C.control,
    name: "clientAuthenticatorType",
    defaultValue: "client-secret"
  }), [k, T] = D(), O = async () => {
    const ge = await e.clients.listRoles({ id: S });
    return wr(ge, (Se) => Se.name?.toUpperCase());
  }, I = (ge) => Kn(
    _i({
      realm: i,
      clientId: S,
      tab: ge
    })
  ), _ = I("settings"), E = I("keys"), L = I("credentials"), F = I("roles"), R = I("clientScopes"), M = I("authorization"), U = I("serviceAccount"), K = I("sessions"), G = I("permissions"), N = I("advanced"), $ = (ge) => Kn(
    gx({
      realm: i,
      clientId: S,
      tab: ge
    })
  ), q = $("setup"), V = $("evaluate"), B = (ge) => Kn(
    Ru({
      realm: i,
      clientId: S,
      tab: ge
    })
  ), Z = B("settings"), X = B("resources"), Q = B("scopes"), ie = B("policies"), me = B("permissions"), ee = B("evaluate"), ce = B("export"), [ae, Oe] = Ve({
    titleKey: "clientDeleteConfirmTitle",
    messageKey: "clientDeleteConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.clients.del({ id: S }), n(t("clientDeletedSuccess"), pe.success), f(js({ realm: i }));
      } catch (ge) {
        r("clientDeleteError", ge);
      }
    }
  }), Ie = (ge) => {
    C.reset({ ...ge }), Pn(ge, C.setValue), ge.attributes?.["acr.loa.map"] && C.setValue(
      Fe("attributes.acr.loa.map"),
      // @ts-ignore
      Object.entries(JSON.parse(ge.attributes["acr.loa.map"])).flatMap(
        ([Se, J]) => ({ key: Se, value: J })
      )
    );
  };
  _e(
    () => e.clients.findOne({ id: S }),
    (ge) => {
      if (!ge)
        throw new Error(t("notFound"));
      T(wc(ge)), Ie(ge);
    },
    [S, P]
  );
  const Me = async ({ confirmed: ge = !1, messageKey: Se = "clientSaveSuccess" } = {
    confirmed: !1,
    messageKey: "clientSaveSuccess"
  }) => {
    if (!await C.trigger())
      return;
    if (!k?.publicClient && k?.clientAuthenticatorType !== A && !ge) {
      y();
      return;
    }
    const J = ta(C.getValues()), W = ta(J);
    W.attributes?.["acr.loa.map"] && (W.attributes["acr.loa.map"] = JSON.stringify(
      Object.fromEntries(
        W.attributes["acr.loa.map"].filter(({ key: Y }) => Y !== "").map(({ key: Y, value: oe }) => [Y, oe])
      )
    ));
    try {
      const Y = {
        ...k,
        ...W
      };
      Y.clientId = Y.clientId?.trim(), await e.clients.update({ id: S }, Y), Ie(Y), T(Y), n(t(Se), pe.success);
    } catch (Y) {
      r("clientSaveError", Y);
    }
  };
  return k ? /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      hs,
      {
        continueButtonLabel: "yes",
        cancelButtonLabel: "no",
        titleKey: t("changeAuthenticatorConfirmTitle", {
          clientAuthenticatorType: A
        }),
        open: v,
        toggleDialog: y,
        onConfirm: () => Me({ confirmed: !0 }),
        children: /* @__PURE__ */ a(te, { children: t("changeAuthenticatorConfirm", {
          clientAuthenticatorType: A
        }) })
      }
    ),
    /* @__PURE__ */ a(Oe, {}),
    g && /* @__PURE__ */ a(
      HG,
      {
        id: k.id,
        protocol: k.protocol,
        open: !0,
        toggleDialog: b
      }
    ),
    /* @__PURE__ */ a(
      be,
      {
        name: "enabled",
        control: C.control,
        defaultValue: !0,
        render: ({ field: ge }) => /* @__PURE__ */ a(
          tW,
          {
            value: ge.value,
            onChange: ge.onChange,
            client: k,
            save: Me,
            toggleDeleteDialog: ae,
            toggleDownloadDialog: b
          }
        )
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(He, { ...C, children: /* @__PURE__ */ x(
      Vn,
      {
        "data-testid": "client-tabs",
        "aria-label": "client-tabs",
        isBox: !0,
        mountOnEnter: !0,
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              id: "settings",
              "data-testid": "clientSettingsTab",
              title: /* @__PURE__ */ a(Pe, { children: t("settings") }),
              ..._,
              children: /* @__PURE__ */ a(
                JG,
                {
                  client: k,
                  save: () => Me(),
                  reset: () => Ie(k)
                }
              )
            }
          ),
          (!k.publicClient && !nc(k) || k.protocol === "saml") && /* @__PURE__ */ x(
            Ee,
            {
              id: "keys",
              "data-testid": "keysTab",
              title: /* @__PURE__ */ a(Pe, { children: t("keys") }),
              ...E,
              children: [
                k.protocol === "openid-connect" && /* @__PURE__ */ a(
                  vG,
                  {
                    clientId: S,
                    save: Me,
                    hasConfigureAccess: k.access?.configure
                  }
                ),
                k.protocol === "saml" && /* @__PURE__ */ a(SG, { clientId: S, save: Me })
              ]
            }
          ),
          !k.publicClient && !nc(k) && (u || k.access?.configure || k.access?.view) && /* @__PURE__ */ a(
            Ee,
            {
              id: "credentials",
              title: /* @__PURE__ */ a(Pe, { children: t("credentials") }),
              ...L,
              children: /* @__PURE__ */ a(
                sG,
                {
                  client: k,
                  save: Me,
                  refresh: () => w(P + 1)
                },
                P
              )
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              id: "roles",
              "data-testid": "rolesTab",
              title: /* @__PURE__ */ a(Pe, { children: t("roles") }),
              ...F,
              children: /* @__PURE__ */ a(
                Gk,
                {
                  loader: O,
                  paginated: !1,
                  messageBundle: "client",
                  toCreate: eW({ realm: i, clientId: k.id }),
                  toDetail: (ge) => lb({
                    realm: i,
                    clientId: k.id,
                    id: ge,
                    tab: "details"
                  }),
                  isReadOnly: !(d || k.access?.configure)
                }
              )
            }
          ),
          !nc(k) && !k.bearerOnly && /* @__PURE__ */ a(
            Ee,
            {
              id: "clientScopes",
              "data-testid": "clientScopesTab",
              title: /* @__PURE__ */ a(Pe, { children: t("clientScopes") }),
              ...R,
              children: /* @__PURE__ */ x(
                Vn,
                {
                  defaultLocation: gx({
                    realm: i,
                    clientId: S,
                    tab: "setup"
                  }),
                  children: [
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "setup",
                        "data-testid": "clientScopesSetupTab",
                        title: /* @__PURE__ */ a(Pe, { children: t("setup") }),
                        ...q,
                        children: /* @__PURE__ */ a(
                          NG,
                          {
                            clientName: k.clientId,
                            clientId: S,
                            protocol: k.protocol,
                            fineGrainedAccess: k.access?.manage
                          }
                        )
                      }
                    ),
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "evaluate",
                        "data-testid": "clientScopesEvaluateTab",
                        title: /* @__PURE__ */ a(Pe, { children: t("evaluate") }),
                        ...V,
                        children: /* @__PURE__ */ a(
                          UG,
                          {
                            clientId: S,
                            protocol: k.protocol
                          }
                        )
                      }
                    )
                  ]
                }
              )
            }
          ),
          k.authorizationServicesEnabled && (l || c) && /* @__PURE__ */ a(
            Ee,
            {
              id: "authorization",
              "data-testid": "authorizationTab",
              title: /* @__PURE__ */ a(Pe, { children: t("authorization") }),
              ...M,
              children: /* @__PURE__ */ x(
                Vn,
                {
                  mountOnEnter: !0,
                  unmountOnExit: !0,
                  defaultLocation: Ru({
                    realm: i,
                    clientId: S,
                    tab: "settings"
                  }),
                  children: [
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "settings",
                        "data-testid": "authorizationSettings",
                        title: /* @__PURE__ */ a(Pe, { children: t("settings") }),
                        ...Z,
                        children: /* @__PURE__ */ a(Hz, { clientId: S })
                      }
                    ),
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "resources",
                        "data-testid": "authorizationResources",
                        title: /* @__PURE__ */ a(Pe, { children: t("resources") }),
                        ...X,
                        children: /* @__PURE__ */ a(
                          xq,
                          {
                            clientId: S,
                            isDisabled: !l
                          }
                        )
                      }
                    ),
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "scopes",
                        "data-testid": "authorizationScopes",
                        title: /* @__PURE__ */ a(Pe, { children: t("scopes") }),
                        ...Q,
                        children: /* @__PURE__ */ a(
                          Oq,
                          {
                            clientId: S,
                            isDisabled: !l
                          }
                        )
                      }
                    ),
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "policies",
                        "data-testid": "authorizationPolicies",
                        title: /* @__PURE__ */ a(Pe, { children: t("policies") }),
                        ...ie,
                        children: /* @__PURE__ */ a(
                          Kq,
                          {
                            clientId: S,
                            isDisabled: !l
                          }
                        )
                      }
                    ),
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "permissions",
                        "data-testid": "authorizationPermissions",
                        title: /* @__PURE__ */ a(Pe, { children: t("permissions") }),
                        ...me,
                        children: /* @__PURE__ */ a(
                          qq,
                          {
                            clientId: S,
                            isDisabled: !l
                          }
                        )
                      }
                    ),
                    p && /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "evaluate",
                        "data-testid": "authorizationEvaluate",
                        title: /* @__PURE__ */ a(Pe, { children: t("evaluate") }),
                        ...ee,
                        children: /* @__PURE__ */ a(Qq, { client: k, save: Me })
                      }
                    ),
                    s("manage-authorization") && /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "export",
                        "data-testid": "authorizationExport",
                        title: /* @__PURE__ */ a(Pe, { children: t("export") }),
                        ...ce,
                        children: /* @__PURE__ */ a(tG, {})
                      }
                    )
                  ]
                }
              )
            }
          ),
          k.serviceAccountsEnabled && p && /* @__PURE__ */ a(
            Ee,
            {
              id: "serviceAccount",
              "data-testid": "serviceAccountTab",
              title: /* @__PURE__ */ a(Pe, { children: t("serviceAccount") }),
              ...U,
              children: /* @__PURE__ */ a(KG, { client: k })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              id: "sessions",
              "data-testid": "sessionsTab",
              title: /* @__PURE__ */ a(Pe, { children: t("sessions") }),
              ...K,
              children: /* @__PURE__ */ a(YG, { client: k })
            }
          ),
          m && (d || k.access?.manage) && /* @__PURE__ */ a(
            Ee,
            {
              id: "permissions",
              "data-testid": "permissionsTab",
              title: /* @__PURE__ */ a(Pe, { children: t("permissions") }),
              ...G,
              children: /* @__PURE__ */ a(id, { id: k.id, type: "clients" })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              id: "advanced",
              "data-testid": "advancedTab",
              title: /* @__PURE__ */ a(Pe, { children: t("advanced") }),
              ...N,
              children: /* @__PURE__ */ a(uq, { save: Me, client: k })
            }
          )
        ]
      }
    ) }) })
  ] }) : /* @__PURE__ */ a(bt, {});
}
const pb = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: nW
}, Symbol.toStringTag, { value: "Module" })), aW = ({ rootUrl: e, baseUrl: t }, n) => t?.startsWith("http") ? t : e === "${authAdminUrl}" ? Ro(
  e.replace(/\$\{(authAdminUrl)\}/, n.adminBaseUrl),
  t || ""
) : e === "${authBaseUrl}" ? Ro(
  e.replace(/\$\{(authBaseUrl)\}/, n.serverBaseUrl),
  t || ""
) : e?.startsWith("http") ? t ? Ro(e, t) : e : t, rW = Be(() => Promise.resolve().then(() => Qz)), Jk = {
  path: "/:realm/clients/add-client",
  element: /* @__PURE__ */ a(rW, {}),
  breadcrumb: (e) => e("createClient"),
  handle: {
    access: "manage-clients"
  }
}, iW = (e) => ({
  pathname: We(Jk.path, e)
}), sW = Be(() => Promise.resolve().then(() => cG)), Zk = {
  path: "/:realm/clients/import-client",
  element: /* @__PURE__ */ a(sW, {}),
  breadcrumb: (e) => e("importClient"),
  handle: {
    access: "manage-clients"
  }
}, oW = (e) => ({
  pathname: We(Zk.path, e)
}), lW = (e) => {
  const { t } = H(), { realm: n } = ye();
  return /* @__PURE__ */ x(Oa, { wrapModifier: "truncate", children: [
    /* @__PURE__ */ x(
      Ae,
      {
        to: _i({ realm: n, clientId: e.id, tab: "settings" }),
        children: [
          e.clientId,
          !e.enabled && /* @__PURE__ */ a(Ir, { isRead: !0, className: "pf-v5-u-ml-sm", children: t("disabled") }, `${e.id}-disabled`)
        ]
      },
      e.id
    ),
    e.attributes?.is_temporary_admin === "true" && /* @__PURE__ */ a(Ht, { content: t("temporaryService"), children: /* @__PURE__ */ a(
      Yu,
      {
        className: "pf-v5-u-ml-sm",
        id: "temporary-admin-label"
      }
    ) })
  ] });
}, cW = (e) => {
  const { t } = H();
  return /* @__PURE__ */ a(Oa, { wrapModifier: "truncate", children: Vi(t)(e.name) });
}, dW = (e) => /* @__PURE__ */ a(Oa, { wrapModifier: "truncate", children: un()(e.description) }), uW = (e) => {
  const { environment: t } = La(), n = aW(e, t);
  return n ? /* @__PURE__ */ a(
    ki,
    {
      href: n,
      "data-testid": `client-home-url-${e.clientId}`
    }
  ) : "—";
}, pW = () => {
  const { t: e } = H(), { realm: t } = ye(), { hasAccess: n } = Nt();
  return n("manage-clients") ? /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
      z,
      {
        component: (i) => /* @__PURE__ */ a(Ae, { ...i, to: iW({ realm: t }) }),
        children: e("createClient")
      }
    ) }),
    /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
      z,
      {
        component: (i) => /* @__PURE__ */ a(Ae, { ...i, to: oW({ realm: t }) }),
        variant: "link",
        "data-testid": "importClient",
        children: e("importClient")
      }
    ) })
  ] }) : /* @__PURE__ */ a("span", {});
};
function mW() {
  const { adminClient: e } = de(), { t } = H(), { addAlert: n, addError: r } = we(), { realm: i } = ye(), [s, o] = D(0), l = () => o((/* @__PURE__ */ new Date()).getTime()), [c, d] = D(), { hasAccess: u } = Nt(), p = u("manage-clients"), m = async (S, P, w) => {
    const A = {
      first: S,
      max: P
    };
    return w && (A.clientId = w, A.search = !0), e.clients.find({ ...A });
  }, f = (S) => Kn(js({ realm: i, tab: S })), g = f("list"), b = f("initial-access-token"), v = f("client-registration"), [y, C] = Ve({
    titleKey: t("clientDelete", { clientId: c?.clientId }),
    messageKey: "clientDeleteConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.clients.del({
          id: c.id
        }), n(t("clientDeletedSuccess"), pe.success), l();
      } catch (S) {
        r("clientDeleteError", S);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "clientList",
        subKey: "clientsExplain",
        helpUrl: sa.clientsUrl,
        divider: !1
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ x(
      Vn,
      {
        mountOnEnter: !0,
        isBox: !0,
        defaultLocation: js({
          realm: i,
          tab: "list"
        }),
        children: [
          /* @__PURE__ */ x(
            Ee,
            {
              "data-testid": "list",
              title: /* @__PURE__ */ a(Pe, { children: t("clientsList") }),
              ...g,
              children: [
                /* @__PURE__ */ a(C, {}),
                /* @__PURE__ */ a(
                  xt,
                  {
                    loader: m,
                    isPaginated: !0,
                    ariaLabelKey: "clientList",
                    searchPlaceholderKey: "searchForClient",
                    toolbarItem: /* @__PURE__ */ a(pW, {}),
                    actionResolver: (S) => {
                      const P = S.data, w = [
                        {
                          title: t("export"),
                          onClick() {
                            gO(P);
                          }
                        }
                      ];
                      return !nc(P) && (p || P.access?.configure) && w.push({
                        title: t("delete"),
                        onClick() {
                          d(P), y();
                        }
                      }), w;
                    },
                    columns: [
                      {
                        name: "clientId",
                        displayKey: "clientId",
                        transforms: [Ft(20)],
                        cellRenderer: lW
                      },
                      {
                        name: "clientName",
                        displayKey: "clientName",
                        transforms: [Ft(20)],
                        cellRenderer: cW
                      },
                      {
                        name: "protocol",
                        displayKey: "type",
                        transforms: [Ft(10)],
                        cellRenderer: (S) => yl(t, S.protocol ?? "openid-connect")
                      },
                      {
                        name: "description",
                        displayKey: "description",
                        transforms: [Ft(30)],
                        cellRenderer: dW
                      },
                      {
                        name: "baseUrl",
                        displayKey: "homeURL",
                        transforms: [Ft(20)],
                        cellRenderer: uW
                      }
                    ]
                  },
                  s
                )
              ]
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "initialAccessToken",
              title: /* @__PURE__ */ a(Pe, { children: t("initialAccessToken") }),
              ...b,
              children: /* @__PURE__ */ a(jk, {})
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "registration",
              title: /* @__PURE__ */ a(Pe, { children: t("clientRegistration") }),
              ...v,
              children: /* @__PURE__ */ a(IG, {})
            }
          )
        ]
      }
    ) })
  ] });
}
const Qk = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: mW
}, Symbol.toStringTag, { value: "Module" })), eT = Lr(
  "SubGroupsContext",
  void 0
), fW = ({ children: e }) => {
  const [t, n] = D([]), r = () => n([]), i = (o) => n(
    t.slice(0, t.findIndex((l) => l.id === o.id) + 1)
  ), s = () => t[t.length - 1];
  return /* @__PURE__ */ a(
    eT.Provider,
    {
      value: { subGroups: t, setSubGroups: n, clear: r, remove: i, currentGroup: s },
      children: e
    }
  );
}, Cl = () => Nr(eT), hW = () => {
  const { t: e } = H(), { clear: t, remove: n, subGroups: r } = Cl(), { realm: i } = ye(), s = ds();
  return ze(() => {
    const { pathname: o } = s;
    (!o.includes("/groups") || o.endsWith("/groups")) && t();
  }, [s]), r.length !== 0 ? /* @__PURE__ */ x(jc, { children: [
    /* @__PURE__ */ a($o, { children: /* @__PURE__ */ a(Ae, { to: `/${i}/groups`, children: e("groups") }) }, "home"),
    r.map((o, l) => {
      const c = l === r.length - 1;
      return /* @__PURE__ */ x($o, { isActive: c, children: [
        !c && /* @__PURE__ */ a(
          Ae,
          {
            to: s.pathname.substring(
              0,
              s.pathname.indexOf(o.id) + o.id.length
            ),
            onClick: () => n(o),
            children: o.name
          }
        ),
        c && (o.id === "search" ? o.name : e("groupDetails"))
      ] }, o.id);
    })
  ] }) : null;
};
var gW = function(t) {
  return t.join("/").replace(/\/\/+/g, "/");
}, bW = /^:\w+$/, vW = 3, yW = 2, CW = 1, xW = 10, SW = -2, bx = function(t) {
  return t === "*";
};
function wW(e, t) {
  var n = e.split("/"), r = n.length;
  return n.some(bx) && (r += SW), t && (r += yW), n.filter(function(i) {
    return !bx(i);
  }).reduce(function(i, s) {
    return bW.test(s) ? i + vW : s === "" ? i + CW : i + xW;
  }, r);
}
function OW(e, t) {
  var n = e.length === t.length && e.slice(0, -1).every(function(r, i) {
    return r === t[i];
  });
  return n ? e[e.length - 1] - t[t.length - 1] : 0;
}
function tT(e) {
  var t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : [], n = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [], r = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "";
  return e.forEach(function(i, s) {
    var o;
    if (typeof i.path != "string" && !i.index && !(!((o = i.children) === null || o === void 0) && o.length))
      throw new Error("useBreadcrumbs: `path` or `index` must be provided in every route object");
    if (i.path && i.index)
      throw new Error("useBreadcrumbs: `path` and `index` cannot be provided at the same time");
    var l = {
      relativePath: i.path || "",
      childrenIndex: s,
      route: i
    };
    if (l.relativePath.charAt(0) === "/") {
      if (!l.relativePath.startsWith(r))
        throw new Error("useBreadcrumbs: The absolute path of the child route must start with the parent path");
      l.relativePath = l.relativePath.slice(r.length);
    }
    var c = gW([r, l.relativePath]), d = n.concat(l);
    if (i.children && i.children.length > 0) {
      if (i.index)
        throw new Error("useBreadcrumbs: Index route cannot have child routes");
      tT(i.children, t, d, c);
    }
    t.push({
      path: c,
      score: wW(c, i.index),
      routesMeta: d
    });
  }), t;
}
function kW(e) {
  return e.sort(function(t, n) {
    return t.score !== n.score ? n.score - t.score : OW(t.routesMeta.map(function(r) {
      return r.childrenIndex;
    }), n.routesMeta.map(function(r) {
      return r.childrenIndex;
    }));
  });
}
var Bl = Symbol("NO_BREADCRUMB"), nT = function(t) {
  return t.replace(/^[\s_]+|[\s_]+$/g, "").replace(/[-_\s]+/g, " ").replace(/^[a-z]/, function(n) {
    return n.toUpperCase();
  });
}, aT = function(t) {
  var n = t.breadcrumb, r = t.match, i = t.location, s = t.props, o = Object.assign({
    match: r,
    location: i,
    key: r.pathname
  }, s || {});
  return Object.assign(Object.assign({}, o), {
    breadcrumb: typeof n == "string" ? /* @__PURE__ */ HI("span", {
      key: o.key
    }, n) : /* @__PURE__ */ ne.createElement(n, Object.assign({}, o))
  });
}, TW = function(t) {
  var n = t.currentSection, r = t.location, i = t.pathSection, s = t.defaultFormatter, o = Ud({
    end: !0,
    path: i
  }, i);
  return aT({
    breadcrumb: s ? s(n) : nT(n),
    match: o,
    location: r
  });
}, IW = function(t) {
  var n = t.currentSection, r = t.disableDefaults, i = t.excludePaths, s = t.defaultFormatter, o = t.location, l = t.pathSection, c = t.branches, d, u = function(m) {
    return Ud({
      path: m,
      end: !0
    }, l) != null;
  };
  return i && i.some(u) ? Bl : (c.some(function(p) {
    var m = p.path, f = p.routesMeta, g = f[f.length - 1].route, b = g.breadcrumb;
    if (!b && g.index) {
      var v = f[f.length - 2];
      v && v.route.breadcrumb && (b = v.route.breadcrumb);
    }
    var y = g.caseSensitive, C = g.props, S = Ud({
      path: m,
      end: !0,
      caseSensitive: y
    }, l);
    return S && b === null ? (d = Bl, !0) : S ? !b && r ? (d = Bl, !0) : (d = aT({
      breadcrumb: b || (s ? s(n) : nT(n)),
      match: Object.assign(Object.assign({}, S), {
        route: g
      }),
      location: o,
      props: C
    }), !0) : !1;
  }), d || (r ? Bl : TW({
    pathSection: l,
    currentSection: l === "/" ? "Home" : n,
    location: o,
    defaultFormatter: s
  })));
}, EW = function(t) {
  var n = t.routes, r = t.location, i = t.options, s = i === void 0 ? {} : i, o = r.pathname, l = kW(tT(n)), c = [];
  return o.split("?")[0].split("/").reduce(function(d, u, p) {
    var m = u ? "".concat(d, "/").concat(u) : "/";
    if (m === "/" && p !== 0)
      return "";
    var f = IW(Object.assign({
      currentSection: u,
      location: r,
      pathSection: m,
      branches: l
    }, s));
    return f !== Bl && c.push(f), m === "/" ? "" : m;
  }, ""), c;
}, PW = function(t, n) {
  return EW({
    routes: t || [],
    location: ds(),
    options: n
  });
};
const _W = () => /* @__PURE__ */ a(te, { children: "Page Not Found" }), RW = ({ msg: e }) => {
  const { t } = H();
  return /* @__PURE__ */ a(NS, { screenReaderText: t(e), variant: "gold", isSticky: !0, children: /* @__PURE__ */ a(
    Qn,
    {
      spaceItems: { default: "spaceItemsSm" },
      flexWrap: { default: "wrap" },
      children: /* @__PURE__ */ x(Dt, { style: { whiteSpace: "normal" }, children: [
        /* @__PURE__ */ a(nl, { style: { marginRight: "0.3rem" } }),
        t(e)
      ] })
    }
  ) });
}, AW = () => {
  const { whoAmI: e } = ga();
  if (e.isTemporary()) return /* @__PURE__ */ a(RW, { msg: "loggedInAsTempAdminUser" });
}, LW = () => {
  const [e, t] = D(!1), n = Dr(), { t: r } = H(), i = [
    /* @__PURE__ */ a(Ue, { id: "link", children: /* @__PURE__ */ a(
      ki,
      {
        href: sa.documentationUrl,
        title: r("documentation")
      }
    ) }, "link"),
    /* @__PURE__ */ a(Pt, {}, "divide"),
    /* @__PURE__ */ a(Ue, { id: "enable", description: r("helpToggleInfo"), children: /* @__PURE__ */ x(ca, { children: [
      /* @__PURE__ */ a($t, { isFilled: !0, children: r("enableHelpMode") }),
      /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(
        Je,
        {
          id: "enableHelp",
          "aria-label": r("enableHelp"),
          isChecked: n.enabled,
          label: "",
          className: "keycloak_help-header-switch",
          onChange: () => n.toggleHelp()
        }
      ) })
    ] }) }, "enable")
  ];
  return /* @__PURE__ */ a(
    Kt,
    {
      popperProps: {
        position: "right"
      },
      onOpenChange: (s) => t(s),
      isOpen: e,
      toggle: (s) => /* @__PURE__ */ a(
        ut,
        {
          ref: s,
          variant: "plain",
          onClick: () => t(!e),
          "aria-label": "Help",
          id: "help",
          children: /* @__PURE__ */ a(Ls, {})
        }
      ),
      children: /* @__PURE__ */ a(Xt, { children: i })
    }
  );
}, rT = () => {
  const { keycloak: e } = La(), { t } = H();
  return /* @__PURE__ */ a(
    Ue,
    {
      id: "manage-account",
      onClick: () => e.accountManagement(),
      children: t("manageAccount")
    },
    "manage account"
  );
}, iT = () => {
  const { keycloak: e } = La(), { t } = H();
  return /* @__PURE__ */ a(
    Ue,
    {
      id: "sign-out",
      onClick: () => e.logout({ redirectUri: "" }),
      children: t("signOut")
    },
    "sign out"
  );
}, sT = () => {
  const { realm: e } = ye(), { t } = H();
  return /* @__PURE__ */ a(
    Ue,
    {
      component: (n) => /* @__PURE__ */ a(Ae, { ...n, to: Ms({ realm: e }) }),
      children: t("realmInfo")
    },
    "server info"
  );
}, NW = () => {
  const { t: e } = H(), { enabled: t, toggleHelp: n } = Dr();
  return /* @__PURE__ */ a(
    Ue,
    {
      "data-testId": "helpIcon",
      icon: /* @__PURE__ */ a(Ls, {}),
      onClick: n,
      children: e(t ? "helpEnabled" : "helpDisabled")
    }
  );
}, DW = [
  /* @__PURE__ */ a(rT, {}, "kebab Manage Account"),
  /* @__PURE__ */ a(sT, {}, "kebab Server Info"),
  /* @__PURE__ */ a(NW, {}, "kebab Help"),
  /* @__PURE__ */ a(Pt, { component: "li" }, "kebab sign out separator"),
  /* @__PURE__ */ a(iT, {}, "kebab Sign out")
], MW = [
  /* @__PURE__ */ a(rT, {}, "Manage Account"),
  /* @__PURE__ */ a(sT, {}, "Server info"),
  /* @__PURE__ */ a(Pt, { component: "li" }, "sign out separator"),
  /* @__PURE__ */ a(iT, {}, "Sign out")
], FW = () => {
  const [e, t] = D(!1);
  return /* @__PURE__ */ a(
    Kt,
    {
      isPlain: !0,
      onOpenChange: (n) => t(n),
      toggle: (n) => /* @__PURE__ */ a(
        ut,
        {
          id: "user-dropdown-kebab",
          ref: n,
          variant: "plain",
          onClick: () => t(!e),
          isExpanded: e,
          children: /* @__PURE__ */ a(hr, {})
        }
      ),
      isOpen: e,
      children: /* @__PURE__ */ a(Xt, { children: DW })
    }
  );
}, $W = () => {
  const { whoAmI: e } = ga(), [t, n] = D(!1);
  return /* @__PURE__ */ a(
    Kt,
    {
      isPlain: !0,
      isOpen: t,
      onOpenChange: (r) => n(r),
      toggle: (r) => /* @__PURE__ */ a(
        ut,
        {
          id: "user-dropdown",
          ref: r,
          onClick: () => n(!t),
          children: e.getDisplayName()
        }
      ),
      children: /* @__PURE__ */ a(Xt, { children: MW })
    }
  );
}, jW = () => {
  const { environment: e, keycloak: t } = La(), { t: n } = H(), { realm: r } = ye(), i = t.tokenParsed?.picture, s = e.logo ? e.logo : "/logo.svg", o = oh(Ms({ realm: r })), l = e.logoUrl ? e.logoUrl : o;
  return /* @__PURE__ */ x(j0, { children: [
    /* @__PURE__ */ a(V0, { children: /* @__PURE__ */ a(W0, { variant: "plain", "aria-label": n("navigation"), children: /* @__PURE__ */ a(YA, {}) }) }),
    /* @__PURE__ */ a(B0, { href: l, children: /* @__PURE__ */ a(
      "img",
      {
        src: e.resourceUrl + s,
        id: "masthead-logo",
        alt: n("logo"),
        "aria-label": n("logo"),
        className: "keycloak__pageheader_brand"
      }
    ) }),
    /* @__PURE__ */ a(U0, { children: /* @__PURE__ */ a(Ta, { children: /* @__PURE__ */ x(cr, { children: [
      /* @__PURE__ */ a(
        Le,
        {
          align: { default: "alignRight" },
          visibility: {
            default: "hidden",
            md: "visible"
          },
          children: /* @__PURE__ */ a(LW, {})
        }
      ),
      /* @__PURE__ */ a(
        Le,
        {
          align: { default: "alignLeft" },
          visibility: {
            md: "hidden"
          },
          children: /* @__PURE__ */ a(FW, {})
        }
      ),
      /* @__PURE__ */ a(
        Le,
        {
          visibility: {
            default: "hidden",
            md: "visible"
          },
          children: /* @__PURE__ */ a($W, {})
        }
      ),
      /* @__PURE__ */ a(
        Le,
        {
          variant: "overflow-menu",
          align: { default: "alignRight" },
          className: "pf-v5-u-m-0-on-lg",
          children: /* @__PURE__ */ a(
            LS,
            {
              src: i || e.resourceUrl + "/img_avatar.svg",
              alt: n("avatarImage"),
              "aria-label": n("avatarImage")
            }
          )
        }
      )
    ] }) }) })
  ] });
}, BW = 4, oT = Lr(
  "RecentRealmsContext",
  void 0
), UW = ({ children: e }) => {
  const { realm: t } = ye(), [n, r] = Eg(
    localStorage,
    "recentRealms",
    [t]
  );
  return ze(() => {
    const i = [.../* @__PURE__ */ new Set([t, ...n])];
    r(i.slice(0, BW));
  }, [t]), /* @__PURE__ */ a(oT.Provider, { value: n, children: e });
}, VW = () => Nr(oT), KW = Be(() => Promise.resolve().then(() => HJ)), mb = {
  path: "/:realm/add-realm",
  element: /* @__PURE__ */ a(KW, {}),
  breadcrumb: (e) => e("createRealm"),
  handle: {
    access: "view-realm"
  }
}, HW = (e) => ({
  pathname: We(mb.path, e)
}), Pd = 10, zW = ({ onClick: e }) => {
  const { realm: t } = ye(), { t: n } = H();
  return /* @__PURE__ */ a(
    z,
    {
      "data-testid": "add-realm",
      component: (r) => /* @__PURE__ */ a(Ae, { ...r, to: HW({ realm: t }) }),
      onClick: e,
      isBlock: !0,
      children: n("createRealm")
    }
  );
}, qW = ({ name: e, displayName: t, showIsRecent: n }) => {
  const { realm: r } = ye(), { t: i } = H();
  return /* @__PURE__ */ x(ca, { children: [
    /* @__PURE__ */ a($t, { isFilled: !0, children: /* @__PURE__ */ x(Xs, { children: [
      t ? /* @__PURE__ */ a(Jn, { className: "pf-v5-u-font-weight-bold", isFilled: !0, children: Aa(i, t) }) : null,
      /* @__PURE__ */ a(Jn, { isFilled: !0, children: e })
    ] }) }),
    /* @__PURE__ */ a($t, { children: e === r && /* @__PURE__ */ a(Rs, {}) }),
    n ? /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(pn, { children: i("recent") }) }) : null
  ] });
}, GW = () => {
  const { realm: e } = ye(), { adminClient: t } = de(), { whoAmI: n } = ga(), [r, i] = D(!1), [s, o] = D([]), { t: l } = H(), c = VW(), d = Xe(), [u, p] = D(""), [m, f] = D(0), g = bn(
    Cg((y) => {
      f(0), p(y);
    }, 1e3),
    []
  );
  _e(
    async () => {
      try {
        return await $s(
          t,
          "ui-ext/realms/names",
          { first: `${m}`, max: `${Pd + 1}`, search: u }
        );
      } catch (y) {
        if (y instanceof Zo && y.response.status < 500)
          return [];
        throw y;
      }
    },
    o,
    [r, m, u]
  );
  const b = nt(
    () => [
      ...m === 0 && !u ? c.reduce((y, C) => {
        const S = s.find((P) => P.name === C);
        return S && y.push(S), y;
      }, []) : [],
      ...s.filter((y) => !c.includes(y.name))
    ],
    [c, s, m, u]
  ), v = nt(
    () => s.find((y) => y.name === e)?.displayName,
    [e, s]
  );
  return /* @__PURE__ */ a(
    Kt,
    {
      id: "realm-select",
      className: "keycloak__realm_selector__dropdown",
      isOpen: r,
      onOpenChange: (y) => i(y),
      toggle: (y) => /* @__PURE__ */ a(
        ut,
        {
          ref: y,
          "data-testid": "realmSelector",
          onClick: () => {
            i(!r);
          },
          isFullWidth: !0,
          children: /* @__PURE__ */ x(Xs, { className: "keycloak__realm_selector__dropdown", children: [
            v ? /* @__PURE__ */ a(Jn, { className: "pf-v5-u-font-weight-bold", isFilled: !0, children: Aa(l, v) }) : null,
            /* @__PURE__ */ a(Jn, { isFilled: !0, children: e })
          ] })
        }
      ),
      children: /* @__PURE__ */ x(Xt, { children: [
        (s.length > 5 || u || m !== 0) && /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a($h, { children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
            Vc,
            {
              value: u,
              onChange: (y, C) => g(C),
              onClear: () => p("")
            }
          ) }) }),
          /* @__PURE__ */ a(Pt, { component: "li" })
        ] }),
        (s.length !== 0 ? [
          m !== 0 ? /* @__PURE__ */ x(Ue, { onClick: () => f(m - Pd), children: [
            /* @__PURE__ */ a(Hs, {}),
            " ",
            l("previous")
          ] }) : [],
          ...b.map((y) => /* @__PURE__ */ a(
            Ue,
            {
              onClick: () => {
                d(Ms({ realm: y.name })), i(!1), p("");
              },
              children: /* @__PURE__ */ a(
                qW,
                {
                  ...y,
                  showIsRecent: s.length > 5 && c.includes(y.name)
                }
              )
            },
            y.name
          )),
          s.length > Pd ? /* @__PURE__ */ x(Ue, { onClick: () => f(m + Pd), children: [
            /* @__PURE__ */ a(Nn, {}),
            l("next")
          ] }) : []
        ] : u ? [
          /* @__PURE__ */ a(Ue, { children: l("noResultsFound") }, "no-results")
        ] : [
          /* @__PURE__ */ x(Ue, { children: [
            /* @__PURE__ */ a(ti, { size: "sm" }),
            " ",
            l("loadingRealms")
          ] }, "loader")
        ]).concat([
          /* @__PURE__ */ a(Ea, { children: n.canCreateRealm() && /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(Pt, {}, "divider"),
            /* @__PURE__ */ a(Ue, { component: "div", children: /* @__PURE__ */ a(zW, { onClick: () => i(!1) }) }, "add")
          ] }) }, "add-realm")
        ])
      ] })
    }
  );
}, Da = ({ title: e, path: t, id: n }) => {
  const { t: r } = H(), { hasAccess: i } = Nt(), { realm: s } = ye(), o = encodeURIComponent(s), l = zT.find(
    (d) => d.path.replace(/\/:.+?(\?|(?:(?!\/).)*|$)/g, "") === (n || t)
  );
  return l && (l.handle.access instanceof Array ? i(...l.handle.access) : i(l.handle.access)) ? /* @__PURE__ */ a("li", { children: /* @__PURE__ */ a(
    GI,
    {
      id: "nav-item" + t.replace("/", "-"),
      to: `/${o}${t}`,
      className: ({ isActive: d }) => `pf-v5-c-nav__link${d ? " pf-m-current" : ""}`,
      children: r(e)
    }
  ) }) : null;
}, WW = () => {
  const { t: e } = H(), { hasSomeAccess: t } = Nt(), { componentTypes: n } = Tt(), r = aa(), i = n?.["org.keycloak.services.ui.extend.UiPageProvider"], s = Xe(), { realmRepresentation: o } = ye(), l = (p) => {
    s(p.to), p.event.preventDefault();
  }, c = t(
    "view-realm",
    "query-groups",
    "query-users",
    "query-clients",
    "view-events"
  ), d = t(
    "view-realm",
    "query-clients",
    "view-identity-providers"
  ), u = !!Do(mb.path);
  return /* @__PURE__ */ a(K0, { className: "keycloak__page_nav__nav", children: /* @__PURE__ */ a(G0, { children: /* @__PURE__ */ x(Uo, { onSelect: (p, m) => l(m), children: [
    /* @__PURE__ */ a(Hu, { children: /* @__PURE__ */ a(qh, { className: "keycloak__page_nav__nav_item__realm-selector", children: /* @__PURE__ */ a(GW, {}) }) }),
    /* @__PURE__ */ a(Pt, {}),
    c && !u && /* @__PURE__ */ x(bf, { "aria-label": e("manage"), title: e("manage"), children: [
      r(Fn.Organizations) && o?.organizationsEnabled && /* @__PURE__ */ a(Da, { title: "organizations", path: "/organizations" }),
      /* @__PURE__ */ a(Da, { title: "clients", path: "/clients" }),
      /* @__PURE__ */ a(Da, { title: "clientScopes", path: "/client-scopes" }),
      /* @__PURE__ */ a(Da, { title: "realmRoles", path: "/roles" }),
      /* @__PURE__ */ a(Da, { title: "users", path: "/users" }),
      /* @__PURE__ */ a(Da, { title: "groups", path: "/groups" }),
      /* @__PURE__ */ a(Da, { title: "sessions", path: "/sessions" }),
      /* @__PURE__ */ a(Da, { title: "events", path: "/events" })
    ] }),
    d && !u && /* @__PURE__ */ x(bf, { "aria-label": e("configure"), title: e("configure"), children: [
      /* @__PURE__ */ a(Da, { title: "realmSettings", path: "/realm-settings" }),
      /* @__PURE__ */ a(Da, { title: "authentication", path: "/authentication" }),
      /* @__PURE__ */ a(Da, { title: "identityProviders", path: "/identity-providers" }),
      /* @__PURE__ */ a(Da, { title: "userFederation", path: "/user-federation" }),
      r(Fn.DeclarativeUI) && i?.map((p) => /* @__PURE__ */ a(
        Da,
        {
          title: p.id,
          path: Mg({ providerId: p.id }).pathname,
          id: "/page-section"
        },
        p.id
      ))
    ] })
  ] }) }) });
}, XW = ({ error: e }) => {
  const { t } = H(), { showBoundary: n } = Ag(), r = () => {
    window.location.href = window.location.origin + window.location.pathname;
  };
  return /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ a(
    En,
    {
      isInline: !0,
      variant: pe.danger,
      title: e.message,
      actionClose: /* @__PURE__ */ a(Sh, { title: e.message, onClose: r }),
      actionLinks: /* @__PURE__ */ a(wh, { onClick: () => n(), children: t("retry") })
    }
  ) });
};
function YW(e, t) {
  return t in e;
}
const JW = ({ children: e }) => {
  const t = WI(), { hasAccess: n } = Nt(), r = t.flatMap(({ handle: i }) => typeof i != "object" || i === null || !YW(i, "access") ? [] : Array.isArray(i.access) ? i.access : [i.access]);
  return n(...r) ? e : /* @__PURE__ */ a(Mk, { permissionNeeded: r });
}, ZW = ({ children: e }) => /* @__PURE__ */ a(ZU, { children: /* @__PURE__ */ a(uV, { children: /* @__PURE__ */ a(uK, { children: /* @__PURE__ */ a(mK, { children: /* @__PURE__ */ a(UW, { children: /* @__PURE__ */ a(fK, { children: /* @__PURE__ */ a(fW, { children: e }) }) }) }) }) }) }), cee = () => {
  const { keycloak: e, environment: t } = La(), [n, r] = D();
  return ze(() => {
    (async () => {
      const s = await aV(e, t);
      r(s);
    })().catch(console.error);
  }, []), n ? /* @__PURE__ */ a(mO.Provider, { value: { keycloak: e, adminClient: n }, children: /* @__PURE__ */ x(ZW, { children: [
    /* @__PURE__ */ a(AW, {}),
    /* @__PURE__ */ a(
      zu,
      {
        header: /* @__PURE__ */ a(jW, {}),
        isManagedSidebar: !0,
        sidebar: /* @__PURE__ */ a(WW, {}),
        breadcrumb: /* @__PURE__ */ a(OY, {}),
        mainContainerId: oO,
        children: /* @__PURE__ */ a(QU, { fallback: XW, children: /* @__PURE__ */ a(zI, { fallback: /* @__PURE__ */ a(bt, {}), children: /* @__PURE__ */ a(JW, { children: /* @__PURE__ */ a(XI, {}) }) }) })
      }
    )
  ] }) }) : /* @__PURE__ */ a(bt, {});
}, QW = [
  Bg,
  QO,
  ek,
  Fg,
  YO
], eX = [
  vk,
  Vg,
  ak,
  uk
], tX = [
  Kk,
  rb,
  Hk,
  Jk,
  Zk,
  Wg,
  Sk,
  $k,
  xk,
  zk,
  Ug,
  nk,
  Xk,
  ob,
  Lk,
  kk,
  Yg,
  Tk,
  Yk,
  _k,
  Zg,
  Ek,
  Rk,
  Ak,
  Xg,
  Ok,
  Ik
], nX = [
  bp,
  Ng,
  SO
], aX = Be(() => Promise.resolve().then(() => XY)), fb = {
  path: "/:realm/events",
  element: /* @__PURE__ */ a(aX, {}),
  breadcrumb: (e) => e("titleEvents"),
  handle: {
    access: "view-events"
  }
}, lT = {
  ...fb,
  path: "/:realm/events/:tab"
}, vx = (e) => {
  const t = e.tab ? lT.path : fb.path;
  return {
    pathname: We(t, e)
  };
}, rX = [fb, lT], iX = Be(() => Promise.resolve().then(() => cJ)), hb = {
  path: "/:realm/groups/*",
  element: /* @__PURE__ */ a(iX, {}),
  handle: {
    access: "query-groups"
  }
}, cT = {
  ...hb,
  path: "/:realm/groups/:id"
}, Xo = (e) => {
  const t = e.id ? cT.path : hb.path;
  return {
    pathname: Jo(t, e)
  };
}, sX = [hb, cT], oX = Be(() => Promise.resolve().then(() => TJ)), dT = {
  path: "/:realm/identity-providers/:providerId/:alias/:tab",
  element: /* @__PURE__ */ a(oX, {}),
  breadcrumb: (e) => e("providerDetails"),
  handle: {
    access: "view-identity-providers"
  }
}, Ri = (e) => ({
  pathname: We(dT.path, e)
}), lX = Be(() => Promise.resolve().then(() => sI)), cX = {
  path: "/:realm/identity-providers/keycloak-oidc/add",
  element: /* @__PURE__ */ a(lX, {}),
  breadcrumb: (e) => e("addKeycloakOpenIdProvider"),
  handle: {
    access: "manage-identity-providers"
  }
}, dX = Be(() => Promise.resolve().then(() => sI)), uX = {
  path: "/:realm/identity-providers/oidc/add",
  element: /* @__PURE__ */ a(dX, {}),
  breadcrumb: (e) => e("addOpenIdProvider"),
  handle: {
    access: "manage-identity-providers"
  }
}, pX = Be(() => Promise.resolve().then(() => vJ)), mX = {
  path: "/:realm/identity-providers/saml/add",
  element: /* @__PURE__ */ a(pX, {}),
  breadcrumb: (e) => e("addSamlProvider"),
  handle: {
    access: "manage-identity-providers"
  }
}, fX = Be(
  () => Promise.resolve().then(() => _J)
), uT = {
  path: "/:realm/identity-providers",
  element: /* @__PURE__ */ a(fX, {}),
  breadcrumb: (e) => e("identityProviders"),
  handle: {
    access: "view-identity-providers"
  }
}, Ip = (e) => ({
  pathname: We(uT.path, e)
}), hX = Be(() => Promise.resolve().then(() => eI)), pT = {
  path: "/:realm/identity-providers/:providerId/:alias/:tab/create",
  element: /* @__PURE__ */ a(hX, {}),
  breadcrumb: (e) => e("addIdPMapper"),
  handle: {
    access: "manage-identity-providers"
  }
}, yx = (e) => ({
  pathname: We(pT.path, e)
}), gX = Be(() => Promise.resolve().then(() => eI)), mT = {
  path: "/:realm/identity-providers/:providerId/:alias/mappers/:id",
  element: /* @__PURE__ */ a(gX, {}),
  breadcrumb: (e) => e("editIdPMapper"),
  handle: {
    access: "manage-identity-providers"
  }
}, fT = (e) => ({
  pathname: We(mT.path, e)
}), bX = Be(() => Promise.resolve().then(() => uJ)), hT = {
  path: "/:realm/identity-providers/:providerId/add",
  element: /* @__PURE__ */ a(bX, {}),
  breadcrumb: (e) => e("addProvider"),
  handle: {
    access: "manage-identity-providers"
  }
}, Cx = (e) => ({
  pathname: We(hT.path, e)
}), vX = [
  pT,
  mT,
  uT,
  uX,
  mX,
  cX,
  hT,
  dT
], yX = Be(() => import("./NewOrganization-DcLSAyBq.js")), gT = {
  path: "/:realm/organizations/new",
  element: /* @__PURE__ */ a(yX, {}),
  breadcrumb: (e) => e("createOrganization"),
  handle: {
    access: "manage-users"
  }
}, xx = (e) => ({
  pathname: We(gT.path, e)
}), CX = Be(() => import("./DetailOrganization-CaIRdvr1.js")), bT = {
  path: "/:realm/organizations/:id/:tab",
  element: /* @__PURE__ */ a(CX, {}),
  breadcrumb: (e) => e("organizationDetails"),
  handle: {
    access: "manage-users"
  }
}, Nc = (e) => ({
  pathname: We(bT.path, e)
}), xX = Be(() => Promise.resolve().then(() => FJ)), vT = {
  path: "/:realm/organizations",
  element: /* @__PURE__ */ a(xX, {}),
  breadcrumb: (e) => e("organizationsList"),
  handle: {
    access: "query-groups"
  }
}, SX = (e) => {
  const t = vT.path;
  return {
    pathname: We(t, e)
  };
}, wX = [
  vT,
  gT,
  bT
], OX = Be(() => Promise.resolve().then(() => qJ)), yT = {
  path: "/:realm/roles/new",
  element: /* @__PURE__ */ a(OX, {}),
  breadcrumb: (e) => e("createRole"),
  handle: {
    access: "manage-realm"
  }
}, kX = (e) => ({
  pathname: We(yT.path, e)
}), TX = Be(() => Promise.resolve().then(() => pI)), gb = {
  path: "/:realm/roles/:id/:tab",
  element: /* @__PURE__ */ a(TX, {}),
  breadcrumb: (e) => e("roleDetails"),
  handle: {
    access: ["view-realm", "view-users"]
  }
}, Ep = (e) => ({
  pathname: We(gb.path, e)
}), IX = Be(() => Promise.resolve().then(() => WJ)), CT = {
  path: "/:realm/roles",
  element: /* @__PURE__ */ a(IX, {}),
  breadcrumb: (e) => e("realmRolesList"),
  handle: {
    access: "view-realm"
  }
}, nh = (e) => ({
  pathname: We(CT.path, e)
}), EX = [
  CT,
  yT,
  gb
], PX = Be(
  () => Promise.resolve().then(() => tZ)
), xT = {
  path: "/:realm/realm-settings/keys/providers/:id/:providerType/settings",
  element: /* @__PURE__ */ a(PX, {}),
  breadcrumb: (e) => e("editProvider"),
  handle: {
    access: "view-realm"
  }
}, _X = (e) => ({
  pathname: We(xT.path, e)
}), RX = Be(() => Promise.resolve().then(() => Ap)), ST = {
  path: "/:realm/realm-settings/client-policies/:tab",
  element: /* @__PURE__ */ a(RX, {}),
  breadcrumb: (e) => e("clientPolicies"),
  handle: {
    access: "view-realm"
  }
}, zr = (e) => ({
  pathname: We(ST.path, e)
}), AX = Be(() => Promise.resolve().then(() => CI)), wT = {
  path: "/:realm/realm-settings/client-policies/:tab/add-profile",
  element: /* @__PURE__ */ a(AX, {}),
  breadcrumb: (e) => e("newClientProfile"),
  handle: {
    access: "manage-realm"
  }
}, LX = (e) => ({
  pathname: We(wT.path, e)
}), NX = Be(() => Promise.resolve().then(() => CI)), OT = {
  path: "/:realm/realm-settings/client-policies/:profileName/edit-profile",
  element: /* @__PURE__ */ a(NX, {}),
  breadcrumb: (e) => e("clientProfile"),
  handle: {
    access: ["view-realm", "view-users"]
  }
}, Nu = (e) => ({
  pathname: We(OT.path, e)
}), DX = Be(() => import("./ExecutorForm-CirVeqES.js")), kT = {
  path: "/:realm/realm-settings/client-policies/:profileName/add-executor",
  element: /* @__PURE__ */ a(DX, {}),
  breadcrumb: (e) => e("addExecutor"),
  handle: {
    access: "manage-realm"
  }
}, MX = (e) => ({
  pathname: We(kT.path, e)
}), FX = Be(() => import("./ExecutorForm-CirVeqES.js")), TT = {
  path: "/:realm/realm-settings/client-policies/:profileName/edit-profile/:executorName",
  element: /* @__PURE__ */ a(FX, {}),
  breadcrumb: (e) => e("executorDetails"),
  handle: {
    access: ["manage-realm"]
  }
}, $X = (e) => ({
  pathname: We(TT.path, e)
}), jX = Be(() => Promise.resolve().then(() => SI)), IT = {
  path: "/:realm/realm-settings/client-policies/policies/add-client-policy",
  element: /* @__PURE__ */ a(jX, {}),
  breadcrumb: (e) => e("createPolicy"),
  handle: {
    access: "manage-clients"
  }
}, Sx = (e) => ({
  pathname: We(IT.path, e)
}), BX = Be(() => Promise.resolve().then(() => SI)), ET = {
  path: "/:realm/realm-settings/client-policies/:policyName/edit-policy",
  element: /* @__PURE__ */ a(BX, {}),
  breadcrumb: (e) => e("policyDetails"),
  handle: {
    access: "manage-realm"
  }
}, Yi = (e) => ({
  pathname: We(ET.path, e)
}), UX = Be(
  () => Promise.resolve().then(() => wI)
), PT = {
  path: "/:realm/realm-settings/client-policies/:policyName/edit-policy/create-condition",
  element: /* @__PURE__ */ a(UX, {}),
  breadcrumb: (e) => e("addCondition"),
  handle: {
    access: "manage-clients"
  }
}, VX = (e) => ({
  pathname: We(PT.path, e)
}), KX = Be(
  () => Promise.resolve().then(() => wI)
), _T = {
  path: "/:realm/realm-settings/client-policies/:policyName/edit-policy/:conditionName/edit-condition",
  element: /* @__PURE__ */ a(KX, {}),
  breadcrumb: (e) => e("editCondition"),
  handle: {
    access: "manage-clients"
  }
}, HX = (e) => ({
  pathname: We(_T.path, e)
}), zX = Be(() => Promise.resolve().then(() => Ap)), RT = {
  path: "/:realm/realm-settings/user-profile/:tab",
  element: /* @__PURE__ */ a(zX, {}),
  breadcrumb: (e) => e("userProfile"),
  handle: {
    access: "view-realm"
  }
}, Yo = (e) => ({
  pathname: We(RT.path, e)
}), qX = Be(() => Promise.resolve().then(() => bI)), AT = {
  path: "/:realm/realm-settings/user-profile/attributes/add-attribute",
  element: /* @__PURE__ */ a(qX, {}),
  breadcrumb: (e) => e("createAttribute"),
  handle: {
    access: "manage-realm"
  }
}, GX = (e) => ({
  pathname: We(AT.path, e)
}), WX = Be(() => Promise.resolve().then(() => Ap)), LT = {
  path: "/:realm/realm-settings/keys/:tab",
  element: /* @__PURE__ */ a(WX, {}),
  breadcrumb: (e) => e("keys"),
  handle: {
    access: "view-realm"
  }
}, Du = (e) => ({
  pathname: We(LT.path, e)
}), XX = Be(() => Promise.resolve().then(() => bI)), NT = {
  path: "/:realm/realm-settings/user-profile/attributes/:attributeName/edit-attribute",
  element: /* @__PURE__ */ a(XX, {}),
  breadcrumb: (e) => e("editAttribute"),
  handle: {
    access: "manage-realm"
  }
}, wx = (e) => ({
  pathname: We(NT.path, e)
}), YX = Be(
  () => Promise.resolve().then(() => yI)
), DT = {
  path: "/:realm/realm-settings/user-profile/attributesGroup/new",
  element: /* @__PURE__ */ a(YX, {}),
  breadcrumb: (e) => e("createGroupText"),
  handle: {
    access: "view-realm"
  }
}, Ox = (e) => ({
  pathname: We(DT.path, e)
}), JX = Be(
  () => Promise.resolve().then(() => yI)
), MT = {
  path: "/:realm/realm-settings/user-profile/attributesGroup/edit/:name",
  element: /* @__PURE__ */ a(JX, {}),
  breadcrumb: (e) => e("editGroupText"),
  handle: {
    access: "view-realm"
  }
}, ZX = (e) => ({
  pathname: We(MT.path, e)
}), QX = [
  db,
  qk,
  LT,
  xT,
  ST,
  wT,
  kT,
  OT,
  TT,
  IT,
  ET,
  PT,
  _T,
  RT,
  AT,
  NT,
  DT,
  MT
], eY = [mb], tY = Be(() => Promise.resolve().then(() => lQ)), nY = {
  path: "/:realm/sessions",
  element: /* @__PURE__ */ a(tY, {}),
  breadcrumb: (e) => e("titleSessions"),
  handle: {
    access: ["view-realm", "view-clients", "view-users"]
  }
}, aY = [nY], rY = Be(
  () => Promise.resolve().then(() => PI)
), FT = {
  path: "/:realm/user-federation/:providerId/:id",
  element: /* @__PURE__ */ a(rY, {}),
  breadcrumb: (e) => e("providerDetails"),
  handle: {
    access: "view-realm"
  }
}, $T = (e) => ({
  pathname: We(FT.path, e)
}), iY = Be(
  () => Promise.resolve().then(() => PI)
), jT = {
  path: "/:realm/user-federation/:providerId/new",
  element: /* @__PURE__ */ a(iY, {}),
  breadcrumb: (e) => e("addCustomProvider"),
  handle: {
    access: "view-realm"
  }
}, kx = (e) => ({
  pathname: We(jT.path, e)
}), sY = Be(
  () => Promise.resolve().then(() => BI)
), oY = {
  path: "/:realm/user-federation/kerberos/new",
  element: /* @__PURE__ */ a(sY, {}),
  breadcrumb: (e) => e("settings"),
  handle: {
    access: "view-realm"
  }
}, lY = Be(
  () => Promise.resolve().then(() => VQ)
), cY = {
  path: "/:realm/user-federation/ldap/new",
  element: /* @__PURE__ */ a(lY, {}),
  breadcrumb: (e) => e("addProvider", { provider: "LDAP", count: 1 }),
  handle: {
    access: "view-realm"
  }
}, dY = Be(() => Promise.resolve().then(() => Ob)), BT = {
  path: "/:realm/user-federation",
  element: /* @__PURE__ */ a(dY, {}),
  breadcrumb: (e) => e("userFederation"),
  handle: {
    access: "view-realm"
  }
}, cs = (e) => ({
  pathname: We(BT.path, e)
}), uY = Be(
  () => Promise.resolve().then(() => BI)
), UT = {
  path: "/:realm/user-federation/kerberos/:id",
  element: /* @__PURE__ */ a(uY, {}),
  breadcrumb: (e) => e("settings"),
  handle: {
    access: "view-realm"
  }
}, pY = (e) => ({
  pathname: We(UT.path, e)
}), mY = Be(
  () => Promise.resolve().then(() => GQ)
), bb = {
  path: "/:realm/user-federation/ldap/:id",
  element: /* @__PURE__ */ a(mY, {}),
  breadcrumb: (e) => e("settings"),
  handle: {
    access: "view-realm"
  }
}, VT = {
  ...bb,
  path: "/:realm/user-federation/ldap/:id/:tab"
}, Dc = (e) => {
  const t = e.tab ? VT.path : bb.path;
  return {
    pathname: We(t, e)
  };
}, fY = Be(
  () => Promise.resolve().then(() => MQ)
), KT = {
  path: "/:realm/user-federation/ldap/:id/mappers/:mapperId",
  element: /* @__PURE__ */ a(fY, {}),
  breadcrumb: (e) => e("mappingDetails"),
  handle: {
    access: "view-realm"
  }
}, Tx = (e) => ({
  pathname: We(KT.path, e)
}), hY = Be(() => Promise.resolve().then(() => Ob)), gY = {
  path: "/:realm/user-federation/kerberos",
  element: /* @__PURE__ */ a(hY, {}),
  handle: {
    access: "view-realm"
  }
}, bY = Be(() => Promise.resolve().then(() => Ob)), vY = {
  path: "/:realm/user-federation/ldap",
  element: /* @__PURE__ */ a(bY, {}),
  handle: {
    access: "view-realm"
  }
}, yY = [
  BT,
  gY,
  oY,
  UT,
  vY,
  cY,
  bb,
  VT,
  KT,
  jT,
  FT
], CY = Be(() => Promise.resolve().then(() => vQ)), HT = {
  path: "/:realm/users/add-user",
  element: /* @__PURE__ */ a(CY, {}),
  breadcrumb: (e) => e("createUser"),
  handle: {
    access: ["query-users", "query-groups"]
  }
}, xY = (e) => ({
  pathname: We(HT.path, e)
}), SY = [
  HT,
  ub,
  Wk,
  cb
], wY = {
  path: "*",
  element: /* @__PURE__ */ a(_W, {}),
  handle: {
    access: "anyone"
  }
}, zT = [
  ...QW,
  ...tX,
  ...eX,
  ...rX,
  ...vX,
  ...wX,
  ...EX,
  ...eY,
  ...QX,
  ...aY,
  ...yY,
  ...SY,
  ...sX,
  ...nX,
  ...UH,
  wY
], OY = () => {
  const { t: e } = H(), { realm: t } = ye(), n = (s) => Es(s.breadcrumb) && s.breadcrumb.props.children, r = zT.map((s) => ({
    ...s,
    breadcrumb: s.breadcrumb?.(e)
  })), i = lp(
    PW(r, {
      disableDefaults: !0,
      excludePaths: ["/", `/${t}`, `/${t}/page-section`]
    }),
    n
  );
  return i.length > 1 ? /* @__PURE__ */ a(jc, { children: i.map(({ match: s, breadcrumb: o }, l) => /* @__PURE__ */ a($o, { isActive: i.length - 1 === l, children: i.length - 1 !== l ? /* @__PURE__ */ a(Ae, { to: s.pathname, children: o }) : o }, l)) }) : null;
}, sd = ({
  buttonText: e,
  children: t,
  setSearchDropdownOpen: n,
  searchDropdownOpen: r,
  marginRight: i,
  width: s
}) => {
  const o = Ct(null);
  return ze(() => {
    const l = (c) => {
      o.current && !o.current.contains(c.target) && n(!1);
    };
    return document.addEventListener("mousedown", l), () => document.removeEventListener("mousedown", l);
  }, [n]), ze(() => {
    const l = () => {
      document.visibilityState === "hidden" && n(!1);
    };
    return document.addEventListener("visibilitychange", l), () => document.removeEventListener("visibilitychange", l);
  }, [n]), /* @__PURE__ */ x("span", { ref: o, children: [
    /* @__PURE__ */ x(
      "button",
      {
        className: "kc-dropdown-panel",
        onClick: () => n(!r),
        "aria-label": e,
        style: { width: s, marginRight: i },
        "data-testid": "dropdown-panel-btn",
        children: [
          e,
          /* @__PURE__ */ a(Ii, { className: "kc-dropdown-panel-icon", children: /* @__PURE__ */ a(jo, {}) })
        ]
      }
    ),
    r && /* @__PURE__ */ a("div", { className: "kc-dropdown-panel-content", children: t })
  ] });
}, dee = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: sd
}, Symbol.toStringTag, { value: "Module" })), vb = ({
  form: e,
  reset: t,
  save: n,
  fineGrainedAccess: r,
  name: i = "attributes",
  isDisabled: s = !1
}) => {
  const o = !n && !t, { handleSubmit: l } = e;
  return /* @__PURE__ */ x(
    je,
    {
      role: "manage-realm",
      onSubmit: n ? l(n) : void 0,
      fineGrainedAccess: r,
      children: [
        /* @__PURE__ */ a(He, { ...e, children: /* @__PURE__ */ a(ad, { name: i, isDisabled: s }) }),
        !o && /* @__PURE__ */ a(Mr, { name: "attributes", reset: t, isSubmit: !0 })
      ]
    }
  );
}, qT = ({
  onClick: e,
  children: t,
  ...n
}) => {
  const r = Fu();
  return /* @__PURE__ */ a(ka, { id: r, isClickable: !0, onKeyDown: (s) => {
    (s.key === " " || s.key === "Enter" || s.key === "Spacebar") && e();
  }, onClick: e, ...n, children: /* @__PURE__ */ a(
    Uc,
    {
      selectableActions: {
        onClickAction: e,
        selectableActionId: `input-${r}`,
        selectableActionAriaLabelledby: r
      },
      children: t
    }
  ) });
}, kY = ({
  title: e,
  dropdownItems: t,
  labelText: n,
  labelColor: r,
  footerText: i,
  to: s
}) => {
  const [o, l] = D(!1), c = () => {
    l(!o);
  };
  return /* @__PURE__ */ x(ka, { isSelectable: !0, isClickable: !0, children: [
    /* @__PURE__ */ a(
      Uc,
      {
        actions: {
          actions: t ? /* @__PURE__ */ a(
            Kt,
            {
              popperProps: {
                position: "right"
              },
              onOpenChange: c,
              toggle: (d) => /* @__PURE__ */ a(
                ut,
                {
                  ref: d,
                  onClick: c,
                  variant: "plain",
                  "data-testid": `${e}-dropdown`,
                  children: /* @__PURE__ */ a(hr, {})
                }
              ),
              isOpen: o,
              children: /* @__PURE__ */ a(Xt, { children: t })
            }
          ) : void 0,
          hasNoOffset: !1,
          className: void 0
        },
        children: /* @__PURE__ */ a(Sr, { "data-testid": "keycloak-card-title", children: /* @__PURE__ */ a(Ae, { to: s, children: e }) })
      }
    ),
    /* @__PURE__ */ a(ma, {}),
    /* @__PURE__ */ a(HS, { children: /* @__PURE__ */ x(Qn, { children: [
      /* @__PURE__ */ a(Dt, { className: "keycloak--keycloak-card__footer", children: i && i }),
      /* @__PURE__ */ a(Dt, { children: n && /* @__PURE__ */ a(pn, { color: r || "gray", children: n }) })
    ] }) })
  ] });
}, GT = ({
  searchType: e,
  onSelect: t
}) => {
  const { t: n } = H(), [r, i] = D(!1), s = (l) => /* @__PURE__ */ a(
    Ue,
    {
      onClick: () => {
        t(l), i(!1);
      },
      children: n(`searchType.${l}`)
    },
    l
  ), o = [s("default"), s("attribute")];
  return /* @__PURE__ */ a(
    Kt,
    {
      className: "keycloak__users__searchtype",
      onOpenChange: (l) => i(l),
      toggle: (l) => /* @__PURE__ */ a(
        ut,
        {
          "data-testid": "user-search-toggle",
          ref: l,
          id: "toggle-id",
          onClick: () => i(!r),
          icon: /* @__PURE__ */ a(ls, {}),
          children: n(`searchType.${e}`)
        }
      ),
      isOpen: r,
      children: /* @__PURE__ */ a(Xt, { children: o })
    }
  );
}, uee = ({ searchType: e, onSelect: t }) => {
  const { t: n } = H(), [r, i] = D(!1);
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(GT, { searchType: e, onSelect: t }) }),
    /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ x(
      ht,
      {
        className: "keycloak__users__searchtype",
        onToggle: (s) => i(s),
        isOpen: r,
        selections: [n("default"), n("attribute")],
        onSelect: () => i(!1),
        children: [
          /* @__PURE__ */ a(Re, { value: "default", children: n("default") }),
          /* @__PURE__ */ a(Re, { value: "attribute", children: n("attribute") })
        ]
      }
    ) })
  ] });
};
function TY({
  activeFilters: e,
  setActiveFilters: t,
  profile: n,
  createAttributeSearchChips: r,
  searchUserWithAttributes: i
}) {
  const { t: s } = H(), { addAlert: o } = we(), [l, c] = D(!1), d = {
    name: "",
    displayName: "",
    value: ""
  }, {
    getValues: u,
    register: p,
    reset: m,
    formState: { errors: f },
    setValue: g,
    setError: b,
    clearErrors: v,
    control: y
  } = Ke({
    mode: "onChange",
    defaultValues: d
  }), C = () => e.userAttribute.some(
    (O) => O.name === u().name
  ), S = () => {
    let O = !1;
    return u().name.length ? e.userAttribute.some(
      (I) => I.name === u().name
    ) ? b("name", {
      type: "conflict",
      message: s("searchUserByAttributeKeyAlreadyInUseError")
    }) : O = !0 : b("name", {
      type: "empty",
      message: s("searchUserByAttributeMissingKeyError")
    }), O;
  }, P = () => {
    let O = !1;
    return u().value.length ? O = !0 : b("value", {
      type: "empty",
      message: s("searchUserByAttributeMissingValueError")
    }), O;
  }, w = () => S() && P(), A = () => {
    w() ? (t({
      exact: u().exact,
      userAttribute: [...e.userAttribute, { ...u() }]
    }), m({ exact: u().exact })) : (f.name?.message && o(f.name.message, pe.danger), f.value?.message && o(f.value.message, pe.danger));
  }, k = () => {
    const O = [...e.userAttribute].filter(
      (I) => I.name !== I.name
    );
    t({ exact: u().exact, userAttribute: O });
  }, T = () => n ? /* @__PURE__ */ a(
    ht,
    {
      "data-testid": "search-attribute-name-select",
      variant: mt.typeahead,
      onToggle: (O) => c(O),
      selections: u().displayName,
      onSelect: (O) => {
        g("displayName", O.toString()), C() ? b("name", { type: "conflict" }) : v("name");
      },
      isOpen: l,
      placeholderText: s("selectAttribute"),
      validated: f.name && "error",
      maxHeight: 300,
      ...p("displayName", {
        required: !0,
        validate: S
      }),
      children: n.attributes?.map((O) => /* @__PURE__ */ a(
        Re,
        {
          value: Aa(s, O.displayName, O.name),
          onClick: (I) => {
            I.stopPropagation(), c(!1), g("name", O.name);
          },
          children: Aa(s, O.displayName, O.name)
        },
        O.name
      ))
    }
  ) : /* @__PURE__ */ a(
    gt,
    {
      id: "name",
      placeholder: s("keyPlaceholder"),
      validated: f.name && "error",
      onKeyDown: (O) => O.key === "Enter" && A(),
      ...p("name", {
        required: !0,
        validate: S
      })
    }
  );
  return /* @__PURE__ */ x(
    YI,
    {
      className: "user-attribute-search-form",
      "data-testid": "user-attribute-search-form",
      children: [
        /* @__PURE__ */ a(Rt, { className: "user-attribute-search-form-headline", children: /* @__PURE__ */ a(tt, { component: Qt.h2, children: s("selectAttributes") }) }),
        /* @__PURE__ */ a(
          En,
          {
            isInline: !0,
            className: "user-attribute-search-form-alert",
            variant: "info",
            title: s("searchUserByAttributeDescription"),
            component: "h3"
          }
        ),
        /* @__PURE__ */ x(Rt, { className: "user-attribute-search-form-key-value", children: [
          /* @__PURE__ */ a("div", { className: "user-attribute-search-form-left", children: /* @__PURE__ */ a(tt, { component: Qt.h3, children: s("key") }) }),
          /* @__PURE__ */ a("div", { className: "user-attribute-search-form-right", children: /* @__PURE__ */ a(tt, { component: Qt.h3, children: s("value") }) })
        ] }),
        /* @__PURE__ */ a("div", { className: "user-attribute-search-form-left", children: T() }),
        /* @__PURE__ */ a("div", { className: "user-attribute-search-form-right", children: /* @__PURE__ */ x(nn, { children: [
          /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
            gt,
            {
              id: "value",
              placeholder: s("valuePlaceholder"),
              validated: f.value && "error",
              onKeyDown: (O) => {
                O.key === "Enter" && (O.preventDefault(), A());
              },
              ...p("value", {
                required: !0,
                validate: P
              })
            }
          ) }),
          /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
            z,
            {
              "data-testid": "user-attribute-search-add-filter-button",
              variant: "control",
              icon: /* @__PURE__ */ a(Rs, {}),
              onClick: A,
              "aria-label": s("addToFilter")
            }
          ) })
        ] }) }),
        r(),
        /* @__PURE__ */ a("div", { className: "pf-v5-u-pt-lg", children: /* @__PURE__ */ a(
          be,
          {
            name: "exact",
            defaultValue: !1,
            control: y,
            render: ({ field: O }) => /* @__PURE__ */ a(
              Zt,
              {
                id: "exact",
                "data-testid": "exact",
                label: s("exactSearch"),
                isChecked: O.value,
                onChange: O.onChange
              }
            )
          }
        ) }),
        /* @__PURE__ */ x(ot, { className: "user-attribute-search-form-action-group", children: [
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "search-user-attribute-btn",
              variant: "primary",
              type: "submit",
              isDisabled: !e.userAttribute.length,
              onClick: i,
              children: s("search")
            }
          ),
          /* @__PURE__ */ a(
            z,
            {
              variant: xe.link,
              onClick: () => {
                m(), k();
              },
              children: s("reset")
            }
          )
        ] })
      ]
    }
  );
}
function IY({
  searchDropdownOpen: e,
  setSearchDropdownOpen: t,
  realm: n,
  hasSelectedRows: r,
  toggleDeleteDialog: i,
  toggleUnlockUsersDialog: s,
  goToCreate: o,
  searchType: l,
  setSearchType: c,
  searchUser: d,
  setSearchUser: u,
  activeFilters: p,
  setActiveFilters: m,
  refresh: f,
  profile: g,
  clearAllFilters: b,
  createAttributeSearchChips: v,
  searchUserWithAttributes: y
}) {
  const { t: C } = H(), [S, P] = D(!1), { hasAccess: w } = Nt(), A = w("query-users"), k = () => /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ x(nn, { children: [
    /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
      GT,
      {
        searchType: l,
        onSelect: (E) => {
          b(), c(E);
        }
      }
    ) }),
    l === "default" && T(),
    l === "attribute" && O()
  ] }) }), T = () => /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
    Vc,
    {
      "data-testid": "table-search-input",
      placeholder: C("searchForUser"),
      "aria-label": C("search"),
      value: d,
      onSearch: (E, L, F) => {
        u(F.haswords), f();
      },
      onKeyDown: (E) => {
        if (E.key === "Enter") {
          const L = E.target;
          u(L.value), f();
        }
      },
      onClear: () => {
        u(""), f();
      }
    }
  ) }), O = () => /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      sd,
      {
        "data-testid": "select-attributes-dropdown",
        buttonText: C("selectAttributes"),
        setSearchDropdownOpen: t,
        searchDropdownOpen: e,
        width: "15vw",
        children: /* @__PURE__ */ a(
          TY,
          {
            activeFilters: p,
            setActiveFilters: m,
            profile: g,
            createAttributeSearchChips: v,
            searchUserWithAttributes: () => {
              y(), t(!1);
            }
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      z,
      {
        icon: /* @__PURE__ */ a(Bh, {}),
        variant: "control",
        onClick: () => {
          y(), t(!1);
        },
        "aria-label": C("searchAttributes")
      }
    )
  ] }), I = n.bruteForceProtected ? /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
    Kt,
    {
      onOpenChange: (E) => P(E),
      toggle: (E) => /* @__PURE__ */ a(
        ut,
        {
          ref: E,
          isExpanded: S,
          variant: "plain",
          onClick: () => P(!S),
          children: /* @__PURE__ */ a(hr, {})
        }
      ),
      isOpen: S,
      shouldFocusToggleOnSelect: !0,
      children: /* @__PURE__ */ x(Xt, { children: [
        /* @__PURE__ */ a(
          Ue,
          {
            component: "button",
            isDisabled: r,
            onClick: () => {
              i(), P(!1);
            },
            children: C("deleteUser")
          },
          "deleteUser"
        ),
        /* @__PURE__ */ a(
          Ue,
          {
            component: "button",
            onClick: () => {
              s(), P(!1);
            },
            children: C("unlockAllUsers")
          },
          "unlock"
        )
      ] })
    }
  ) }) : /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
    z,
    {
      variant: xe.link,
      onClick: i,
      "data-testid": "delete-user-btn",
      isDisabled: r,
      children: C("deleteUser")
    }
  ) }), _ = /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(z, { "data-testid": "add-user", onClick: o, children: C("addUser") }) }),
    I
  ] });
  return /* @__PURE__ */ x(te, { children: [
    k(),
    A ? _ : null
  ] });
}
const EY = (e) => {
  const { t } = H(), { realm: n } = ye();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ x(Ae, { to: ri({ realm: n, id: e.id, tab: "settings" }), children: [
      e.username,
      /* @__PURE__ */ a(PY, { user: e })
    ] }),
    e.attributes?.is_temporary_admin[0] === "true" && /* @__PURE__ */ a(Ht, { content: t("temporaryAdmin"), children: /* @__PURE__ */ a(
      Yu,
      {
        className: "pf-v5-u-ml-sm",
        id: "temporary-admin-label"
      }
    ) })
  ] });
}, PY = ({ user: e }) => {
  const { t } = H();
  return /* @__PURE__ */ x(te, { children: [
    !e.enabled && /* @__PURE__ */ a(pn, { color: "red", icon: /* @__PURE__ */ a(Ni, {}), children: t("disabled") }),
    e.bruteForceStatus?.disabled && /* @__PURE__ */ a(pn, { color: "orange", icon: /* @__PURE__ */ a(Yu, {}), children: t("temporaryLocked") })
  ] });
}, _Y = (e) => {
  const { t } = H();
  return /* @__PURE__ */ x(te, { children: [
    !e.emailVerified && /* @__PURE__ */ a(Ht, { content: t("notVerified"), children: /* @__PURE__ */ a(us, { className: "keycloak__user-section__email-verified" }) }),
    " ",
    un()(e.email)
  ] });
};
function RY() {
  const { adminClient: e } = de(), { t } = H(), { addAlert: n, addError: r } = we(), { realm: i, realmRepresentation: s } = ye(), o = Xe(), [l, c] = D({}), [d, u] = D(""), [p, m] = D([]), [f, g] = D("default"), [b, v] = D(!1), [y, C] = D({
    exact: !1,
    userAttribute: []
  }), [S, P] = D({}), [w, A] = D(""), [k, T] = D(0), O = () => T(k + 1);
  _e(
    async () => {
      try {
        return await Promise.all([
          CK(e),
          e.users.getProfile()
        ]);
      } catch {
        return [{}, {}];
      }
    },
    ([V, B]) => {
      c(V), P(B);
    },
    []
  );
  const I = async (V, B, Z) => {
    const X = {
      first: V,
      max: B,
      q: w
    }, Q = Z || d || "";
    if (Q && (X.search = Q), y.exact && (X.exact = !0), !M && !(X.search || X.q))
      return [];
    try {
      return await wK(e, {
        briefRepresentation: !0,
        ...X
      });
    } catch (ie) {
      return l.userProfileProvidersEnabled ? r("noUsersFoundErrorStorage", ie) : r("noUsersFoundError", ie), [];
    }
  }, [_, E] = Ve({
    titleKey: "unlockAllUsers",
    messageKey: "unlockUsersConfirm",
    continueButtonLabel: "unlock",
    onConfirm: async () => {
      try {
        await e.attackDetection.delAll(), O(), n(t("unlockUsersSuccess"), pe.success);
      } catch (V) {
        r("unlockUsersError", V);
      }
    }
  }), [L, F] = Ve({
    titleKey: "deleteConfirmUsers",
    messageKey: t("deleteConfirmDialog", { count: p.length }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        for (const V of p)
          await e.users.del({ id: V.id });
        m([]), U(), n(t("userDeletedSuccess"), pe.success);
      } catch (V) {
        r("userDeletedError", V);
      }
    }
  }), R = () => o(xY({ realm: i }));
  if (!l || !s)
    return /* @__PURE__ */ a(bt, {});
  const M = !l.userProfileProvidersEnabled, U = () => {
    C({ exact: !1, userAttribute: [] }), u(""), A(""), O();
  }, K = (V) => V.userAttribute.map((B) => `${B.name}:${B.value}`).join(" "), G = () => {
    const V = K(y);
    A(V), O();
  }, N = () => /* @__PURE__ */ a(Dt, { children: y.userAttribute.length > 0 && /* @__PURE__ */ a(te, { children: Object.values(y.userAttribute).map((V) => /* @__PURE__ */ a(
    vn,
    {
      className: "pf-v5-u-mt-md pf-v5-u-mr-md",
      "data-testid": "user-attribute-search-chips-group",
      categoryName: V.displayName.length ? V.displayName : V.name,
      isClosable: !0,
      onClick: (B) => {
        B.stopPropagation();
        const X = {
          userAttribute: [...y.userAttribute].filter(
            (Q) => Q.name !== V.name
          ),
          exact: y.exact
        };
        C(X), A(K(X)), O();
      },
      children: /* @__PURE__ */ a(Vt, { isReadOnly: !0, children: V.value }, V.name)
    },
    V.name
  )) }) }), $ = () => /* @__PURE__ */ a(
    IY,
    {
      searchDropdownOpen: b,
      setSearchDropdownOpen: v,
      realm: s,
      hasSelectedRows: p.length === 0,
      toggleDeleteDialog: L,
      toggleUnlockUsersDialog: _,
      goToCreate: R,
      searchType: f,
      setSearchType: g,
      searchUser: d,
      setSearchUser: u,
      activeFilters: y,
      setActiveFilters: C,
      refresh: O,
      profile: S,
      clearAllFilters: U,
      createAttributeSearchChips: N,
      searchUserWithAttributes: G
    }
  ), q = () => {
    if (y.userAttribute.length)
      return /* @__PURE__ */ x("div", { className: "user-attribute-search-form-subtoolbar", children: [
        /* @__PURE__ */ a(Le, { children: N() }),
        /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
          z,
          {
            variant: "link",
            onClick: () => {
              U();
            },
            children: t("clearAllFilters")
          }
        ) })
      ] });
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(F, {}),
    /* @__PURE__ */ a(E, {}),
    /* @__PURE__ */ a(
      xt,
      {
        isSearching: d !== "" || y.userAttribute.length !== 0,
        loader: I,
        isPaginated: !0,
        ariaLabelKey: "titleUsers",
        canSelectAll: !0,
        onSelect: (V) => m([...V]),
        emptyState: M ? /* @__PURE__ */ a(
          ct,
          {
            message: t("noUsersFound"),
            instructions: t("emptyInstructions"),
            primaryActionText: t("createNewUser"),
            onPrimaryAction: R
          }
        ) : /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(Ta, { children: /* @__PURE__ */ a(cr, { children: $() }) }),
          /* @__PURE__ */ a(Pr, { "data-testid": "empty-state", variant: "lg", children: /* @__PURE__ */ a(Rt, { className: "kc-search-users-text", children: /* @__PURE__ */ a(tt, { children: t("searchForUserDescription") }) }) })
        ] }),
        toolbarItem: $(),
        subToolbar: q(),
        actionResolver: (V) => {
          const B = V.data;
          return B.access?.manage ? [
            {
              title: t("delete"),
              onClick: () => {
                m([B]), L();
              }
            }
          ] : [];
        },
        columns: [
          {
            name: "username",
            displayKey: "username",
            cellRenderer: EY
          },
          {
            name: "email",
            displayKey: "email",
            cellRenderer: _Y
          },
          {
            name: "lastName",
            displayKey: "lastName",
            cellFormatters: [un()]
          },
          {
            name: "firstName",
            displayKey: "firstName",
            cellFormatters: [un()]
          }
        ]
      },
      k
    )
  ] });
}
const bs = ({
  title: e,
  description: t,
  showDescription: n = !1
}) => /* @__PURE__ */ x(te, { children: [
  /* @__PURE__ */ a(
    lr,
    {
      size: "xl",
      headingLevel: "h2",
      className: n ? "kc-wizard-section-header__title--has-description" : "kc-wizard-section-header__title",
      children: e
    }
  ),
  n && /* @__PURE__ */ a(Rt, { className: "kc-wizard-section-header__description", children: /* @__PURE__ */ a(tt, { children: t }) })
] });
var rc;
(function(e) {
  e.Default = "DEFAULT", e.DisabledByDefault = "DISABLED_BY_DEFAULT", e.Preview = "PREVIEW", e.PreviewDisabledByDefault = "PREVIEW_DISABLED_BY_DEFAULT", e.Experimental = "EXPERIMENTAL", e.Deprecated = "DEPRECATED";
})(rc || (rc = {}));
const AY = () => {
  const { t: e } = H(), t = Tt(), [n, r] = D(""), [i, s] = D([]), o = nt(
    () => Object.entries(t.providers || []).filter(
      ([c]) => c.toLowerCase().includes(n.toLowerCase())
    ),
    [n]
  ), l = (c) => {
    i.includes(c) ? s(i.filter((d) => d !== c)) : s([...i, c]);
  };
  return /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(
    uO,
    {
      inputGroupName: "search",
      inputGroupPlaceholder: e("search"),
      inputGroupOnEnter: r,
      children: /* @__PURE__ */ x(Cn, { variant: "compact", children: [
        /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
          /* @__PURE__ */ a(Ne, { width: 20, children: e("spi") }),
          /* @__PURE__ */ a(Ne, { children: e("providers") })
        ] }) }),
        /* @__PURE__ */ a(yn, { children: o.map(([c, { providers: d }]) => /* @__PURE__ */ x(it, { children: [
          /* @__PURE__ */ a(ke, { children: c }),
          /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a("ul", { children: Object.entries(d).map(
            ([u, { operationalInfo: p }]) => /* @__PURE__ */ x("li", { children: [
              u,
              p ? /* @__PURE__ */ a(
                ps,
                {
                  isExpanded: i.includes(u),
                  onToggle: () => l(u),
                  toggleText: i.includes(u) ? e("showLess") : e("showMore"),
                  children: /* @__PURE__ */ a(Cn, { borders: !1, children: /* @__PURE__ */ a(yn, { children: Object.entries(p).map(
                    ([m, f]) => /* @__PURE__ */ x(it, { children: [
                      /* @__PURE__ */ a(ke, { children: m }),
                      /* @__PURE__ */ a(ke, { children: f })
                    ] }, m)
                  ) }) })
                },
                u
              ) : null
            ] }, u)
          ) }) })
        ] }, c)) })
      ] })
    }
  ) });
}, LY = () => {
  const { environment: e } = La(), { t } = H(), { realm: n, realmRepresentation: r } = ye(), i = e.logo ? e.logo : "/icon.svg", s = Aa(t, r?.displayName, n);
  return /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ x(Pr, { variant: "lg", children: [
    /* @__PURE__ */ a(
      DS,
      {
        src: e.resourceUrl + i,
        alt: "Keycloak icon",
        className: "keycloak__dashboard_icon"
      }
    ),
    /* @__PURE__ */ a(Ei, { titleText: /* @__PURE__ */ a(te, { children: t("welcome") }), headingLevel: "h2" }),
    /* @__PURE__ */ a(Ei, { titleText: s, headingLevel: "h1" }),
    /* @__PURE__ */ a(Di, { children: t("introduction") })
  ] }) });
}, Ix = ({ feature: e }) => {
  const { t } = H();
  return /* @__PURE__ */ x(Hh, { className: "pf-v5-u-mb-sm", children: [
    e.name,
    " ",
    e.type === rc.Experimental && /* @__PURE__ */ a(pn, { color: "orange", children: t("experimental") }),
    e.type === rc.Preview && /* @__PURE__ */ a(pn, { color: "blue", children: t("preview") }),
    e.type === rc.Default && /* @__PURE__ */ a(pn, { color: "green", children: t("supported") })
  ] });
}, NY = () => {
  const { t: e } = H(), { realm: t, realmRepresentation: n } = ye(), r = Tt(), i = ba(), s = nt(
    () => i(r.features ?? [], mr("name")),
    [r.features]
  ), o = nt(
    () => s.filter((f) => !f.enabled) || [],
    [r.features]
  ), l = nt(
    () => s.filter((f) => f.enabled) || [],
    [r.features]
  ), c = (f) => Kn(
    Ms({
      realm: t,
      tab: f
    })
  ), d = Aa(e, n?.displayName, t), u = c("welcome"), p = c("info"), m = c("providers");
  return Object.keys(r).length === 0 ? /* @__PURE__ */ a(bt, {}) : /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(Rt, { className: "pf-v5-u-mr-sm", children: /* @__PURE__ */ a(tt, { component: "h1", children: e("realmNameTitle", { name: t }) }) }) }),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ x(
      Vn,
      {
        "data-testid": "dashboard-tabs",
        defaultLocation: Ms({
          realm: t,
          tab: "welcome"
        }),
        isBox: !0,
        mountOnEnter: !0,
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              id: "welcome",
              "data-testid": "welcomeTab",
              title: /* @__PURE__ */ a(Pe, { children: e("welcomeTabTitle") }),
              ...u,
              children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ x("div", { className: "pf-v5-l-grid pf-v5-u-ml-lg", children: [
                /* @__PURE__ */ a("div", { className: "pf-v5-l-grid__item pf-m-12-col", children: /* @__PURE__ */ a(
                  lr,
                  {
                    className: "pf-v5-u-font-weight-bold",
                    headingLevel: "h2",
                    size: "3xl",
                    children: e("welcomeTo", { realmDisplayInfo: d })
                  }
                ) }),
                /* @__PURE__ */ a("div", { className: "pf-v5-l-grid__item keycloak__dashboard_welcome_tab", children: /* @__PURE__ */ a(tt, { component: Qt.h3, children: e("welcomeText") }) }),
                /* @__PURE__ */ a("div", { className: "pf-v5-l-grid__item pf-m-10-col pf-v5-u-mt-md", children: /* @__PURE__ */ a(
                  z,
                  {
                    className: "pf-v5-u-px-lg pf-v5-u-py-sm",
                    component: "a",
                    href: sa.documentation,
                    target: "_blank",
                    variant: "primary",
                    children: e("viewDocumentation")
                  }
                ) }),
                /* @__PURE__ */ x(Uu, { className: "pf-v5-u-mt-sm", children: [
                  /* @__PURE__ */ a(xi, { children: /* @__PURE__ */ a(
                    z,
                    {
                      component: "a",
                      href: sa.guides,
                      target: "_blank",
                      variant: "tertiary",
                      children: e("viewGuides")
                    }
                  ) }),
                  /* @__PURE__ */ a(xi, { children: /* @__PURE__ */ a(
                    z,
                    {
                      component: "a",
                      href: sa.community,
                      target: "_blank",
                      variant: "tertiary",
                      children: e("joinCommunity")
                    }
                  ) }),
                  /* @__PURE__ */ a(xi, { children: /* @__PURE__ */ a(
                    z,
                    {
                      component: "a",
                      href: sa.blog,
                      target: "_blank",
                      variant: "tertiary",
                      children: e("readBlog")
                    }
                  ) })
                ] })
              ] }) })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              id: "info",
              "data-testid": "infoTab",
              title: /* @__PURE__ */ a(Pe, { children: e("serverInfo") }),
              ...p,
              children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ x(Ha, { hasGutter: !0, children: [
                /* @__PURE__ */ a(Wt, { lg: 2, sm: 12, children: /* @__PURE__ */ x(ka, { className: "keycloak__dashboard_card", children: [
                  /* @__PURE__ */ a(Sr, { children: e("serverInfo") }),
                  /* @__PURE__ */ a(ma, { children: /* @__PURE__ */ a(ir, { children: /* @__PURE__ */ x(Vr, { children: [
                    /* @__PURE__ */ a(nr, { children: e("version") }),
                    /* @__PURE__ */ a(tr, { children: r.systemInfo?.version })
                  ] }) }) }),
                  /* @__PURE__ */ a(Sr, { children: e("memory") }),
                  /* @__PURE__ */ a(ma, { children: /* @__PURE__ */ a(ir, { children: /* @__PURE__ */ x(Vr, { children: [
                    /* @__PURE__ */ a(nr, { children: e("totalMemory") }),
                    /* @__PURE__ */ a(tr, { children: r.memoryInfo?.totalFormated }),
                    /* @__PURE__ */ a(nr, { children: e("freeMemory") }),
                    /* @__PURE__ */ a(tr, { children: r.memoryInfo?.freeFormated }),
                    /* @__PURE__ */ a(nr, { children: e("usedMemory") }),
                    /* @__PURE__ */ a(tr, { children: r.memoryInfo?.usedFormated })
                  ] }) }) })
                ] }) }),
                /* @__PURE__ */ a(Wt, { lg: 10, sm: 12, children: /* @__PURE__ */ x(ka, { className: "keycloak__dashboard_card", children: [
                  /* @__PURE__ */ a(Sr, { children: e("profile") }),
                  /* @__PURE__ */ a(ma, { children: /* @__PURE__ */ x(ir, { children: [
                    /* @__PURE__ */ x(Vr, { children: [
                      /* @__PURE__ */ x(nr, { children: [
                        e("enabledFeatures"),
                        " ",
                        /* @__PURE__ */ a(
                          le,
                          {
                            fieldLabelId: "enabledFeatures",
                            helpText: e("infoEnabledFeatures")
                          }
                        )
                      ] }),
                      /* @__PURE__ */ a(tr, { children: /* @__PURE__ */ a(au, { variant: gc.inline, children: l.map((f) => /* @__PURE__ */ a(
                        Ix,
                        {
                          feature: f
                        },
                        f.name
                      )) }) })
                    ] }),
                    /* @__PURE__ */ x(Vr, { children: [
                      /* @__PURE__ */ x(nr, { children: [
                        e("disabledFeatures"),
                        " ",
                        /* @__PURE__ */ a(
                          le,
                          {
                            fieldLabelId: "disabledFeatures",
                            helpText: e("infoDisabledFeatures")
                          }
                        )
                      ] }),
                      /* @__PURE__ */ a(tr, { children: /* @__PURE__ */ a(au, { variant: gc.inline, children: o.map((f) => /* @__PURE__ */ a(
                        Ix,
                        {
                          feature: f
                        },
                        f.name
                      )) }) })
                    ] })
                  ] }) })
                ] }) })
              ] }) })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              id: "providers",
              "data-testid": "providersTab",
              title: /* @__PURE__ */ a(Pe, { children: e("providerInfo") }),
              ...m,
              children: /* @__PURE__ */ a(AY, {})
            }
          )
        ]
      }
    ) })
  ] });
};
function DY() {
  const { realm: e } = ye(), t = e === "master";
  return /* @__PURE__ */ x(te, { children: [
    !t && /* @__PURE__ */ a(LY, {}),
    t && /* @__PURE__ */ a(NY, {})
  ] });
}
const MY = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: DY
}, Symbol.toStringTag, { value: "Module" })), Ex = 38, FY = ({
  text: e,
  children: t
}) => {
  const n = e || "", r = n.length > Ex, i = n.substring(0, Ex);
  return r ? /* @__PURE__ */ a(Ht, { content: e, children: t(i + "…") }) : t(n);
}, $Y = (e) => e.operationType === "DELETE" ? !1 : e.resourceType === "USER" || e.resourceType === "GROUP_MEMBERSHIP" || e.resourceType === "GROUP" || e.resourceType === "CLIENT" || e.resourceType === "ORGANIZATION" || e.resourceType === "ORGANIZATION_MEMBERSHIP" || e.resourceType?.startsWith("AUTHORIZATION_RESOURCE") || e.resourceType === "CLIENT_SCOPE" || e.resourceType === "AUTH_FLOW" || e.resourcePath?.startsWith("roles-by-id"), jY = new RegExp(
  /([0-9a-fA-F]{8}-([0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12})/
), BY = (e, t) => {
  const n = jY.exec(t.resourcePath);
  if (!n)
    return console.warn("event didn't contain a valid link", t), "";
  const r = n[1];
  return t.resourceType === "CLIENT" || t.resourceType?.startsWith("AUTHORIZATION_RESOURCE") ? _i({
    realm: e,
    clientId: r,
    tab: t.resourceType === "CLIENT" ? "settings" : "authorization"
  }) : t.resourceType === "GROUP" ? Xo({ realm: e, id: r }) : t.resourceType === "CLIENT_SCOPE" ? nd({ realm: e, id: r, tab: "settings" }) : t.resourceType === "USER" || t.resourceType === "GROUP_MEMBERSHIP" ? ri({ realm: e, id: r, tab: "settings" }) : t.resourceType === "AUTH_FLOW" ? $g({ realm: e, id: r, usedBy: "-" }) : t.resourcePath?.startsWith("roles-by-id") ? Ep({ realm: e, id: r, tab: "details" }) : t.resourceType === "ORGANIZATION" ? Nc({ realm: e, id: r, tab: "settings" }) : t.resourceType === "ORGANIZATION_MEMBERSHIP" ? Nc({ realm: e, id: r, tab: "members" }) : "";
}, UY = ({ event: e }) => {
  const { realm: t } = ye();
  return /* @__PURE__ */ a(FY, { text: e.resourcePath, children: (n) => $Y(e) ? /* @__PURE__ */ a(Ae, { to: BY(t, e), children: n }) : /* @__PURE__ */ a("span", { children: n }) });
}, VY = (e) => /* @__PURE__ */ a(UY, { event: e }), Px = {
  resourceTypes: [],
  operationTypes: [],
  resourcePath: "",
  dateFrom: "",
  dateTo: "",
  authClient: "",
  authUser: "",
  authRealm: "",
  authIpAddress: ""
}, _x = ({
  titleKey: e,
  onClose: t,
  children: n
}) => {
  const { t: r } = H();
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.medium,
      title: r(e),
      isOpen: !0,
      onClose: t,
      children: n
    }
  );
}, KY = (e) => /* @__PURE__ */ x(ir, { isHorizontal: !0, className: "keycloak_eventsection_details", children: [
  e.details && Object.entries(e.details).map(([t, n]) => /* @__PURE__ */ x(Vr, { children: [
    /* @__PURE__ */ a(nr, { children: t }),
    /* @__PURE__ */ a(tr, { children: n })
  ] }, t)),
  e.error && /* @__PURE__ */ x(Vr, { children: [
    /* @__PURE__ */ a(nr, { children: "error" }),
    /* @__PURE__ */ a(tr, { children: e.error })
  ] }, "error")
] }), HY = () => {
  const { adminClient: e } = de(), { t } = H(), { realm: n } = ye(), r = Tt(), i = ai(), s = r.enums?.resourceType, o = r.enums?.operationType, [l, c] = D(0), [d, u] = D(!1), [p, m] = D(!1), [f, g] = D(!1), [b, v] = D({}), [y, C] = D(), [S, P] = D(), w = {
    resourceTypes: t("resourceTypes"),
    operationTypes: t("operationTypes"),
    resourcePath: t("resourcePath"),
    dateFrom: t("dateFrom"),
    dateTo: t("dateTo"),
    authClient: t("client"),
    authUser: t("userId"),
    authRealm: t("realm"),
    authIpAddress: t("ipAddress")
  }, A = Ke({
    mode: "onChange",
    defaultValues: Px
  }), {
    getValues: k,
    reset: T,
    formState: { isDirty: O },
    control: I
  } = A;
  function _(K, G) {
    return e.realms.findAdminEvents({
      // The admin client wants 'dateFrom' and 'dateTo' to be Date objects, however it cannot actually handle them so we need to cast to any.
      ...b,
      realm: n,
      first: K,
      max: G
    });
  }
  function E() {
    u(!1), M();
  }
  function L() {
    T(), M();
  }
  function F(K) {
    const G = { ...k() };
    delete G[K], T({ ...Px, ...G }), M();
  }
  function R(K, G) {
    const N = k(), $ = N[K], q = Array.isArray($) ? $.filter((V) => V !== G) : $;
    T({ ...N, [K]: q }), M();
  }
  function M() {
    const K = Sg(
      k(),
      (G) => G !== "" || Array.isArray(G) && G.length > 0
    );
    v(K), c(l + 1);
  }
  const U = nt(
    () => S?.representation ? ja(JSON.parse(S.representation)) : "",
    [S?.representation]
  );
  return /* @__PURE__ */ x(te, { children: [
    y && /* @__PURE__ */ a(_x, { titleKey: "auth", onClose: () => C(void 0), children: /* @__PURE__ */ x(
      Cn,
      {
        "aria-label": "authData",
        "data-testid": "auth-dialog",
        variant: Tc.compact,
        children: [
          /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
            /* @__PURE__ */ a(Ne, { children: t("attribute") }),
            /* @__PURE__ */ a(Ne, { children: t("value") })
          ] }) }),
          /* @__PURE__ */ x(yn, { children: [
            /* @__PURE__ */ x(it, { children: [
              /* @__PURE__ */ a(ke, { children: t("realm") }),
              /* @__PURE__ */ a(ke, { children: y.authDetails?.realmId })
            ] }),
            /* @__PURE__ */ x(it, { children: [
              /* @__PURE__ */ a(ke, { children: t("client") }),
              /* @__PURE__ */ a(ke, { children: y.authDetails?.clientId })
            ] }),
            /* @__PURE__ */ x(it, { children: [
              /* @__PURE__ */ a(ke, { children: t("user") }),
              /* @__PURE__ */ a(ke, { children: y.authDetails?.userId })
            ] }),
            /* @__PURE__ */ x(it, { children: [
              /* @__PURE__ */ a(ke, { children: t("ipAddress") }),
              /* @__PURE__ */ a(ke, { children: y.authDetails?.ipAddress })
            ] })
          ] })
        ]
      }
    ) }),
    S && /* @__PURE__ */ a(
      _x,
      {
        titleKey: "representation",
        "data-testid": "representation-dialog",
        onClose: () => P(void 0),
        children: /* @__PURE__ */ a(
          fr,
          {
            isLineNumbersVisible: !0,
            isReadOnly: !0,
            code: U,
            language: Ln.json,
            height: "8rem"
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      xt,
      {
        className: "keycloak__events_table",
        loader: _,
        detailColumns: [
          {
            name: "details",
            enabled: (K) => K.details !== void 0,
            cellRenderer: KY
          }
        ],
        isPaginated: !0,
        ariaLabelKey: "adminEvents",
        toolbarItem: /* @__PURE__ */ a(He, { ...A, children: /* @__PURE__ */ x(
          Qn,
          {
            direction: { default: "column" },
            spaceItems: { default: "spaceItemsNone" },
            children: [
              /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
                sd,
                {
                  buttonText: t("searchForAdminEvent"),
                  setSearchDropdownOpen: u,
                  searchDropdownOpen: d,
                  marginRight: "2.5rem",
                  width: "15vw",
                  children: /* @__PURE__ */ x(
                    St,
                    {
                      isHorizontal: !0,
                      className: "keycloak__events_search__form",
                      "data-testid": "searchForm",
                      children: [
                        /* @__PURE__ */ a(
                          re,
                          {
                            label: t("resourceTypes"),
                            fieldId: "kc-resourceTypes",
                            className: "keycloak__events_search__form_label",
                            children: /* @__PURE__ */ a(
                              be,
                              {
                                name: "resourceTypes",
                                control: I,
                                render: ({ field: K }) => /* @__PURE__ */ a(
                                  ht,
                                  {
                                    className: "keycloak__events_search__type_select",
                                    "data-testid": "resource-types-searchField",
                                    chipGroupProps: {
                                      numChips: 1,
                                      expandedText: t("hide"),
                                      collapsedText: t("showRemaining")
                                    },
                                    variant: mt.typeaheadMulti,
                                    typeAheadAriaLabel: "Select",
                                    onToggle: (G) => m(G),
                                    selections: K.value,
                                    onSelect: (G) => {
                                      const N = G.toString(), $ = K.value.includes(N) ? K.value.filter((q) => q !== N) : [...K.value, N];
                                      K.onChange($);
                                    },
                                    onClear: () => {
                                      K.onChange([]);
                                    },
                                    isOpen: p,
                                    "aria-labelledby": "resourceTypes",
                                    chipGroupComponent: /* @__PURE__ */ a(vn, { children: K.value.map((G) => /* @__PURE__ */ a(
                                      Vt,
                                      {
                                        onClick: (N) => {
                                          N.stopPropagation(), K.onChange(
                                            K.value.filter(
                                              ($) => $ !== G
                                            )
                                          );
                                        },
                                        children: G
                                      },
                                      G
                                    )) }),
                                    children: s?.map((G) => /* @__PURE__ */ a(Re, { value: G, children: G }, G))
                                  }
                                )
                              }
                            )
                          }
                        ),
                        /* @__PURE__ */ a(
                          re,
                          {
                            label: t("operationTypes"),
                            fieldId: "kc-operationTypes",
                            className: "keycloak__events_search__form_label",
                            children: /* @__PURE__ */ a(
                              be,
                              {
                                name: "operationTypes",
                                control: I,
                                render: ({ field: K }) => /* @__PURE__ */ a(
                                  ht,
                                  {
                                    className: "keycloak__events_search__type_select",
                                    "data-testid": "operation-types-searchField",
                                    chipGroupProps: {
                                      numChips: 1,
                                      expandedText: t("hide"),
                                      collapsedText: t("showRemaining")
                                    },
                                    variant: mt.typeaheadMulti,
                                    typeAheadAriaLabel: "Select",
                                    onToggle: (G) => g(G),
                                    selections: K.value,
                                    onSelect: (G) => {
                                      const N = G.toString(), $ = K.value.includes(N) ? K.value.filter((q) => q !== N) : [...K.value, N];
                                      K.onChange($);
                                    },
                                    onClear: () => {
                                      K.onChange([]);
                                    },
                                    isOpen: f,
                                    "aria-labelledby": "operationTypes",
                                    chipGroupComponent: /* @__PURE__ */ a(vn, { children: K.value.map((G) => /* @__PURE__ */ a(
                                      Vt,
                                      {
                                        onClick: (N) => {
                                          N.stopPropagation(), K.onChange(
                                            K.value.filter(
                                              ($) => $ !== G
                                            )
                                          );
                                        },
                                        children: G
                                      },
                                      G
                                    )) }),
                                    children: o?.map((G) => /* @__PURE__ */ a(
                                      Re,
                                      {
                                        value: G,
                                        children: G
                                      },
                                      G.toString()
                                    ))
                                  }
                                )
                              }
                            )
                          }
                        ),
                        /* @__PURE__ */ a(
                          ve,
                          {
                            name: "resourcePath",
                            label: t("resourcePath")
                          }
                        ),
                        /* @__PURE__ */ a(ve, { name: "authRealm", label: t("realm") }),
                        /* @__PURE__ */ a(ve, { name: "authClient", label: t("client") }),
                        /* @__PURE__ */ a(ve, { name: "authUser", label: t("user") }),
                        /* @__PURE__ */ a(ve, { name: "authIpAddress", label: t("ipAddress") }),
                        /* @__PURE__ */ a(
                          re,
                          {
                            label: t("dateFrom"),
                            fieldId: "kc-dateFrom",
                            className: "keycloak__events_search__form_label",
                            children: /* @__PURE__ */ a(
                              be,
                              {
                                name: "dateFrom",
                                control: I,
                                render: ({ field: K }) => /* @__PURE__ */ a(
                                  Bo,
                                  {
                                    className: "pf-v5-u-w-100",
                                    value: K.value,
                                    onChange: (G, N) => K.onChange(N),
                                    inputProps: { id: "kc-dateFrom" }
                                  }
                                )
                              }
                            )
                          }
                        ),
                        /* @__PURE__ */ a(
                          re,
                          {
                            label: t("dateTo"),
                            fieldId: "kc-dateTo",
                            className: "keycloak__events_search__form_label",
                            children: /* @__PURE__ */ a(
                              be,
                              {
                                name: "dateTo",
                                control: I,
                                render: ({ field: K }) => /* @__PURE__ */ a(
                                  Bo,
                                  {
                                    className: "pf-v5-u-w-100",
                                    value: K.value,
                                    onChange: (G, N) => K.onChange(N),
                                    inputProps: { id: "kc-dateTo" }
                                  }
                                )
                              }
                            )
                          }
                        ),
                        /* @__PURE__ */ x(ot, { children: [
                          /* @__PURE__ */ a(
                            z,
                            {
                              variant: "primary",
                              onClick: E,
                              "data-testid": "search-events-btn",
                              isDisabled: !O,
                              children: t("searchAdminEventsBtn")
                            }
                          ),
                          /* @__PURE__ */ a(
                            z,
                            {
                              variant: "secondary",
                              onClick: L,
                              isDisabled: !O,
                              children: t("resetBtn")
                            }
                          )
                        ] })
                      ]
                    }
                  )
                }
              ) }),
              /* @__PURE__ */ a(Dt, { children: Object.entries(b).length > 0 && /* @__PURE__ */ a("div", { className: "keycloak__searchChips pf-v5-u-ml-md", children: Object.entries(b).map((K) => {
                const [G, N] = K;
                return /* @__PURE__ */ a(
                  vn,
                  {
                    className: "pf-v5-u-mt-md pf-v5-u-mr-md",
                    categoryName: w[G],
                    isClosable: !0,
                    onClick: () => F(G),
                    children: typeof N == "string" ? /* @__PURE__ */ a(Vt, { isReadOnly: !0, children: N }) : N.map(($) => /* @__PURE__ */ a(
                      Vt,
                      {
                        onClick: () => R(G, $),
                        children: $
                      },
                      $
                    ))
                  },
                  G
                );
              }) }) })
            ]
          }
        ) }),
        actions: [
          {
            title: t("auth"),
            onRowClick: (K) => C(K)
          },
          {
            title: t("representation"),
            onRowClick: (K) => P(K)
          }
        ],
        columns: [
          {
            name: "time",
            displayKey: "time",
            cellRenderer: (K) => i(new Date(K.time), Ac)
          },
          {
            name: "resourcePath",
            displayKey: "resourcePath",
            cellRenderer: VY
          },
          {
            name: "resourceType",
            displayKey: "resourceType"
          },
          {
            name: "operationType",
            displayKey: "operationType",
            transforms: [Ft(10)]
          },
          {
            name: "",
            displayKey: "user",
            cellRenderer: (K) => K.authDetails?.userId || ""
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: t("emptyAdminEvents"),
            instructions: t("emptyAdminEventsInstructions")
          }
        ),
        isSearching: Object.keys(b).length > 0
      },
      l
    )
  ] });
}, Rx = {
  client: "",
  dateFrom: "",
  dateTo: "",
  user: "",
  type: [],
  ipAddress: ""
}, zY = (e) => e.error ? /* @__PURE__ */ a(Ht, { content: e.error, children: /* @__PURE__ */ x("span", { children: [
  /* @__PURE__ */ a(Ii, { status: "warning", children: /* @__PURE__ */ a(Yu, {}) }),
  e.type
] }) }) : /* @__PURE__ */ x("span", { children: [
  /* @__PURE__ */ a(Ii, { status: "success", children: /* @__PURE__ */ a(Ks, {}) }),
  e.type
] }), qY = (e) => /* @__PURE__ */ x(ir, { isHorizontal: !0, className: "keycloak_eventsection_details", children: [
  e.details && Object.entries(e.details).map(([t, n]) => /* @__PURE__ */ x(Vr, { children: [
    /* @__PURE__ */ a(nr, { children: t }),
    /* @__PURE__ */ a(tr, { children: n })
  ] }, t)),
  e.error && /* @__PURE__ */ x(Vr, { children: [
    /* @__PURE__ */ a(nr, { children: "error" }),
    /* @__PURE__ */ a(tr, { children: e.error })
  ] }, "error")
] }), GY = (e) => {
  const { t } = H(), { realm: n } = ye();
  return /* @__PURE__ */ x(te, { children: [
    e.userId && /* @__PURE__ */ a(
      Ae,
      {
        to: ri({
          realm: n,
          id: e.userId,
          tab: "settings"
        }),
        children: e.userId
      },
      `link-${e.time}-${e.type}`
    ),
    !e.userId && t("noUserDetails")
  ] });
};
function WY() {
  const { adminClient: e } = de(), { t } = H(), { realm: n } = ye(), r = ai(), [i, s] = D(0), [o, l] = D(!1), [c, d] = D(!1), [u, p] = D(), [m, f] = D({}), g = {
    client: t("client"),
    dateFrom: t("dateFrom"),
    dateTo: t("dateTo"),
    user: t("userId"),
    type: t("eventType"),
    ipAddress: t("ipAddress")
  }, b = Ke({
    mode: "onChange",
    defaultValues: Rx
  }), {
    getValues: v,
    reset: y,
    formState: { isDirty: C },
    control: S,
    handleSubmit: P
  } = b;
  _e(
    () => e.realms.getConfigEvents({ realm: n }),
    (R) => p(R),
    []
  );
  function w(R, M) {
    return e.realms.findEvents({
      // The admin client wants 'dateFrom' and 'dateTo' to be Date objects, however it cannot actually handle them so we need to cast to any.
      ...m,
      realm: n,
      first: R,
      max: M
    });
  }
  const A = (R) => Kn(vx({ realm: n, tab: R })), k = A("user-events"), T = A("admin-events");
  function O() {
    l(!1), L();
  }
  function I() {
    y(), L();
  }
  function _(R) {
    const M = { ...v() };
    delete M[R], y({ ...Rx, ...M }), L();
  }
  function E(R, M) {
    const U = v(), K = U[R], G = Array.isArray(K) ? K.filter((N) => N !== M) : K;
    y({ ...U, [R]: G }), L();
  }
  function L() {
    const R = Sg(
      v(),
      (M) => M !== "" || Array.isArray(M) && M.length > 0
    );
    f(R), s(i + 1);
  }
  const F = () => /* @__PURE__ */ a(He, { ...b, children: /* @__PURE__ */ x(
    Qn,
    {
      direction: { default: "column" },
      spaceItems: { default: "spaceItemsNone" },
      children: [
        /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
          sd,
          {
            buttonText: t("searchForUserEvent"),
            setSearchDropdownOpen: l,
            searchDropdownOpen: o,
            marginRight: "2.5rem",
            width: "15vw",
            children: /* @__PURE__ */ x(
              St,
              {
                "data-testid": "searchForm",
                className: "keycloak__events_search__form",
                onSubmit: P(O),
                isHorizontal: !0,
                children: [
                  /* @__PURE__ */ a(
                    ve,
                    {
                      name: "user",
                      label: t("userId"),
                      "data-testid": "userId-searchField"
                    }
                  ),
                  /* @__PURE__ */ a(
                    re,
                    {
                      label: t("eventType"),
                      fieldId: "kc-eventType",
                      className: "keycloak__events_search__form_label",
                      children: /* @__PURE__ */ a(
                        be,
                        {
                          name: "type",
                          control: S,
                          render: ({ field: R }) => /* @__PURE__ */ a(
                            ht,
                            {
                              className: "keycloak__events_search__type_select",
                              "data-testid": "event-type-searchField",
                              chipGroupProps: {
                                numChips: 1,
                                expandedText: t("hide"),
                                collapsedText: t("showRemaining")
                              },
                              variant: mt.typeaheadMulti,
                              typeAheadAriaLabel: "Select",
                              onToggle: (M) => d(M),
                              selections: R.value,
                              onSelect: (M) => {
                                const U = M.toString(), K = R.value.includes(U) ? R.value.filter((G) => G !== U) : [...R.value, U];
                                R.onChange(K);
                              },
                              onClear: () => {
                                R.onChange([]);
                              },
                              isOpen: c,
                              "aria-labelledby": "eventType",
                              chipGroupComponent: /* @__PURE__ */ a(vn, { children: R.value.map((M) => /* @__PURE__ */ a(
                                Vt,
                                {
                                  onClick: (U) => {
                                    U.stopPropagation(), R.onChange(
                                      R.value.filter((K) => K !== M)
                                    );
                                  },
                                  children: t(`eventTypes.${M}.name`)
                                },
                                M
                              )) }),
                              children: u?.enabledEventTypes?.map((M) => /* @__PURE__ */ a(Re, { value: M, children: t(`eventTypes.${M}.name`) }, M))
                            }
                          )
                        }
                      )
                    }
                  ),
                  /* @__PURE__ */ a(
                    ve,
                    {
                      name: "client",
                      label: t("client"),
                      "data-testid": "client-searchField"
                    }
                  ),
                  /* @__PURE__ */ a(
                    re,
                    {
                      label: t("dateFrom"),
                      fieldId: "kc-dateFrom",
                      className: "keycloak__events_search__form_label",
                      children: /* @__PURE__ */ a(
                        be,
                        {
                          name: "dateFrom",
                          control: S,
                          render: ({ field: R }) => /* @__PURE__ */ a(
                            Bo,
                            {
                              className: "pf-v5-u-w-100",
                              value: R.value,
                              onChange: (M, U) => R.onChange(U),
                              inputProps: { id: "kc-dateFrom" }
                            }
                          )
                        }
                      )
                    }
                  ),
                  /* @__PURE__ */ a(
                    re,
                    {
                      label: t("dateTo"),
                      fieldId: "kc-dateTo",
                      className: "keycloak__events_search__form_label",
                      children: /* @__PURE__ */ a(
                        be,
                        {
                          name: "dateTo",
                          control: S,
                          render: ({ field: R }) => /* @__PURE__ */ a(
                            Bo,
                            {
                              className: "pf-v5-u-w-100",
                              value: R.value,
                              onChange: (M, U) => R.onChange(U),
                              inputProps: { id: "kc-dateTo" }
                            }
                          )
                        }
                      )
                    }
                  ),
                  /* @__PURE__ */ a(
                    ve,
                    {
                      name: "ipAddress",
                      label: t("ipAddress"),
                      "data-testid": "ipAddress-searchField"
                    }
                  ),
                  /* @__PURE__ */ x(ot, { children: [
                    /* @__PURE__ */ a(
                      z,
                      {
                        "data-testid": "search-events-btn",
                        variant: "primary",
                        type: "submit",
                        isDisabled: !C,
                        children: t("searchUserEventsBtn")
                      }
                    ),
                    /* @__PURE__ */ a(
                      z,
                      {
                        variant: "secondary",
                        onClick: I,
                        isDisabled: !C,
                        children: t("resetBtn")
                      }
                    )
                  ] })
                ]
              }
            )
          }
        ) }),
        /* @__PURE__ */ a(Dt, { children: Object.entries(m).length > 0 && /* @__PURE__ */ a("div", { className: "keycloak__searchChips pf-v5-u-ml-md", children: Object.entries(m).map((R) => {
          const [M, U] = R;
          return /* @__PURE__ */ a(
            vn,
            {
              className: "pf-v5-u-mt-md pf-v5-u-mr-md",
              categoryName: g[M],
              isClosable: !0,
              onClick: () => _(M),
              children: typeof U == "string" ? /* @__PURE__ */ a(Vt, { isReadOnly: !0, children: U }) : U.map((K) => /* @__PURE__ */ a(
                Vt,
                {
                  onClick: () => E(M, K),
                  children: t(`eventTypes.${K}.name`)
                },
                K
              ))
            },
            M
          );
        }) }) })
      ]
    }
  ) });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "titleEvents",
        subKey: /* @__PURE__ */ x(as, { i18nKey: "eventExplain", children: [
          "If you want to configure user events, Admin events or Event listeners, please enter",
          /* @__PURE__ */ a(Ae, { to: ac({ realm: n, tab: "events" }), children: t("eventConfig") }),
          "page realm settings to configure."
        ] }),
        helpUrl: sa.eventsUrl,
        divider: !1
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ x(
      Vn,
      {
        isBox: !0,
        defaultLocation: vx({ realm: n, tab: "user-events" }),
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("userEvents") }),
              ...k,
              children: /* @__PURE__ */ a("div", { className: "keycloak__events_table", children: /* @__PURE__ */ a(
                xt,
                {
                  loader: w,
                  detailColumns: [
                    {
                      name: "details",
                      enabled: (R) => R.details !== void 0,
                      cellRenderer: qY
                    }
                  ],
                  isPaginated: !0,
                  ariaLabelKey: "titleEvents",
                  toolbarItem: F(),
                  columns: [
                    {
                      name: "time",
                      displayKey: "time",
                      cellRenderer: (R) => r(new Date(R.time), Ac)
                    },
                    {
                      name: "userId",
                      displayKey: "user",
                      cellRenderer: GY
                    },
                    {
                      name: "type",
                      displayKey: "eventType",
                      cellRenderer: zY
                    },
                    {
                      name: "ipAddress",
                      displayKey: "ipAddress",
                      transforms: [Ft(10)]
                    },
                    {
                      name: "clientId",
                      displayKey: "client"
                    }
                  ],
                  emptyState: /* @__PURE__ */ a(
                    ct,
                    {
                      message: t("emptyUserEvents"),
                      instructions: t("emptyUserEventsInstructions")
                    }
                  ),
                  isSearching: Object.keys(m).length > 0
                },
                i
              ) })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("adminEvents") }),
              "data-testid": "admin-events-tab",
              ...T,
              children: /* @__PURE__ */ a(HY, {})
            }
          )
        ]
      }
    ) })
  ] });
}
const XY = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: WY
}, Symbol.toStringTag, { value: "Module" })), pee = ({
  data: e,
  onSelect: t
}) => {
  const [n, r] = D({ options: [], checkedItems: [] });
  ze(() => {
    t(n.checkedItems.filter((u) => u.checkProps?.checked === !0));
  }, [n]), ze(() => {
    r({ options: e, checkedItems: [] });
  }, [e]);
  const i = (u) => {
    let p = [];
    return u.forEach((m) => {
      p.push(m), m.children && (p = p.concat(i(m.children)));
    }), p;
  }, s = (u, p) => {
    const m = u.target.checked, f = i([p]);
    r((g) => ({
      options: g.options,
      checkedItems: m ? g.checkedItems.concat(
        f.filter(
          (b) => !g.checkedItems.some((v) => v.id === b.id)
        )
      ) : g.checkedItems.filter(
        (b) => !f.some((v) => v.id === b.id)
      )
    }));
  }, o = (u) => n.checkedItems.some((p) => p.id === u.id), l = (u) => u.children ? u.children.some((p) => l(p)) : o(u), c = (u) => {
    const p = o(u);
    return u.checkProps.checked = !1, p ? u.checkProps.checked = !0 : l(u) && (u.checkProps.checked = null), u.children ? {
      ...u,
      children: u.children.map((m) => c(m))
    } : u;
  }, d = n.options.map((u) => c(u));
  return /* @__PURE__ */ a(Gu, { data: d, onCheck: s, hasCheckboxes: !0 });
}, yb = ({
  selectedRows: e,
  show: t,
  toggleDialog: n,
  refresh: r
}) => {
  const { adminClient: i } = de(), { t: s } = H(), { addAlert: o, addError: l } = we(), c = async () => {
    try {
      for (const d of e)
        await i.groups.del({
          id: d.id
        });
      r(), o(s("groupDeleted", { count: e.length }));
    } catch (d) {
      l("groupDeleteError", d);
    }
  };
  return /* @__PURE__ */ a(
    hs,
    {
      titleKey: s("deleteConfirmTitle", { count: e.length }),
      messageKey: s("deleteConfirmGroup", {
        count: e.length,
        groupName: e[0]?.name
      }),
      continueButtonLabel: "delete",
      continueButtonVariant: xe.danger,
      onConfirm: c,
      open: t,
      toggleDialog: n
    }
  );
}, YY = ({
  toggleCreate: e,
  toggleDelete: t,
  kebabDisabled: n
}) => {
  const { t: r } = H(), { currentGroup: i } = Cl(), { hasAccess: s } = Nt(), o = s("manage-users") || i()?.access?.manage, [l, c] = st();
  return o ? /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
      z,
      {
        "data-testid": "openCreateGroupModal",
        variant: "primary",
        onClick: e,
        children: r("createGroup")
      }
    ) }),
    /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
      Kt,
      {
        onOpenChange: c,
        toggle: (d) => /* @__PURE__ */ a(
          ut,
          {
            ref: d,
            isExpanded: l,
            onClick: c,
            isDisabled: n,
            variant: "plain",
            "aria-label": "Actions",
            children: /* @__PURE__ */ a(hr, {})
          }
        ),
        isOpen: l,
        children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
          Ue,
          {
            component: "button",
            onClick: () => {
              t(), c();
            },
            children: r("delete")
          },
          "action"
        ) })
      }
    ) })
  ] }) : /* @__PURE__ */ a("div", {});
}, No = ({
  id: e,
  rename: t,
  duplicateId: n,
  handleModalToggle: r,
  refresh: i
}) => {
  const { adminClient: s } = de(), { t: o } = H(), { addAlert: l, addError: c } = we(), [d, u] = D(null), p = Ke({
    defaultValues: { name: "" }
  }), { handleSubmit: m, formState: f } = p;
  _e(
    async () => {
      if (n)
        return s.groups.findOne({ id: n });
    },
    (C) => {
      C && (u(C), p.reset({ name: o("copyOf", { name: C.name }) }));
    },
    [n]
  );
  const g = async (C) => {
    try {
      const S = [], P = await s.clients.find();
      for (const w of P) {
        const k = (await s.groups.listClientRoleMappings({
          id: C,
          clientUniqueId: w.id
        })).filter((T) => T.id && T.name).map((T) => ({
          id: T.id,
          name: T.name
        }));
        k.length > 0 && S.push({ clientId: w.id, roles: k });
      }
      return S;
    } catch (S) {
      throw c("couldNotFetchClientRoleMappings", S), S;
    }
  }, b = async (C, S, P = !1) => {
    try {
      const w = {
        ...C,
        name: P ? C.name : o("copyOf", { name: C.name }),
        ...S ? {} : { attributes: d?.attributes }
      };
      delete w.id;
      const A = S ? await s.groups.createChildGroup({ id: S }, w) : await s.groups.create(w), k = await s.groups.listMembers({
        id: C.id
      });
      for (const R of k)
        await s.users.addToGroup({
          id: R.id,
          groupId: A.id
        });
      const T = await s.groups.listPermissions({
        id: C.id
      });
      T && await s.groups.updatePermission(
        { id: A.id },
        T
      );
      const I = (await s.groups.listRealmRoleMappings({
        id: C.id
      })).map(
        (R) => ({ id: R.id, name: R.name })
      ), E = (await g(C.id))?.flatMap(
        (R) => R.roles.map((M) => ({
          id: M.id,
          name: M.name,
          clientUniqueId: R.clientId
        }))
      ), L = [
        ...I,
        ...E
      ];
      await v(L, A.id);
      const F = await s.groups.listSubGroups({
        parentId: C.id
      });
      for (const R of F) {
        const M = R.attributes;
        await b(
          { ...R, attributes: M },
          A.id,
          !0
        );
      }
      return A;
    } catch (w) {
      throw c("couldNotDuplicateGroup", w), w;
    }
  }, v = async (C, S) => {
    try {
      const P = C.filter(
        (A) => !A.clientUniqueId && A.name
      ), w = C.filter(
        (A) => A.clientUniqueId && A.name
      );
      await s.groups.addRealmRoleMappings({
        id: S,
        roles: P.map(({ id: A, name: k }) => ({ id: A, name: k }))
      }), await Promise.all(
        w.map((A) => A.clientUniqueId && A.name ? s.groups.addClientRoleMappings({
          id: S,
          clientUniqueId: A.clientUniqueId,
          roles: [{ id: A.id, name: A.name }]
        }) : Promise.resolve())
      );
    } catch (P) {
      c("roleMappingUpdatedError", P);
    }
  }, y = async (C) => {
    C.name = C.name?.trim();
    try {
      n && d ? await b(d) : e ? t ? await s.groups.update(
        { id: e },
        { ...t, name: C.name }
      ) : await s.groups.updateChildGroup({ id: e }, C) : await s.groups.create(C), i(t ? { ...t, name: C.name } : void 0), r(), l(
        o(
          t ? "groupUpdated" : n ? "groupDuplicated" : "groupCreated"
        ),
        pe.success
      );
    } catch (S) {
      c("couldNotCreateGroup", S);
    }
  };
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.small,
      title: o(t ? "renameAGroup" : n ? "duplicateAGroup" : "createAGroup"),
      isOpen: !0,
      onClose: r,
      actions: [
        /* @__PURE__ */ a(
          io,
          {
            formState: f,
            "data-testid": `${t ? "rename" : n ? "duplicate" : "create"}Group`,
            form: "group-form",
            allowInvalid: !0,
            allowNonDirty: !0,
            children: o(t ? "rename" : n ? "duplicate" : "create")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: r,
            children: o("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(He, { ...p, children: /* @__PURE__ */ x(St, { id: "group-form", isHorizontal: !0, onSubmit: m(y), children: [
        n && /* @__PURE__ */ a(
          En,
          {
            variant: "warning",
            component: "h2",
            isInline: !0,
            title: o("duplicateGroupWarning")
          }
        ),
        /* @__PURE__ */ a(
          ve,
          {
            name: "name",
            label: o("name"),
            rules: { required: o("required") },
            autoFocus: !0
          }
        )
      ] }) })
    }
  );
}, JY = (e, t) => t.id ? e.groups.updateRoot(t) : e.groups.create(t), ZY = async (e, t, n) => e.groups.updateChildGroup({ id: n.id }, t), WT = ({ source: e, onClose: t, refresh: n }) => {
  const { adminClient: r } = de(), { t: i } = H(), { addAlert: s, addError: o } = we();
  return /* @__PURE__ */ a(
    bl,
    {
      type: "selectOne",
      filterGroups: [e],
      text: {
        title: "moveToGroup",
        ok: "moveHere"
      },
      onClose: t,
      onConfirm: async (c) => {
        try {
          await (c ? ZY(r, e, c[0]) : JY(r, e)), n(), s(i("moveGroupSuccess"));
        } catch (d) {
          o("moveGroupError", d);
        }
      },
      isMove: !0
    }
  );
};
function XT(e) {
  let t = e.length;
  for (const n of e)
    n.subGroups && (t += XT(n.subGroups));
  return t;
}
const QY = ({
  group: e,
  refresh: t
}) => {
  const { t: n } = H(), [r, i] = st(), [s, o] = st(), [l, c] = st(), [d, u] = st(), [p, m] = st(), f = Xe(), { realm: g } = ye();
  return /* @__PURE__ */ x(te, { children: [
    s && /* @__PURE__ */ a(
      No,
      {
        id: e.id,
        rename: e,
        refresh: () => {
          f(Xo({ realm: g })), t();
        },
        handleModalToggle: o
      }
    ),
    l && /* @__PURE__ */ a(
      No,
      {
        id: e.id,
        handleModalToggle: c,
        refresh: t
      }
    ),
    d && /* @__PURE__ */ a(WT, { source: e, refresh: t, onClose: u }),
    /* @__PURE__ */ a(
      yb,
      {
        show: p,
        toggleDialog: m,
        selectedRows: [e],
        refresh: () => {
          f(Xo({ realm: g })), t();
        }
      }
    ),
    /* @__PURE__ */ a(
      Kt,
      {
        popperProps: {
          position: "right"
        },
        onOpenChange: i,
        toggle: (b) => /* @__PURE__ */ a(
          ut,
          {
            ref: b,
            onClick: i,
            isExpanded: r,
            variant: "plain",
            "aria-label": "Actions",
            children: /* @__PURE__ */ a(hr, {})
          }
        ),
        isOpen: r,
        children: /* @__PURE__ */ x(Xt, { children: [
          /* @__PURE__ */ a(Ue, { onClick: o, children: n("rename") }, "rename"),
          /* @__PURE__ */ a(Ue, { onClick: u, children: n("moveTo") }, "move"),
          /* @__PURE__ */ a(Ue, { onClick: c, children: n("createChildGroup") }, "create"),
          /* @__PURE__ */ a(Pt, {}, "separator"),
          ",",
          /* @__PURE__ */ a(Ue, { onClick: m, children: n("delete") }, "delete")
        ] })
      }
    )
  ] });
}, _d = 50, eJ = () => {
  const { t: e } = H();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(ti, { size: "sm" }),
    " ",
    e("spinnerLoading")
  ] });
}, tJ = [
  {
    name: /* @__PURE__ */ a(eJ, {})
  }
], nJ = ({
  refresh: e,
  canViewDetails: t
}) => {
  const { adminClient: n } = de(), { t: r } = H(), { realm: i } = ye(), s = Xe(), { addAlert: o } = we(), { hasAccess: l } = Nt(), [c, d] = D(), { subGroups: u, clear: p } = Cl(), [m, f] = D(""), [g, b] = D(20), [v, y] = D(0), C = Ct(0), S = Ct(20), [P, w] = D(0), [A, k] = D(!1), [T, O] = D(), [I, _] = D(0), [E, L] = D(0), F = () => {
    L(E + 1), e();
  }, R = (K, G) => {
    const N = K.subGroupCount;
    return {
      id: K.id,
      name: /* @__PURE__ */ a(Ht, { content: K.name, children: /* @__PURE__ */ a("span", { children: K.name }) }),
      access: K.access || {},
      children: N ? m.length === 0 ? tJ : K.subGroups?.map(($) => R($, G)) : void 0,
      action: (l("manage-users") || K.access?.manage) && /* @__PURE__ */ a(QY, { group: K, refresh: G }),
      defaultExpanded: u.map(($) => $.id).includes(K.id)
    };
  };
  _e(
    async () => {
      const K = await $s(
        n,
        "groups",
        Object.assign(
          {
            first: `${v}`,
            max: `${g + 1}`,
            exact: `${A}`,
            global: `${m !== ""}`
          },
          m === "" ? null : { search: m }
        )
      );
      let G = [];
      return T && (G = await $s(
        n,
        `groups/${T.id}/children`,
        {
          first: `${I}`,
          max: `${_d}`
        }
      )), { groups: K, subGroups: G };
    },
    ({ groups: K, subGroups: G }) => {
      if (T) {
        const N = M(c || [], T.id, []);
        if (N.length && G.length) {
          const $ = N.pop();
          $.children = [
            ...(Ey($.children || []).splice(0, _d), G.map((q) => R(q, F), "id")),
            ...G.length === _d ? [
              {
                id: "next",
                name: /* @__PURE__ */ a(
                  z,
                  {
                    variant: "plain",
                    onClick: () => _(I + _d),
                    children: /* @__PURE__ */ a(Nn, {})
                  }
                )
              }
            ] : []
          ];
        }
      }
      m || C.current !== v || S.current !== g ? d(K.map((N) => R(N, F))) : d(
        Ey(
          c,
          K.map((N) => R(N, F)),
          "id"
        )
      ), w(XT(K)), C.current = v, S.current = g;
    },
    [E, v, I, g, m, A, T]
  );
  const M = (K, G, N) => {
    for (let $ = 0; $ < K.length; $++) {
      const q = K[$];
      if (q.id === G)
        return N.push(q), N;
      q.children && (N.push(q), M(q.children, G, N), N[N.length - 1].id !== G && N.pop());
    }
    return N;
  }, U = (K, G) => {
    if (K.id === "next") return;
    O(K);
    const N = M(G, K.id, []);
    u.every(({ id: $ }) => N.find((q) => q.id === $)) || p(), t || N.at(-1)?.access?.view || u.at(-1)?.access?.view ? s(
      Xo({
        realm: i,
        id: N.map(($) => $.id).join("/")
      })
    ) : (o(r("noViewRights"), pe.warning), s(Xo({ realm: i })));
  };
  return c ? /* @__PURE__ */ a(
    Ui,
    {
      count: P,
      first: v,
      max: g,
      onNextClick: y,
      onPreviousClick: y,
      onPerPageSelect: (K, G) => {
        y(K), b(G);
      },
      inputGroupName: "searchForGroups",
      inputGroupPlaceholder: r("searchForGroups"),
      inputGroupOnEnter: f,
      toolbarItem: /* @__PURE__ */ x(nn, { className: "pf-v5-u-pt-sm", children: [
        /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
          Zt,
          {
            id: "exact",
            "data-testid": "exact-search",
            name: "exact",
            isChecked: A,
            onChange: (K, G) => k(G)
          }
        ) }),
        /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a("label", { htmlFor: "exact", className: "pf-v5-u-pl-sm", children: r("exactSearch") }) })
      ] }),
      children: c.length > 0 && /* @__PURE__ */ a(
        Gu,
        {
          data: c.slice(0, g),
          allExpanded: m.length > 0,
          activeItems: T ? [T] : void 0,
          hasGuides: !0,
          hasSelectableNodes: !0,
          className: "keycloak_groups_treeview",
          onExpand: (K, G) => {
            U(G, c);
          },
          onSelect: (K, G) => {
            U(G, c);
          }
        }
      )
    }
  ) : /* @__PURE__ */ a(bt, {});
}, YT = (e) => {
  const t = e.substring(1).split("/");
  return t.length > 1 ? t.splice(2) : void 0;
}, Pp = (e) => {
  const t = YT(e);
  return t ? t[t.length - 1] : void 0;
}, aJ = () => {
  const { adminClient: e } = de(), { t } = H(), { addAlert: n, addError: r } = we(), i = Ke({
    mode: "onChange"
  }), s = ds(), o = Pp(s.pathname), [l, c] = D();
  _e(
    () => e.groups.findOne({ id: o }),
    (u) => {
      i.reset({
        attributes: Ec(u?.attributes)
      }), c(u);
    },
    [o]
  );
  const d = async (u) => {
    try {
      const p = ta(u).attributes;
      await e.groups.update(
        { id: o },
        { ...l, attributes: p }
      ), c({ ...l, attributes: p }), n(t("groupUpdated"), pe.success);
    } catch (p) {
      r("groupUpdateError", p);
    }
  };
  return /* @__PURE__ */ a(Te, { variant: Cr.light, children: /* @__PURE__ */ a(
    vb,
    {
      form: i,
      save: d,
      fineGrainedAccess: l?.access?.manage,
      reset: () => i.reset({
        attributes: Ec(l?.attributes)
      })
    }
  ) });
}, rJ = ({ id: e, name: t }) => {
  const { adminClient: n } = de(), { t: r } = H(), { addAlert: i, addError: s } = we();
  return /* @__PURE__ */ a(oo, { name: t, id: e, type: "groups", save: async (l) => {
    try {
      const c = l.filter((d) => d.client === void 0).map((d) => d.role).flat();
      await n.groups.addRealmRoleMappings({
        id: e,
        roles: c
      }), await Promise.all(
        l.filter((d) => d.client !== void 0).map(
          (d) => n.groups.addClientRoleMappings({
            id: e,
            clientUniqueId: d.client.id,
            roles: [d.role]
          })
        )
      ), i(r("roleMappingUpdatedSuccess"), pe.success);
    } catch (c) {
      s("roleMappingUpdatedError", c);
    }
  } });
}, Ax = ({ refresh: e }) => {
  const { adminClient: t } = de(), { t: n } = H(), [r, i] = D([]), [s, o] = D(), [l, c] = st(), [d, u] = D(), [p, m] = st(), [f, g] = D(), { currentGroup: b } = Cl(), [v, y] = D(0), C = () => y(v + 1), [S, P] = D(), w = ds(), A = Pp(w.pathname), { hasAccess: k } = Nt(), T = k("manage-users") || b()?.access?.manage, O = async (I, _) => {
    let E;
    if (A) {
      const L = {
        search: S || "",
        first: I,
        max: _,
        parentId: A
      };
      E = await t.groups.listSubGroups(L);
    } else {
      const L = {
        search: S || "",
        first: I || void 0,
        max: _ || void 0
      };
      E = await t.groups.find(L);
    }
    return E;
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      yb,
      {
        show: p,
        toggleDialog: m,
        selectedRows: r,
        refresh: () => {
          C(), e(), i([]);
        }
      }
    ),
    s && /* @__PURE__ */ a(
      No,
      {
        id: s.id,
        rename: s,
        refresh: () => {
          C(), e();
        },
        handleModalToggle: () => o(void 0)
      }
    ),
    l && /* @__PURE__ */ a(
      No,
      {
        id: r[0]?.id || A,
        handleModalToggle: c,
        refresh: () => {
          i([]), C(), e();
        }
      }
    ),
    d && /* @__PURE__ */ a(
      No,
      {
        id: d,
        duplicateId: d,
        refresh: () => {
          C(), e();
        },
        handleModalToggle: () => u(void 0)
      }
    ),
    f && /* @__PURE__ */ a(
      WT,
      {
        source: f,
        refresh: () => {
          g(void 0), C(), e();
        },
        onClose: () => g(void 0)
      }
    ),
    /* @__PURE__ */ a(
      xt,
      {
        onSelect: (I) => i([...I]),
        canSelectAll: !0,
        loader: O,
        ariaLabelKey: "groups",
        isPaginated: !0,
        isSearching: !!S,
        toolbarItem: /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            Vc,
            {
              "data-testid": "group-search",
              placeholder: n("filterGroups"),
              value: S,
              onChange: (I, _) => {
                P(_);
              },
              onSearch: C,
              onClear: () => {
                P(""), C();
              }
            }
          ) }),
          /* @__PURE__ */ a(
            YY,
            {
              toggleCreate: c,
              toggleDelete: m,
              kebabDisabled: r.length === 0
            }
          )
        ] }),
        actions: T ? [
          {
            title: n("rename"),
            onRowClick: async (I) => (o(I), !1)
          },
          {
            title: n("moveTo"),
            onRowClick: async (I) => (g(I), !1)
          },
          {
            title: n("createChildGroup"),
            onRowClick: async (I) => (i([I]), c(), !1)
          },
          ...A ? [] : [
            {
              title: n("duplicate"),
              onRowClick: async (I) => (u(I.id), !1)
            }
          ],
          {
            isSeparator: !0
          },
          {
            title: n("delete"),
            onRowClick: async (I) => (i([I]), m(), !0)
          }
        ] : [],
        columns: [
          {
            name: "name",
            displayKey: "groupName",
            cellRenderer: (I) => I.access?.view ? /* @__PURE__ */ a(Ae, { to: `${w.pathname}/${I.id}`, children: I.name }, I.id) : /* @__PURE__ */ a("span", { children: I.name })
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            hasIcon: !0,
            message: n(`noGroupsInThis${A ? "SubGroup" : "Realm"}`),
            instructions: n(
              `noGroupsInThis${A ? "SubGroup" : "Realm"}Instructions`
            ),
            primaryActionText: n("createGroup"),
            onPrimaryAction: c
          }
        )
      },
      `${A}${v}`
    )
  ] });
}, iJ = (e) => {
  const { t } = H();
  return /* @__PURE__ */ x(te, { children: [
    e.username,
    " ",
    !e.enabled && /* @__PURE__ */ a(pn, { color: "red", icon: /* @__PURE__ */ a(Ni, {}), children: t("disabled") })
  ] });
}, JT = ({
  membersQuery: e,
  onAdd: t,
  onClose: n
}) => {
  const { adminClient: r } = de(), { t: i } = H(), { addError: s } = we(), [o, l] = D([]), c = async (d, u, p) => {
    const m = await e(d, u), f = {
      first: d,
      max: u + m.length,
      search: p || ""
    };
    try {
      const g = await r.users.find({ ...f });
      return xg(g, m, "id").slice(0, u);
    } catch (g) {
      return s("noUsersFoundError", g), [];
    }
  };
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.large,
      title: i("addMember"),
      isOpen: !0,
      onClose: n,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "add",
            variant: "primary",
            onClick: async () => {
              await t(o), n();
            },
            children: i("add")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel",
            variant: "link",
            onClick: n,
            children: i("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        xt,
        {
          loader: c,
          isPaginated: !0,
          ariaLabelKey: "titleUsers",
          searchPlaceholderKey: "searchForUser",
          canSelectAll: !0,
          onSelect: (d) => l([...d]),
          emptyState: /* @__PURE__ */ a(
            ct,
            {
              message: i("noUsersFound"),
              instructions: i("emptyInstructions")
            }
          ),
          columns: [
            {
              name: "username",
              displayKey: "username",
              cellRenderer: iJ
            },
            {
              name: "email",
              displayKey: "email",
              cellFormatters: [un()]
            },
            {
              name: "lastName",
              displayKey: "lastName",
              cellFormatters: [un()]
            },
            {
              name: "firstName",
              displayKey: "firstName",
              cellFormatters: [un()]
            }
          ]
        }
      )
    }
  );
}, sJ = (e) => {
  const { realm: t } = ye(), { t: n } = H();
  return /* @__PURE__ */ x(Ae, { to: ri({ realm: t, id: e.id, tab: "settings" }), children: [
    e.username,
    " ",
    !e.enabled && /* @__PURE__ */ a(pn, { color: "red", icon: /* @__PURE__ */ a(Ni, {}), children: n("disabled") })
  ] }, e.id);
}, oJ = () => {
  const { adminClient: e } = de(), { t } = H(), { addAlert: n, addError: r } = we(), i = ds(), s = Pp(i.pathname), [o, l] = D(!1), { currentGroup: c } = Cl(), [d, u] = D(), [p, m] = D(!1), [f, g] = D(!1), [b, v] = D([]), { hasAccess: y } = Nt();
  _e(
    () => e.groups.findOne({ id: c().id }),
    u,
    []
  );
  const C = y("manage-users") || d?.access.manageMembership, [S, P] = D(0), w = () => P((/* @__PURE__ */ new Date()).getTime()), A = async (T, O = 0) => {
    let I = [];
    if (!O || !T)
      return I;
    const _ = {
      parentId: T,
      first: 0,
      max: O
    }, E = await e.groups.listSubGroups(_);
    return I = I.concat(E), await Promise.all(
      E.map((L) => A(L.id, L.subGroupCount))
    ).then((L) => {
      L.forEach((F) => I = I.concat(F));
    }), I;
  }, k = async (T, O) => {
    if (!s)
      return [];
    let I = await e.groups.listMembers({
      id: s,
      briefRepresentation: !0,
      first: T,
      max: O
    });
    if (o && d?.subGroupCount && d.id) {
      const _ = await A(
        d.id,
        d.subGroupCount
      );
      await Promise.all(
        _.map(
          (E) => e.groups.listMembers({
            id: E.id,
            briefRepresentation: !0
          })
        )
      ).then((E) => {
        E.forEach((L) => I = I.concat(L));
      }), I = lp(I, (E) => E.username);
    }
    return I;
  };
  return d ? /* @__PURE__ */ x(te, { children: [
    p && /* @__PURE__ */ a(
      JT,
      {
        membersQuery: (T, O) => e.groups.listMembers({ id: s, first: T, max: O }),
        onAdd: async (T) => {
          try {
            await Promise.all(
              T.map(
                (O) => e.users.addToGroup({ id: O.id, groupId: s })
              )
            ), n(t("usersAdded", { count: T.length }));
          } catch (O) {
            r("usersAddedError", O);
          }
        },
        onClose: () => {
          m(!1), w();
        }
      }
    ),
    /* @__PURE__ */ a(
      xt,
      {
        "data-testid": "members-table",
        loader: k,
        ariaLabelKey: "members",
        isPaginated: !0,
        canSelectAll: !0,
        onSelect: (T) => v([...T]),
        toolbarItem: C && /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            z,
            {
              "data-testid": "addMember",
              variant: "primary",
              onClick: () => m(!0),
              children: t("addMember")
            }
          ) }),
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            Zt,
            {
              "data-testid": "includeSubGroupsCheck",
              label: t("includeSubGroups"),
              id: "kc-include-sub-groups",
              isChecked: o,
              onChange: () => l(!o)
            }
          ) }),
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            Kt,
            {
              onOpenChange: (T) => g(T),
              toggle: (T) => /* @__PURE__ */ a(
                ut,
                {
                  ref: T,
                  variant: "plain",
                  onClick: () => g(!f),
                  isExpanded: f,
                  isDisabled: b.length === 0,
                  "aria-label": "Actions",
                  children: /* @__PURE__ */ a(hr, {})
                }
              ),
              shouldFocusToggleOnSelect: !0,
              isOpen: f,
              children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
                Ue,
                {
                  component: "button",
                  onClick: async () => {
                    try {
                      await Promise.all(
                        b.map(
                          (T) => e.users.delFromGroup({
                            id: T.id,
                            groupId: s
                          })
                        )
                      ), g(!1), n(
                        t("usersLeft", { count: b.length })
                      );
                    } catch (T) {
                      r("usersLeftError", T);
                    }
                    w();
                  },
                  children: t("leave")
                },
                "action"
              ) })
            }
          ) })
        ] }),
        actions: C ? [
          {
            title: t("leave"),
            onRowClick: async (T) => {
              try {
                await e.users.delFromGroup({
                  id: T.id,
                  groupId: s
                }), n(t("usersLeft", { count: 1 }));
              } catch (O) {
                r("usersLeftError", O);
              }
              return !0;
            }
          }
        ] : [],
        columns: [
          {
            name: "username",
            displayKey: "name",
            cellRenderer: sJ
          },
          {
            name: "email",
            displayKey: "email",
            cellFormatters: [un()]
          },
          {
            name: "firstName",
            displayKey: "firstName",
            cellFormatters: [un()]
          },
          {
            name: "lastName",
            displayKey: "lastName",
            cellFormatters: [un()]
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: t("noUsersFound"),
            instructions: C ? t("emptyInstructions") : void 0,
            primaryActionText: C ? t("addMember") : void 0,
            onPrimaryAction: () => m(!0),
            secondaryActions: [
              {
                text: t("includeSubGroups"),
                onClick: () => l(!0)
              }
            ]
          }
        )
      },
      `${s}${S}${o}`
    )
  ] }) : /* @__PURE__ */ a(bt, {});
};
function lJ() {
  const { adminClient: e } = de(), { t } = H(), [n, r] = D(0), { subGroups: i, setSubGroups: s, currentGroup: o } = Cl(), { realm: l } = ye(), [c, d] = D(), [u, p] = st(), m = Xe(), f = ds(), g = Pp(f.pathname), [b, v] = st(!0), [y, C] = D(0), S = () => C(y + 1), { hasAccess: P } = Nt(), A = aa()(Fn.AdminFineGrainedAuthz) && P("manage-authorization", "manage-users", "manage-clients"), k = P("manage-users") || o()?.access?.manage, T = P("manage-users"), O = P("query-groups", "view-users") || P("manage-users", "query-groups"), I = P("view-users") || o()?.access?.viewMembers || o()?.access?.manageMembers;
  return _e(
    async () => {
      const _ = YT(f.pathname);
      if (_ && _.length > i.length) {
        const L = [];
        for (const F of _) {
          let R;
          if (F !== "search" ? R = await e.groups.findOne({ id: F }) : R = { name: t("searchGroups"), id: "search" }, R)
            L.push(R);
          else
            throw new Error(t("notFound"));
        }
        return L;
      }
      return [];
    },
    (_) => {
      _.length && s(_);
    },
    [g]
  ), /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      yb,
      {
        show: u,
        toggleDialog: p,
        selectedRows: [o()],
        refresh: () => {
          m(Xo({ realm: l })), S();
        }
      }
    ),
    c && /* @__PURE__ */ a(
      No,
      {
        id: g,
        rename: c,
        refresh: (_) => {
          S(), s([...i.slice(0, i.length - 1), _]);
        },
        handleModalToggle: () => d(void 0)
      }
    ),
    /* @__PURE__ */ a(Te, { variant: Cr.light, className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(Nh, { isInline: !0, isExpanded: b, position: "left", children: /* @__PURE__ */ a(
      Dh,
      {
        panelContent: /* @__PURE__ */ a(Fh, { isResizable: !0, children: /* @__PURE__ */ a(b0, { children: /* @__PURE__ */ a(
          nJ,
          {
            refresh: S,
            canViewDetails: O
          }
        ) }) }),
        children: /* @__PURE__ */ x(Mh, { children: [
          /* @__PURE__ */ a(Ht, { content: t(b ? "hide" : "show"), children: /* @__PURE__ */ a(
            z,
            {
              "aria-label": t(b ? "hide" : "show"),
              variant: "plain",
              icon: b ? /* @__PURE__ */ a(Hs, {}) : /* @__PURE__ */ a(XL, {}),
              onClick: v
            }
          ) }),
          /* @__PURE__ */ a(hW, {}),
          /* @__PURE__ */ a(
            wt,
            {
              titleKey: g ? o()?.name : "groups",
              subKey: g ? "" : "groupsDescription",
              helpUrl: g ? "" : sa.groupsUrl,
              divider: !g,
              dropdownItems: g && k ? [
                /* @__PURE__ */ a(
                  Ue,
                  {
                    "data-testid": "renameGroupAction",
                    onClick: () => d(o()),
                    children: t("renameGroup")
                  },
                  "renameGroup"
                ),
                /* @__PURE__ */ a(
                  Ue,
                  {
                    "data-testid": "deleteGroup",
                    onClick: p,
                    children: t("deleteGroup")
                  },
                  "deleteGroup"
                )
              ] : void 0
            }
          ),
          i.length > 0 && /* @__PURE__ */ x(
            Ka,
            {
              inset: {
                default: "insetNone",
                md: "insetSm",
                xl: "insetLg",
                "2xl": "inset2xl"
              },
              activeKey: n,
              onSelect: (_, E) => r(E),
              isBox: !0,
              mountOnEnter: !0,
              unmountOnExit: !0,
              children: [
                /* @__PURE__ */ a(
                  Ee,
                  {
                    "data-testid": "groups",
                    eventKey: 0,
                    title: /* @__PURE__ */ a(Pe, { children: t("childGroups") }),
                    children: /* @__PURE__ */ a(Ax, { refresh: S })
                  }
                ),
                I && /* @__PURE__ */ a(
                  Ee,
                  {
                    "data-testid": "members",
                    eventKey: 1,
                    title: /* @__PURE__ */ a(Pe, { children: t("members") }),
                    children: /* @__PURE__ */ a(oJ, {})
                  }
                ),
                /* @__PURE__ */ a(
                  Ee,
                  {
                    "data-testid": "attributes",
                    eventKey: 2,
                    title: /* @__PURE__ */ a(Pe, { children: t("attributes") }),
                    children: /* @__PURE__ */ a(aJ, {})
                  }
                ),
                T && /* @__PURE__ */ a(
                  Ee,
                  {
                    eventKey: 3,
                    "data-testid": "role-mapping-tab",
                    title: /* @__PURE__ */ a(Pe, { children: t("roleMapping") }),
                    children: /* @__PURE__ */ a(rJ, { id: g, name: o()?.name })
                  }
                ),
                A && /* @__PURE__ */ a(
                  Ee,
                  {
                    eventKey: 4,
                    "data-testid": "permissionsTab",
                    title: /* @__PURE__ */ a(Pe, { children: t("permissions") }),
                    children: /* @__PURE__ */ a(id, { id: g, type: "groups" })
                  }
                )
              ]
            }
          ),
          i.length === 0 && /* @__PURE__ */ a(Ax, { refresh: S })
        ] })
      }
    ) }, y) })
  ] });
}
const cJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: lJ
}, Symbol.toStringTag, { value: "Module" })), ZT = ({
  secretRequired: e = !0,
  create: t = !0
}) => {
  const { t: n } = H();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.clientId",
        label: n("clientId"),
        labelIcon: n("clientIdHelp"),
        rules: {
          required: n("required")
        }
      }
    ),
    /* @__PURE__ */ a(
      zo,
      {
        name: "config.clientSecret",
        label: n("clientSecret"),
        labelIcon: n("clientSecretHelp"),
        hasReveal: t,
        rules: { required: { value: e, message: n("required") } }
      }
    )
  ] });
}, Cb = () => {
  const { t: e } = H(), { control: t } = De();
  return /* @__PURE__ */ a(
    re,
    {
      label: e("displayOrder"),
      labelIcon: /* @__PURE__ */ a(
        le,
        {
          helpText: e("displayOrderHelp"),
          fieldLabelId: "displayOrder"
        }
      ),
      fieldId: "kc-display-order",
      children: /* @__PURE__ */ a(
        be,
        {
          name: "config.guiOrder",
          control: t,
          defaultValue: "",
          render: ({ field: n }) => /* @__PURE__ */ a(
            gt,
            {
              id: "kc-display-order",
              type: "number",
              value: n.value,
              "data-testid": "displayOrder",
              min: 0,
              onChange: (r, i) => {
                const s = Number(i);
                n.onChange(i === "" ? i : s < 0 ? 0 : s);
              }
            }
          )
        }
      )
    }
  );
}, xb = ({ id: e }) => {
  const { environment: t } = La(), { t: n } = H(), { realm: r } = ye(), i = `${wi(
    t.serverBaseUrl
  )}realms/${r}/broker`;
  return /* @__PURE__ */ a(
    re,
    {
      label: n("redirectURI"),
      labelIcon: /* @__PURE__ */ a(le, { helpText: n("redirectURIHelp"), fieldLabelId: "redirectURI" }),
      fieldId: "kc-redirect-uri",
      children: /* @__PURE__ */ a(
        ni,
        {
          isReadOnly: !0,
          children: `${i}/${e}/endpoint`
        }
      )
    }
  );
}, QT = ({
  create: e = !0,
  id: t
}) => {
  const { t: n } = H(), { control: r } = De(), i = rt({ control: r, name: "alias" }), { tab: s } = na();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(xb, { id: i || t }),
    /* @__PURE__ */ a(
      ve,
      {
        name: "alias",
        label: n("alias"),
        labelIcon: n("aliasHelp"),
        readOnly: s === "settings",
        rules: {
          required: n("required")
        }
      }
    ),
    /* @__PURE__ */ a(ve, { name: "displayName", label: n("displayName") }),
    /* @__PURE__ */ a(ZT, { create: e }),
    /* @__PURE__ */ a(Cb, {})
  ] });
};
function dJ() {
  const { adminClient: e } = de(), { t } = H(), { providerId: n } = zt(), r = Ke({ mode: "onChange" }), i = Tt(), s = nt(() => {
    const g = [
      "org.keycloak.broker.social.SocialIdentityProvider",
      "org.keycloak.broker.provider.IdentityProvider"
    ];
    for (const b of g) {
      const v = i.componentTypes?.[b]?.find(
        ({ id: y }) => y === n
      );
      if (v)
        return v;
    }
  }, [i, n]), {
    handleSubmit: o,
    formState: { isValid: l }
  } = r, { addAlert: c, addError: d } = we(), u = Xe(), { realm: p } = ye(), m = async (g) => {
    try {
      await e.identityProviders.create({
        ...g,
        providerId: n,
        alias: g.alias
      }), c(t("createIdentityProviderSuccess"), pe.success), u(
        Ri({
          realm: p,
          providerId: n,
          alias: g.alias,
          tab: "settings"
        })
      );
    } catch (b) {
      d("createError", b);
    }
  };
  return r.getValues("alias") || r.setValue("alias", n), /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: t("addIdentityProvider", {
          provider: Ia(n)
        })
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ x(
      je,
      {
        role: "manage-identity-providers",
        isHorizontal: !0,
        onSubmit: o(m),
        children: [
          /* @__PURE__ */ x(He, { ...r, children: [
            /* @__PURE__ */ a(QT, { id: n }),
            s && /* @__PURE__ */ a(
              gr,
              {
                stringify: !0,
                properties: s.properties
              }
            )
          ] }),
          /* @__PURE__ */ x(ot, { children: [
            /* @__PURE__ */ a(
              z,
              {
                isDisabled: !l,
                variant: "primary",
                type: "submit",
                "data-testid": "createProvider",
                children: t("add")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                "data-testid": "cancel",
                component: (g) => /* @__PURE__ */ a(Ae, { ...g, to: Ip({ realm: p }) }),
                children: t("cancel")
              }
            )
          ] })
        ]
      }
    ) })
  ] });
}
const uJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: dJ
}, Symbol.toStringTag, { value: "Module" })), pJ = ({
  mapperTypes: e,
  mapperType: t,
  form: n,
  id: r,
  updateMapperType: i
}) => {
  const { t: s } = H(), { control: o } = n, [l, c] = D(!1), d = ["inherit", "import", "legacy", "force"];
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "name",
        label: s("name"),
        labelIcon: s("addIdpMapperNameHelp"),
        readOnly: !!r,
        rules: {
          required: s("required")
        }
      }
    ),
    /* @__PURE__ */ a(
      at,
      {
        name: "config.syncMode",
        label: s("syncModeOverride"),
        labelIcon: s("syncModeOverrideHelp"),
        options: d.map((u) => ({
          key: u.toUpperCase(),
          value: s(`syncModes.${u}`)
        })),
        controller: { defaultValue: d[0].toUpperCase() }
      }
    ),
    /* @__PURE__ */ a(
      re,
      {
        label: s("mapperType"),
        labelIcon: /* @__PURE__ */ a(le, { helpText: t.helpText, fieldLabelId: "mapperType" }),
        fieldId: "identityProviderMapper",
        children: /* @__PURE__ */ a(
          be,
          {
            name: "identityProviderMapper",
            defaultValue: e[0].id,
            control: o,
            render: ({ field: u }) => /* @__PURE__ */ a(
              ht,
              {
                toggleId: "identityProviderMapper",
                "data-testid": "idp-mapper-select",
                isDisabled: !!r,
                onToggle: () => c(!l),
                onSelect: (p) => {
                  const m = p;
                  i(m), u.onChange(m.id), c(!1);
                },
                selections: t.name,
                variant: mt.single,
                "aria-label": s("mapperType"),
                isOpen: l,
                children: e.map((p) => /* @__PURE__ */ a(
                  Re,
                  {
                    selected: p === u.value,
                    "datatest-id": p.id,
                    value: p,
                    children: p.name
                  },
                  p.name
                ))
              }
            )
          }
        )
      }
    )
  ] });
};
function mJ() {
  const { adminClient: e } = de(), { t } = H(), n = Ke({
    shouldUnregister: !0
  }), { handleSubmit: r } = n, { addAlert: i, addError: s } = we(), o = Xe(), l = ba(), { realm: c } = ye(), { id: d, providerId: u, alias: p } = zt(), [m, f] = D(), [g, b] = D(), v = async (P) => {
    const w = ta(P), A = {
      ...w,
      config: {
        ...w.config
      },
      identityProviderAlias: p
    };
    if (d)
      try {
        await e.identityProviders.updateMapper(
          {
            id: d,
            alias: p
          },
          { ...A, id: d }
        ), i(t("mapperSaveSuccess"), pe.success);
      } catch (k) {
        s("mapperSaveError", k);
      }
    else
      try {
        const k = await e.identityProviders.createMapper({
          identityProviderMapper: A,
          alias: p
        });
        i(t("mapperCreateSuccess"), pe.success), o(
          fT({
            realm: c,
            alias: p,
            providerId: u,
            id: k.id
          })
        );
      } catch (k) {
        s("mapperCreateError", k);
      }
  }, [y, C] = Ve({
    titleKey: "deleteProviderMapper",
    messageKey: t("deleteMapperConfirm", {
      mapper: g?.name
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.identityProviders.delMapper({
          alias: p,
          id: d
        }), i(t("deleteMapperSuccess"), pe.success), o(
          Ri({ providerId: u, alias: p, tab: "mappers", realm: c })
        );
      } catch (P) {
        s("deleteErrorIdentityProvider", P);
      }
    }
  });
  _e(
    () => Promise.all([
      d ? e.identityProviders.findOneMapper({ alias: p, id: d }) : null,
      e.identityProviders.findMapperTypes({ alias: p })
    ]),
    ([P, w]) => {
      const A = l(Object.values(w), mr("name"));
      P ? (b(
        A.find(({ id: k }) => k === P.identityProviderMapper)
      ), S(P)) : b(A[0]), f(A);
    },
    [d]
  );
  const S = (P) => {
    Pn(P, n.setValue);
  };
  return !m || !g ? /* @__PURE__ */ a(bt, {}) : /* @__PURE__ */ x(Te, { variant: "light", children: [
    /* @__PURE__ */ a(C, {}),
    /* @__PURE__ */ a(
      wt,
      {
        className: "kc-add-mapper-title",
        titleKey: d ? t("editIdPMapper", {
          providerId: u[0].toUpperCase() + u.substring(1)
        }) : t("addIdPMapper", {
          providerId: u[0].toUpperCase() + u.substring(1)
        }),
        dropdownItems: d ? [
          /* @__PURE__ */ a(Ue, { onClick: y, children: t("delete") }, "delete")
        ] : void 0,
        divider: !0
      }
    ),
    /* @__PURE__ */ x(
      je,
      {
        role: "manage-identity-providers",
        isHorizontal: !0,
        onSubmit: r(v),
        className: "pf-v5-u-mt-lg",
        children: [
          /* @__PURE__ */ x(He, { ...n, children: [
            d && /* @__PURE__ */ a(
              ve,
              {
                name: "id",
                label: t("id"),
                readOnly: !0,
                rules: {
                  required: t("required")
                }
              }
            ),
            g.properties && /* @__PURE__ */ x(te, { children: [
              /* @__PURE__ */ a(
                pJ,
                {
                  form: n,
                  id: d,
                  mapperTypes: m,
                  updateMapperType: b,
                  mapperType: g
                }
              ),
              /* @__PURE__ */ a(gr, { properties: g.properties })
            ] })
          ] }),
          /* @__PURE__ */ x(ot, { children: [
            /* @__PURE__ */ a(
              z,
              {
                "data-testid": "new-mapper-save-button",
                variant: "primary",
                type: "submit",
                children: t("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                "data-testid": "new-mapper-cancel-button",
                variant: "link",
                component: (P) => /* @__PURE__ */ a(
                  Ae,
                  {
                    ...P,
                    to: Ri({
                      realm: c,
                      providerId: u,
                      alias: p,
                      tab: "mappers"
                    })
                  }
                ),
                children: t("cancel")
              }
            )
          ] })
        ]
      }
    )
  ] });
}
const eI = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: mJ
}, Symbol.toStringTag, { value: "Module" })), Mc = ({
  label: e,
  children: t
}) => {
  const { t: n } = H();
  return /* @__PURE__ */ a(
    re,
    {
      label: n(e),
      fieldId: e,
      labelIcon: /* @__PURE__ */ a(le, { helpText: n(`${e}Help`), fieldLabelId: e }),
      children: t
    }
  );
}, Bn = ({
  label: e,
  field: t,
  fieldType: n = "string",
  isReadOnly: r = !1,
  defaultValue: i
}) => {
  const { t: s } = H(), { control: o } = De();
  return /* @__PURE__ */ a(Mc, { label: e, children: /* @__PURE__ */ a(
    be,
    {
      name: t,
      defaultValue: i || (n === "string" ? "false" : !1),
      control: o,
      render: ({ field: l }) => /* @__PURE__ */ a(
        Je,
        {
          id: e,
          label: s("on"),
          labelOff: s("off"),
          isChecked: n === "string" ? l.value === "true" : l.value,
          onChange: (c, d) => l.onChange(n === "string" ? "" + d : d),
          isDisabled: r,
          "aria-label": e
        }
      )
    }
  ) });
}, Mu = ({ label: e, field: t, isReadOnly: n = !1 }) => {
  const { register: r } = De();
  return /* @__PURE__ */ a(Mc, { label: e, children: /* @__PURE__ */ a(
    gt,
    {
      id: e,
      "data-testid": e,
      readOnly: n,
      ...r(t)
    }
  ) });
}, Lx = [
  "client_secret_post",
  "client_secret_basic",
  "client_secret_jwt",
  "private_key_jwt"
], tI = ({ create: e = !0 }) => {
  const t = Tt().providers.clientSignature.providers, { t: n } = H(), { control: r } = De(), [i, s] = D(!1), [o, l] = D(!1), c = rt({
    control: r,
    name: "config.clientAuthMethod"
  });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      re,
      {
        label: n("clientAuthentication"),
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: n("clientAuthenticationHelp"),
            fieldLabelId: "clientAuthentication"
          }
        ),
        fieldId: "clientAuthentication",
        children: /* @__PURE__ */ a(
          be,
          {
            name: "config.clientAuthMethod",
            defaultValue: Lx[0],
            control: r,
            render: ({ field: d }) => /* @__PURE__ */ a(
              ht,
              {
                toggleId: "clientAuthentication",
                onToggle: () => s(!i),
                onSelect: (u) => {
                  d.onChange(u), s(!1);
                },
                selections: d.value,
                variant: mt.single,
                "aria-label": n("clientAuthentication"),
                isOpen: i,
                children: Lx.map((u) => /* @__PURE__ */ a(
                  Re,
                  {
                    selected: u === d.value,
                    value: u,
                    children: n(`clientAuthentications.${u}`)
                  },
                  u
                ))
              }
            )
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      ZT,
      {
        secretRequired: c !== "private_key_jwt",
        create: e
      }
    ),
    /* @__PURE__ */ a(
      re,
      {
        label: n("clientAssertionSigningAlg"),
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: n("clientAssertionSigningAlgHelp"),
            fieldLabelId: "clientAssertionSigningAlg"
          }
        ),
        fieldId: "clientAssertionSigningAlg",
        children: /* @__PURE__ */ a(
          be,
          {
            name: "config.clientAssertionSigningAlg",
            defaultValue: "",
            control: r,
            render: ({ field: d }) => /* @__PURE__ */ a(
              ht,
              {
                maxHeight: 200,
                toggleId: "clientAssertionSigningAlg",
                onToggle: () => l(!o),
                onSelect: (u) => {
                  d.onChange(u.toString()), l(!1);
                },
                selections: d.value || n("algorithmNotSpecified"),
                variant: mt.single,
                "aria-label": n("selectClientAssertionSigningAlg"),
                isOpen: o,
                children: [
                  /* @__PURE__ */ a(Re, { selected: d.value === "", value: "", children: n("algorithmNotSpecified") }, ""),
                  ...gp(t).map((u) => /* @__PURE__ */ a(
                    Re,
                    {
                      selected: u === d.value,
                      value: u,
                      children: u
                    },
                    u
                  ))
                ]
              }
            )
          }
        )
      }
    ),
    (c === "private_key_jwt" || c === "client_secret_jwt") && /* @__PURE__ */ a(
      Mu,
      {
        field: "config.clientAssertionAudience",
        label: "clientAssertionAudience"
      }
    ),
    c === "private_key_jwt" && /* @__PURE__ */ a(
      Bn,
      {
        field: "config.jwtX509HeadersEnabled",
        label: "jwtX509HeadersEnabled"
      }
    )
  ] });
}, nI = () => {
  const { t: e } = H(), { tab: t } = na(), { control: n } = De(), r = rt({ control: n, name: "alias" });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(xb, { id: r }),
    /* @__PURE__ */ a(
      ve,
      {
        name: "alias",
        label: e("alias"),
        labelIcon: e("aliasHelp"),
        readOnly: t === "settings",
        rules: {
          required: e("required")
        }
      }
    ),
    /* @__PURE__ */ a(ve, { name: "displayName", label: e("displayName") }),
    /* @__PURE__ */ a(Cb, {})
  ] });
}, aI = (e, t, n = {}) => {
  if (!Number.isFinite(t))
    throw new TypeError("Expected `wait` to be a finite number");
  let r, i, s = [];
  return function(...o) {
    return new Promise((l) => {
      const c = n.before && !i;
      clearTimeout(i), i = setTimeout(() => {
        i = null;
        const d = n.before ? r : e.apply(this, o);
        for (l of s)
          l(d);
        s = [];
      }, t), c ? (r = e.apply(this, o), l(r)) : s.push(l);
    });
  };
};
aI.promise = (e) => {
  let t;
  return async function(...n) {
    if (t)
      return t;
    try {
      return t = e.apply(this, n), await t;
    } finally {
      t = void 0;
    }
  };
};
const rI = ({
  id: e,
  fileUpload: t,
  children: n
}) => {
  const { adminClient: r } = de(), { t: i } = H(), {
    setValue: s,
    clearErrors: o,
    formState: { errors: l }
  } = De(), [c, d] = D(!0), [u, p] = D(!1), [m, f] = D(), g = (y) => {
    Object.keys(y).map((C) => s(`config.${C}`, y[C]));
  }, b = async (y) => {
    p(!0);
    try {
      const C = await r.identityProviders.importFromUrl({
        providerId: e,
        fromUrl: y
      });
      g(C), f(C);
    } catch (C) {
      return C.message;
    } finally {
      p(!1);
    }
  }, v = nt(() => aI(b, 1e3), []);
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      re,
      {
        label: i(
          e === "oidc" ? "useDiscoveryEndpoint" : "useEntityDescriptor"
        ),
        fieldId: "kc-discovery-endpoint",
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: i(
              e === "oidc" ? "useDiscoveryEndpointHelp" : "useEntityDescriptorHelp"
            ),
            fieldLabelId: "discoveryEndpoint"
          }
        ),
        children: /* @__PURE__ */ a(
          Je,
          {
            id: "kc-discovery-endpoint-switch",
            label: i("on"),
            labelOff: i("off"),
            isChecked: c,
            onChange: (y, C) => {
              o("discoveryError"), d(C);
            },
            "aria-label": i(
              e === "oidc" ? "useDiscoveryEndpoint" : "useEntityDescriptor"
            )
          }
        )
      }
    ),
    c && /* @__PURE__ */ a(
      ve,
      {
        name: "discoveryEndpoint",
        label: i(
          e === "oidc" ? "discoveryEndpoint" : "samlEntityDescriptor"
        ),
        labelIcon: i(
          e === "oidc" ? "discoveryEndpointHelp" : "samlEntityDescriptorHelp"
        ),
        type: "url",
        placeholder: e === "oidc" ? "https://hostname/realms/master/.well-known/openid-configuration" : "",
        validated: l.discoveryError || l.discoveryEndpoint ? "error" : m ? "success" : "default",
        customIcon: u ? /* @__PURE__ */ a(ti, { isInline: !0 }) : void 0,
        rules: {
          required: i("required"),
          validate: (y) => v(y)
        }
      }
    ),
    !c && t,
    c && !l.discoveryError && n(!0),
    !c && n(!1)
  ] });
}, Nx = ["plain", "S256"], Dx = ({ readOnly: e }) => {
  const { t } = H(), { control: n } = De(), r = rt({
    control: n,
    name: "config.validateSignature"
  }), i = rt({
    control: n,
    name: "config.useJwksUrl"
  }), s = rt({
    control: n,
    name: "config.pkceEnabled"
  });
  return /* @__PURE__ */ x("div", { className: "pf-v5-c-form pf-m-horizontal", children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.authorizationUrl",
        label: t("authorizationUrl"),
        type: "url",
        readOnly: e,
        rules: {
          required: t("required")
        }
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.tokenUrl",
        label: t("tokenUrl"),
        type: "url",
        readOnly: e,
        rules: {
          required: t("required")
        }
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.logoutUrl",
        label: t("logoutUrl"),
        readOnly: e
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.userInfoUrl",
        label: t("userInfoUrl"),
        readOnly: e
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.issuer",
        label: t("issuer"),
        readOnly: e
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.validateSignature",
        label: t("validateSignature"),
        isDisabled: e,
        stringify: !0
      }
    ),
    r === "true" && /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a(
        vt,
        {
          name: "config.useJwksUrl",
          label: t("useJwksUrl"),
          isDisabled: e,
          stringify: !0
        }
      ),
      i === "true" ? /* @__PURE__ */ a(
        pr,
        {
          name: "config.jwksUrl",
          label: t("jwksUrl"),
          readOnly: e
        }
      ) : /* @__PURE__ */ x(te, { children: [
        /* @__PURE__ */ a(
          pr,
          {
            name: "config.publicKeySignatureVerifier",
            label: t("validatingPublicKey")
          }
        ),
        /* @__PURE__ */ a(
          ve,
          {
            name: "config.publicKeySignatureVerifierKeyId",
            label: t("validatingPublicKeyId"),
            readOnly: e
          }
        )
      ] })
    ] }),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.pkceEnabled",
        label: t("pkceEnabled"),
        isDisabled: e,
        stringify: !0
      }
    ),
    s === "true" && /* @__PURE__ */ a(
      at,
      {
        name: "config.pkceMethod",
        label: t("pkceMethod"),
        labelIcon: t("pkceMethodHelp"),
        controller: {
          defaultValue: Nx[0]
        },
        options: Nx.map((o) => ({
          key: o,
          value: t(o)
        }))
      }
    )
  ] });
}, iI = ({ readOnly: e }) => {
  const { t } = H(), [n, r] = D(!1);
  return /* @__PURE__ */ x(te, { children: [
    e && /* @__PURE__ */ a(
      ps,
      {
        className: "keycloak__discovery-settings__metadata",
        toggleText: t(n ? "hideMetaData" : "showMetaData"),
        onToggle: () => r(!n),
        isExpanded: n,
        children: /* @__PURE__ */ a(Dx, { readOnly: e })
      }
    ),
    !e && /* @__PURE__ */ a(Dx, { readOnly: e })
  ] });
}, fJ = () => {
  const { adminClient: e } = de(), { t } = H(), n = "oidc", {
    setValue: r,
    setError: i,
    clearErrors: s,
    formState: { errors: o }
  } = De(), l = (d) => {
    Object.keys(d).map((u) => r(`config.${u}`, d[u]));
  }, c = async (d) => {
    if (s("discoveryError"), !d)
      return;
    const u = new FormData();
    u.append("providerId", n), u.append("file", new Blob([JSON.stringify(d)]));
    try {
      const p = await e.identityProviders.importFromUrl(u);
      l(p);
    } catch (p) {
      i("discoveryError", {
        type: "manual",
        message: p.message
      });
    }
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(lr, { headingLevel: "h2", size: "xl", className: "kc-form-panel__title", children: t("oidcSettings") }),
    /* @__PURE__ */ a(
      rI,
      {
        id: "oidc",
        fileUpload: /* @__PURE__ */ x(
          re,
          {
            label: t("importConfig"),
            fieldId: "kc-import-config",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: t("importConfigHelp"),
                fieldLabelId: "importConfig"
              }
            ),
            children: [
              /* @__PURE__ */ a(
                Op,
                {
                  id: "kc-import-config",
                  helpText: t("identity=providers-help:jsonFileUpload"),
                  hideDefaultPreview: !0,
                  unWrap: !0,
                  validated: o.discoveryError ? "error" : "default",
                  onChange: (d) => c(d)
                }
              ),
              o.discoveryError && /* @__PURE__ */ a(
                kn,
                {
                  message: o.discoveryError.message
                }
              )
            ]
          }
        ),
        children: (d) => /* @__PURE__ */ a(iI, { readOnly: d })
      }
    )
  ] });
};
function hJ() {
  const { adminClient: e } = de(), { t } = H(), n = Xe(), { pathname: r } = ds(), i = r.includes("keycloak-oidc"), s = `${i ? "keycloak-" : ""}oidc`, o = Ke({
    defaultValues: { alias: s },
    mode: "onChange"
  }), {
    handleSubmit: l,
    formState: { isDirty: c }
  } = o, { addAlert: d, addError: u } = we(), { realm: p } = ye(), m = async (f) => {
    delete f.discoveryEndpoint;
    try {
      await e.identityProviders.create({
        ...f,
        providerId: s
      }), d(t("createIdentityProviderSuccess"), pe.success), n(
        Ri({
          realm: p,
          providerId: s,
          alias: f.alias,
          tab: "settings"
        })
      );
    } catch (g) {
      u("createIdentityProviderError", g);
    }
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: t(
          i ? "addKeycloakOpenIdProvider" : "addOpenIdProvider"
        )
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(He, { ...o, children: /* @__PURE__ */ x(
      je,
      {
        role: "manage-identity-providers",
        isHorizontal: !0,
        onSubmit: l(m),
        children: [
          /* @__PURE__ */ a(nI, {}),
          /* @__PURE__ */ a(fJ, {}),
          /* @__PURE__ */ a(tI, {}),
          /* @__PURE__ */ x(ot, { children: [
            /* @__PURE__ */ a(
              z,
              {
                isDisabled: !c,
                variant: "primary",
                type: "submit",
                "data-testid": "createProvider",
                children: t("add")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                "data-testid": "cancel",
                component: (f) => /* @__PURE__ */ a(Ae, { ...f, to: Ip({ realm: p }) }),
                children: t("cancel")
              }
            )
          ] })
        ]
      }
    ) }) })
  ] });
}
const sI = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: hJ
}, Symbol.toStringTag, { value: "Module" })), Mx = ({ readOnly: e }) => {
  const { t } = H(), n = De(), { control: r } = n, i = rt({
    control: r,
    name: "config.wantAuthnRequestsSigned"
  }), s = rt({
    control: r,
    name: "config.wantAssertionsEncrypted"
  }), o = rt({
    control: r,
    name: "config.validateSignature"
  }), l = rt({
    control: r,
    name: "config.useMetadataDescriptorUrl"
  }), c = rt({
    control: r,
    name: "config.principalType"
  });
  return /* @__PURE__ */ a("div", { className: "pf-v5-c-form pf-m-horizontal", children: /* @__PURE__ */ x(He, { ...n, children: [
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.entityId",
        label: t("serviceProviderEntityId"),
        labelIcon: t("serviceProviderEntityIdHelp")
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.idpEntityId",
        label: t("identityProviderEntityId"),
        labelIcon: t("identityProviderEntityIdHelp"),
        "data-testid": "identityProviderEntityId",
        id: "kc-identity-provider-entity-id"
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.singleSignOnServiceUrl",
        label: t("ssoServiceUrl"),
        labelIcon: t("ssoServiceUrlHelp"),
        type: "url",
        readOnly: e,
        rules: { required: t("required") }
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.artifactResolutionServiceUrl",
        label: t("artifactResolutionServiceUrl"),
        labelIcon: t("artifactResolutionServiceUrlHelp"),
        type: "url",
        isDisabled: e
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.singleLogoutServiceUrl",
        label: t("singleLogoutServiceUrl"),
        labelIcon: t("singleLogoutServiceUrlHelp"),
        type: "url",
        readOnly: e
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.backchannelSupported",
        label: t("backchannelLogout"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.sendIdTokenOnLogout",
        label: t("sendIdTokenOnLogout"),
        defaultValue: "true",
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.sendClientIdOnLogout",
        label: t("sendClientIdOnLogout"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      at,
      {
        name: "config.nameIDPolicyFormat",
        label: t("nameIdPolicyFormat"),
        labelIcon: t("nameIdPolicyFormatHelp"),
        controller: {
          defaultValue: "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent"
        },
        isDisabled: e,
        options: [
          {
            key: "urn:oasis:names:tc:SAML:2.0:nameid-format:persistent",
            value: t("persistent")
          },
          {
            key: "urn:oasis:names:tc:SAML:2.0:nameid-format:transient",
            value: t("transient")
          },
          {
            key: "urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress",
            value: t("email")
          },
          {
            key: "urn:oasis:names:tc:SAML:2.0:nameid-format:kerberos",
            value: t("kerberos")
          },
          {
            key: "urn:oasis:names:tc:SAML:1.1:nameid-format:X509SubjectName",
            value: t("x509")
          },
          {
            key: "urn:oasis:names:tc:SAML:1.1:nameid-format:WindowsDomainQualifiedName",
            value: t("windowsDomainQN")
          },
          {
            key: "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
            value: t("unspecified")
          }
        ]
      }
    ),
    /* @__PURE__ */ a(
      at,
      {
        name: "config.principalType",
        label: t("principalType"),
        labelIcon: t("principalTypeHelp"),
        controller: {
          defaultValue: "SUBJECT"
        },
        isDisabled: e,
        options: [
          { key: "SUBJECT", value: t("subjectNameId") },
          { key: "ATTRIBUTE", value: t("attributeName") },
          { key: "FRIENDLY_ATTRIBUTE", value: t("attributeFriendlyName") }
        ]
      }
    ),
    c?.includes("ATTRIBUTE") && /* @__PURE__ */ a(
      ve,
      {
        name: "config.principalAttribute",
        label: t("principalAttribute"),
        labelIcon: t("principalAttributeHelp"),
        readOnly: e
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.allowCreate",
        label: t("allowCreate"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.postBindingResponse",
        label: t("httpPostBindingResponse"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.artifactBindingResponse",
        label: t("artifactBindingResponse"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.postBindingAuthnRequest",
        label: t("httpPostBindingAuthnRequest"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.postBindingLogout",
        label: t("httpPostBindingLogout"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.wantAuthnRequestsSigned",
        label: t("wantAuthnRequestsSigned"),
        isDisabled: e,
        stringify: !0
      }
    ),
    i === "true" && /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a(
        at,
        {
          name: "config.signatureAlgorithm",
          label: t("signatureAlgorithm"),
          labelIcon: t("signatureAlgorithmHelp"),
          isDisabled: e,
          controller: {
            defaultValue: "RSA_SHA256"
          },
          options: [
            "RSA_SHA1",
            "RSA_SHA256",
            "RSA_SHA256_MGF1",
            "RSA_SHA512",
            "RSA_SHA512_MGF1",
            "DSA_SHA1"
          ]
        }
      ),
      /* @__PURE__ */ a(
        at,
        {
          name: "config.xmlSigKeyInfoKeyNameTransformer",
          label: t("samlSignatureKeyName"),
          labelIcon: t("samlSignatureKeyNameHelp"),
          isDisabled: e,
          controller: {
            defaultValue: t("keyID")
          },
          options: ["NONE", t("keyID"), t("certSubject")]
        }
      )
    ] }),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.wantAssertionsSigned",
        label: t("wantAssertionsSigned"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.wantAssertionsEncrypted",
        label: t("wantAssertionsEncrypted"),
        isDisabled: e,
        stringify: !0
      }
    ),
    s === "true" && /* @__PURE__ */ a(
      at,
      {
        name: "config.encryptionAlgorithm",
        label: t("encryptionAlgorithm"),
        labelIcon: t("encryptionAlgorithmHelp"),
        isDisabled: e,
        controller: {
          defaultValue: "RSA-OAEP"
        },
        options: ["RSA-OAEP", "RSA1_5"]
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.forceAuthn",
        label: t("forceAuthentication"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.validateSignature",
        label: t("validateSignature"),
        isDisabled: e,
        stringify: !0
      }
    ),
    o === "true" && /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.metadataDescriptorUrl",
          label: t("metadataDescriptorUrl"),
          labelIcon: t("metadataDescriptorUrlHelp"),
          type: "url",
          readOnly: e,
          rules: {
            required: {
              value: l === "true",
              message: t("required")
            }
          }
        }
      ),
      /* @__PURE__ */ a(
        vt,
        {
          name: "config.useMetadataDescriptorUrl",
          label: t("useMetadataDescriptorUrl"),
          isDisabled: e,
          stringify: !0
        }
      ),
      l !== "true" && /* @__PURE__ */ a(
        pr,
        {
          name: "config.signingCertificate",
          label: t("validatingX509Certs"),
          labelIcon: t("validatingX509CertsHelp"),
          readOnly: e
        }
      )
    ] }),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.signSpMetadata",
        label: t("signServiceProviderMetadata"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      vt,
      {
        name: "config.loginHint",
        label: t("passSubject"),
        isDisabled: e,
        stringify: !0
      }
    ),
    /* @__PURE__ */ a(
      ts,
      {
        name: "config.allowedClockSkew",
        label: t("allowedClockSkew"),
        labelIcon: t("allowedClockSkewHelp"),
        controller: { defaultValue: 0, rules: { min: 0, max: 2147483 } },
        isDisabled: e
      }
    ),
    /* @__PURE__ */ a(
      ts,
      {
        name: "config.attributeConsumingServiceIndex",
        label: t("attributeConsumingServiceIndex"),
        labelIcon: t("attributeConsumingServiceIndexHelp"),
        controller: { defaultValue: 0, rules: { min: 0, max: 2147483 } },
        isDisabled: e
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.attributeConsumingServiceName",
        label: t("attributeConsumingServiceName"),
        labelIcon: t("attributeConsumingServiceNameHelp"),
        readOnly: e
      }
    )
  ] }) });
}, oI = ({ readOnly: e }) => {
  const { t } = H(), [n, r] = D(!1);
  return e ? /* @__PURE__ */ a(
    ps,
    {
      className: "keycloak__discovery-settings__metadata",
      toggleText: t(n ? "hideMetaData" : "showMetaData"),
      onToggle: (i, s) => r(s),
      isExpanded: n,
      children: /* @__PURE__ */ a(Mx, { readOnly: e })
    }
  ) : /* @__PURE__ */ a(Mx, { readOnly: e });
}, gJ = () => {
  const { adminClient: e } = de(), { environment: t } = La(), { t: n } = H(), r = "saml", { realm: i } = ye(), {
    setValue: s,
    setError: o,
    clearErrors: l,
    formState: { errors: c }
  } = De(), d = (p) => {
    Object.entries(p).map(
      ([m, f]) => s(`config.${m}`, f)
    );
  }, u = async (p) => {
    if (l("discoveryError"), !p)
      return;
    const m = new FormData();
    m.append("providerId", r), m.append("file", new Blob([p]));
    try {
      const f = await Ai(
        `${wi(
          e.baseUrl
        )}admin/realms/${i}/identity-provider/import-config`,
        {
          method: "POST",
          body: m,
          headers: so(await e.getAccessToken())
        }
      );
      if (f.ok) {
        const g = await f.json();
        d(g);
      } else
        o("discoveryError", {
          type: "manual",
          message: f.statusText
        });
    } catch (f) {
      o("discoveryError", {
        type: "manual",
        message: f.message
      });
    }
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(lr, { headingLevel: "h2", size: "xl", className: "kc-form-panel__title", children: n("samlSettings") }),
    /* @__PURE__ */ a(
      ve,
      {
        name: "config.entityId",
        label: n("serviceProviderEntityId"),
        labelIcon: n("serviceProviderEntityIdHelp"),
        defaultValue: `${t.serverBaseUrl}/realms/${i}`,
        rules: {
          required: n("required")
        }
      }
    ),
    /* @__PURE__ */ a(
      rI,
      {
        id: "saml",
        fileUpload: /* @__PURE__ */ x(
          re,
          {
            label: n("importConfig"),
            fieldId: "kc-import-config",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: n("importConfigHelp"),
                fieldLabelId: "importConfig"
              }
            ),
            children: [
              /* @__PURE__ */ a(
                zg,
                {
                  id: "kc-import-config",
                  extension: ".xml",
                  hideDefaultPreview: !0,
                  unWrap: !0,
                  validated: c.discoveryError ? "error" : "default",
                  onChange: (p) => u(p)
                }
              ),
              c.discoveryError && /* @__PURE__ */ a(
                kn,
                {
                  message: c.discoveryError.message
                }
              )
            ]
          }
        ),
        children: (p) => /* @__PURE__ */ a(oI, { readOnly: p })
      }
    )
  ] });
}, lI = ({
  isAliasReadonly: e = !1
}) => {
  const { t } = H(), { realm: n } = ye(), { environment: r } = La(), { control: i } = De(), s = rt({ control: i, name: "alias" });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(xb, { id: s }),
    /* @__PURE__ */ a(
      ve,
      {
        name: "alias",
        label: t("alias"),
        labelIcon: t("aliasHelp"),
        readOnly: e,
        rules: {
          required: t("required")
        }
      }
    ),
    /* @__PURE__ */ a(ve, { name: "displayName", label: t("displayName") }),
    /* @__PURE__ */ a(Cb, {}),
    e && /* @__PURE__ */ a(
      re,
      {
        label: t("endpoints"),
        fieldId: "endpoints",
        labelIcon: /* @__PURE__ */ a(le, { helpText: t("aliasHelp"), fieldLabelId: "alias" }),
        className: "keycloak__identity-providers__saml_link",
        children: /* @__PURE__ */ a(
          ki,
          {
            title: t("samlEndpointsLabel"),
            href: `${r.adminBaseUrl}/realms/${n}/broker/${s}/endpoint/descriptor`,
            isInline: !0
          }
        )
      }
    )
  ] });
};
function bJ() {
  const { adminClient: e } = de(), { t } = H(), n = Xe(), r = "saml", i = Ke({
    defaultValues: { alias: r, config: { allowCreate: "true" } },
    mode: "onChange"
  }), {
    handleSubmit: s,
    formState: { isDirty: o }
  } = i, { addAlert: l, addError: c } = we(), { realm: d } = ye(), u = async (p) => {
    delete p.discoveryEndpoint;
    try {
      await e.identityProviders.create({
        ...p,
        providerId: r
      }), l(t("createIdentityProviderSuccess"), pe.success), n(
        Ri({
          realm: d,
          providerId: r,
          alias: p.alias,
          tab: "settings"
        })
      );
    } catch (m) {
      c("createIdentityProviderError", m);
    }
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(wt, { titleKey: t("addSamlProvider") }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(He, { ...i, children: /* @__PURE__ */ x(
      je,
      {
        role: "manage-identity-providers",
        isHorizontal: !0,
        onSubmit: s(u),
        children: [
          /* @__PURE__ */ a(lI, {}),
          /* @__PURE__ */ a(gJ, {}),
          /* @__PURE__ */ x(ot, { children: [
            /* @__PURE__ */ a(
              z,
              {
                isDisabled: !o,
                variant: "primary",
                type: "submit",
                "data-testid": "createProvider",
                children: t("add")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                "data-testid": "cancel",
                component: (p) => /* @__PURE__ */ a(Ae, { ...p, to: Ip({ realm: d }) }),
                children: t("cancel")
              }
            )
          ] })
        ]
      }
    ) }) })
  ] });
}
const vJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: bJ
}, Symbol.toStringTag, { value: "Module" })), Fx = ({
  field: e,
  label: t,
  defaultValue: n,
  labelForEmpty: r = "none"
}) => {
  const { adminClient: i } = de(), { t: s } = H(), { control: o } = De(), [l, c] = D(), [d, u] = D(!1);
  return _e(
    () => i.authenticationManagement.getFlows(),
    (p) => c(p.filter((m) => m.providerId === "basic-flow")),
    []
  ), /* @__PURE__ */ a(
    re,
    {
      label: s(t),
      labelIcon: /* @__PURE__ */ a(le, { helpText: s(`${t}Help`), fieldLabelId: t }),
      fieldId: t,
      children: /* @__PURE__ */ a(
        be,
        {
          name: e,
          defaultValue: n,
          control: o,
          render: ({ field: p }) => /* @__PURE__ */ a(
            ht,
            {
              toggleId: t,
              onToggle: () => u(!d),
              onSelect: (m) => {
                p.onChange(m), u(!1);
              },
              selections: p.value || s(r),
              variant: mt.single,
              "aria-label": s(t),
              isOpen: d,
              children: [
                ...n === "" ? [
                  /* @__PURE__ */ a(Re, { value: "", children: s(r) }, "empty")
                ] : [],
                ...l?.map((m) => /* @__PURE__ */ a(
                  Re,
                  {
                    selected: m.alias === p.value,
                    value: m.alias,
                    children: m.alias
                  },
                  m.id
                )) || []
              ]
            }
          )
        }
      )
    }
  );
}, $x = ["IMPORT", "LEGACY", "FORCE"], yJ = ({ isOIDC: e, isSAML: t }) => {
  const { t: n } = H(), {
    control: r,
    register: i,
    setValue: s,
    formState: { errors: o }
  } = De(), c = rt({
    control: r,
    name: "config.filteredByClaim",
    defaultValue: "false"
  }) === "true", u = aa()(Fn.TransientUsers), m = rt({
    control: r,
    name: "config.doNotStoreUsers",
    defaultValue: "false"
  }) === "false";
  return /* @__PURE__ */ x(te, { children: [
    !e && !t && /* @__PURE__ */ a(Mu, { field: "config.defaultScope", label: "scopes" }),
    /* @__PURE__ */ a(Bn, { field: "storeToken", label: "storeTokens", fieldType: "boolean" }),
    (t || e) && /* @__PURE__ */ a(
      Bn,
      {
        field: "addReadTokenRoleOnCreate",
        label: "storedTokensReadable",
        fieldType: "boolean"
      }
    ),
    !e && !t && /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a(
        Bn,
        {
          field: "config.acceptsPromptNoneForwardFromClient",
          label: "acceptsPromptNone"
        }
      ),
      /* @__PURE__ */ a(Bn, { field: "config.disableUserInfo", label: "disableUserInfo" })
    ] }),
    e && /* @__PURE__ */ a(Bn, { field: "config.isAccessTokenJWT", label: "isAccessTokenJWT" }),
    /* @__PURE__ */ a(Bn, { field: "trustEmail", label: "trustEmail", fieldType: "boolean" }),
    /* @__PURE__ */ a(
      Bn,
      {
        field: "linkOnly",
        label: "accountLinkingOnly",
        fieldType: "boolean"
      }
    ),
    /* @__PURE__ */ a(
      Bn,
      {
        field: "hideOnLogin",
        label: "hideOnLoginPage",
        fieldType: "boolean"
      }
    ),
    (!t || e) && /* @__PURE__ */ a(Mc, { label: "filteredByClaim", children: /* @__PURE__ */ a(
      be,
      {
        name: "config.filteredByClaim",
        defaultValue: "false",
        control: r,
        render: ({ field: f }) => /* @__PURE__ */ a(
          Je,
          {
            id: "filteredByClaim",
            label: n("on"),
            labelOff: n("off"),
            isChecked: f.value === "true",
            onChange: (g, b) => {
              f.onChange(b.toString());
            }
          }
        )
      }
    ) }),
    (!t || e) && c && /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ x(
        re,
        {
          label: n("claimFilterName"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: n("claimFilterNameHelp"),
              fieldLabelId: "claimFilterName"
            }
          ),
          fieldId: "kc-claim-filter-name",
          isRequired: !0,
          children: [
            /* @__PURE__ */ a(
              gt,
              {
                isRequired: !0,
                id: "kc-claim-filter-name",
                "data-testid": "claimFilterName",
                validated: o.config?.claimFilterName ? _n.error : _n.default,
                ...i("config.claimFilterName", { required: !0 })
              }
            ),
            o.config?.claimFilterName && /* @__PURE__ */ a(kn, { message: n("required") })
          ]
        }
      ),
      /* @__PURE__ */ x(
        re,
        {
          label: n("claimFilterValue"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: n("claimFilterValueHelp"),
              fieldLabelId: "claimFilterName"
            }
          ),
          fieldId: "kc-claim-filter-value",
          isRequired: !0,
          children: [
            /* @__PURE__ */ a(
              gt,
              {
                isRequired: !0,
                id: "kc-claim-filter-value",
                "data-testid": "claimFilterValue",
                validated: o.config?.claimFilterValue ? _n.error : _n.default,
                ...i("config.claimFilterValue", { required: !0 })
              }
            ),
            o.config?.claimFilterValue && /* @__PURE__ */ a(kn, { message: n("required") })
          ]
        }
      )
    ] }),
    /* @__PURE__ */ a(
      Fx,
      {
        field: "firstBrokerLoginFlowAlias",
        label: "firstBrokerLoginFlowAliasOverride",
        defaultValue: "",
        labelForEmpty: ""
      }
    ),
    /* @__PURE__ */ a(
      Fx,
      {
        field: "postBrokerLoginFlowAlias",
        label: "postBrokerLoginFlowAlias",
        defaultValue: ""
      }
    ),
    u && /* @__PURE__ */ a(Mc, { label: "doNotStoreUsers", children: /* @__PURE__ */ a(
      be,
      {
        name: "config.doNotStoreUsers",
        defaultValue: "false",
        control: r,
        render: ({ field: f }) => /* @__PURE__ */ a(
          Je,
          {
            id: "doNotStoreUsers",
            label: n("on"),
            labelOff: n("off"),
            isChecked: f.value === "true",
            onChange: (g, b) => {
              f.onChange(b.toString()), b && s("config.syncMode", "IMPORT");
            }
          }
        )
      }
    ) }),
    m && /* @__PURE__ */ a(
      at,
      {
        name: "config.syncMode",
        label: n("syncMode"),
        labelIcon: n("syncModeHelp"),
        options: $x.map((f) => ({
          key: f,
          value: n(`syncModes.${f.toLocaleLowerCase()}`)
        })),
        controller: {
          defaultValue: $x[0],
          rules: { required: n("required") }
        }
      }
    ),
    /* @__PURE__ */ a(
      Bn,
      {
        field: "config.caseSensitiveOriginalUsername",
        label: "caseSensitiveOriginalUsername"
      }
    )
  ] });
}, CJ = {
  unspecified: "",
  none: "none",
  consent: "consent",
  login: "login",
  select_account: "select_account"
}, xJ = () => {
  const { t: e } = H(), { control: t } = De(), [n, r] = D(!1), [i, s] = D(!1);
  return /* @__PURE__ */ a(
    ps,
    {
      toggleText: e("advanced"),
      onToggle: () => r(!n),
      isExpanded: n,
      children: /* @__PURE__ */ x(St, { isHorizontal: !0, children: [
        /* @__PURE__ */ a(Bn, { label: "passLoginHint", field: "config.loginHint" }),
        /* @__PURE__ */ a(Bn, { label: "passMaxAge", field: "config.passMaxAge" }),
        /* @__PURE__ */ a(Bn, { label: "passCurrentLocale", field: "config.uiLocales" }),
        /* @__PURE__ */ a(
          Bn,
          {
            field: "config.backchannelSupported",
            label: "backchannelLogout"
          }
        ),
        /* @__PURE__ */ a(
          Bn,
          {
            field: "config.sendIdTokenOnLogout",
            label: "sendIdTokenOnLogout",
            defaultValue: "true"
          }
        ),
        /* @__PURE__ */ a(
          Bn,
          {
            field: "config.sendClientIdOnLogout",
            label: "sendClientIdOnLogout"
          }
        ),
        /* @__PURE__ */ a(Bn, { field: "config.disableUserInfo", label: "disableUserInfo" }),
        /* @__PURE__ */ a(Bn, { field: "config.disableNonce", label: "disableNonce" }),
        /* @__PURE__ */ a(Mu, { field: "config.defaultScope", label: "scopes" }),
        /* @__PURE__ */ a(Mc, { label: "prompt", children: /* @__PURE__ */ a(
          be,
          {
            name: "config.prompt",
            defaultValue: "",
            control: t,
            render: ({ field: o }) => /* @__PURE__ */ a(
              ht,
              {
                toggleId: "prompt",
                onToggle: () => s(!i),
                onSelect: (l) => {
                  o.onChange(l), s(!1);
                },
                selections: o.value || e("prompts.unspecified"),
                variant: mt.single,
                "aria-label": e("prompt"),
                isOpen: i,
                children: Object.entries(CJ).map(([l, c]) => /* @__PURE__ */ a(
                  Re,
                  {
                    selected: c === o.value,
                    value: c,
                    children: e(`prompts.${l}`)
                  },
                  l
                ))
              }
            )
          }
        ) }),
        /* @__PURE__ */ a(
          Bn,
          {
            field: "config.acceptsPromptNoneForwardFromClient",
            label: "acceptsPromptNone"
          }
        ),
        /* @__PURE__ */ a(
          re,
          {
            label: e("allowedClockSkew"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: e("allowedClockSkewHelp"),
                fieldLabelId: "allowedClockSkew"
              }
            ),
            fieldId: "allowedClockSkew",
            children: /* @__PURE__ */ a(
              be,
              {
                name: "config.allowedClockSkew",
                defaultValue: 0,
                control: t,
                render: ({ field: o }) => {
                  const l = Number(o.value);
                  return /* @__PURE__ */ a(
                    os,
                    {
                      "data-testid": "allowedClockSkew",
                      inputName: "allowedClockSkew",
                      min: 0,
                      max: 2147483,
                      value: l,
                      readOnly: !0,
                      onPlus: () => o.onChange(l + 1),
                      onMinus: () => o.onChange(l - 1),
                      onChange: (c) => {
                        const d = Number(
                          c.target.value
                        );
                        o.onChange(d < 0 ? 0 : d);
                      }
                    }
                  );
                }
              }
            )
          }
        ),
        /* @__PURE__ */ a(Mu, { field: "config.forwardParameters", label: "forwardParameters" })
      ] })
    }
  );
}, jx = ["exact", "minimum", "maximum", "better"], SJ = () => {
  const { t: e } = H(), { control: t } = De(), [n, r] = D(!1);
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      re,
      {
        label: e("comparison"),
        labelIcon: /* @__PURE__ */ a(le, { helpText: e("comparisonHelp"), fieldLabelId: "comparison" }),
        fieldId: "comparison",
        children: /* @__PURE__ */ a(
          be,
          {
            name: "config.authnContextComparisonType",
            defaultValue: jx[0],
            control: t,
            render: ({ field: i }) => /* @__PURE__ */ a(
              ht,
              {
                toggleId: "comparison",
                direction: "up",
                onToggle: (s) => r(s),
                onSelect: (s) => {
                  i.onChange(s.toString()), r(!1);
                },
                selections: i.value,
                variant: mt.single,
                "aria-label": e("comparison"),
                isOpen: n,
                children: jx.map((s) => /* @__PURE__ */ a(
                  Re,
                  {
                    selected: s === i.value,
                    value: s,
                    children: e(s)
                  },
                  s
                ))
              }
            )
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      re,
      {
        label: e("authnContextClassRefs"),
        fieldId: "kc-authnContextClassRefs",
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: e("authnContextClassRefsHelp"),
            fieldLabelId: "authnContextClassRefs"
          }
        ),
        children: /* @__PURE__ */ a(
          Or,
          {
            name: "config.authnContextClassRefs",
            "aria-label": e("identify-providers:authnContextClassRefs"),
            addButtonLabel: "addAuthnContextClassRef",
            "data-testid": "classref-field"
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      re,
      {
        label: e("authnContextDeclRefs"),
        fieldId: "kc-authnContextDeclRefs",
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: e("authnContextDeclRefsHelp"),
            fieldLabelId: "authnContextDeclRefs"
          }
        ),
        children: /* @__PURE__ */ a(
          Or,
          {
            name: "config.authnContextDeclRefs",
            "aria-label": e("identify-providers:authnContextDeclRefs"),
            addButtonLabel: "addAuthnContextDeclRef",
            "data-testid": "declref-field"
          }
        )
      }
    )
  ] });
}, wJ = ({ onChange: e, value: t, save: n, toggleDeleteDialog: r }) => {
  const { adminClient: i } = de(), { t: s } = H(), { alias: o } = zt(), [l, c] = D(), { addAlert: d, addError: u } = we(), { setValue: p, formState: m, control: f } = De(), g = rt({
    control: f,
    name: "config.validateSignature"
  }), b = rt({
    control: f,
    name: "config.useMetadataDescriptorUrl"
  }), v = rt({
    control: f,
    name: "config.metadataDescriptorUrl"
  });
  _e(
    () => i.identityProviders.findOne({ alias: o }),
    (w) => {
      if (!w)
        throw new Error(s("notFound"));
      c(w);
    },
    []
  );
  const [y, C] = Ve({
    titleKey: "disableProvider",
    messageKey: s("disableConfirmIdentityProvider", { provider: o }),
    continueButtonLabel: "disable",
    onConfirm: () => {
      e(!t), n();
    }
  }), S = async (w, A) => {
    try {
      const k = await i.identityProviders.importFromUrl({
        providerId: w,
        fromUrl: A
      });
      k.signingCertificate ? (p("config.signingCertificate", k.signingCertificate), d(s("importKeysSuccess"), pe.success)) : u("importKeysError", s("importKeysErrorNoSigningCertificate"));
    } catch (k) {
      u("importKeysError", k);
    }
  }, P = async (w) => {
    try {
      await i.identityProviders.reloadKeys({
        alias: w
      }) ? d(s("reloadKeysSuccess"), pe.success) : d(s("reloadKeysSuccessButFalse"), pe.warning);
    } catch (A) {
      u("reloadKeysError", A);
    }
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(C, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: Ia(
          l ? l.displayName ? l.displayName : l.providerId : ""
        ),
        divider: !1,
        dropdownItems: [
          ...l?.providerId?.includes("saml") && g === "true" && b === "true" && v && !m.isDirty && t ? [
            /* @__PURE__ */ a(
              Ue,
              {
                onClick: () => P(l.alias),
                children: s("reloadKeys")
              },
              "reloadKeys"
            )
          ] : l?.providerId?.includes("saml") && g === "true" && b !== "true" && v && !m.isDirty ? [
            /* @__PURE__ */ a(
              Ue,
              {
                onClick: () => S(
                  l.providerId,
                  v
                ),
                children: s("importKeys")
              },
              "importKeys"
            )
          ] : [],
          /* @__PURE__ */ a(Pt, {}, "separator"),
          /* @__PURE__ */ a(Ue, { onClick: () => r(), children: s("delete") }, "delete")
        ],
        isEnabled: t,
        onToggle: (w) => {
          w ? (e(w), n()) : y();
        }
      }
    )
  ] });
}, OJ = ({ name: e, mapperId: t, provider: n }) => {
  const { realm: r } = ye(), { alias: i } = zt();
  return /* @__PURE__ */ a(
    Ae,
    {
      to: fT({
        realm: r,
        alias: i,
        providerId: n?.providerId,
        id: t
      }),
      children: e
    }
  );
};
function kJ() {
  const { adminClient: e } = de(), { t } = H(), { alias: n, providerId: r } = zt(), i = aa(), s = Ke(), { handleSubmit: o, getValues: l, reset: c } = s, [d, u] = D(), [p, m] = D(), f = Tt(), g = nt(() => {
    const $ = [
      "org.keycloak.broker.social.SocialIdentityProvider",
      "org.keycloak.broker.provider.IdentityProvider"
    ];
    for (const q of $) {
      const V = f.componentTypes?.[q]?.find(
        ({ id: B }) => B === r
      );
      if (V)
        return V;
    }
  }, [f, r]), { addAlert: b, addError: v } = we(), y = Xe(), { realm: C } = ye(), [S, P] = D(0), w = () => P(S + 1);
  _e(
    () => e.identityProviders.findOne({ alias: n }),
    ($) => {
      if (!$)
        throw new Error(t("notFound"));
      c($), u($), $.config.authnContextClassRefs && s.setValue(
        "config.authnContextClassRefs",
        JSON.parse($.config?.authnContextClassRefs)
      ), $.config.authnContextDeclRefs && s.setValue(
        "config.authnContextDeclRefs",
        JSON.parse($.config?.authnContextDeclRefs)
      );
    },
    []
  );
  const A = ($) => Ri({
    realm: C,
    alias: n,
    providerId: r,
    tab: $
  }), k = ($) => Kn(A($)), T = k("settings"), O = k("mappers"), I = k("permissions"), _ = async ($) => {
    const q = $ || l(), V = q.config?.authnContextClassRefs;
    q.config?.authnContextClassRefs && (q.config.authnContextClassRefs = JSON.stringify(
      q.config.authnContextClassRefs
    ));
    const B = q.config?.authnContextDeclRefs;
    q.config?.authnContextDeclRefs && (q.config.authnContextDeclRefs = JSON.stringify(
      q.config.authnContextDeclRefs
    ));
    try {
      await e.identityProviders.update(
        { alias: n },
        {
          ...q,
          config: { ...d?.config, ...q.config },
          alias: n,
          providerId: r
        }
      ), V && (q.config.authnContextClassRefs = V), B && (q.config.authnContextDeclRefs = B), c(q), b(t("updateSuccessIdentityProvider"), pe.success);
    } catch (Z) {
      v("updateErrorIdentityProvider", Z);
    }
  }, [E, L] = Ve({
    titleKey: "deleteProvider",
    messageKey: t("deleteConfirmIdentityProvider", { provider: n }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.identityProviders.del({ alias: n }), b(t("deletedSuccessIdentityProvider"), pe.success), y(Ip({ realm: C }));
      } catch ($) {
        v("deleteErrorIdentityProvider", $);
      }
    }
  }), [F, R] = Ve({
    titleKey: "deleteProviderMapper",
    messageKey: t("deleteMapperConfirm", {
      mapper: p?.name
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.identityProviders.delMapper({
          alias: n,
          id: p?.mapperId
        }), b(t("deleteMapperSuccess"), pe.success), w(), y(
          Ri({ providerId: r, alias: n, tab: "mappers", realm: C })
        );
      } catch ($) {
        v("deleteErrorIdentityProvider", $);
      }
    }
  });
  if (!d)
    return /* @__PURE__ */ a(bt, {});
  const M = d.providerId.includes("oidc"), U = d.providerId.includes("saml"), K = !M && !U, G = async () => {
    const [$, q] = await Promise.all([
      e.identityProviders.findMappers({ alias: n }),
      e.identityProviders.findMapperTypes({ alias: n })
    ]);
    return $.map((B) => {
      const Z = Object.values(q).find(
        (Q) => B.identityProviderMapper === Q.id
      );
      return {
        ...Z,
        name: B.name,
        type: Z?.name,
        mapperId: B.id
      };
    });
  }, N = [
    {
      title: t("generalSettings"),
      panel: /* @__PURE__ */ x(
        je,
        {
          role: "manage-identity-providers",
          isHorizontal: !0,
          onSubmit: o(_),
          children: [
            K && /* @__PURE__ */ a(QT, { create: !1, id: r }),
            M && /* @__PURE__ */ a(nI, {}),
            U && /* @__PURE__ */ a(lI, { isAliasReadonly: !0 }),
            g && /* @__PURE__ */ a(gr, { stringify: !0, properties: g.properties })
          ]
        }
      )
    },
    {
      title: t("oidcSettings"),
      isHidden: !M,
      panel: /* @__PURE__ */ x(te, { children: [
        /* @__PURE__ */ a(iI, { readOnly: !1 }),
        /* @__PURE__ */ x(St, { isHorizontal: !0, className: "pf-v5-u-py-lg", children: [
          /* @__PURE__ */ a(Pt, {}),
          /* @__PURE__ */ a(tI, { create: !1 })
        ] }),
        /* @__PURE__ */ a(xJ, {})
      ] })
    },
    {
      title: t("samlSettings"),
      isHidden: !U,
      panel: /* @__PURE__ */ a(oI, { readOnly: !1 })
    },
    {
      title: t("reqAuthnConstraints"),
      isHidden: !U,
      panel: /* @__PURE__ */ a(
        je,
        {
          role: "manage-identity-providers",
          isHorizontal: !0,
          onSubmit: o(_),
          children: /* @__PURE__ */ a(SJ, {})
        }
      )
    },
    {
      title: t("advancedSettings"),
      panel: /* @__PURE__ */ x(
        je,
        {
          role: "manage-identity-providers",
          isHorizontal: !0,
          onSubmit: o(_),
          children: [
            /* @__PURE__ */ a(yJ, { isOIDC: M, isSAML: U }),
            /* @__PURE__ */ a(Mr, { name: "idp-details", isSubmit: !0, reset: c })
          ]
        }
      )
    }
  ];
  return /* @__PURE__ */ x(He, { ...s, children: [
    /* @__PURE__ */ a(L, {}),
    /* @__PURE__ */ a(R, {}),
    /* @__PURE__ */ a(
      be,
      {
        name: "enabled",
        control: s.control,
        defaultValue: !0,
        render: ({ field: $ }) => /* @__PURE__ */ a(
          wJ,
          {
            value: $.value || !1,
            onChange: $.onChange,
            save: _,
            toggleDeleteDialog: E
          }
        )
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ x(Vn, { isBox: !0, defaultLocation: A("settings"), children: [
      /* @__PURE__ */ a(
        Ee,
        {
          id: "settings",
          title: /* @__PURE__ */ a(Pe, { children: t("settings") }),
          ...T,
          children: /* @__PURE__ */ a(
            gl,
            {
              label: t("jumpToSection"),
              className: "pf-v5-u-px-lg",
              sections: N
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        Ee,
        {
          id: "mappers",
          "data-testid": "mappers-tab",
          title: /* @__PURE__ */ a(Pe, { children: t("mappers") }),
          ...O,
          children: /* @__PURE__ */ a(
            xt,
            {
              emptyState: /* @__PURE__ */ a(
                ct,
                {
                  message: t("noMappers"),
                  instructions: t("noMappersInstructions"),
                  primaryActionText: t("addMapper"),
                  onPrimaryAction: () => y(
                    yx({
                      realm: C,
                      alias: n,
                      providerId: d.providerId,
                      tab: "mappers"
                    })
                  )
                }
              ),
              loader: G,
              ariaLabelKey: "mappersList",
              searchPlaceholderKey: "searchForMapper",
              toolbarItem: /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
                z,
                {
                  id: "add-mapper-button",
                  component: ($) => /* @__PURE__ */ a(
                    Ae,
                    {
                      ...$,
                      to: yx({
                        realm: C,
                        alias: n,
                        providerId: d.providerId,
                        tab: "mappers"
                      })
                    }
                  ),
                  "data-testid": "addMapper",
                  children: t("addMapper")
                }
              ) }),
              columns: [
                {
                  name: "name",
                  displayKey: "name",
                  cellRenderer: ($) => /* @__PURE__ */ a(OJ, { ...$, provider: d })
                },
                {
                  name: "category",
                  displayKey: "category"
                },
                {
                  name: "type",
                  displayKey: "type"
                }
              ],
              actions: [
                {
                  title: t("delete"),
                  onRowClick: ($) => {
                    m($), F();
                  }
                }
              ]
            },
            S
          )
        }
      ),
      i(Fn.AdminFineGrainedAuthz) && /* @__PURE__ */ a(
        Ee,
        {
          id: "permissions",
          "data-testid": "permissionsTab",
          title: /* @__PURE__ */ a(Pe, { children: t("permissions") }),
          ...I,
          children: /* @__PURE__ */ a(id, { id: n, type: "identityProviders" })
        }
      )
    ] }) })
  ] });
}
const TJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: kJ
}, Symbol.toStringTag, { value: "Module" })), cI = ({
  orgId: e,
  hideRealmBasedIdps: t = !1,
  onClose: n
}) => {
  const { adminClient: r } = de(), { t: i } = H(), { addAlert: s, addError: o } = we(), [l, c] = D(""), [d, u] = D(), [p, m] = D([]), f = ({ index: v }) => (c(i("onDragStart", { item: p[v] })), !0), g = ({ index: v }) => {
    c(i("onDragMove", { item: p[v] }));
  }, b = (v, y) => {
    if (y) {
      const C = [...p], [S] = C.splice(v.index, 1);
      return C.splice(y.index, 0, S), c(i("onDragFinish", { list: C })), m(C), !0;
    } else
      return c(i("onDragCancel")), !1;
  };
  return _e(
    () => e ? r.organizations.listIdentityProviders({ orgId: e }) : r.identityProviders.find({ realmOnly: t }),
    (v) => {
      u(v), m(
        wr(v, ["config.guiOrder", "alias"]).map(
          (y) => y.alias
        )
      );
    },
    []
  ), d ? /* @__PURE__ */ x(
    ft,
    {
      variant: Et.small,
      title: i("manageDisplayOrder"),
      isOpen: !0,
      onClose: n,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            "data-testid": "confirm",
            onClick: async () => {
              const v = p.map((y, C) => {
                const S = d.find((P) => P.alias === y);
                return S.config.guiOrder = C, r.identityProviders.update({ alias: y }, S);
              });
              try {
                await Promise.all(v), s(i("orderChangeSuccess"));
              } catch (y) {
                o("orderChangeError", y);
              }
              n();
            },
            children: i("save")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: n,
            children: i("cancel")
          },
          "cancel"
        )
      ],
      children: [
        /* @__PURE__ */ a(Rt, { className: "pf-v5-u-pb-lg", children: /* @__PURE__ */ a(tt, { children: i("orderDialogIntro") }) }),
        /* @__PURE__ */ a(
          _h,
          {
            onDrag: f,
            onDragMove: g,
            onDrop: b,
            children: /* @__PURE__ */ a(Ah, { hasNoWrapper: !0, children: /* @__PURE__ */ a(
              Er,
              {
                "aria-label": i("manageOrderTableAria"),
                "data-testid": "manageOrderDataList",
                isCompact: !0,
                children: p.map((v) => /* @__PURE__ */ a(Rh, { hasNoWrapper: !0, children: /* @__PURE__ */ a(Pa, { "aria-label": v, id: v, children: /* @__PURE__ */ x(Va, { children: [
                  /* @__PURE__ */ a(Eh, { children: /* @__PURE__ */ a(Ph, { "aria-label": i("dragHelp") }) }),
                  /* @__PURE__ */ a(
                    Ua,
                    {
                      dataListCells: [
                        /* @__PURE__ */ a(oa, { "data-testid": v, children: v }, v)
                      ]
                    }
                  )
                ] }) }) }, v))
              }
            ) })
          }
        ),
        /* @__PURE__ */ a("div", { className: "pf-v5-screen-reader", "aria-live": "assertive", children: l })
      ]
    }
  ) : /* @__PURE__ */ a(bt, {});
}, IJ = (e) => {
  const { t } = H(), { realm: n } = ye();
  return /* @__PURE__ */ x(
    Ae,
    {
      to: Ri({
        realm: n,
        providerId: e.providerId,
        alias: e.alias,
        tab: "settings"
      }),
      children: [
        e.displayName || e.alias,
        !e.enabled && /* @__PURE__ */ a(
          Ir,
          {
            isRead: !0,
            className: "pf-v5-u-ml-sm",
            children: t("disabled")
          },
          `${e.providerId}-disabled`
        )
      ]
    },
    e.providerId
  );
}, EJ = (e) => {
  const { t } = H(), { realm: n } = ye();
  return e?.organizationId ? /* @__PURE__ */ a(
    Ae,
    {
      to: Nc({
        realm: n,
        id: e.organizationId,
        tab: "identityProviders"
      }),
      children: t("organization")
    },
    e.providerId
  ) : "—";
};
function PJ() {
  const { adminClient: e } = de(), { t } = H(), n = H6(
    Tt().identityProviders,
    "groupName"
  ), { realm: r } = ye(), i = Xe(), [s, o] = D(0), l = () => o(s + 1), [c, d] = D(!1), [u, p] = D(!1), [m, f] = D(!1), [g, b] = D(!1), [v, y] = D(), { addAlert: C, addError: S } = we();
  _e(
    async () => e.identityProviders.find({ max: 1 }),
    (O) => {
      b(O.length === 1);
    },
    [s]
  );
  const P = async (O, I, _) => {
    const E = {
      first: O,
      max: I,
      realmOnly: c
    };
    _ && (E.search = _);
    const L = await e.identityProviders.find(E);
    return wr(L, "alias");
  }, w = (O) => i(
    Cx({
      realm: r,
      providerId: O
    })
  ), A = () => Object.keys(n).map((O) => /* @__PURE__ */ a($h, { label: O, children: wr(n[O], "name").map((I) => /* @__PURE__ */ a(
    Ue,
    {
      value: I.id,
      component: "a",
      "data-testid": I.id,
      onClick: () => i(
        Cx({
          realm: r,
          providerId: I.id
        })
      ),
      children: I.name
    },
    I.id
  )) }, O)), [k, T] = Ve({
    titleKey: "deleteProvider",
    messageKey: t("deleteConfirm", { provider: v?.alias }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.identityProviders.del({
          alias: v.alias
        }), l(), C(t("deletedSuccessIdentityProvider"), pe.success);
      } catch (O) {
        S("deleteErrorIdentityProvider", O);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(T, {}),
    m && /* @__PURE__ */ a(
      cI,
      {
        hideRealmBasedIdps: c,
        onClose: () => {
          f(!1), l();
        }
      }
    ),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "identityProviders",
        subKey: "listExplain",
        helpUrl: sa.identityProvidersUrl
      }
    ),
    /* @__PURE__ */ x(
      Te,
      {
        variant: g ? "light" : "default",
        className: g ? "pf-v5-u-p-0" : "",
        children: [
          !g && /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ a(tt, { component: Qt.p, children: t("getStarted") }) }),
            Object.keys(n).map((O) => /* @__PURE__ */ x(Ea, { children: [
              /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ x(tt, { className: "pf-v5-u-mt-lg", component: Qt.h2, children: [
                O,
                ":"
              ] }) }),
              /* @__PURE__ */ a("hr", { className: "pf-v5-u-mb-lg" }),
              /* @__PURE__ */ a(iu, { hasGutter: !0, children: wr(n[O], "name").map((I) => /* @__PURE__ */ a(
                qT,
                {
                  "data-testid": `${I.id}-card`,
                  onClick: () => w(I.id),
                  children: /* @__PURE__ */ a(Sr, { children: /* @__PURE__ */ x(ca, { hasGutter: !0, children: [
                    /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(PU, { icon: I.id }) }),
                    /* @__PURE__ */ a($t, { isFilled: !0, children: I.name })
                  ] }) })
                },
                I.id
              )) })
            ] }, O))
          ] }),
          g && /* @__PURE__ */ a(
            xt,
            {
              loader: P,
              isPaginated: !0,
              ariaLabelKey: "identityProviders",
              searchPlaceholderKey: "searchForProvider",
              toolbarItem: /* @__PURE__ */ x(te, { children: [
                /* @__PURE__ */ a(Le, { alignSelf: "center", children: /* @__PURE__ */ a(
                  Zt,
                  {
                    label: t("hideOrganizationLinkedIdps"),
                    id: "hideOrganizationLinkedIdps",
                    "data-testid": "hideOrganizationLinkedIdps",
                    isChecked: c,
                    onChange: (O, I) => {
                      d(I), l();
                    }
                  }
                ) }),
                /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
                  Kt,
                  {
                    "data-testid": "addProviderDropdown",
                    onOpenChange: (O) => p(O),
                    toggle: (O) => /* @__PURE__ */ a(
                      ut,
                      {
                        ref: O,
                        onClick: () => p(!u),
                        variant: "primary",
                        children: t("addProvider")
                      }
                    ),
                    isOpen: u,
                    children: /* @__PURE__ */ a(Xt, { children: A() })
                  }
                ) }),
                /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
                  z,
                  {
                    "data-testid": "manageDisplayOrder",
                    variant: "link",
                    onClick: () => f(!0),
                    children: t("manageDisplayOrder")
                  }
                ) })
              ] }),
              actions: [
                {
                  title: t("delete"),
                  onRowClick: (O) => {
                    y(O), k();
                  }
                }
              ],
              columns: [
                {
                  name: "alias",
                  displayKey: "name",
                  cellRenderer: IJ
                },
                {
                  name: "providerId",
                  displayKey: "providerDetails",
                  cellFormatters: [ed()]
                },
                {
                  name: "organizationId",
                  displayKey: "linkedOrganization",
                  cellRenderer: EJ
                }
              ],
              emptyState: /* @__PURE__ */ a(
                ct,
                {
                  message: t("identityProviders"),
                  instructions: t("emptyRealmBasedIdps"),
                  isSearchVariant: !0,
                  secondaryActions: [
                    {
                      text: t("clearAllFilters"),
                      onClick: () => {
                        d(!1), l();
                      },
                      type: xe.link
                    }
                  ]
                }
              )
            },
            s
          )
        ]
      }
    )
  ] });
}
const _J = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: PJ
}, Symbol.toStringTag, { value: "Module" })), mee = ({
  save: e
}) => {
  const { adminClient: t } = de(), { realm: n } = ye(), r = Xe(), { t: i } = H(), { addAlert: s, addError: o } = we(), l = rt({ name: "id" }), c = rt({ name: "name" }), { setValue: d } = De(), [u, p] = Ve({
    titleKey: "disableConfirmOrganizationTitle",
    messageKey: "disableConfirmOrganization",
    continueButtonLabel: "disable",
    onConfirm: () => {
      d("enabled", !1), e();
    }
  }), [m, f] = Ve({
    titleKey: "organizationDelete",
    messageKey: "organizationDeleteConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await t.organizations.delById({ id: l }), s(i("organizationDeletedSuccess")), r(SX({ realm: n }));
      } catch (g) {
        o("organizationDeleteError", g);
      }
    }
  });
  return /* @__PURE__ */ a(
    be,
    {
      name: "enabled",
      render: ({ field: { value: g, onChange: b } }) => /* @__PURE__ */ x(te, { children: [
        /* @__PURE__ */ a(f, {}),
        /* @__PURE__ */ a(p, {}),
        /* @__PURE__ */ a(
          wt,
          {
            titleKey: c || "",
            divider: !1,
            dropdownItems: [
              /* @__PURE__ */ a(
                Ue,
                {
                  "data-testid": "delete-client",
                  onClick: m,
                  children: i("delete")
                },
                "delete"
              )
            ],
            isEnabled: g,
            onToggle: (v) => {
              v ? (b(v), e()) : u();
            }
          }
        )
      ] })
    }
  );
}, RJ = ({
  name: e,
  label: t,
  helpText: n,
  defaultValue: r,
  isRequired: i,
  variant: s = "typeahead",
  isDisabled: o
}) => {
  const { adminClient: l } = de(), { t: c } = H(), {
    control: d,
    getValues: u,
    formState: { errors: p }
  } = De(), m = u(e), [f, g, b] = st(), [v, y] = D(""), C = Ct(), [S, P] = D([]), [w, A] = D(""), k = bn(Cg(A, 1e3), []);
  _e(
    async () => {
      const O = {
        max: 20,
        realmOnly: !0
      };
      return w && (O.search = w), await l.identityProviders.find(O);
    },
    P,
    [w]
  );
  const T = (O) => {
    const I = O.map((_) => /* @__PURE__ */ a(
      Re,
      {
        value: _,
        selected: m?.includes(_.alias),
        children: _.alias
      },
      _.alias
    ));
    return I.length === 0 ? /* @__PURE__ */ a(Re, { value: "", children: c("noResultsFound") }) : I;
  };
  return S ? /* @__PURE__ */ x(
    re,
    {
      label: c(t),
      isRequired: i,
      labelIcon: n ? /* @__PURE__ */ a(le, { helpText: n, fieldLabelId: t }) : void 0,
      fieldId: e,
      children: [
        /* @__PURE__ */ a(
          be,
          {
            name: e,
            defaultValue: r,
            control: d,
            rules: {
              validate: (O) => i && O.filter((I) => I !== void 0).length === 0 ? c("required") : void 0
            },
            render: ({ field: O }) => /* @__PURE__ */ a(
              Dn,
              {
                id: e,
                onOpenChange: g,
                toggle: (I) => /* @__PURE__ */ a(
                  ut,
                  {
                    "data-testid": e,
                    ref: I,
                    variant: "typeahead",
                    onClick: g,
                    isExpanded: f,
                    isFullWidth: !0,
                    isDisabled: o,
                    status: p[e] ? "danger" : void 0,
                    children: /* @__PURE__ */ x(zs, { isPlain: !0, children: [
                      /* @__PURE__ */ a(
                        qs,
                        {
                          value: v || O.value,
                          onClick: g,
                          onChange: (_, E) => {
                            b(!0), y(E), k(E);
                          },
                          autoComplete: "off",
                          innerRef: C,
                          placeholderText: c("selectAUser"),
                          ...O.value && {
                            "aria-activedescendant": O.value
                          },
                          role: "combobox",
                          isExpanded: f,
                          "aria-controls": "select-create-typeahead-listbox",
                          children: s === "typeaheadMulti" && Array.isArray(O.value) && /* @__PURE__ */ a(vn, { "aria-label": "Current selections", children: O.value.map(
                            (_, E) => /* @__PURE__ */ a(
                              Vt,
                              {
                                onClick: (L) => {
                                  L.stopPropagation(), O.onChange(
                                    O.value.filter(
                                      (F) => F !== _
                                    )
                                  );
                                },
                                children: _
                              },
                              E
                            )
                          ) })
                        }
                      ),
                      /* @__PURE__ */ a(Gs, { children: !!w && /* @__PURE__ */ a(
                        z,
                        {
                          variant: "plain",
                          onClick: () => {
                            y(""), A(""), O.onChange([]), C?.current?.focus();
                          },
                          "aria-label": c("clear"),
                          children: /* @__PURE__ */ a(fa, { "aria-hidden": !0 })
                        }
                      ) })
                    ] })
                  }
                ),
                isOpen: f,
                selected: O.value,
                onSelect: (I, _) => {
                  const L = _.alias;
                  if (s !== "typeaheadMulti") {
                    const F = O.value.includes(L);
                    F ? O.onChange([]) : O.onChange([L]), y(F ? "" : L || ""), b(!1);
                  } else {
                    const F = O.value.find(
                      (R) => R === L
                    ) ? O.value.filter((R) => R !== L) : [...O.value, L];
                    O.onChange(F);
                  }
                },
                "aria-label": c(e),
                children: /* @__PURE__ */ a(ea, { children: T(S) })
              }
            )
          }
        ),
        p[e] && /* @__PURE__ */ a(kn, { message: c("required") })
      ]
    }
  ) : /* @__PURE__ */ a(bt, {});
}, AJ = ({
  orgId: e,
  identityProvider: t,
  onClose: n
}) => {
  const { adminClient: r } = de(), { t: i } = H(), { addAlert: s, addError: o } = we(), l = Ke({ mode: "onChange" }), { handleSubmit: c, formState: d, setValue: u } = l, { getValues: p } = De();
  ze(
    () => Pn(
      {
        ...t,
        alias: [t?.alias],
        hideOnLogin: t?.hideOnLogin
      },
      u
    ),
    []
  );
  const m = async (f) => {
    try {
      const g = await r.identityProviders.findOne(
        {
          alias: f.alias[0]
        }
      );
      if (!g)
        throw new Error(i("notFound"));
      const { config: b } = ta(f);
      g.config = {
        ...g.config,
        ...b
      }, g.hideOnLogin = f.hideOnLogin, await r.identityProviders.update(
        { alias: f.alias[0] },
        g
      ), t || await r.organizations.linkIdp({
        orgId: e,
        alias: f.alias[0]
      }), s(
        i(t ? "linkUpdatedSuccessful" : "linkSuccessful")
      ), n();
    } catch (g) {
      o(t ? "linkUpdatedError" : "linkError", g);
    }
  };
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.small,
      title: i("linkIdentityProvider"),
      isOpen: !0,
      onClose: n,
      actions: [
        /* @__PURE__ */ a(
          io,
          {
            formState: d,
            "data-testid": "confirm",
            form: "form",
            allowInvalid: !0,
            allowNonDirty: !0,
            children: i("save")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: n,
            children: i("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(He, { ...l, children: /* @__PURE__ */ x(St, { id: "form", onSubmit: c(m), children: [
        /* @__PURE__ */ a(
          RJ,
          {
            name: "alias",
            label: i("identityProvider"),
            defaultValue: [],
            isRequired: !0,
            isDisabled: !!t
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: Fe("config.kc.org.domain"),
            label: i("domain"),
            controller: { defaultValue: "" },
            options: [
              { key: "", value: i("none") },
              ...p("domains").map((f) => ({ key: f, value: f }))
            ],
            menuAppendTo: "parent"
          }
        ),
        /* @__PURE__ */ a(
          vt,
          {
            name: "hideOnLogin",
            label: i("hideOnLoginPage"),
            labelIcon: i("hideOnLoginPageHelp"),
            defaultValue: !0
          }
        ),
        /* @__PURE__ */ a(
          vt,
          {
            name: Fe(
              "config.kc.org.broker.redirect.mode.email-matches"
            ),
            label: i("redirectWhenEmailMatches"),
            labelIcon: i("redirectWhenEmailMatchesHelp"),
            stringify: !0
          }
        )
      ] }) })
    }
  );
}, LJ = ({
  row: e,
  refresh: t
}) => {
  const { adminClient: n } = de(), { addAlert: r, addError: i } = we(), { t: s } = H(), o = async (l) => {
    try {
      await n.identityProviders.update(
        { alias: e.alias },
        {
          ...e,
          hideOnLogin: l
        }
      ), r(s("linkUpdatedSuccessful")), t();
    } catch (c) {
      i("linkUpdatedError", c);
    }
  };
  return /* @__PURE__ */ a(
    Je,
    {
      label: s("on"),
      labelOff: s("off"),
      isChecked: e.hideOnLogin,
      onChange: (l, c) => o(c)
    }
  );
}, fee = () => {
  const { adminClient: e } = de(), { t } = H(), { id: n } = na(), { addAlert: r, addError: i } = we(), [s, o] = D(0), l = () => o(s + 1), [c, d] = D(!1), [u, p] = D(!1), [m, f] = D(), [g, b] = st();
  _e(
    async () => e.identityProviders.find({ max: 1 }),
    (S) => {
      p(S.length === 1);
    },
    []
  );
  const v = async () => {
    const S = await e.organizations.listIdentityProviders({
      orgId: n
    });
    return wr(S, "alias");
  }, [y, C] = Ve({
    titleKey: "identityProviderUnlink",
    messageKey: "identityProviderUnlinkConfirm",
    continueButtonLabel: "unLinkIdentityProvider",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.organizations.unLinkIdp({
          orgId: n,
          alias: m.alias
        }), f(void 0), r(t("unLinkSuccessful")), l();
      } catch (S) {
        i("unLinkError", S);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    c && /* @__PURE__ */ a(
      cI,
      {
        orgId: n,
        onClose: () => {
          d(!1), l();
        }
      }
    ),
    /* @__PURE__ */ x(Te, { variant: "light", children: [
      /* @__PURE__ */ a(C, {}),
      g && /* @__PURE__ */ a(
        AJ,
        {
          orgId: n,
          identityProvider: m,
          onClose: () => {
            b(), l();
          }
        }
      ),
      u ? /* @__PURE__ */ a(
        xt,
        {
          loader: v,
          ariaLabelKey: "identityProviders",
          searchPlaceholderKey: "searchProvider",
          toolbarItem: /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
              z,
              {
                onClick: () => {
                  f(void 0), b();
                },
                children: t("linkIdentityProvider")
              }
            ) }),
            /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
              z,
              {
                "data-testid": "manageDisplayOrder",
                variant: "link",
                onClick: () => d(!0),
                children: t("manageDisplayOrder")
              }
            ) })
          ] }),
          actions: [
            {
              title: t("edit"),
              onRowClick: (S) => {
                f(S), b();
              }
            },
            {
              title: t("unLinkIdentityProvider"),
              onRowClick: (S) => {
                f(S), y();
              }
            }
          ],
          columns: [
            {
              name: "alias"
            },
            {
              name: "config['kc.org.domain']",
              displayKey: "domain"
            },
            {
              name: "providerId",
              displayKey: "providerDetails"
            },
            {
              name: "hideOnLogin",
              displayKey: "hideOnLoginPage",
              cellRenderer: (S) => /* @__PURE__ */ a(LJ, { row: S, refresh: l })
            }
          ],
          emptyState: /* @__PURE__ */ a(
            ct,
            {
              message: t("emptyIdentityProviderLink"),
              instructions: t("emptyIdentityProviderLinkInstructions"),
              primaryActionText: t("linkIdentityProvider"),
              onPrimaryAction: b
            }
          )
        },
        s
      ) : /* @__PURE__ */ a(
        ct,
        {
          icon: Ch,
          message: t("noIdentityProvider"),
          instructions: t("noIdentityProviderInstructions")
        }
      )
    ] })
  ] });
}, NJ = ({
  orgId: e,
  onClose: t
}) => {
  const { adminClient: n } = de(), { addAlert: r, addError: i } = we(), { t: s } = H(), o = Ke(), { handleSubmit: l, formState: c } = o, d = async (u) => {
    try {
      const p = new FormData();
      for (const m in u)
        p.append(m, u[m]);
      await n.organizations.invite({ orgId: e }, p), r(s("inviteSent")), t();
    } catch (p) {
      i("inviteSentError", p);
    }
  };
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.small,
      title: s("inviteMember"),
      isOpen: !0,
      onClose: t,
      actions: [
        /* @__PURE__ */ a(
          io,
          {
            formState: c,
            "data-testid": "save",
            form: "form",
            allowInvalid: !0,
            allowNonDirty: !0,
            children: s("send")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: t,
            children: s("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(He, { ...o, children: /* @__PURE__ */ x(St, { id: "form", onSubmit: l(d), children: [
        /* @__PURE__ */ a(
          ve,
          {
            name: "email",
            label: s("email"),
            rules: { required: s("required") },
            autoFocus: !0
          }
        ),
        /* @__PURE__ */ a(ve, { name: "firstName", label: s("firstName") }),
        /* @__PURE__ */ a(ve, { name: "lastName", label: s("lastName") })
      ] }) })
    }
  );
}, dI = ({
  filterPlaceholderText: e,
  isOpen: t,
  options: n,
  onOpenChange: r,
  onToggleClick: i,
  onSelect: s,
  selectedItems: o,
  width: l
}) => /* @__PURE__ */ a(
  Dn,
  {
    role: "menu",
    id: "checkbox-select",
    isOpen: t,
    selected: o,
    onSelect: (d, u) => {
      s(d, u);
    },
    onOpenChange: r,
    toggle: (d) => /* @__PURE__ */ x(
      ut,
      {
        ref: d,
        onClick: i,
        isExpanded: t,
        style: {
          width: l
        },
        children: [
          e,
          o.length > 0 && /* @__PURE__ */ a(Ir, { isRead: !0, className: "pf-v5-u-m-xs", children: o.length })
        ]
      }
    ),
    "data-testid": "checkbox-filter-select",
    children: /* @__PURE__ */ a(ea, { children: n.map((d) => /* @__PURE__ */ a(
      Re,
      {
        hasCheckbox: !0,
        value: d.value,
        isSelected: o.includes(d.value),
        "data-testid": `checkbox-filter-option-${d.value}`,
        children: d.label
      },
      d.value
    )) })
  }
), uI = ({
  value: e,
  onChange: t,
  onSearch: n,
  onClear: r,
  placeholder: i,
  "aria-label": s
}) => {
  const { t: o } = H();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ x(zs, { children: [
      /* @__PURE__ */ a(
        qs,
        {
          icon: /* @__PURE__ */ a(is, {}),
          value: e,
          onChange: (l) => t(l.currentTarget.value),
          placeholder: i,
          "aria-label": s,
          "data-testid": "search-input"
        }
      ),
      /* @__PURE__ */ a(Gs, { style: { marginInline: "0px" }, children: e && /* @__PURE__ */ a(
        z,
        {
          variant: "plain",
          onClick: r,
          "aria-label": o("clear"),
          "data-testid": "clear-search",
          icon: /* @__PURE__ */ a(fa, {})
        }
      ) })
    ] }),
    /* @__PURE__ */ a(
      z,
      {
        icon: /* @__PURE__ */ a(Bh, {}),
        variant: "control",
        style: { marginLeft: "0.1rem" },
        onClick: () => n(e),
        "aria-label": o("search"),
        "data-testid": "search"
      }
    )
  ] });
}, DJ = (e) => {
  const { realm: t } = ye();
  return /* @__PURE__ */ a(Ae, { to: ri({ realm: t, id: e.id, tab: "settings" }), children: e.username });
}, hee = () => {
  const { t: e } = H(), { adminClient: t } = de(), { id: n } = zt(), { addAlert: r, addError: i } = we(), [s, o] = D(0), l = () => o(s + 1), [c, d] = st(), [u, p] = st(), [m, f] = st(), [g, b] = D(
    []
  ), [v, y] = D(""), [C, S] = D(""), [P, w] = D([]), [A, k] = D(!1), T = [
    { value: "Managed", label: "Managed" },
    { value: "Unmanaged", label: "Unmanaged" }
  ], O = () => {
    k(!A);
  }, I = (M, U) => {
    P.includes(U) ? w(
      P.filter((K) => K !== U)
    ) : w([...P, U]), k(!1), l();
  }, _ = async (M, U) => {
    try {
      const K = P.length === 1 ? P[0] : void 0;
      return await t.organizations.listMembers({
        orgId: n,
        first: M,
        max: U,
        search: C,
        membershipType: K
      });
    } catch (K) {
      return i("organizationsMembersListError", K), [];
    }
  }, E = (M) => {
    y(M);
  }, L = () => {
    S(v), l();
  }, F = () => {
    y(""), S(""), l();
  }, R = async (M) => {
    try {
      await Promise.all(
        M.map(
          (U) => t.organizations.delMember({
            orgId: n,
            userId: U.id
          })
        )
      ), r(e("organizationUsersLeft", { count: M.length }));
    } catch (U) {
      i("organizationUsersLeftError", U);
    }
    l();
  };
  return /* @__PURE__ */ x(te, { children: [
    u && /* @__PURE__ */ a(
      JT,
      {
        membersQuery: () => t.organizations.listMembers({ orgId: n }),
        onAdd: async (M) => {
          try {
            await Promise.all(
              M.map(
                (U) => t.organizations.addMember({
                  orgId: n,
                  userId: U.id
                })
              )
            ), r(
              e("organizationUsersAdded", { count: M.length })
            );
          } catch (U) {
            i("organizationUsersAddedError", U);
          }
        },
        onClose: () => {
          p(), l();
        }
      }
    ),
    m && /* @__PURE__ */ a(NJ, { orgId: n, onClose: f }),
    /* @__PURE__ */ a(
      xt,
      {
        loader: _,
        isPaginated: !0,
        ariaLabelKey: "membersList",
        onSelect: (M) => b([...M]),
        canSelectAll: !0,
        toolbarItem: /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            uI,
            {
              value: v,
              onChange: E,
              onSearch: L,
              onClear: F,
              placeholder: e("searchMembers"),
              "aria-label": e("searchMembers")
            }
          ) }),
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            Kt,
            {
              onOpenChange: d,
              toggle: (M) => /* @__PURE__ */ a(
                ut,
                {
                  ref: M,
                  onClick: d,
                  isExpanded: c,
                  variant: "primary",
                  children: e("addMember")
                }
              ),
              isOpen: c,
              children: /* @__PURE__ */ x(Xt, { children: [
                /* @__PURE__ */ a(
                  Ue,
                  {
                    onClick: () => {
                      p(), d();
                    },
                    children: e("addRealmUser")
                  }
                ),
                /* @__PURE__ */ a(
                  Ue,
                  {
                    onClick: () => {
                      f(), d();
                    },
                    children: e("inviteMember")
                  }
                )
              ] })
            }
          ) }),
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            z,
            {
              variant: "plain",
              isDisabled: g.length === 0,
              onClick: () => R(g),
              children: e("removeMember")
            }
          ) }),
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            dI,
            {
              filterPlaceholderText: e("filterByMembershipType"),
              isOpen: A,
              options: T,
              onOpenChange: (M) => k(M),
              onToggleClick: O,
              onSelect: I,
              selectedItems: P,
              width: "260px"
            }
          ) })
        ] }),
        actions: [
          {
            title: e("remove"),
            onRowClick: async (M) => {
              await R([M]);
            }
          }
        ],
        columns: [
          {
            name: "username",
            cellRenderer: DJ
          },
          {
            name: "email"
          },
          {
            name: "firstName"
          },
          {
            name: "lastName"
          },
          {
            name: "membershipType",
            cellFormatters: [Vi(e)]
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: e("emptyMembers"),
            instructions: e("emptyMembersInstructions"),
            secondaryActions: [
              {
                text: e("addRealmUser"),
                onClick: p
              },
              {
                text: e("inviteMember"),
                onClick: f
              }
            ]
          }
        ),
        isSearching: P.length > 0
      },
      s
    )
  ] });
}, gee = (e) => ({
  ...e,
  domains: e.domains?.map((t) => ({ name: t, verified: !1 })),
  attributes: qo(e.attributes)
}), bee = ({
  readOnly: e = !1
}) => {
  const { t } = H(), {
    setValue: n,
    formState: { errors: r }
  } = De(), i = rt({ name: "name" });
  return ze(() => {
    e || n("alias", i);
  }, [i, e]), /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      ve,
      {
        label: t("name"),
        name: "name",
        rules: { required: t("required") }
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        label: t("alias"),
        name: "alias",
        labelIcon: t("organizationAliasHelp"),
        isDisabled: e
      }
    ),
    /* @__PURE__ */ x(
      re,
      {
        label: t("domain"),
        fieldId: "domain",
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: t("organizationDomainHelp"),
            fieldLabelId: "domain"
          }
        ),
        isRequired: !0,
        children: [
          /* @__PURE__ */ a(
            Or,
            {
              id: "domain",
              name: "domains",
              "aria-label": t("domain"),
              addButtonLabel: "addDomain",
              isRequired: !0
            }
          ),
          r?.domains?.message && /* @__PURE__ */ a(kn, { message: r.domains.message.toString() })
        ]
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        label: t("redirectUrl"),
        name: "redirectUrl",
        labelIcon: t("organizationRedirectUrlHelp")
      }
    ),
    /* @__PURE__ */ a(pr, { name: "description", label: t("description") })
  ] });
};
function MJ() {
  const { adminClient: e } = de(), { realm: t } = ye(), { t: n } = H(), { addAlert: r, addError: i } = we(), s = Xe(), [o, l] = D(0), c = () => l(o + 1), [d, u] = D();
  async function p(g, b, v) {
    return await e.organizations.find({ first: g, max: b, search: v });
  }
  const [m, f] = Ve({
    titleKey: "organizationDelete",
    messageKey: "organizationDeleteConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.organizations.delById({
          id: d.id
        }), r(n("organizationDeletedSuccess")), c();
      } catch (g) {
        i("organizationDeleteError", g);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "organizationsList",
        subKey: "organizationsExplain",
        divider: !0
      }
    ),
    /* @__PURE__ */ x(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
      /* @__PURE__ */ a(f, {}),
      /* @__PURE__ */ a(
        pO,
        {
          link: ({ organization: g, children: b }) => /* @__PURE__ */ a(
            Ae,
            {
              to: Nc({
                realm: t,
                id: g.id,
                tab: "settings"
              }),
              children: b
            },
            g.id
          ),
          loader: p,
          isPaginated: !0,
          toolbarItem: /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            z,
            {
              "data-testid": "addOrganization",
              component: (g) => /* @__PURE__ */ a(Ae, { ...g, to: xx({ realm: t }) }),
              children: n("createOrganization")
            }
          ) }),
          onDelete: (g) => {
            u(g), m();
          },
          children: /* @__PURE__ */ a(
            ct,
            {
              message: n("emptyOrganizations"),
              instructions: n("emptyOrganizationsInstructions"),
              primaryActionText: n("createOrganization"),
              onPrimaryAction: () => s(xx({ realm: t }))
            }
          )
        },
        o
      )
    ] })
  ] });
}
const FJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: MJ
}, Symbol.toStringTag, { value: "Module" }));
function $J() {
  const { adminClient: e } = de(), { t } = H(), { componentTypes: n } = Tt(), { realm: r } = ye(), i = n?.[Tu], s = Xe(), { id: o, providerId: l } = na(), { addAlert: c, addError: d } = we(), [u, p] = D(), m = i?.find((b) => b.id === l);
  if (!m)
    throw new Error(t("notFound"));
  _e(
    async () => e.components.findOne({ id: o }),
    p,
    [o]
  );
  const [f, g] = Ve({
    titleKey: "itemDeleteConfirmTitle",
    messageKey: "itemDeleteConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.components.del({
          id: o
        }), c(t("itemDeletedSuccess")), s(Mg({ realm: r, providerId: l }));
      } catch (b) {
        d("itemSaveError", b);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(g, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: Un(
          u,
          `config.${m.metadata.displayFields?.[0] || m.properties[0].name}`
        )?.[0] || t("createItem"),
        dropdownItems: o ? [
          /* @__PURE__ */ a(
            Ue,
            {
              "data-testid": "delete-item",
              onClick: () => f(),
              children: t("delete")
            },
            "delete"
          )
        ] : void 0
      }
    ),
    /* @__PURE__ */ a(XO, { providerType: Tu, id: o, page: m })
  ] });
}
const jJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: $J
}, Symbol.toStringTag, { value: "Module" })), BJ = ({ obj: e, field: t }) => {
  const { realm: n } = ye(), r = Un(e, t);
  return /* @__PURE__ */ a(
    Ae,
    {
      to: VH({ realm: n, providerId: e.providerId, id: e.id }),
      children: r
    },
    r
  );
};
function UJ() {
  const { adminClient: e } = de(), { t } = H(), { addAlert: n, addError: r } = we(), i = Xe(), { providerId: s } = na(), [o, l] = D(0), c = () => l(o + 1), { realm: d, realmRepresentation: u } = ye(), [p, m] = D(), { componentTypes: f } = Tt(), b = f?.[Tu]?.find((S) => S.id === s), v = async () => {
    const S = {
      parent: u?.id,
      type: Tu
    };
    return await e.components.find({ ...S });
  }, [y, C] = Ve({
    titleKey: "itemDeleteConfirmTitle",
    messageKey: "itemDeleteConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.components.del({
          id: p.id
        }), n(t("itemDeletedSuccess")), c();
      } catch (S) {
        r("itemSaveError", S);
      }
    }
  });
  return /* @__PURE__ */ x(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
    /* @__PURE__ */ a(C, {}),
    /* @__PURE__ */ a(wt, { titleKey: b.id, subKey: b.helpText, divider: !1 }),
    /* @__PURE__ */ a(
      xt,
      {
        toolbarItem: /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
          z,
          {
            component: (S) => /* @__PURE__ */ a(
              Ae,
              {
                ...S,
                to: $C({ realm: d, providerId: b.id })
              }
            ),
            children: t("createItem")
          }
        ) }),
        actionResolver: (S) => [
          {
            title: t("delete"),
            onClick() {
              m(S.data), y();
            }
          }
        ],
        searchPlaceholderKey: "searchItem",
        loader: v,
        columns: [
          ...(b.metadata.displayFields || b.properties.slice(0, 3).map((S) => S.name)).map((S, P) => ({
            name: `config.${S}[0]`,
            displayKey: b.properties.find((w) => w.name === S).label,
            cellRenderer: P === 0 ? (w) => /* @__PURE__ */ a(BJ, { obj: w, field: `config.${S}` }) : void 0
          }))
        ],
        ariaLabelKey: "list",
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            hasIcon: !0,
            message: t("noItems"),
            instructions: t("noItemsInstructions"),
            primaryActionText: t("createItem"),
            onPrimaryAction: () => i($C({ realm: d, providerId: b.id }))
          }
        )
      },
      o
    )
  ] });
}
const VJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: UJ
}, Symbol.toStringTag, { value: "Module" }));
function KJ() {
  const { adminClient: e } = de(), { t } = H(), n = Xe(), { refresh: r, whoAmI: i } = ga(), { addAlert: s, addError: o } = we(), [l, c] = D(), d = Ke({
    mode: "onChange"
  }), { handleSubmit: u, setValue: p, formState: m } = d, f = (b) => {
    const v = { id: "", realm: "", enabled: !0 };
    Pn(b || v, p), c(b || v);
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(wt, { titleKey: "createRealm", subKey: "realmExplain" }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(He, { ...d, children: /* @__PURE__ */ x(
      je,
      {
        isHorizontal: !0,
        onSubmit: u(async (b) => {
          try {
            await e.realms.create({
              ...l,
              ...ta(b)
            }), s(t("saveRealmSuccess")), r(), n(Ms({ realm: b.realm }));
          } catch (v) {
            o("saveRealmError", v);
          }
        }),
        role: "view-realm",
        isReadOnly: !i.canCreateRealm(),
        children: [
          /* @__PURE__ */ a(
            Op,
            {
              id: "kc-realm-filename",
              allowEditingUploadedText: !0,
              onChange: f
            }
          ),
          /* @__PURE__ */ a(
            ve,
            {
              name: "realm",
              label: t("realmNameField"),
              rules: { required: t("required") }
            }
          ),
          /* @__PURE__ */ a(
            vt,
            {
              name: "enabled",
              label: t("enabled"),
              defaultValue: !0
            }
          ),
          /* @__PURE__ */ x(ot, { children: [
            /* @__PURE__ */ a(
              io,
              {
                formState: m,
                allowInvalid: !0,
                allowNonDirty: !0,
                children: t("create")
              }
            ),
            /* @__PURE__ */ a(z, { variant: "link", onClick: () => n(-1), children: t("cancel") })
          ] })
        ]
      }
    ) }) })
  ] });
}
const HJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: KJ
}, Symbol.toStringTag, { value: "Module" }));
function zJ() {
  const { adminClient: e } = de(), { t } = H(), n = Ke({ mode: "onChange" }), r = Xe(), { realm: i } = ye(), { addAlert: s, addError: o } = we();
  return /* @__PURE__ */ a(He, { ...n, children: /* @__PURE__ */ a(
    sb,
    {
      form: n,
      onSubmit: async (c) => {
        const d = {
          ...c,
          name: c.name?.trim(),
          attributes: {}
        };
        try {
          await e.roles.create(d);
          const u = await e.roles.findOneByName({
            name: c.name
          });
          if (!u)
            throw new Error(t("notFound"));
          s(t("roleCreated"), pe.success), r(Ep({ realm: i, id: u.id, tab: "details" }));
        } catch (u) {
          o("roleCreateError", u);
        }
      },
      cancelLink: nh({ realm: i }),
      role: "manage-realm",
      editMode: !1
    }
  ) });
}
const qJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: zJ
}, Symbol.toStringTag, { value: "Module" }));
function GJ() {
  const { adminClient: e } = de(), { realm: t } = ye(), { hasAccess: n } = Nt(), r = n("manage-realm"), i = (s, o, l) => {
    const c = {
      first: s,
      max: o
    }, d = l || "";
    return d && (c.search = d), e.roles.find(c);
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "titleRoles",
        subKey: "roleExplain",
        helpUrl: sa.realmRolesUrl
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", padding: { default: "noPadding" }, children: /* @__PURE__ */ a(
      Gk,
      {
        loader: i,
        toCreate: kX({ realm: t }),
        toDetail: (s) => Ep({ realm: t, id: s, tab: "details" }),
        isReadOnly: !r
      }
    ) })
  ] });
}
const WJ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: GJ
}, Symbol.toStringTag, { value: "Module" })), XJ = () => {
  const { adminClient: e } = de(), t = Xe(), { realm: n } = ye(), { t: r } = H(), { id: i, clientId: s } = zt(), o = async (c, d) => {
    const u = await e.roles.findOneById({ id: i });
    if (!u)
      throw new Error(r("notFound"));
    return u.clientRole ? e.clients.findUsersWithRole({
      roleName: u.name,
      id: s,
      briefRepresentation: !0,
      first: c,
      max: d
    }) : e.roles.findUsersWithRole({
      name: u.name,
      briefRepresentation: !0,
      first: c,
      max: d
    });
  }, { enabled: l } = Dr();
  return /* @__PURE__ */ a(Te, { "data-testid": "users-page", variant: "light", children: /* @__PURE__ */ a(
    xt,
    {
      isPaginated: !0,
      loader: o,
      ariaLabelKey: "roleList",
      searchPlaceholderKey: "",
      "data-testid": "users-in-role-table",
      toolbarItem: l && /* @__PURE__ */ a(
        Rr,
        {
          "aria-label": "Basic popover",
          position: "bottom",
          bodyContent: /* @__PURE__ */ x("div", { children: [
            r("whoWillAppearPopoverTextRoles"),
            /* @__PURE__ */ a(
              z,
              {
                className: "kc-groups-link",
                variant: "link",
                onClick: () => t(`/${n}/groups`),
                children: r("groups")
              }
            ),
            r("or"),
            /* @__PURE__ */ x(
              z,
              {
                className: "kc-users-link",
                variant: "link",
                onClick: () => t(`/${n}/users`),
                children: [
                  r("users"),
                  "."
                ]
              }
            )
          ] }),
          footerContent: r("whoWillAppearPopoverFooterText"),
          children: /* @__PURE__ */ a(
            z,
            {
              variant: "link",
              className: "kc-who-will-appear-button",
              icon: /* @__PURE__ */ a(zc, {}),
              children: r("whoWillAppearLinkTextRoles")
            },
            "who-will-appear-button"
          )
        }
      ),
      emptyState: /* @__PURE__ */ a(
        ct,
        {
          hasIcon: !0,
          message: r("noDirectUsers"),
          instructions: /* @__PURE__ */ x("div", { children: [
            r("noUsersEmptyStateDescription"),
            /* @__PURE__ */ a(
              z,
              {
                className: "kc-groups-link-empty-state",
                variant: "link",
                onClick: () => t(`/${n}/groups`),
                children: r("groups")
              }
            ),
            r("or"),
            /* @__PURE__ */ a(
              z,
              {
                className: "kc-users-link-empty-state",
                variant: "link",
                onClick: () => t(`/${n}/users`),
                children: r("users")
              }
            ),
            r("noUsersEmptyStateDescriptionContinued")
          ] })
        }
      ),
      columns: [
        {
          name: "username",
          displayKey: "userName",
          cellFormatters: [un()]
        },
        {
          name: "email",
          displayKey: "email",
          cellFormatters: [un()]
        },
        {
          name: "lastName",
          displayKey: "lastName",
          cellFormatters: [un()]
        },
        {
          name: "firstName",
          displayKey: "firstName",
          cellFormatters: [ed(), un()]
        }
      ]
    }
  ) });
};
function YJ() {
  const { adminClient: e } = de(), t = aa(), { t: n } = H(), r = Ke({
    mode: "onChange"
  }), { control: i, reset: s, setValue: o } = r, l = Xe(), { id: c, clientId: d } = zt(), { realm: u, realmRepresentation: p } = ye(), [m, f] = D(0), [g, b] = D(), v = () => f(m + 1), { addAlert: y, addError: C } = we(), { hasAccess: S } = Nt(), P = S(
    "query-clients",
    "manage-authorization"
  ), [w, A] = D(!1), [k, T] = D(!1), O = (Q) => {
    const { attributes: ie, ...me } = Q;
    return {
      attributes: Ec(ie),
      ...me
    };
  }, I = rt({
    control: i,
    defaultValue: void 0,
    name: "name"
  }), _ = rt({
    control: i,
    defaultValue: !1,
    name: "composite"
  });
  _e(
    async () => e.roles.findOneById({ id: c }),
    (Q) => {
      if (!Q)
        throw new Error(n("notFound"));
      const ie = O(Q);
      s(ie), b(ie.attributes);
    },
    [m]
  ), _e(
    async () => e.clients.findOne({ id: d }),
    (Q) => {
      d && A(Q?.access?.manage);
    },
    []
  );
  const E = async (Q) => {
    try {
      const { attributes: ie, ...me } = Q, ee = me;
      ee.name = ee.name?.trim(), ee.attributes = qo(ie), d ? await e.clients.updateRole(
        { id: d, roleName: Q.name },
        ee
      ) : await e.roles.updateById({ id: c }, ee), b(ie), y(n("roleSaveSuccess"), pe.success);
    } catch (ie) {
      C("roleSaveError", ie);
    }
  }, L = Do(gb.path), F = Do(ob.path), R = () => {
    if (L)
      return nh({ realm: u });
    if (F)
      return _i({
        realm: u,
        clientId: F.params.clientId,
        tab: "roles"
      });
    throw new Error("Roles overview route could not be determined.");
  }, M = (Q) => {
    if (L)
      return Ep({
        realm: u,
        id: c,
        tab: Q
      });
    if (F)
      return lb({
        realm: u,
        id: c,
        clientId: F.params.clientId,
        tab: Q
      });
    throw new Error("Route could not be determined.");
  }, U = (Q) => Kn(M(Q)), K = U("details"), G = U("associated-roles"), N = U("attributes"), $ = U("users-in-role"), q = U("permissions"), [V, B] = Ve({
    titleKey: "roleDeleteConfirm",
    messageKey: n("roleDeleteConfirmDialog", {
      selectedRoleName: I || n("createRole")
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        d ? await e.clients.delRole({
          id: d,
          roleName: I
        }) : await e.roles.delById({ id: c }), y(n("roleDeletedSuccess"), pe.success), l(R());
      } catch (Q) {
        C("roleDeleteError", Q);
      }
    }
  }), Z = async (Q) => {
    try {
      await e.roles.createComposite(
        { roleId: c, realm: p.realm },
        Q
      ), v(), l(M("associated-roles")), y(n("addAssociatedRolesSuccess"), pe.success);
    } catch (ie) {
      C("addAssociatedRolesError", ie);
    }
  }, X = (Q) => p?.defaultRole && p.defaultRole.name === Q;
  return p ? /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(B, {}),
    k && /* @__PURE__ */ a(
      xp,
      {
        id: c,
        type: "roles",
        name: I,
        onAssign: (Q) => Z(Q.map((ie) => ie.role)),
        onClose: () => T(!1)
      }
    ),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: I,
        badges: [
          {
            id: "composite-role-badge",
            text: _ ? n("composite") : "",
            readonly: !0
          }
        ],
        actionsDropdownId: "roles-actions-dropdown",
        dropdownItems: [
          /* @__PURE__ */ a(
            Ue,
            {
              component: "button",
              onClick: () => {
                V();
              },
              children: n("deleteRole")
            },
            "delete-role"
          )
        ],
        divider: !1
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(He, { ...r, children: /* @__PURE__ */ x(Vn, { isBox: !0, mountOnEnter: !0, defaultLocation: M("details"), children: [
      /* @__PURE__ */ a(
        Ee,
        {
          title: /* @__PURE__ */ a(Pe, { children: n("details") }),
          ...K,
          children: /* @__PURE__ */ a(
            sb,
            {
              form: r,
              onSubmit: E,
              role: F ? "manage-clients" : "manage-realm",
              cancelLink: F ? _i({ realm: u, clientId: d, tab: "roles" }) : nh({ realm: u }),
              editMode: !0
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        Ee,
        {
          "data-testid": "associatedRolesTab",
          title: /* @__PURE__ */ a(Pe, { children: n("associatedRolesText") }),
          ...G,
          children: /* @__PURE__ */ a(
            oo,
            {
              name: I,
              id: c,
              type: "roles",
              isManager: !0,
              save: (Q) => Z(Q.map((ie) => ie.role))
            }
          )
        }
      ),
      !X(I) && /* @__PURE__ */ a(
        Ee,
        {
          "data-testid": "attributesTab",
          className: "kc-attributes-tab",
          title: /* @__PURE__ */ a(Pe, { children: n("attributes") }),
          ...N,
          children: /* @__PURE__ */ a(
            vb,
            {
              form: r,
              save: E,
              fineGrainedAccess: w,
              reset: () => o("attributes", g, { shouldDirty: !1 })
            }
          )
        }
      ),
      !X(I) && /* @__PURE__ */ a(
        Ee,
        {
          title: /* @__PURE__ */ a(Pe, { children: n("usersInRole") }),
          ...$,
          children: /* @__PURE__ */ a(XJ, { "data-cy": "users-in-role-tab" })
        }
      ),
      t(Fn.AdminFineGrainedAuthz) && P && /* @__PURE__ */ a(
        Ee,
        {
          title: /* @__PURE__ */ a(Pe, { children: n("permissions") }),
          ...q,
          children: /* @__PURE__ */ a(id, { id: c, type: "roles" })
        }
      )
    ] }) }) })
  ] }) : /* @__PURE__ */ a(bt, {});
}
const pI = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: YJ
}, Symbol.toStringTag, { value: "Module" }));
function mI({
  ariaLabelKey: e = "userEventsRegistered",
  eventTypes: t,
  addTypes: n,
  onSelect: r,
  onDelete: i
}) {
  const { t: s } = H(), o = t.map((l) => ({
    id: l,
    name: s(`eventTypes.${l}.name`),
    description: s(`eventTypes.${l}.description`)
  }));
  return /* @__PURE__ */ a(
    xt,
    {
      ariaLabelKey: e,
      searchPlaceholderKey: "searchEventType",
      loader: o,
      onSelect: r || void 0,
      canSelectAll: !!r,
      toolbarItem: n && /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(z, { id: "addTypes", onClick: n, "data-testid": "addTypes", children: s("addSavedTypes") }) }),
      actions: i ? [
        {
          title: s("remove"),
          onRowClick: i
        }
      ] : [],
      columns: [
        {
          name: "name",
          displayKey: "eventType"
        },
        {
          name: "description",
          cellFormatters: [Vi(s)]
        }
      ],
      emptyState: /* @__PURE__ */ a(
        ct,
        {
          message: s("emptyEvents"),
          instructions: s("emptyEventsInstructions")
        }
      )
    }
  );
}
const JJ = ({
  onConfirm: e,
  onClose: t,
  configured: n
}) => {
  const { t: r } = H(), { enums: i } = Tt(), [s, o] = D([]);
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.medium,
      title: r("addTypes"),
      isOpen: !0,
      onClose: t,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "addEventTypeConfirm",
            variant: "primary",
            onClick: () => e(s),
            children: r("add")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "moveCancel",
            variant: "link",
            onClick: t,
            children: r("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        mI,
        {
          ariaLabelKey: "addTypes",
          onSelect: (l) => o(l),
          eventTypes: i.eventType.filter(
            (l) => !n.includes(l)
          )
        }
      )
    }
  );
}, Bx = ({
  type: e,
  form: t,
  reset: n,
  clear: r
}) => {
  const { t: i } = H(), {
    control: s,
    watch: o,
    setValue: l,
    formState: { isDirty: c }
  } = t, d = e === "admin" ? "adminEventsEnabled" : "eventsEnabled", u = o(d), [p, m] = Ve({
    titleKey: "events-disable-title",
    messageKey: "events-disable-confirm",
    continueButtonLabel: "confirm",
    onConfirm: () => l(d, !1, { shouldDirty: !0 })
  });
  return /* @__PURE__ */ x(He, { ...t, children: [
    /* @__PURE__ */ a(m, {}),
    /* @__PURE__ */ a(
      re,
      {
        hasNoPaddingTop: !0,
        label: i("saveEvents"),
        fieldId: d,
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: i(`save-${e}-eventsHelp`),
            fieldLabelId: "saveEvents"
          }
        ),
        children: /* @__PURE__ */ a(
          be,
          {
            name: d,
            defaultValue: !1,
            control: s,
            render: ({ field: f }) => /* @__PURE__ */ a(
              Je,
              {
                "data-testid": d,
                id: `${d}-switch`,
                label: i("on"),
                labelOff: i("off"),
                isChecked: f.value,
                onChange: (g, b) => {
                  b ? f.onChange(b) : p();
                },
                "aria-label": i("saveEvents")
              }
            )
          }
        )
      }
    ),
    u && /* @__PURE__ */ x(te, { children: [
      e === "admin" && /* @__PURE__ */ a(
        vt,
        {
          name: "adminEventsDetailsEnabled",
          label: i("includeRepresentation"),
          labelIcon: i("includeRepresentationHelp")
        }
      ),
      /* @__PURE__ */ a(
        vl,
        {
          name: e === "user" ? "eventsExpiration" : "adminEventsExpiration",
          label: i("expiration"),
          labelIcon: i("expirationHelp"),
          defaultValue: "",
          units: ["minute", "hour", "day"],
          controller: {
            defaultValue: ""
          }
        }
      )
    ] }),
    /* @__PURE__ */ x(ot, { children: [
      /* @__PURE__ */ a(
        z,
        {
          variant: "primary",
          type: "submit",
          id: `save-${e}`,
          "data-testid": `save-${e}`,
          isDisabled: !c,
          children: i("save")
        }
      ),
      /* @__PURE__ */ a(z, { variant: "link", onClick: n, children: i("revert") })
    ] }),
    /* @__PURE__ */ a(Pt, {}),
    /* @__PURE__ */ a(
      re,
      {
        label: i(e === "user" ? "clearUserEvents" : "clearAdminEvents"),
        fieldId: `clear-${e}-events`,
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: i(`${e}-clearEventsHelp`),
            fieldLabelId: `clear-${e}-events`
          }
        ),
        children: /* @__PURE__ */ a(
          z,
          {
            variant: "danger",
            id: `clear-${e}-events`,
            "data-testid": `clear-${e}-events`,
            onClick: () => r(),
            children: i(e === "user" ? "clearUserEvents" : "clearAdminEvents")
          }
        )
      }
    )
  ] });
}, ZJ = ({
  form: e,
  reset: t
}) => {
  const { t: n } = H(), i = Tt().providers?.eventsListener.providers;
  return /* @__PURE__ */ x(He, { ...e, children: [
    /* @__PURE__ */ a(
      at,
      {
        name: "eventsListeners",
        label: n("eventListeners"),
        labelIcon: n("eventListenersHelpTextHelp"),
        controller: {
          defaultValue: ""
        },
        className: "kc_eventListeners_select",
        chipGroupProps: {
          numChips: 3,
          expandedText: n("hide"),
          collapsedText: n("showRemaining")
        },
        variant: mt.typeaheadMulti,
        options: Object.keys(i)
      }
    ),
    /* @__PURE__ */ x(ot, { children: [
      /* @__PURE__ */ a(
        z,
        {
          variant: "primary",
          type: "submit",
          "data-testid": "saveEventListenerBtn",
          children: n("save")
        }
      ),
      /* @__PURE__ */ a(
        z,
        {
          variant: "link",
          "data-testid": "revertEventListenerBtn",
          onClick: t,
          children: n("revert")
        }
      )
    ] })
  ] });
}, QJ = ({ realm: e }) => {
  const { adminClient: t } = de(), { t: n } = H(), r = Ke(), { setValue: i, handleSubmit: s } = r, [o, l] = D(0), c = () => l((/* @__PURE__ */ new Date()).getTime()), [d, u] = D(0), p = () => u((/* @__PURE__ */ new Date()).getTime()), [m, f] = D("event"), [g, b] = D(), [v, y] = D(), [C, S] = D(!1), { addAlert: P, addError: w } = we(), { realm: A, refresh: k } = ye(), T = (R) => {
    b(R), Pn(R || {}, i);
  }, O = async (R) => {
    y(R), I();
  }, [I, _] = Ve({
    titleKey: "deleteEvents",
    messageKey: "deleteEventsConfirm",
    continueButtonLabel: "clear",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        switch (v) {
          case "admin":
            await t.realms.clearAdminEvents({ realm: A });
            break;
          case "user":
            await t.realms.clearEvents({ realm: A });
            break;
        }
        P(n(`${v}-events-cleared`), pe.success);
      } catch (R) {
        w(`${v}-events-cleared-error`, R);
      }
    }
  });
  _e(
    () => t.realms.getConfigEvents({ realm: A }),
    (R) => {
      T({
        ...R,
        adminEventsExpiration: e.attributes?.adminEventsExpiration
      }), p();
    },
    [o]
  );
  const E = async (R) => {
    const M = !yi(
      g?.eventsListeners,
      R.eventsListeners
    ), { adminEventsExpiration: U, ...K } = R;
    e.attributes?.adminEventsExpiration !== U && await t.realms.update(
      { realm: A },
      {
        ...e,
        attributes: { ...e.attributes || {}, adminEventsExpiration: U }
      }
    ), k();
    try {
      await t.realms.updateConfigEvents(
        { realm: A },
        K
      ), T({ ...g, ...K, adminEventsExpiration: U }), P(
        n(M ? "saveEventListenersSuccess" : "eventConfigSuccessfully"),
        pe.success
      );
    } catch (G) {
      w(
        n(M ? "saveEventListenersError" : "eventConfigError"),
        G
      );
    }
  }, L = async (R) => {
    const M = R.map((K) => K.id), U = g.enabledEventTypes?.concat(M);
    await F(U);
  }, F = async (R = []) => {
    const M = { ...r.getValues(), enabledEventTypes: R };
    await E(M), S(!1), c();
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(_, {}),
    C && /* @__PURE__ */ a(
      JJ,
      {
        onConfirm: (R) => L(R),
        configured: g?.enabledEventTypes || [],
        onClose: () => S(!1)
      }
    ),
    /* @__PURE__ */ x(
      Ka,
      {
        activeKey: m,
        onSelect: (R, M) => f(M),
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              eventKey: "event",
              title: /* @__PURE__ */ a(Pe, { children: n("eventListeners") }),
              "data-testid": "rs-event-listeners-tab",
              children: /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ a(
                je,
                {
                  role: "manage-events",
                  isHorizontal: !0,
                  onSubmit: s(E),
                  children: /* @__PURE__ */ a(ZJ, { form: r, reset: () => T(g) })
                }
              ) })
            }
          ),
          /* @__PURE__ */ x(
            Ee,
            {
              eventKey: "user",
              title: /* @__PURE__ */ a(Pe, { children: n("userEventsSettings") }),
              "data-testid": "rs-events-tab",
              children: [
                /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ a(
                  je,
                  {
                    role: "manage-events",
                    isHorizontal: !0,
                    onSubmit: s(E),
                    children: /* @__PURE__ */ a(
                      Bx,
                      {
                        type: "user",
                        form: r,
                        reset: () => T(g),
                        clear: () => O("user")
                      }
                    )
                  }
                ) }),
                /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ a(
                  mI,
                  {
                    addTypes: () => S(!0),
                    eventTypes: g?.enabledEventTypes || [],
                    onDelete: (R) => {
                      const M = g?.enabledEventTypes?.filter(
                        (U) => U !== R.id
                      );
                      F(M), b({ ...g, enabledEventTypes: M });
                    }
                  },
                  d
                ) })
              ]
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              eventKey: "admin",
              title: /* @__PURE__ */ a(Pe, { children: n("adminEventsSettings") }),
              "data-testid": "rs-admin-events-tab",
              children: /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ a(
                je,
                {
                  role: "manage-events",
                  isHorizontal: !0,
                  onSubmit: s(E),
                  children: /* @__PURE__ */ a(
                    Bx,
                    {
                      type: "admin",
                      form: r,
                      reset: () => T(g),
                      clear: () => O("admin")
                    }
                  )
                }
              ) })
            }
          )
        ]
      }
    )
  ] });
}, Sb = ({
  providerType: e,
  onClose: t
}) => {
  const { adminClient: n } = de(), { t: r } = H(), { id: i } = zt(), { addAlert: s, addError: o } = we(), c = Tt().componentTypes?.[_o] ?? [], d = Ke({
    mode: "onChange"
  }), { handleSubmit: u, reset: p } = d, m = async (f) => {
    f.config && Object.entries(f.config).forEach(
      ([g, b]) => f.config[g] = Array.isArray(b) ? b : [b]
    );
    try {
      i ? (await n.components.update(
        { id: i },
        {
          ...f,
          providerType: _o
        }
      ), s(r("saveProviderSuccess"), pe.success)) : (await n.components.create({
        ...f,
        providerId: e,
        providerType: _o
      }), s(r("saveProviderSuccess"), pe.success), t?.());
    } catch (g) {
      o("saveProviderError", g);
    }
  };
  return _e(
    async () => {
      if (i) return await n.components.findOne({ id: i });
    },
    (f) => {
      f && p({ ...f });
    },
    []
  ), /* @__PURE__ */ a(je, { isHorizontal: !0, role: "manage-realm", onSubmit: u(m), children: /* @__PURE__ */ x(He, { ...d, children: [
    i && /* @__PURE__ */ a(
      ve,
      {
        name: "id",
        label: r("providerId"),
        labelIcon: r("providerIdHelp"),
        rules: {
          required: r("required")
        },
        readOnly: !0
      }
    ),
    /* @__PURE__ */ a(
      ve,
      {
        name: "name",
        defaultValue: e,
        label: r("name"),
        labelIcon: r("keyProviderMapperNameHelp"),
        rules: {
          required: r("required")
        }
      }
    ),
    /* @__PURE__ */ a(
      gr,
      {
        properties: c.find((f) => f.id === e)?.properties || []
      }
    ),
    /* @__PURE__ */ x(ot, { children: [
      /* @__PURE__ */ a(
        z,
        {
          "data-testid": "add-provider-button",
          variant: "primary",
          type: "submit",
          children: r("save")
        }
      ),
      /* @__PURE__ */ a(z, { onClick: () => t?.(), variant: "link", children: r("cancel") })
    ] })
  ] }) });
};
function eZ() {
  const { t: e } = H(), t = zt(), n = Xe();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(wt, { titleKey: e("editProvider"), subKey: t.providerType }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(
      Sb,
      {
        ...t,
        onClose: () => n(Du({ realm: t.realm, tab: "providers" }))
      }
    ) })
  ] });
}
const tZ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  KeyProviderForm: Sb,
  default: eZ
}, Symbol.toStringTag, { value: "Module" })), nZ = "_dialog_121se_2", aZ = {
  dialog: nZ
}, rZ = ({
  providerType: e,
  onClose: t
}) => {
  const { t: n } = H();
  return /* @__PURE__ */ a(
    ft,
    {
      className: aZ.dialog,
      variant: Et.medium,
      title: n("addProvider"),
      isOpen: !0,
      onClose: t,
      children: /* @__PURE__ */ a(Sb, { providerType: e, onClose: t })
    }
  );
}, iZ = ({
  onConfirm: e,
  onClose: t
}) => {
  const { t: n } = H(), i = Tt().componentTypes?.[_o] ?? [];
  return /* @__PURE__ */ a(ft, { variant: "medium", title: n("addProvider"), isOpen: !0, onClose: t, children: /* @__PURE__ */ a(
    Er,
    {
      onSelectDataListItem: (s, o) => {
        e(o);
      },
      "aria-label": n("addPredefinedMappers"),
      isCompact: !0,
      children: i.map((s) => /* @__PURE__ */ a(
        Pa,
        {
          "aria-label": s.id,
          id: s.id,
          children: /* @__PURE__ */ a(Va, { children: /* @__PURE__ */ a(
            Ua,
            {
              dataListCells: [
                /* @__PURE__ */ a(
                  oa,
                  {
                    "data-testid": `option-${s.id}`,
                    children: s.id
                  },
                  `name-${s.id}`
                ),
                /* @__PURE__ */ a(oa, { width: 2, children: s.helpText }, `helpText-${s.helpText}`)
              ]
            }
          ) })
        },
        s.id
      ))
    }
  ) });
}, Ul = ["ACTIVE", "PASSIVE", "DISABLED"], sZ = ({ onFilter: e }) => {
  const { t } = H(), [n, r] = D(Ul[0]), [i, s] = st();
  return /* @__PURE__ */ a(
    ht,
    {
      width: 300,
      "data-testid": "filter-type-select",
      isOpen: i,
      className: "kc-filter-type-select",
      variant: mt.single,
      onToggle: s,
      toggleIcon: /* @__PURE__ */ a(ls, {}),
      onSelect: (o) => {
        const l = Ul.find((c) => c === o.toString()) || Ul[0];
        r(l), e(l), s();
      },
      selections: n,
      "aria-label": t("selectFilterType"),
      children: Ul.map((o) => /* @__PURE__ */ a(
        Re,
        {
          "data-testid": `${o}-option`,
          value: o,
          children: t(`keysFilter.${o}`)
        },
        o
      ))
    }
  );
}, oZ = ({ realmComponents: e }) => {
  const { adminClient: t } = de(), { t: n } = H(), r = Xe(), i = ai(), [s, o] = D(""), [l, c] = D(""), { realm: d } = ye(), [u, p] = D(), [m, f] = D();
  _e(
    async () => (await t.realms.getKeys({ realm: d })).keys?.map((S) => {
      const P = e.find(
        (w) => w.id === S.providerId
      );
      return { ...S, provider: P?.name };
    }),
    p,
    []
  );
  const [g, b] = Ve({
    titleKey: n("publicKey"),
    messageKey: s,
    continueButtonLabel: "close",
    continueButtonVariant: xe.primary,
    onConfirm: () => Promise.resolve()
  }), [v, y] = Ve({
    titleKey: n("certificate"),
    messageKey: l,
    continueButtonLabel: "close",
    continueButtonVariant: xe.primary,
    onConfirm: () => Promise.resolve()
  });
  return u ? /* @__PURE__ */ x(Te, { variant: "light", padding: { default: "noPadding" }, children: [
    /* @__PURE__ */ a(b, {}),
    /* @__PURE__ */ a(y, {}),
    /* @__PURE__ */ a(
      xt,
      {
        isNotCompact: !0,
        className: "kc-keys-list",
        loader: m || u,
        ariaLabelKey: "keysList",
        searchPlaceholderKey: "searchKey",
        searchTypeComponent: /* @__PURE__ */ a(
          sZ,
          {
            onFilter: (C) => f(
              C !== Ul[0] ? u.filter(({ status: S }) => S === C) : void 0
            )
          }
        ),
        columns: [
          {
            name: "algorithm",
            displayKey: "algorithm",
            cellFormatters: [un()],
            transforms: [Ft(15)]
          },
          {
            name: "type",
            displayKey: "type",
            cellFormatters: [un()],
            transforms: [Ft(10)]
          },
          {
            name: "kid",
            displayKey: "kid",
            cellFormatters: [un()],
            transforms: [Ft(10)]
          },
          {
            name: "use",
            displayKey: "use",
            cellFormatters: [un()],
            transforms: [Ft(10)]
          },
          {
            name: "provider",
            displayKey: "provider",
            cellRenderer: ({ provider: C }) => C || "-",
            transforms: [Ft(10)]
          },
          {
            name: "validTo",
            displayKey: "validTo",
            cellRenderer: ({ validTo: C }) => C ? i(new Date(C)) : "-",
            transforms: [Ft(10)]
          },
          {
            name: "publicKeys",
            displayKey: "publicKeys",
            cellRenderer: ({ type: C, publicKey: S, certificate: P }) => C === "EC" ? /* @__PURE__ */ a(
              z,
              {
                onClick: () => {
                  g(), o(S);
                },
                variant: "secondary",
                id: "kc-public-key",
                children: n("publicKey")
              }
            ) : C === "RSA" ? /* @__PURE__ */ x("div", { className: "button-wrapper", children: [
              /* @__PURE__ */ a(
                z,
                {
                  onClick: () => {
                    g(), o(S);
                  },
                  variant: "secondary",
                  id: S,
                  children: n("publicKey")
                }
              ),
              /* @__PURE__ */ a(
                z,
                {
                  onClick: () => {
                    v(), c(P);
                  },
                  variant: "secondary",
                  id: P,
                  className: "kc-certificate",
                  children: n("certificate")
                }
              )
            ] }) : C === "OKP" ? /* @__PURE__ */ a(
              z,
              {
                onClick: () => {
                  g(), o(S);
                },
                variant: "secondary",
                id: "kc-public-key",
                children: n("publicKey")
              }
            ) : "",
            transforms: [Ft(20)]
          }
        ],
        isSearching: !!m,
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            hasIcon: !0,
            message: n("noKeys"),
            instructions: n("noKeysDescription"),
            primaryActionText: n("addProvider"),
            onPrimaryAction: () => r(Du({ realm: d, tab: "providers" }))
          }
        )
      }
    )
  ] }) : /* @__PURE__ */ a(bt, {});
}, lZ = ({
  realmComponents: e,
  refresh: t
}) => {
  const { adminClient: n } = de(), { t: r } = H(), { addAlert: i, addError: s } = we(), { realm: o } = ye(), [l, c] = D(""), [d, u] = D(
    []
  ), [p, m] = st(), g = Tt().componentTypes?.[_o] ?? [], [b, v] = st(), [y, C] = D(), [S, P] = D(), w = nt(
    () => e.map((_) => {
      const E = g.find(
        (L) => _.providerId === L.id
      );
      return {
        ..._,
        providerDescription: E?.helpText
      };
    }),
    [e]
  ), [A, k] = Ve({
    titleKey: "deleteProviderTitle",
    messageKey: r("deleteProviderConfirm", {
      provider: S?.name
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await n.components.del({
          id: S.id,
          realm: o
        }), t(), i(r("deleteProviderSuccess"), pe.success);
      } catch (_) {
        s("deleteProviderError", _);
      }
    }
  }), T = () => {
    if (l !== "") {
      c(l);
      const _ = w.filter(
        (E) => E.name?.includes(l) || E.providerId?.includes(l)
      );
      u(_);
    } else
      c(""), u(w);
  }, O = (_) => {
    _.key === "Enter" && T();
  }, I = (_) => {
    c(_);
  };
  return /* @__PURE__ */ x(te, { children: [
    b && /* @__PURE__ */ a(
      iZ,
      {
        onClose: () => v(),
        onConfirm: (_) => {
          m(), C(_), v();
        }
      }
    ),
    p && y && /* @__PURE__ */ a(
      rZ,
      {
        providerType: y,
        onClose: () => {
          m(), t();
        }
      }
    ),
    /* @__PURE__ */ a(k, {}),
    /* @__PURE__ */ x(Te, { variant: "light", padding: { default: "noPadding" }, children: [
      /* @__PURE__ */ a(Ta, { children: /* @__PURE__ */ x(ru, { className: "providers-toolbar", children: [
        /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ x(nn, { children: [
          /* @__PURE__ */ a(dt, { isFill: !0, children: /* @__PURE__ */ a(
            gt,
            {
              name: "inputGroupName",
              id: "inputGroupName",
              "data-testid": "provider-search-input",
              type: "search",
              "aria-label": r("search"),
              placeholder: r("search"),
              onChange: (_, E) => I(E),
              onKeyDown: O
            }
          ) }),
          /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
            z,
            {
              variant: xe.control,
              "aria-label": r("search"),
              onClick: T,
              children: /* @__PURE__ */ a(is, {})
            }
          ) })
        ] }) }),
        /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
          z,
          {
            "data-testid": "addProviderDropdown",
            className: "add-provider-dropdown",
            onClick: () => v(),
            children: r("addProvider")
          }
        ) })
      ] }) }),
      /* @__PURE__ */ a(
        jg,
        {
          variant: "compact",
          className: "kc-draggable-table",
          keyField: "id",
          data: d.length === 0 ? w : d,
          onDragFinish: async (_, E) => {
            const L = w.map((F) => {
              const R = { ...F };
              return delete R.providerDescription, n.components.update(
                { id: F.id },
                {
                  ...R,
                  config: {
                    priority: [
                      (E.length - E.indexOf(F.id) + 100).toString()
                    ]
                  }
                }
              );
            });
            try {
              await Promise.all(L), t(), i(r("saveProviderListSuccess"), pe.success);
            } catch (F) {
              s("saveProviderError", F);
            }
          },
          columns: [
            {
              name: "name",
              displayKey: "name",
              cellRenderer: (_) => /* @__PURE__ */ a(
                Ae,
                {
                  "data-testid": "provider-name-link",
                  to: _X({
                    realm: o,
                    id: _.id,
                    providerType: _.providerId
                  }),
                  children: _.name
                },
                _.name
              )
            },
            {
              name: "providerId",
              displayKey: "provider"
            },
            {
              name: "providerDescription",
              displayKey: "providerDescription"
            }
          ],
          actions: [
            {
              title: r("delete"),
              onClick: (_, E, L) => {
                P(L), A();
              }
            }
          ]
        }
      )
    ] })
  ] });
}, cZ = (e) => [...e].sort((n, r) => {
  const i = Number(n.config?.priority), s = Number(r.config?.priority);
  return (isNaN(s) ? 0 : s) - (isNaN(i) ? 0 : i);
}), dZ = () => {
  const { adminClient: e } = de(), { t } = H(), { realm: n } = ye(), [r, i] = D(), [s, o] = D(0), l = () => {
    o(s + 1);
  };
  _e(
    () => e.components.find({
      type: _o,
      realm: n
    }),
    (p) => i(cZ(p)),
    [s]
  );
  const c = (p) => Kn(Du({ realm: n, tab: p })), d = c("list"), u = c("providers");
  return r ? /* @__PURE__ */ x(
    Vn,
    {
      mountOnEnter: !0,
      unmountOnExit: !0,
      defaultLocation: Du({ realm: n, tab: "list" }),
      children: [
        /* @__PURE__ */ a(
          Ee,
          {
            id: "keysList",
            "data-testid": "rs-keys-list-tab",
            "aria-label": "keys-list-subtab",
            title: /* @__PURE__ */ a(Pe, { children: t("keysList") }),
            ...d,
            children: /* @__PURE__ */ a(oZ, { realmComponents: r })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            id: "providers",
            "data-testid": "rs-providers-tab",
            "aria-label": "rs-providers-tab",
            title: /* @__PURE__ */ a(Pe, { children: t("providers") }),
            ...u,
            children: /* @__PURE__ */ a(lZ, { realmComponents: r, refresh: l })
          }
        )
      ]
    }
  ) : /* @__PURE__ */ a(bt, {});
}, Ux = {
  theme: "",
  themeType: "",
  locale: "",
  hasWords: []
}, uZ = ({
  defaultSupportedLocales: e,
  defaultLocales: t
}) => {
  const { adminClient: n } = de(), { t: r } = H(), { realm: i } = ye(), s = Tt(), { whoAmI: o } = ga(), l = ba(), [c, d] = D(!1), [u, p] = D(!1), [m, f] = D(!1), [g, b] = D(!1), [v, y] = D(!1), [C, S] = D({}), [P, w] = D(0), A = s.themes, k = nt(() => A ? l(Object.keys(A), (V) => V) : [], [A]), T = nt(() => A ? l(
    Object.values(A).flatMap((V) => V.map((B) => B.name)).filter((V, B, Z) => Z.indexOf(V) === B),
    (V) => V
  ) : [], [A]), O = nt(() => Array.from(/* @__PURE__ */ new Set([...t, ...e])), [t, e]), I = {
    theme: r("theme"),
    themeType: r("themeType"),
    locale: r("language"),
    hasWords: r("hasWords")
  }, {
    getValues: _,
    reset: E,
    formState: { isDirty: L, isValid: F },
    control: R
  } = Ke({
    mode: "onChange",
    defaultValues: Ux
  }), M = async () => {
    try {
      const V = _();
      if (["theme", "themeType", "locale"].some(
        (me) => !V[me]
      ))
        return [];
      const X = await n.serverInfo.findEffectiveMessageBundles(
        {
          realm: i,
          ...V,
          locale: V.locale || Ma,
          source: !0
        }
      ), Q = V.hasWords.length > 0 ? X.filter(
        (me) => V.hasWords.some(
          (ee) => me.value.includes(ee) || me.key.includes(ee)
        )
      ) : X;
      return l([...Q], mr("key"));
    } catch {
      return [];
    }
  };
  function U() {
    d(!1), $();
  }
  function K() {
    E(), $();
  }
  function G(V) {
    const B = { ..._() };
    delete B[V], E({ ...Ux, ...B }), $();
  }
  function N(V, B) {
    const Z = _(), X = Z[V], Q = Array.isArray(X) ? X.filter((ie) => ie !== B) : X;
    E({ ...Z, [V]: Q }), $();
  }
  function $() {
    const V = Sg(
      _(),
      (B) => B !== "" || Array.isArray(B) && B.length > 0
    );
    S(V), w(P + 1);
  }
  const q = () => /* @__PURE__ */ x(
    Qn,
    {
      direction: { default: "column" },
      spaceItems: { default: "spaceItemsNone" },
      children: [
        /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ a(
          tt,
          {
            className: "pf-v5-u-mb-md pf-v5-u-mt-0 pf-v5-u-mr-md",
            component: Qt.p,
            children: r("effectiveMessageBundlesDescription")
          }
        ) }) }),
        /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
          sd,
          {
            buttonText: r("searchForEffectiveMessageBundles"),
            setSearchDropdownOpen: d,
            searchDropdownOpen: c,
            marginRight: "2.5rem",
            width: "15vw",
            children: /* @__PURE__ */ x(
              St,
              {
                isHorizontal: !0,
                className: "pf-v5-u-w-25vw",
                "data-testid": "effectiveMessageBundlesSearchForm",
                onSubmit: (V) => V.preventDefault(),
                children: [
                  /* @__PURE__ */ a(re, { label: r("theme"), fieldId: "kc-theme", isRequired: !0, children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "theme",
                      control: R,
                      defaultValue: "",
                      rules: {
                        validate: (V) => (V || "").length > 0
                      },
                      render: ({ field: V }) => /* @__PURE__ */ a(
                        ht,
                        {
                          "data-testid": "effective_message_bundles-theme-searchField",
                          chipGroupProps: {
                            numChips: 1,
                            expandedText: r("hide"),
                            collapsedText: r("showRemaining")
                          },
                          variant: mt.single,
                          typeAheadAriaLabel: "Select",
                          onToggle: (B) => f(B),
                          selections: V.value,
                          onSelect: (B) => {
                            V.onChange(B.toString()), f(!1);
                          },
                          onClear: () => {
                            V.onChange("");
                          },
                          isOpen: m,
                          "aria-label": r("selectTheme"),
                          chipGroupComponent: /* @__PURE__ */ a(vn, { children: /* @__PURE__ */ a(
                            Vt,
                            {
                              onClick: (B) => {
                                B.stopPropagation(), V.onChange("");
                              },
                              children: V.value
                            },
                            V.value
                          ) }),
                          children: [
                            /* @__PURE__ */ a(
                              Re,
                              {
                                label: r("selectTheme"),
                                isDisabled: !0,
                                children: r("selectTheme")
                              },
                              "theme_placeholder"
                            )
                          ].concat(
                            T.map((B) => /* @__PURE__ */ a(Re, { value: B, children: B }, B))
                          )
                        }
                      )
                    }
                  ) }),
                  /* @__PURE__ */ a(
                    re,
                    {
                      label: r("themeType"),
                      fieldId: "kc-themeType",
                      isRequired: !0,
                      children: /* @__PURE__ */ a(
                        be,
                        {
                          name: "themeType",
                          control: R,
                          defaultValue: "",
                          rules: {
                            validate: (V) => (V || "").length > 0
                          },
                          render: ({ field: V }) => /* @__PURE__ */ a(
                            ht,
                            {
                              "data-testid": "effective-message-bundles-feature-searchField",
                              chipGroupProps: {
                                numChips: 1,
                                expandedText: r("hide"),
                                collapsedText: r("showRemaining")
                              },
                              variant: mt.single,
                              typeAheadAriaLabel: "Select",
                              onToggle: (B) => b(B),
                              selections: V.value,
                              onSelect: (B) => {
                                V.onChange(B.toString()), b(!1);
                              },
                              onClear: () => {
                                V.onChange("");
                              },
                              isOpen: g,
                              "aria-label": r("selectThemeType"),
                              chipGroupComponent: /* @__PURE__ */ a(vn, { children: /* @__PURE__ */ a(
                                Vt,
                                {
                                  onClick: (B) => {
                                    B.stopPropagation(), V.onChange("");
                                  },
                                  children: V.value
                                },
                                V.value
                              ) }),
                              children: [
                                /* @__PURE__ */ a(
                                  Re,
                                  {
                                    label: r("selectThemeType"),
                                    isDisabled: !0,
                                    children: r("selectThemeType")
                                  },
                                  "themeType_placeholder"
                                )
                              ].concat(
                                k.map((B) => /* @__PURE__ */ a(Re, { value: B, children: B }, B))
                              )
                            }
                          )
                        }
                      )
                    }
                  ),
                  /* @__PURE__ */ a(re, { label: r("language"), fieldId: "kc-language", isRequired: !0, children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "locale",
                      control: R,
                      defaultValue: "",
                      rules: {
                        validate: (V) => (V || "").length > 0
                      },
                      render: ({ field: V }) => /* @__PURE__ */ a(
                        ht,
                        {
                          "data-testid": "effective-message-bundles-language-searchField",
                          chipGroupProps: {
                            numChips: 1,
                            expandedText: r("hide"),
                            collapsedText: r("showRemaining")
                          },
                          variant: mt.single,
                          typeAheadAriaLabel: "Select",
                          onToggle: (B) => y(B),
                          selections: V.value,
                          onSelect: (B) => {
                            V.onChange(B.toString()), y(!1);
                          },
                          onClear: () => {
                            V.onChange("");
                          },
                          isOpen: v,
                          "aria-label": r("selectLanguage"),
                          chipGroupComponent: /* @__PURE__ */ a(vn, { children: V.value ? /* @__PURE__ */ a(
                            Vt,
                            {
                              onClick: (B) => {
                                B.stopPropagation(), V.onChange("");
                              },
                              children: xr(
                                V.value,
                                o.getLocale()
                              )
                            },
                            V.value
                          ) : null }),
                          children: [
                            /* @__PURE__ */ a(
                              Re,
                              {
                                label: r("selectLanguage"),
                                isDisabled: !0,
                                children: r("selectLanguage")
                              },
                              "language_placeholder"
                            )
                          ].concat(
                            O.map((B) => /* @__PURE__ */ a(Re, { value: B, children: xr(B, o.getLocale()) }, B))
                          )
                        }
                      )
                    }
                  ) }),
                  /* @__PURE__ */ a(re, { label: r("hasWords"), fieldId: "kc-hasWords", children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "hasWords",
                      control: R,
                      render: ({ field: V }) => /* @__PURE__ */ x("div", { children: [
                        /* @__PURE__ */ a(
                          gt,
                          {
                            id: "kc-hasWords",
                            "data-testid": "effective-message-bundles-hasWords-searchField",
                            value: V.value.join(" "),
                            onChange: (B) => {
                              const X = B.target.value;
                              if (X.trim().length === 0)
                                V.onChange([]);
                              else {
                                const Q = X.split(" ").map((ie) => ie.trim());
                                V.onChange(Q);
                              }
                            }
                          }
                        ),
                        /* @__PURE__ */ a(vn, { children: V.value.map((B, Z) => /* @__PURE__ */ a(
                          Vt,
                          {
                            onClick: (X) => {
                              X.stopPropagation();
                              const Q = V.value.filter(
                                (ie, me) => me !== Z
                              );
                              V.onChange(Q);
                            },
                            children: B
                          },
                          Z
                        )) })
                      ] })
                    }
                  ) }),
                  /* @__PURE__ */ x(ot, { className: "pf-v5-u-mt-sm", children: [
                    /* @__PURE__ */ a(
                      z,
                      {
                        variant: "primary",
                        onClick: () => {
                          p(!0), U();
                        },
                        "data-testid": "search-effective-message-bundles-btn",
                        isDisabled: !F,
                        children: r("search")
                      }
                    ),
                    /* @__PURE__ */ a(
                      z,
                      {
                        variant: "secondary",
                        onClick: K,
                        "data-testid": "reset-search-effective-message-bundles-btn",
                        isDisabled: !L,
                        children: r("reset")
                      }
                    )
                  ] })
                ]
              }
            )
          }
        ) }),
        /* @__PURE__ */ a(Dt, { children: Object.entries(C).length > 0 && /* @__PURE__ */ a(te, { children: Object.entries(C).map((V) => {
          const [B, Z] = V;
          return /* @__PURE__ */ a(
            vn,
            {
              className: "pf-v5-u-mt-md pf-v5-u-mr-md",
              categoryName: I[B],
              isClosable: !0,
              onClick: () => G(B),
              children: typeof Z == "string" ? /* @__PURE__ */ a(Vt, { isReadOnly: !0, children: B === "locale" ? xr(
                Z,
                o.getLocale()
              )?.toLowerCase() : Z }) : Z.map((X) => /* @__PURE__ */ a(
                Vt,
                {
                  onClick: () => N(B, X),
                  children: X
                },
                X
              ))
            },
            B
          );
        }) }) })
      ]
    }
  );
  return u ? /* @__PURE__ */ a(
    xt,
    {
      loader: M,
      ariaLabelKey: "effectiveMessageBundles",
      toolbarItem: q(),
      columns: [
        {
          name: "key",
          displayKey: "key"
        },
        {
          name: "value",
          displayKey: "value"
        }
      ],
      emptyState: /* @__PURE__ */ a(
        ct,
        {
          message: r("noSearchResults"),
          instructions: r("noSearchResultsInstructions")
        }
      ),
      isSearching: Object.keys(C).length > 0
    },
    P
  ) : /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a("div", { className: "pf-v5-u-py-lg pf-v5-u-pl-md", children: q() }),
    /* @__PURE__ */ a(Pt, {}),
    /* @__PURE__ */ a(
      ct,
      {
        message: r("emptyEffectiveMessageBundles"),
        instructions: r("emptyEffectiveMessageBundlesInstructions"),
        isSearchVariant: !0
      }
    )
  ] });
}, pZ = ({
  handleModalToggle: e,
  save: t,
  form: n
}) => {
  const { t: r } = H();
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.small,
      title: r("addTranslation"),
      isOpen: !0,
      onClose: e,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "add-translation-confirm-button",
            variant: "primary",
            type: "submit",
            form: "translation-form",
            children: r("create")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => {
              e();
            },
            children: r("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        St,
        {
          id: "translation-form",
          isHorizontal: !0,
          onSubmit: n.handleSubmit(t),
          children: /* @__PURE__ */ x(He, { ...n, children: [
            /* @__PURE__ */ a(
              ve,
              {
                name: "key",
                label: r("key"),
                autoFocus: !0,
                rules: {
                  required: r("required")
                }
              }
            ),
            /* @__PURE__ */ a(
              ve,
              {
                name: "value",
                label: r("value"),
                rules: {
                  required: r("required")
                }
              }
            )
          ] })
        }
      )
    }
  );
}, mZ = ({
  internationalizationEnabled: e,
  watchSupportedLocales: t,
  realm: n,
  tableData: r
}) => {
  const { adminClient: i } = de(), { t: s } = H(), [o, l] = D(!1), [c, d] = D(!1), [u, p] = D([]), [m, f] = D(Ma), [g, b] = D(!1), { getValues: v, handleSubmit: y } = Ke(), [C, S] = D(!1), [P, w] = D([]), [A, k] = D(0), [T, O] = D(10), [I, _] = D(0), [E, L] = D(""), F = Ke({ mode: "onChange" }), { addAlert: R, addError: M } = we(), { realm: U } = ye(), { whoAmI: K } = ga(), [G, N] = D([]), [$, q] = D(!1), [V, B] = D({}), [Z, X] = D(""), Q = () => {
    k(A + 1);
  };
  ze(() => {
    (async () => {
      try {
        let J = await i.realms.getRealmLocalizationTexts({
          first: I,
          max: T,
          realm: n.realm,
          selectedLocale: m || v("defaultLocale") || K.getLocale()
        });
        if (p(Object.entries(J)), E) {
          const W = (oe) => Object.entries(J).filter(
            (he) => he[oe].includes(E)
          ), Y = fF(
            W(0).concat(W(1)),
            yi
          );
          J = Object.fromEntries(Y);
        }
        return Object.entries(J).slice(I, I + T);
      } catch {
        return [];
      }
    })().then((J) => {
      const W = J.map(
        (Y) => ({
          rowEditBtnAriaLabel: () => s("rowEditBtnAriaLabel", {
            translation: Y[1]
          }),
          rowSaveBtnAriaLabel: () => s("rowSaveBtnAriaLabel", {
            translation: Y[1]
          }),
          rowCancelBtnAriaLabel: () => s("rowCancelBtnAriaLabel", {
            translation: Y[1]
          }),
          cells: [
            {
              title: Y[0],
              props: {
                value: Y[0]
              }
            },
            {
              title: Y[1],
              props: {
                value: Y[1]
              }
            }
          ]
        })
      );
      w(W);
    });
  }, [A, r, I, T, E]);
  const ie = () => {
    l(!o);
  }, me = [
    /* @__PURE__ */ a(sf, { label: s("defaultLocale"), children: /* @__PURE__ */ a(Re, { value: Ma, children: xr(Ma, K.getDisplayName()) }, Ma) }, "group1"),
    /* @__PURE__ */ a(Pt, {}, "divider"),
    /* @__PURE__ */ a(sf, { label: s("supportedLocales"), children: t.map((Se) => /* @__PURE__ */ a(Re, { value: Se, children: xr(Se, K.getLocale()) }, Se)) }, "group2")
  ], ee = async (Se) => {
    try {
      await i.realms.addLocalization(
        {
          realm: U,
          selectedLocale: m || v("defaultLocale") || Ma,
          key: Se.key
        },
        Se.value
      ), i.setConfig({
        realmName: U
      }), Q(), F.setValue("key", ""), F.setValue("value", ""), Wr.reloadResources(), R(s("addTranslationSuccess"), pe.success);
    } catch (J) {
      M("addTranslationError", J);
    }
  }, [ce, ae] = Ve({
    titleKey: "deleteConfirmTranslationTitle",
    messageKey: s("translationDeleteConfirmDialog", {
      count: G.length
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onCancel: () => {
      N([]), q(!1);
    },
    onConfirm: async () => {
      try {
        for (const Se of G)
          delete Wr.store.data[K.getLocale()][U][Se], await i.realms.deleteRealmLocalizationTexts({
            realm: U,
            selectedLocale: m,
            key: Se
          });
        q(!1), N([]), Q(), R(s("deleteAllTranslationsSuccess"), pe.success);
      } catch (Se) {
        M("deleteAllTranslationsError", Se);
      }
    }
  }), Oe = (Se, J) => {
    const W = (P[J].cells?.[0]).props.value;
    Se.target.checked ? N((Y) => [...Y, W]) : N(
      (Y) => Y.filter((oe) => oe !== W)
    ), q(
      P.length === G.length + (Se.target.checked ? 1 : -1)
    );
  }, Ie = () => {
    N($ ? [] : P.map((Se) => (Se.cells?.[0]).props.value)), q(!$);
  }, Me = (Se) => G.includes(Se), ge = async (Se, J) => {
    const W = wc(P), Y = wc(W[J]);
    (Y.cells?.[1]).props.value = Se, W[J] = Y;
    try {
      const oe = (Y.cells?.[0]).props.value, he = (Y.cells?.[1]).props.value;
      await i.realms.addLocalization(
        {
          realm: n.realm,
          selectedLocale: m || v("defaultLocale") || Ma,
          key: oe
        },
        he
      ), Wr.reloadResources(), R(s("updateTranslationSuccess"), pe.success), w(W);
    } catch (oe) {
      M("updateTranslationError", oe);
    }
    B((oe) => ({
      ...oe,
      [J]: !1
    }));
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(ae, {}),
    o && /* @__PURE__ */ a(
      pZ,
      {
        handleModalToggle: ie,
        save: (Se) => {
          ee(Se), ie();
        },
        form: F
      }
    ),
    /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ a(
      tt,
      {
        className: "pf-v5-u-mt-lg pf-v5-u-ml-md",
        component: Qt.p,
        children: s("realmOverridesDescription")
      }
    ) }),
    /* @__PURE__ */ x(
      Ui,
      {
        count: u.length,
        first: I,
        max: T,
        onNextClick: _,
        onPreviousClick: _,
        onPerPageSelect: (Se, J) => {
          _(Se), O(J);
        },
        inputGroupName: "search",
        inputGroupOnEnter: (Se) => {
          L(Se), _(0), O(10);
        },
        inputGroupPlaceholder: s("searchForTranslation"),
        toolbarItem: /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "add-translationBtn",
              onClick: () => {
                l(!0), q(!1), N([]);
              },
              children: s("addTranslation")
            }
          ),
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            Kt,
            {
              onOpenChange: (Se) => b(Se),
              toggle: (Se) => /* @__PURE__ */ a(
                ut,
                {
                  ref: Se,
                  onClick: () => b(!g),
                  variant: "plain",
                  isExpanded: g,
                  "data-testid": "toolbar-deleteBtn",
                  "aria-label": "kebab",
                  children: /* @__PURE__ */ a(hr, {})
                }
              ),
              isOpen: g,
              isPlain: !0,
              children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
                Ue,
                {
                  component: "button",
                  "data-testid": "delete-selected-TranslationBtn",
                  isDisabled: u.length === 0 || G.length === 0,
                  onClick: () => {
                    ce(), b(!1);
                  },
                  children: s("delete")
                },
                "action"
              ) })
            }
          ) })
        ] }),
        searchTypeComponent: /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
          ht,
          {
            width: 180,
            isOpen: c,
            className: "kc-filter-by-locale-select",
            variant: mt.single,
            isDisabled: !e,
            onToggle: (Se) => d(Se),
            onSelect: (Se) => {
              f(Se.toString()), S(!0), Q(), d(!1);
            },
            selections: C ? xr(m, K.getLocale()) : n.defaultLocale !== "" ? xr(Ma, K.getLocale()) : s("placeholderText"),
            children: me
          }
        ) }),
        children: [
          u.length === 0 && !E && /* @__PURE__ */ a(
            ct,
            {
              hasIcon: !0,
              message: s("noTranslations"),
              instructions: s("noTranslationsInstructions"),
              onPrimaryAction: ie
            }
          ),
          u.length === 0 && E && /* @__PURE__ */ a(
            ct,
            {
              hasIcon: !0,
              icon: is,
              isSearchVariant: !0,
              message: s("noSearchResults"),
              instructions: s("noRealmOverridesSearchResultsInstructions")
            }
          ),
          u.length !== 0 && /* @__PURE__ */ x(
            Cn,
            {
              "aria-label": s("editableRowsTable"),
              "data-testid": "editable-rows-table",
              children: [
                /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
                  /* @__PURE__ */ a(Ne, { className: "pf-v5-u-px-lg", children: /* @__PURE__ */ a(
                    "input",
                    {
                      type: "checkbox",
                      "aria-label": s("selectAll"),
                      checked: $,
                      onChange: Ie,
                      "data-testid": "selectAll"
                    }
                  ) }),
                  /* @__PURE__ */ a(Ne, { className: "pf-v5-u-py-lg", children: s("key") }),
                  /* @__PURE__ */ a(Ne, { className: "pf-v5-u-py-lg", children: s("value") }),
                  /* @__PURE__ */ a(Ne, { "aria-hidden": "true" })
                ] }) }),
                /* @__PURE__ */ a(yn, { children: P.map((Se, J) => /* @__PURE__ */ x(it, { children: [
                  /* @__PURE__ */ a(
                    ke,
                    {
                      className: "pf-v5-u-px-lg",
                      select: {
                        rowIndex: J,
                        onSelect: (W) => Oe(
                          W,
                          J
                        ),
                        isSelected: Me(
                          (Se.cells?.[0]).props.value
                        )
                      }
                    }
                  ),
                  /* @__PURE__ */ a(ke, { className: "pf-m-sm pf-v5-u-px-sm", dataLabel: s("key"), children: (Se.cells?.[0]).props.value }),
                  /* @__PURE__ */ a(
                    ke,
                    {
                      className: "pf-m-sm pf-v5-u-px-sm",
                      dataLabel: s("value"),
                      children: /* @__PURE__ */ a(
                        St,
                        {
                          isHorizontal: !0,
                          className: "kc-form-translationValue",
                          onSubmit: y(() => {
                            ge(Z, J);
                          }),
                          children: /* @__PURE__ */ a(
                            re,
                            {
                              fieldId: "kc-translationValue",
                              className: "pf-v5-u-display-inline-block",
                              children: V[J] ? /* @__PURE__ */ x(te, { children: [
                                /* @__PURE__ */ a(
                                  gt,
                                  {
                                    "aria-label": s("editTranslationValue"),
                                    type: "text",
                                    className: "pf-v5-u-w-initial",
                                    "data-testid": `editTranslationValueInput-${J}`,
                                    value: Z,
                                    onChange: (W, Y) => {
                                      X(Y);
                                    }
                                  },
                                  `edit-input-${J}`
                                ),
                                /* @__PURE__ */ a(
                                  z,
                                  {
                                    variant: "link",
                                    className: "pf-m-plain",
                                    "data-testid": `editTranslationAcceptBtn-${J}`,
                                    type: "submit",
                                    "aria-label": s("acceptBtn"),
                                    icon: /* @__PURE__ */ a(Rs, {})
                                  }
                                ),
                                /* @__PURE__ */ a(
                                  z,
                                  {
                                    variant: "link",
                                    className: "pf-m-plain",
                                    "data-testid": `editTranslationCancelBtn-${J}`,
                                    icon: /* @__PURE__ */ a(fa, {}),
                                    "aria-label": s("cancelBtn"),
                                    onClick: () => {
                                      B((W) => ({
                                        ...W,
                                        [J]: !1
                                      }));
                                    }
                                  }
                                )
                              ] }) : /* @__PURE__ */ x(te, { children: [
                                /* @__PURE__ */ a("span", { children: (Se.cells?.[1]).props.value }),
                                /* @__PURE__ */ a(
                                  z,
                                  {
                                    onClick: () => {
                                      const W = (P[J].cells?.[1]).props.value;
                                      X(W), B((Y) => ({
                                        ...Y,
                                        [J]: !0
                                      }));
                                    },
                                    "aria-label": s("editBtn"),
                                    variant: "link",
                                    className: "pf-m-plain",
                                    "data-testid": `editTranslationBtn-${J}`,
                                    children: /* @__PURE__ */ a(mw, {})
                                  },
                                  `edit-button-${J}`
                                )
                              ] })
                            }
                          )
                        }
                      )
                    },
                    J
                  ),
                  /* @__PURE__ */ a(ke, { isActionCell: !0, children: /* @__PURE__ */ a(
                    dl,
                    {
                      items: [
                        {
                          title: s("delete"),
                          onClick: () => {
                            N([
                              (Se.cells?.[0]).props.value
                            ]), u.length === 1 && q(!0), ce(), b(!1);
                          }
                        }
                      ]
                    }
                  ) })
                ] }, (Se.cells?.[0]).props.value)) })
              ]
            }
          )
        ]
      }
    )
  ] });
}, fZ = ({
  save: e,
  realm: t,
  tableData: n
}) => {
  const { t: r } = H(), { whoAmI: i } = ga(), [s, o] = D(0), l = Ke(), { setValue: c, control: d, handleSubmit: u, formState: p } = l, m = t.supportedLocales?.length ? t.supportedLocales : [Ma], f = Tt().themes, g = nt(() => {
    const S = Object.values(f).flatMap(
      (P) => P.flatMap(({ locales: w }) => w || [])
    );
    return Array.from(new Set(S));
  }, [f]), b = () => {
    Pn(t, c), c("supportedLocales", m);
  };
  ze(b, []);
  const v = rt({
    control: d,
    name: "supportedLocales",
    defaultValue: m
  }), y = rt({
    control: d,
    name: "internationalizationEnabled",
    defaultValue: t.internationalizationEnabled
  }), C = rt({
    name: "defaultLocale",
    control: d,
    defaultValue: t.defaultLocale ? [t.defaultLocale] : []
  });
  return /* @__PURE__ */ x(
    Ka,
    {
      activeKey: s,
      onSelect: (S, P) => o(P),
      children: [
        /* @__PURE__ */ a(
          Ee,
          {
            id: "locales",
            eventKey: 0,
            title: /* @__PURE__ */ a(Pe, { children: r("locales") }),
            "data-testid": "rs-localization-locales-tab",
            children: /* @__PURE__ */ x(
              je,
              {
                isHorizontal: !0,
                role: "manage-realm",
                className: "pf-v5-u-mt-lg pf-v5-u-ml-md",
                onSubmit: u(e),
                children: [
                  /* @__PURE__ */ x(He, { ...l, children: [
                    /* @__PURE__ */ a(
                      ro,
                      {
                        name: "internationalizationEnabled",
                        label: r("internationalization"),
                        labelIcon: r("internationalizationHelp"),
                        labelOn: r("enabled"),
                        labelOff: r("disabled"),
                        "aria-label": r("internationalization")
                      }
                    ),
                    y && /* @__PURE__ */ x(te, { children: [
                      /* @__PURE__ */ a(
                        at,
                        {
                          name: "supportedLocales",
                          isScrollable: !0,
                          label: r("supportedLocales"),
                          controller: {
                            defaultValue: m
                          },
                          variant: "typeaheadMulti",
                          placeholderText: r("selectLocales"),
                          options: g.map((S) => ({
                            key: S,
                            value: xr(S, i.getLocale()) || S
                          }))
                        }
                      ),
                      /* @__PURE__ */ a(
                        at,
                        {
                          name: "defaultLocale",
                          label: r("defaultLocale"),
                          controller: {
                            defaultValue: Ma
                          },
                          "data-testid": "select-default-locale",
                          options: v.map((S) => ({
                            key: S,
                            value: xr(S, i.getLocale()) || S
                          }))
                        }
                      )
                    ] })
                  ] }),
                  /* @__PURE__ */ x(ot, { children: [
                    /* @__PURE__ */ a(
                      z,
                      {
                        variant: "primary",
                        isDisabled: !p.isDirty,
                        type: "submit",
                        "data-testid": "localization-tab-save",
                        children: r("save")
                      }
                    ),
                    /* @__PURE__ */ a(z, { variant: "link", onClick: b, children: r("revert") })
                  ] })
                ]
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            id: "realm-overrides",
            eventKey: 1,
            title: /* @__PURE__ */ x(Pe, { children: [
              r("realmOverrides"),
              " "
            ] }),
            "data-testid": "rs-localization-realm-overrides-tab",
            children: /* @__PURE__ */ a(
              mZ,
              {
                internationalizationEnabled: y,
                watchSupportedLocales: v,
                realm: t,
                tableData: n
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            id: "effective-message-bundles",
            eventKey: 2,
            title: /* @__PURE__ */ a(Pe, { children: r("effectiveMessageBundles") }),
            "data-testid": "rs-localization-effective-message-bundles-tab",
            children: /* @__PURE__ */ a(
              uZ,
              {
                defaultSupportedLocales: m,
                defaultLocales: C
              }
            )
          }
        )
      ]
    }
  );
}, Rd = ({
  name: e,
  style: t
}) => {
  const { t: n } = H();
  return /* @__PURE__ */ a(
    vl,
    {
      name: e,
      style: t,
      label: n(e),
      labelIcon: n(`${e}Help`),
      controller: {
        defaultValue: "",
        rules: { required: n("required") }
      }
    }
  );
}, hZ = ({
  realm: e,
  save: t
}) => {
  const { t: n } = H(), r = Ke(), {
    setValue: i,
    handleSubmit: s,
    formState: { isDirty: o }
  } = r, [l, c] = D(!1), [d, u] = D(!1);
  let p;
  ((v) => {
    v.Disabled = "Disabled", v.PermanentLockout = "PermanentLockout", v.TemporaryLockout = "TemporaryLockout", v.PermanentAfterTemporaryLockout = "PermanentAfterTemporaryLockout";
  })(p || (p = {}));
  const m = [
    "Disabled",
    "PermanentLockout",
    "TemporaryLockout",
    "PermanentAfterTemporaryLockout"
    /* PermanentAfterTemporaryLockout */
  ], f = ["MULTIPLE", "LINEAR"], g = () => {
    Pn(e, i), u(!1);
  };
  ze(g, []);
  const b = r.getValues("bruteForceProtected") ? r.getValues("permanentLockout") ? r.getValues("maxTemporaryLockouts") == 0 ? "PermanentLockout" : "PermanentAfterTemporaryLockout" : "TemporaryLockout" : "Disabled";
  return /* @__PURE__ */ a(He, { ...r, children: /* @__PURE__ */ x(
    je,
    {
      role: "manage-realm",
      isHorizontal: !0,
      onSubmit: s(t),
      children: [
        /* @__PURE__ */ a(
          re,
          {
            label: n("bruteForceMode"),
            fieldId: "kc-brute-force-mode",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: n("bruteForceModeHelpText"),
                fieldLabelId: "bruteForceMode"
              }
            ),
            children: /* @__PURE__ */ a(
              ht,
              {
                toggleId: "kc-brute-force-mode",
                onToggle: () => c(!l),
                onSelect: (v) => {
                  switch (v) {
                    case "Disabled":
                      r.setValue("bruteForceProtected", !1), r.setValue("permanentLockout", !1), r.setValue("maxTemporaryLockouts", 0);
                      break;
                    case "TemporaryLockout":
                      r.setValue("bruteForceProtected", !0), r.setValue("permanentLockout", !1), r.setValue("maxTemporaryLockouts", 0);
                      break;
                    case "PermanentLockout":
                      r.setValue("bruteForceProtected", !0), r.setValue("permanentLockout", !0), r.setValue("maxTemporaryLockouts", 0);
                      break;
                    case "PermanentAfterTemporaryLockout":
                      r.setValue("bruteForceProtected", !0), r.setValue("permanentLockout", !0), r.setValue("maxTemporaryLockouts", 1);
                      break;
                  }
                  u(!0), c(!1);
                },
                selections: b,
                variant: mt.single,
                isOpen: l,
                "data-testid": "select-brute-force-mode",
                "aria-label": n("selectUnmanagedAttributePolicy"),
                children: m.map((v) => /* @__PURE__ */ a(Re, { value: v, children: n(`bruteForceMode.${v}`) }, v))
              }
            )
          }
        ),
        b !== "Disabled" && /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(
            ts,
            {
              name: "failureFactor",
              label: n("failureFactor"),
              labelIcon: n("failureFactorHelp"),
              controller: {
                defaultValue: 0,
                rules: { required: n("required") }
              }
            }
          ),
          b === "PermanentAfterTemporaryLockout" && /* @__PURE__ */ a(
            ts,
            {
              name: "maxTemporaryLockouts",
              label: n("maxTemporaryLockouts"),
              labelIcon: n("maxTemporaryLockoutsHelp"),
              controller: {
                defaultValue: 0
              }
            }
          ),
          (b === "TemporaryLockout" || b === "PermanentAfterTemporaryLockout") && /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(
              at,
              {
                name: "bruteForceStrategy",
                label: n("bruteForceStrategy"),
                labelIcon: n("bruteForceStrategyHelp"),
                controller: { defaultValue: "" },
                options: f.map((v) => ({
                  key: v,
                  value: n(`bruteForceStrategy.${v}`)
                }))
              }
            ),
            /* @__PURE__ */ a(Rd, { name: "waitIncrementSeconds" }),
            /* @__PURE__ */ a(Rd, { name: "maxFailureWaitSeconds" }),
            /* @__PURE__ */ a(Rd, { name: "maxDeltaTimeSeconds" })
          ] }),
          /* @__PURE__ */ a(
            ts,
            {
              name: "quickLoginCheckMilliSeconds",
              label: n("quickLoginCheckMilliSeconds"),
              labelIcon: n("quickLoginCheckMilliSecondsHelp"),
              controller: {
                defaultValue: 0
              }
            }
          ),
          /* @__PURE__ */ a(Rd, { name: "minimumQuickLoginWaitSeconds" })
        ] }),
        /* @__PURE__ */ x(ot, { children: [
          /* @__PURE__ */ a(
            z,
            {
              variant: "primary",
              type: "submit",
              "data-testid": "brute-force-tab-save",
              isDisabled: !o && !d,
              children: n("save")
            }
          ),
          /* @__PURE__ */ a(z, { variant: "link", onClick: g, children: n("revert") })
        ] })
      ]
    }
  ) });
}, qi = ({
  fieldName: e,
  url: t
}) => {
  const { t: n } = H(), r = e.substring(e.indexOf(".") + 1);
  return /* @__PURE__ */ a(
    ve,
    {
      name: e,
      label: n(r),
      labelIcon: /* @__PURE__ */ x(as, { i18nKey: `${r}Help`, children: [
        "Default value prevents pages from being included",
        /* @__PURE__ */ a(ki, { href: t, title: n("learnMore") })
      ] })
    }
  );
}, gZ = ({ realm: e, save: t }) => {
  const { t: n } = H(), r = Ke(), {
    setValue: i,
    formState: { isDirty: s },
    handleSubmit: o
  } = r, l = () => Pn(e, i);
  return ze(l, []), /* @__PURE__ */ a(He, { ...r, children: /* @__PURE__ */ x(
    je,
    {
      isHorizontal: !0,
      role: "manage-realm",
      className: "keycloak__security-defences__form",
      onSubmit: o(t),
      children: [
        /* @__PURE__ */ a(
          qi,
          {
            fieldName: "browserSecurityHeaders.xFrameOptions",
            url: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options"
          }
        ),
        /* @__PURE__ */ a(
          qi,
          {
            fieldName: "browserSecurityHeaders.contentSecurityPolicy",
            url: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy"
          }
        ),
        /* @__PURE__ */ a(
          qi,
          {
            fieldName: "browserSecurityHeaders.contentSecurityPolicyReportOnly",
            url: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy-Report-Only"
          }
        ),
        /* @__PURE__ */ a(
          qi,
          {
            fieldName: "browserSecurityHeaders.xContentTypeOptions",
            url: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options"
          }
        ),
        /* @__PURE__ */ a(
          qi,
          {
            fieldName: "browserSecurityHeaders.xRobotsTag",
            url: "https://developers.google.com/search/docs/advanced/robots/robots_meta_tag"
          }
        ),
        /* @__PURE__ */ a(
          qi,
          {
            fieldName: "browserSecurityHeaders.xXSSProtection",
            url: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection"
          }
        ),
        /* @__PURE__ */ a(
          qi,
          {
            fieldName: "browserSecurityHeaders.strictTransportSecurity",
            url: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security"
          }
        ),
        /* @__PURE__ */ a(
          qi,
          {
            fieldName: "browserSecurityHeaders.referrerPolicy",
            url: "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy"
          }
        ),
        /* @__PURE__ */ x(ot, { children: [
          /* @__PURE__ */ a(
            z,
            {
              variant: "primary",
              type: "submit",
              "data-testid": "headers-form-tab-save",
              isDisabled: !s,
              children: n("save")
            }
          ),
          /* @__PURE__ */ a(z, { variant: "link", onClick: l, children: n("revert") })
        ] })
      ]
    }
  ) });
}, bZ = ({ realm: e, save: t }) => {
  const { t: n } = H(), [r, i] = D(10);
  return /* @__PURE__ */ x(
    Ka,
    {
      activeKey: r,
      onSelect: (s, o) => i(o),
      children: [
        /* @__PURE__ */ a(
          Ee,
          {
            id: "headers",
            eventKey: 10,
            "data-testid": "security-defenses-headers-tab",
            title: /* @__PURE__ */ a(Pe, { children: n("headers") }),
            children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(gZ, { realm: e, save: t }) })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            id: "bruteForce",
            eventKey: 20,
            "data-testid": "security-defenses-brute-force-tab",
            title: /* @__PURE__ */ a(Pe, { children: n("bruteForceDetection") }),
            children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(hZ, { realm: e, save: t }) })
          }
        )
      ]
    }
  );
};
function xl() {
  const { realmRepresentation: e } = ye(), t = nt(() => e?.supportedLocales?.length ? e.supportedLocales : [Ma], [e]), n = nt(() => e?.defaultLocale?.length ? [e.defaultLocale] : [], [e]);
  return nt(() => Array.from(/* @__PURE__ */ new Set([...n, ...t])), [n, t]);
}
const fI = ({
  translationKey: e,
  translations: t,
  type: n,
  onCancel: r,
  toggleDialog: i,
  onTranslationsAdded: s
}) => {
  const { adminClient: o } = de(), { t: l } = H(), { realm: c, realmRepresentation: d } = ye(), u = xl(), { whoAmI: p } = ga(), [m, f] = D(10), [g, b] = D(0), [v, y] = D(""), [C, S] = D({}), P = Ke({
    mode: "onChange"
  }), {
    getValues: w,
    handleSubmit: A,
    setValue: k,
    formState: { isValid: T }
  } = P, O = nt(() => d?.defaultLocale.length ? [d.defaultLocale] : [], [d]), I = nt(() => u.filter(
    (L) => xr(L, p.getLocale()).toLowerCase().includes(v.toLowerCase())
  ), [u, v, p]);
  _e(
    async () => {
      const L = u.map((U) => U);
      return (await Promise.all(
        L.map(
          (U) => o.realms.getRealmLocalizationTexts({
            realm: c,
            selectedLocale: U
          })
        )
      )).map((U, K) => {
        const G = L[K], N = U[e];
        return {
          key: e,
          translations: [{ locale: G, value: N }]
        };
      }).reduce((U, K) => {
        const G = K.translations[0].locale, N = K.translations[0].value;
        return { ...U, [G]: N };
      }, {});
    },
    (L) => {
      S((F) => F !== L ? L : F);
    },
    [u, e, c]
  ), ze(() => {
    u.forEach((L, F) => {
      k(`translations.${F}.locale`, L);
      const R = t.translations[F] !== void 0;
      k(
        `translations.${F}.value`,
        R ? t.translations[F]?.value : C[L] || ""
      );
    }), k("key", e);
  }, [
    u,
    C,
    e,
    k,
    t
  ]);
  const _ = () => {
    const L = w(), F = L.translations.map((R) => R.locale === v ? {
      ...R,
      value: L.translations.find((M) => M.locale === v)?.value ?? ""
    } : R);
    s({
      key: L.key,
      translations: F
    }), i();
  }, E = rt({
    control: P.control,
    name: "translations.0.value"
  });
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.medium,
      title: l("addTranslationsModalTitle"),
      isOpen: !0,
      onClose: i,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "okTranslationBtn",
            variant: "primary",
            type: "submit",
            form: "add-translation",
            isDisabled: !T || !E,
            children: l("addTranslationDialogOkBtn")
          },
          "ok"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancelTranslationBtn",
            variant: "link",
            onClick: r,
            children: l("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ x(
        Qn,
        {
          direction: { default: "column" },
          spaceItems: { default: "spaceItemsNone" },
          children: [
            /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ x(tt, { component: Qt.p, children: [
              l(n !== "displayHeader" ? "addTranslationsModalSubTitleDescription" : "addTranslationsModalSubTitle"),
              " ",
              /* @__PURE__ */ a("strong", { children: l("addTranslationsModalSubTitleBolded") })
            ] }) }) }),
            /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(He, { ...P, children: /* @__PURE__ */ x(
              St,
              {
                id: "add-translation",
                "data-testid": "addTranslationForm",
                onSubmit: A(_),
                children: [
                  /* @__PURE__ */ a(
                    ve,
                    {
                      name: "key",
                      label: l("translationKey"),
                      className: "pf-v5-u-mt-md",
                      "data-testid": "translation-key",
                      isDisabled: !0
                    }
                  ),
                  /* @__PURE__ */ x(Dt, { children: [
                    /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ a(
                      tt,
                      {
                        className: "pf-v5-u-font-size-sm pf-v5-u-font-weight-bold",
                        component: Qt.p,
                        children: l("translationsTableHeading")
                      }
                    ) }),
                    /* @__PURE__ */ x(
                      Ui,
                      {
                        count: u.length,
                        first: g,
                        max: m,
                        onNextClick: b,
                        onPreviousClick: b,
                        onPerPageSelect: (L, F) => {
                          b(L), f(F);
                        },
                        inputGroupName: "search",
                        inputGroupOnEnter: (L) => {
                          y(L), b(0), f(10);
                        },
                        inputGroupPlaceholder: l("searchForLanguage"),
                        children: [
                          I.length === 0 && !v && /* @__PURE__ */ a(
                            ct,
                            {
                              hasIcon: !0,
                              message: l("noLanguages"),
                              instructions: l("noLanguagesInstructions")
                            }
                          ),
                          I.length === 0 && v && /* @__PURE__ */ a(
                            ct,
                            {
                              hasIcon: !0,
                              icon: is,
                              isSearchVariant: !0,
                              message: l("noSearchResults"),
                              instructions: l("noLanguagesSearchResultsInstructions")
                            }
                          ),
                          I.length !== 0 && /* @__PURE__ */ x(
                            Cn,
                            {
                              "aria-label": l("addTranslationsDialogRowsTable"),
                              "data-testid": "add-translations-dialog-rows-table",
                              children: [
                                /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
                                  /* @__PURE__ */ a(Ne, { className: "pf-v5-u-py-lg", children: l("supportedLanguagesTableColumnName") }),
                                  /* @__PURE__ */ a(Ne, { className: "pf-v5-u-py-lg", children: l("translationTableColumnName") }),
                                  /* @__PURE__ */ a(Ne, { "aria-hidden": "true" })
                                ] }) }),
                                /* @__PURE__ */ a(yn, { children: I.map((L, F) => {
                                  const R = u.findIndex(
                                    (M) => M === L
                                  );
                                  return /* @__PURE__ */ x(it, { children: [
                                    /* @__PURE__ */ a(
                                      ke,
                                      {
                                        className: "pf-m-sm pf-v5-u-px-sm",
                                        dataLabel: l("supportedLanguage"),
                                        children: /* @__PURE__ */ x(re, { fieldId: "kc-supportedLanguage", children: [
                                          xr(
                                            L,
                                            p.getLocale()
                                          ),
                                          L === O.toString() && /* @__PURE__ */ a(
                                            pn,
                                            {
                                              className: "pf-v5-u-ml-xs",
                                              color: "blue",
                                              children: l("defaultLanguage")
                                            }
                                          )
                                        ] })
                                      }
                                    ),
                                    /* @__PURE__ */ x(ke, { children: [
                                      L === O.toString() && /* @__PURE__ */ a(
                                        ve,
                                        {
                                          name: `translations.${R}.value`,
                                          label: l("translationValue"),
                                          "data-testid": `translation-value-${R}`,
                                          rules: {
                                            required: l("required")
                                          }
                                        }
                                      ),
                                      L !== O.toString() && /* @__PURE__ */ a(
                                        ve,
                                        {
                                          name: `translations.${R}.value`,
                                          label: l("translationValue"),
                                          "data-testid": `translation-value-${R}`
                                        }
                                      )
                                    ] })
                                  ] }, F);
                                }) })
                              ]
                            }
                          )
                        ]
                      }
                    )
                  ] })
                ]
              }
            ) }) })
          ]
        }
      )
    }
  );
}, vZ = ({
  selectedValidators: e,
  onChange: t
}) => {
  const { t: n } = H(), r = Tt().componentTypes?.["org.keycloak.validate.Validator"] || [], i = nt(
    () => r.filter(({ id: d }) => !e.includes(d)),
    [e]
  ), [s, o] = st(), [l, c] = D();
  return /* @__PURE__ */ a(re, { label: n("validatorType"), fieldId: "validator", children: /* @__PURE__ */ a(
    ht,
    {
      toggleId: "validator",
      onToggle: o,
      onSelect: (d) => {
        const u = d;
        t(u), c(u), o();
      },
      selections: l?.id,
      variant: "single",
      "aria-label": n("selectOne"),
      isOpen: s,
      placeholderText: n("choose"),
      menuAppendTo: "parent",
      maxHeight: 300,
      children: i.map((d) => /* @__PURE__ */ a(
        Re,
        {
          selected: l?.id === d.id,
          value: d,
          description: d.helpText,
          children: d.id
        },
        d.id
      ))
    }
  ) });
}, yZ = ({
  selectedValidators: e,
  toggleDialog: t,
  onConfirm: n
}) => {
  const { t: r } = H(), [i, s] = D(), o = Tt().componentTypes?.["org.keycloak.validate.Validator"].length === e.length, l = Ke(), { handleSubmit: c } = l, d = (u) => {
    n({ ...u, id: i?.id }), t();
  };
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.small,
      title: r("addValidator"),
      isOpen: !0,
      onClose: t,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "save-validator-role-button",
            variant: "primary",
            type: "submit",
            form: "add-validator",
            children: r("save")
          },
          "save"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel-validator-role-button",
            variant: "link",
            onClick: t,
            children: r("cancel")
          },
          "cancel"
        )
      ],
      children: o ? r("emptyValidators") : /* @__PURE__ */ x(St, { id: "add-validator", onSubmit: c(d), children: [
        /* @__PURE__ */ a(
          vZ,
          {
            selectedValidators: e.map(
              (u) => u.key
            ),
            onChange: s
          }
        ),
        i && /* @__PURE__ */ a(He, { ...l, children: /* @__PURE__ */ a(gr, { properties: i.properties }) })
      ] })
    }
  );
}, CZ = () => {
  const { t: e } = H();
  return /* @__PURE__ */ a(je, { role: "manage-realm", isHorizontal: !0, children: /* @__PURE__ */ a(
    re,
    {
      hasNoPaddingTop: !0,
      label: e("annotations"),
      fieldId: "kc-annotations",
      className: "kc-annotations-label",
      children: /* @__PURE__ */ a(Ha, { className: "kc-annotations", children: /* @__PURE__ */ a(Wt, { children: /* @__PURE__ */ a(
        ad,
        {
          name: "annotations",
          label: e("annotations"),
          defaultKeyValue: [
            {
              key: "inputType",
              label: e("inputType"),
              values: [
                "text",
                "textarea",
                "select",
                "select-radiobuttons",
                "multiselect",
                "multiselect-checkboxes",
                "html5-email",
                "html5-tel",
                "html5-url",
                "html5-number",
                "html5-range",
                "html5-datetime-local",
                "html5-date",
                "html5-month",
                "html5-week",
                "html5-time"
              ]
            },
            {
              key: "inputHelperTextBefore",
              label: e("inputHelperTextBefore")
            },
            {
              key: "inputHelperTextAfter",
              label: e("inputHelperTextAfter")
            },
            {
              key: "inputOptionLabelsI18nPrefix",
              label: e("inputOptionLabelsI18nPrefix")
            },
            {
              key: "inputTypePlaceholder",
              label: e("inputTypePlaceholder")
            },
            {
              key: "inputTypeSize",
              label: e("inputTypeSize")
            },
            {
              key: "inputTypeCols",
              label: e("inputTypeCols")
            },
            {
              key: "inputTypeRows",
              label: e("inputTypeRows")
            },
            {
              key: "inputTypeStep",
              label: e("inputTypeStep")
            },
            {
              key: "kcNumberFormat",
              label: e("kcNumberFormat")
            },
            {
              key: "kcNumberUnFormat",
              label: e("kcNumberUnFormat")
            }
          ]
        }
      ) }) })
    }
  ) });
}, hI = Lr("UserProfileContext", void 0), _p = ({ children: e }) => {
  const { adminClient: t } = de(), { realm: n } = ye(), { addAlert: r, addError: i } = we(), { t: s } = H(), [o, l] = D(null), [c, d] = D(0), [u, p] = D(!1);
  _e(
    () => t.users.getProfile({ realm: n }),
    (f) => l(f),
    [c]
  );
  const m = async (f, g) => {
    p(!0);
    try {
      return await t.users.updateProfile({
        ...f,
        realm: n
      }), p(!1), d(c + 1), r(
        s(g?.successMessageKey ?? "userProfileSuccess"),
        pe.success
      ), !0;
    } catch (b) {
      return p(!1), i(g?.errorMessageKey ?? "userProfileError", b), !1;
    }
  };
  return /* @__PURE__ */ a(hI.Provider, { value: { config: o, save: m, isSaving: u }, children: e });
}, Rp = () => Nr(hI), Vx = ({ name: e }) => {
  const { t } = H(), { control: n } = De();
  return /* @__PURE__ */ a(Ha, { children: /* @__PURE__ */ a(
    be,
    {
      name: `permissions.${e}`,
      control: n,
      defaultValue: [],
      render: ({ field: r }) => /* @__PURE__ */ x(te, { children: [
        /* @__PURE__ */ a(Wt, { lg: 4, sm: 6, children: /* @__PURE__ */ a(
          Zt,
          {
            id: `user-${e}`,
            label: t("user"),
            value: "user",
            "data-testid": `user-${e}`,
            isChecked: r.value.includes("user"),
            onChange: () => {
              const i = "user", s = r.value.includes(i) ? r.value.filter((o) => o !== i) : [...r.value, i];
              r.onChange(s);
            }
          }
        ) }),
        /* @__PURE__ */ a(Wt, { lg: 8, sm: 6, children: /* @__PURE__ */ a(
          Zt,
          {
            id: `admin-${e}`,
            label: t("admin"),
            value: "admin",
            "data-testid": `admin-${e}`,
            isChecked: r.value.includes("admin"),
            onChange: () => {
              const i = "admin", s = r.value.includes(i) ? r.value.filter((o) => o !== i) : [...r.value, i];
              r.onChange(s);
            }
          }
        ) })
      ] })
    }
  ) });
}, xZ = () => {
  const { t: e } = H();
  return /* @__PURE__ */ x(je, { role: "manage-realm", isHorizontal: !0, children: [
    /* @__PURE__ */ a(
      re,
      {
        hasNoPaddingTop: !0,
        label: e("whoCanEdit"),
        labelIcon: /* @__PURE__ */ a(le, { helpText: e("whoCanEditHelp"), fieldLabelId: "whoCanEdit" }),
        fieldId: "kc-who-can-edit",
        children: /* @__PURE__ */ a(Vx, { name: "edit" })
      }
    ),
    /* @__PURE__ */ a(
      re,
      {
        hasNoPaddingTop: !0,
        label: e("whoCanView"),
        labelIcon: /* @__PURE__ */ a(le, { helpText: e("whoCanViewHelp"), fieldLabelId: "whoCanView" }),
        fieldId: "kc-who-can-view",
        children: /* @__PURE__ */ a(Vx, { name: "view" })
      }
    )
  ] });
}, SZ = () => {
  const { t: e } = H(), [t, n] = st(), [r, i] = D(), { setValue: s, control: o, register: l, getValues: c } = De(), d = rt({
    name: "validations",
    control: o,
    defaultValue: []
  });
  ze(() => {
    l("validations");
  }, [l]);
  const [u, p] = Ve({
    titleKey: e("deleteValidatorConfirmTitle"),
    messageKey: e("deleteValidatorConfirmMsg", {
      validatorName: r
    }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      const m = d.filter(
        (f) => f.key !== r
      );
      s("validations", [...m]);
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    t && /* @__PURE__ */ a(
      yZ,
      {
        selectedValidators: d,
        onConfirm: (m) => {
          const f = c("annotations");
          m.id === "options" && !f.find((g) => g.key === "inputType") && s("annotations", [
            ...f,
            { key: "inputType", value: "select" }
          ]), s("validations", [
            ...d,
            { key: m.id, value: m.config }
          ]);
        },
        toggleDialog: n
      }
    ),
    /* @__PURE__ */ a(p, {}),
    /* @__PURE__ */ x("div", { className: "kc-attributes-validations", children: [
      /* @__PURE__ */ a(
        z,
        {
          id: "addValidator",
          onClick: () => n(),
          variant: "link",
          "data-testid": "addValidator",
          className: "kc--attributes-validations--add-validation-button",
          icon: /* @__PURE__ */ a(_a, {}),
          children: e("addValidator")
        }
      ),
      /* @__PURE__ */ a(Pt, {}),
      d.length !== 0 ? /* @__PURE__ */ x(Cn, { children: [
        /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
          /* @__PURE__ */ a(Ne, { children: e("validatorColNames.colName") }),
          /* @__PURE__ */ a(Ne, { children: e("validatorColNames.colConfig") }),
          /* @__PURE__ */ a(Ne, { "aria-hidden": "true" })
        ] }) }),
        /* @__PURE__ */ a(yn, { children: d.map((m) => /* @__PURE__ */ x(it, { children: [
          /* @__PURE__ */ a(ke, { dataLabel: e("validatorColNames.colName"), children: m.key }),
          /* @__PURE__ */ a(ke, { dataLabel: e("validatorColNames.colConfig"), children: JSON.stringify(m.value) }),
          /* @__PURE__ */ a(ke, { className: "kc--attributes-validations--action-cell", children: /* @__PURE__ */ a(
            z,
            {
              variant: "link",
              "data-testid": "deleteValidator",
              onClick: () => {
                u(), i(m.key);
              },
              children: e("delete")
            },
            "validator"
          ) })
        ] }, m.key)) })
      ] }) : /* @__PURE__ */ a(tt, { className: "kc-emptyValidators", component: Qt.p, children: e("emptyValidators") })
    ] })
  ] });
}, gI = ["username", "email"], wZ = ({
  onHandlingTranslationsData: e,
  onHandlingGeneratedDisplayName: t,
  save: n
}) => {
  const { t: r } = H(), i = De(), { realm: s, attributeName: o } = zt(), l = !!o, c = (u) => {
    e(u);
  }, d = (u) => {
    t(u);
  };
  return /* @__PURE__ */ x(_p, { children: [
    /* @__PURE__ */ a(
      gl,
      {
        label: r("jumpToSection"),
        sections: [
          {
            title: r("generalSettings"),
            panel: /* @__PURE__ */ a(
              kZ,
              {
                onHandlingTranslationData: c,
                onHandlingGeneratedDisplayName: d
              }
            )
          },
          { title: r("permission"), panel: /* @__PURE__ */ a(xZ, {}) },
          { title: r("validations"), panel: /* @__PURE__ */ a(SZ, {}) },
          { title: r("annotations"), panel: /* @__PURE__ */ a(CZ, {}) }
        ]
      }
    ),
    /* @__PURE__ */ a(St, { onSubmit: i.handleSubmit(n), children: /* @__PURE__ */ x(Mr, { name: "attribute-settings", children: [
      /* @__PURE__ */ a(
        z,
        {
          variant: "primary",
          type: "submit",
          "data-testid": "attribute-create",
          children: r(l ? "save" : "create")
        }
      ),
      /* @__PURE__ */ a(
        Ae,
        {
          to: Yo({ realm: s, tab: "attributes" }),
          "data-testid": "attribute-cancel",
          className: "kc-attributeCancel",
          children: r("cancel")
        }
      )
    ] }) })
  ] });
};
function OZ() {
  const { adminClient: e } = de(), { realm: t, attributeName: n } = zt(), { realmRepresentation: r } = ye(), i = Ke(), { t: s } = H(), o = xl(), l = Xe(), { addAlert: c, addError: d } = we(), [u, p] = D(null), m = !!n, [f, g] = D({
    key: "",
    translations: []
  }), [b, v] = D("");
  _e(
    async () => {
      const S = [];
      return await Promise.all(
        o.map(async (P) => {
          try {
            const w = await e.realms.getRealmLocalizationTexts({
              realm: t,
              selectedLocale: P
            }), A = i.getValues(), k = A.displayName?.substring(
              2,
              A.displayName.length - 1
            ) || "", T = Object.entries(
              w
            ).filter(([O]) => O === k).map(([O, I]) => ({
              locale: P,
              value: I
            }));
            T.length > 0 && S.push({
              key: k,
              translations: T
            });
          } catch (w) {
            d("errorSavingTranslations", w);
          }
        })
      ), S;
    },
    (S) => {
      if (S && S.length > 0) {
        const P = S.flatMap(
          (w) => w.translations
        );
        g({
          key: S[0].key,
          translations: P
        }), i.setValue("translations", P);
      }
    },
    [o, t, i]
  ), _e(
    () => e.users.getProfile(),
    (S) => {
      p(S);
      const {
        annotations: P,
        validations: w,
        permissions: A,
        selector: k,
        required: T,
        multivalued: O,
        ...I
      } = S.attributes.find(
        (_) => _.name === n
      ) || { permissions: { edit: ["admin"] } };
      Pn(
        {
          ...I,
          hasSelector: typeof k < "u",
          hasRequiredScopes: typeof T?.scopes < "u"
        },
        i.setValue
      ), Object.entries(
        hO({ permissions: A, selector: k, required: T }, { safe: !0 })
      ).map(([_, E]) => i.setValue(_, E)), i.setValue(
        "annotations",
        Object.entries(P || {}).map(([_, E]) => ({
          key: _,
          value: E
        }))
      ), i.setValue(
        "validations",
        Object.entries(w || {}).map(([_, E]) => ({
          key: _,
          value: E
        }))
      ), i.setValue("isRequired", T !== void 0), i.setValue("multivalued", O === !0);
    },
    []
  );
  const y = async () => {
    try {
      const S = f.translations.filter((P) => P.value.trim() !== "").map(async (P) => {
        try {
          await e.realms.addLocalization(
            {
              realm: t,
              selectedLocale: P.locale,
              key: f.key
            },
            P.value
          );
        } catch (w) {
          d(s("errorSavingTranslations"), w);
        }
      });
      await Promise.all(S);
    } catch (S) {
      console.error(`Error saving translations: ${S}`);
    }
  }, C = async ({
    hasSelector: S,
    hasRequiredScopes: P,
    ...w
  }) => {
    S || delete w.selector, P || delete w.required?.scopes;
    const A = w.validations.reduce(
      (I, _) => (I[_.key] = _.value || {}, I),
      {}
    ), k = w.annotations.reduce(
      (I, _) => Object.assign(I, { [_.key]: _.value }),
      {}
    ), T = () => (u?.attributes || []).map((I) => I.name !== n ? I : (delete I.required, Object.assign(
      {
        ...I,
        name: n,
        displayName: w.displayName,
        selector: w.selector,
        permissions: w.permissions,
        multivalued: w.multivalued,
        annotations: k,
        validations: A
      },
      w.isRequired ? { required: w.required } : void 0,
      w.group ? { group: w.group } : { group: null }
    ))), O = () => (u?.attributes || []).concat([
      Object.assign(
        {
          name: w.name,
          displayName: w.displayName || b,
          required: w.isRequired ? w.required : void 0,
          selector: w.selector,
          permissions: w.permissions,
          multivalued: w.multivalued,
          annotations: k,
          validations: A
        },
        w.isRequired ? { required: w.required } : void 0,
        w.group ? { group: w.group } : void 0
      )
    ]);
    if (r?.internationalizationEnabled && !f.translations.some(
      (_) => _.value.trim() !== ""
    )) {
      d("createAttributeError", s("translationError"));
      return;
    }
    try {
      const I = m ? T() : O();
      await e.users.updateProfile({
        ...u,
        attributes: I,
        realm: t
      }), await y(), Wr.reloadResources(), l(Yo({ realm: t, tab: "attributes" })), c(s("createAttributeSuccess"), pe.success);
    } catch (I) {
      d("createAttributeError", I);
    }
  };
  return /* @__PURE__ */ x(He, { ...i, children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: m ? n : s("createAttribute"),
        subKey: m ? "" : s("createAttributeSubTitle")
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(
      wZ,
      {
        save: () => i.handleSubmit(C)(),
        onHandlingTranslationsData: g,
        onHandlingGeneratedDisplayName: v
      }
    ) })
  ] });
}
const bI = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  USERNAME_EMAIL: gI,
  default: OZ
}, Symbol.toStringTag, { value: "Module" })), Kx = [
  { label: "requiredForLabel.both", value: ["admin", "user"] },
  { label: "requiredForLabel.users", value: ["user"] },
  { label: "requiredForLabel.admins", value: ["admin"] }
], kZ = ({
  onHandlingTranslationData: e,
  onHandlingGeneratedDisplayName: t
}) => {
  const { adminClient: n } = de(), { t: r } = H(), { realmRepresentation: i } = ye(), s = De(), [o, l] = D(), [c, d] = D(), [u, p] = D(!1), [m, f] = D(!1), [g, b] = st(), { attributeName: v } = zt(), y = !!v, [C, S] = D(""), [P, w] = D(""), [A, k] = D(), [T, O] = D({
    key: "",
    translations: []
  }), I = /\$\{([^}]+)\}/, _ = (B, Z) => {
    S(Z);
    const X = Z !== "" && i?.internationalizationEnabled ? `\${profile.attributes.${Z}}` : "";
    w(X);
  }, E = rt({
    control: s.control,
    name: "hasSelector"
  }), L = rt({
    control: s.control,
    name: "hasRequiredScopes"
  }), F = rt({
    control: s.control,
    name: "isRequired",
    defaultValue: !1
  }), R = rt({
    control: s.control,
    name: "displayName"
  }), M = I.test(R);
  _e(() => n.clientScopes.find(), l, []), _e(() => n.users.getProfile(), d, []);
  const U = (B) => {
    e(B);
  }, K = (B) => {
    t(B);
  };
  if (ze(() => {
    U(T), K(P);
  }, [T, P]), !o)
    return /* @__PURE__ */ a(bt, {});
  function G(B) {
    s.setValue("hasSelector", B);
  }
  function N(B) {
    s.setValue("hasRequiredScopes", B);
  }
  const $ = (B) => {
    O(B);
  }, q = () => {
    b(), U(T), K(P);
  }, V = R?.substring(
    2,
    R.length - 1
  );
  return /* @__PURE__ */ x(te, { children: [
    g && /* @__PURE__ */ a(
      fI,
      {
        translationKey: y ? V : `profile.attributes.${C}`,
        translations: T,
        type: A ?? "displayName",
        onTranslationsAdded: $,
        toggleDialog: q,
        onCancel: () => {
          b();
        }
      }
    ),
    /* @__PURE__ */ a(je, { role: "manage-realm", isHorizontal: !0, children: /* @__PURE__ */ x(He, { ...s, children: [
      /* @__PURE__ */ x(
        re,
        {
          label: r("attributeName"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("upAttributeNameHelp"),
              fieldLabelId: "attributeName"
            }
          ),
          fieldId: "kc-attribute-name",
          isRequired: !0,
          children: [
            /* @__PURE__ */ a(
              gt,
              {
                isRequired: !0,
                id: "kc-attribute-name",
                defaultValue: "",
                "data-testid": "attribute-name",
                isDisabled: y,
                validated: s.formState.errors.name ? "error" : "default",
                ...s.register("name", { required: !0 }),
                onChange: _
              }
            ),
            s.formState.errors.name && /* @__PURE__ */ a(kn, { message: r("validateAttributeName") })
          ]
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: r("attributeDisplayName"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("attributeDisplayNameHelp"),
              fieldLabelId: "attributeDisplayName"
            }
          ),
          fieldId: "kc-attribute-display-name",
          children: /* @__PURE__ */ x(Ha, { hasGutter: !0, children: [
            /* @__PURE__ */ x(Wt, { span: i?.internationalizationEnabled ? 11 : 12, children: [
              /* @__PURE__ */ a(
                gt,
                {
                  id: "kc-attribute-display-name",
                  "data-testid": "attribute-display-name",
                  isDisabled: i?.internationalizationEnabled && C !== "" || y && M,
                  value: y ? R : i?.internationalizationEnabled ? P : void 0,
                  ...s.register("displayName")
                }
              ),
              P && /* @__PURE__ */ a(
                En,
                {
                  className: "pf-v5-u-mt-sm",
                  variant: "info",
                  isInline: !0,
                  isPlain: !0,
                  title: r("addAttributeTranslationInfo")
                }
              )
            ] }),
            i?.internationalizationEnabled && /* @__PURE__ */ a(Wt, { span: 1, children: /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                className: "pf-m-plain kc-attribute-display-name-iconBtn",
                "data-testid": "addAttributeTranslationBtn",
                "aria-label": r("addAttributeTranslationBtn"),
                isDisabled: !C && !y,
                onClick: () => {
                  k("displayName"), b();
                },
                icon: /* @__PURE__ */ a(kf, {})
              }
            ) })
          ] })
        }
      ),
      /* @__PURE__ */ a(
        vt,
        {
          name: "multivalued",
          label: r("multivalued"),
          labelIcon: r("multivaluedHelp")
        }
      ),
      /* @__PURE__ */ a(
        at,
        {
          name: "group",
          label: r("attributeGroup"),
          labelIcon: r("attributeGroupHelp"),
          controller: {
            defaultValue: ""
          },
          options: [
            { key: "", value: r("none") },
            ...c?.groups?.map((B) => ({
              key: B.name,
              value: B.name
            })) || []
          ]
        }
      ),
      !gI.includes(v) && /* @__PURE__ */ x(te, { children: [
        /* @__PURE__ */ a(Pt, {}),
        /* @__PURE__ */ x(
          re,
          {
            label: r("enabledWhen"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("enabledWhenTooltip"),
                fieldLabelId: "enabled-when"
              }
            ),
            fieldId: "enabledWhen",
            hasNoPaddingTop: !0,
            children: [
              /* @__PURE__ */ a(
                sn,
                {
                  id: "always",
                  "data-testid": "always",
                  isChecked: !E,
                  name: "enabledWhen",
                  label: r("always"),
                  onChange: () => G(!1),
                  className: "pf-v5-u-mb-md"
                }
              ),
              /* @__PURE__ */ a(
                sn,
                {
                  id: "scopesAsRequested",
                  "data-testid": "scopesAsRequested",
                  isChecked: E,
                  name: "enabledWhen",
                  label: r("scopesAsRequested"),
                  onChange: () => G(!0),
                  className: "pf-v5-u-mb-md"
                }
              )
            ]
          }
        ),
        E && /* @__PURE__ */ a(re, { fieldId: "kc-scope-enabled-when", children: /* @__PURE__ */ a(
          be,
          {
            name: "selector.scopes",
            control: s.control,
            defaultValue: [],
            render: ({ field: B }) => /* @__PURE__ */ a(
              ht,
              {
                "data-testid": "enabled-when-scope-field",
                variant: mt.typeaheadMulti,
                typeAheadAriaLabel: "Select",
                chipGroupProps: {
                  numChips: 3,
                  expandedText: r("hide"),
                  collapsedText: r("showRemaining")
                },
                onToggle: (Z) => p(Z),
                selections: B.value,
                onSelect: (Z) => {
                  const X = Z.toString();
                  let Q = [""];
                  B.value ? Q = B.value.includes(X) ? B.value.filter(
                    (ie) => ie !== X
                  ) : [...B.value, X] : Q = [X], B.onChange(Q);
                },
                onClear: () => {
                  B.onChange([]);
                },
                isOpen: u,
                "aria-labelledby": "scope",
                children: o.map((Z) => /* @__PURE__ */ a(Re, { value: Z.name, children: Z.name }, Z.name))
              }
            )
          }
        ) })
      ] }),
      v !== "username" && /* @__PURE__ */ x(te, { children: [
        /* @__PURE__ */ a(Pt, {}),
        /* @__PURE__ */ a(
          re,
          {
            label: r("required"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("requiredHelp"),
                fieldLabelId: "required"
              }
            ),
            fieldId: "kc-required",
            hasNoPaddingTop: !0,
            children: /* @__PURE__ */ a(
              be,
              {
                name: "isRequired",
                "data-testid": "required",
                defaultValue: !1,
                control: s.control,
                render: ({ field: B }) => /* @__PURE__ */ a(
                  Je,
                  {
                    id: "kc-required",
                    onChange: B.onChange,
                    isChecked: B.value,
                    label: r("on"),
                    labelOff: r("off"),
                    "aria-label": r("required")
                  }
                )
              }
            )
          }
        ),
        F && /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(
            re,
            {
              label: r("requiredFor"),
              fieldId: "requiredFor",
              hasNoPaddingTop: !0,
              children: /* @__PURE__ */ a(
                be,
                {
                  name: "required.roles",
                  "data-testid": "requiredFor",
                  defaultValue: Kx[0].value,
                  control: s.control,
                  render: ({ field: B }) => /* @__PURE__ */ a("div", { className: "kc-requiredFor", children: Kx.map((Z) => /* @__PURE__ */ a(
                    sn,
                    {
                      id: Z.label,
                      "data-testid": Z.label,
                      isChecked: yi(B.value, Z.value),
                      name: "roles",
                      onChange: () => {
                        B.onChange(Z.value);
                      },
                      label: r(Z.label),
                      className: "kc-requiredFor-option"
                    },
                    Z.label
                  )) })
                }
              )
            }
          ),
          /* @__PURE__ */ x(
            re,
            {
              label: r("requiredWhen"),
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: r("requiredWhenTooltip"),
                  fieldLabelId: "required-when"
                }
              ),
              fieldId: "requiredWhen",
              hasNoPaddingTop: !0,
              children: [
                /* @__PURE__ */ a(
                  sn,
                  {
                    id: "requiredAlways",
                    "data-testid": "requiredAlways",
                    isChecked: !L,
                    name: "requiredWhen",
                    label: r("always"),
                    onChange: () => N(!1),
                    className: "pf-v5-u-mb-md"
                  }
                ),
                /* @__PURE__ */ a(
                  sn,
                  {
                    id: "requiredScopesAsRequested",
                    "data-testid": "requiredScopesAsRequested",
                    isChecked: L,
                    name: "requiredWhen",
                    label: r("scopesAsRequested"),
                    onChange: () => N(!0),
                    className: "pf-v5-u-mb-md"
                  }
                )
              ]
            }
          ),
          L && /* @__PURE__ */ a(re, { fieldId: "kc-scope-required-when", children: /* @__PURE__ */ a(
            be,
            {
              name: "required.scopes",
              control: s.control,
              defaultValue: [],
              render: ({ field: B }) => /* @__PURE__ */ a(
                ht,
                {
                  "data-testid": "required-when-scope-field",
                  variant: mt.typeaheadMulti,
                  typeAheadAriaLabel: "Select",
                  chipGroupProps: {
                    numChips: 3,
                    expandedText: r("hide"),
                    collapsedText: r("showRemaining")
                  },
                  onToggle: (Z) => f(Z),
                  selections: B.value,
                  onSelect: (Z) => {
                    const X = Z.toString();
                    let Q = [""];
                    B.value ? Q = B.value.includes(X) ? B.value.filter(
                      (ie) => ie !== X
                    ) : [...B.value, X] : Q = [X], B.onChange(Q);
                  },
                  onClear: () => {
                    B.onChange([]);
                  },
                  isOpen: m,
                  "aria-labelledby": "scope",
                  children: o.map((Z) => /* @__PURE__ */ a(
                    Re,
                    {
                      value: Z.name,
                      children: Z.name
                    },
                    Z.name
                  ))
                }
              )
            }
          ) })
        ] })
      ] })
    ] }) })
  ] });
};
function TZ(e) {
  return Object.entries(e).reduce((t, [n, r]) => typeof r == "string" ? [...t, { key: n, value: r }] : [...t], []);
}
function IZ(e) {
  return Object.fromEntries(
    e.filter((t) => t.key.length > 0).map((t) => [t.key, t.value])
  );
}
const Hx = {
  annotations: [],
  displayDescription: "",
  displayHeader: "",
  name: ""
};
function vI() {
  const { adminClient: e } = de(), { t } = H(), { realm: n, realmRepresentation: r } = ye(), { config: i, save: s } = Rp(), o = Xe(), l = xl(), c = na(), d = Ke({ defaultValues: Hx }), { addError: u } = we(), p = !!c.name, [m, f] = D(""), [
    g,
    b
  ] = D(""), [
    v,
    y
  ] = D(""), [C, S] = st(), P = /\$\{([^}]+)\}/, [w, A] = D(), [k, T] = D({
    displayHeader: {
      key: "",
      translations: []
    },
    displayDescription: {
      key: "",
      translations: []
    }
  }), O = nt(
    () => i?.groups?.find(({ name: V }) => V === c.name),
    [i?.groups, c.name]
  );
  ze(() => {
    if (!O)
      return;
    const V = O.annotations ? TZ(O.annotations) : [];
    d.reset({ ...Hx, ...O, annotations: V });
  }, [O, d]), ze(() => {
    d.setValue(
      "displayHeader",
      O?.displayHeader || g || ""
    ), d.setValue(
      "displayDescription",
      O?.displayDescription || v || ""
    );
  }, [
    g,
    v,
    O,
    d
  ]), _e(
    async () => {
      const V = [], B = [];
      await Promise.all(
        l.map(async (X) => {
          try {
            const Q = await e.realms.getRealmLocalizationTexts({
              realm: n,
              selectedLocale: X
            }), ie = d.getValues(), me = (Ie) => {
              const Me = Ie?.match(/\$\{(.*?)\}/);
              return Me ? Me[1] : "";
            }, ee = me(ie.displayHeader) || "", ce = me(ie.displayDescription) || "", ae = Q[ee] || "", Oe = Q[ce] || "";
            ae && V.push({
              key: ee,
              translations: [{ locale: X, value: ae }]
            }), Oe && B.push({
              key: ce,
              translations: [{ locale: X, value: Oe }]
            });
          } catch (Q) {
            console.error(`Error fetching translations for ${X}:`, Q);
          }
        })
      );
      const Z = {
        displayHeader: {
          key: V.length > 0 ? V[0].key : "",
          translations: V.flatMap(
            (X) => X.translations
          )
        },
        displayDescription: {
          key: B.length > 0 ? B[0].key : "",
          translations: B.flatMap(
            (X) => X.translations
          )
        }
      };
      T(Z);
    },
    () => {
    },
    [l, n, d]
  );
  const I = async () => {
    const V = async (B, Z, X) => {
      try {
        await e.realms.addLocalization(
          {
            realm: n,
            selectedLocale: Z,
            key: B
          },
          X
        );
      } catch (Q) {
        console.error(
          `Error saving translation for locale ${Z}: ${Q}`
        );
      }
    };
    try {
      if (k && k.displayHeader.translations.length > 0)
        for (const B of k.displayHeader.translations)
          B.locale && B.value && await V(
            k.displayHeader.key,
            B.locale,
            B.value
          );
      if (k && k.displayDescription.translations.length > 0)
        for (const B of k.displayDescription.translations)
          B.locale && B.value && await V(
            k.displayDescription.key,
            B.locale,
            B.value
          );
    } catch (B) {
      console.error(`Error while processing translations: ${B}`);
    }
  }, _ = async (V) => {
    if (!i)
      return;
    const B = [...i.groups ?? []], Z = O ? B.indexOf(O) : -1, X = {
      ...V,
      annotations: IZ(V.annotations)
    };
    if (Z === -1 ? B.push(X) : B[Z] = X, r?.internationalizationEnabled) {
      const ie = k.displayHeader.translations.some(
        (ee) => ee.value.trim() !== ""
      ), me = k.displayDescription.translations.some(
        (ee) => ee.value.trim() !== ""
      );
      if (!ie || !me) {
        u("createAttributeError", t("translationError"));
        return;
      }
    }
    await s({ ...i, groups: B }) && (await I(), Wr.reloadResources(), o(Yo({ realm: n, tab: "attributes-group" })));
  }, E = rt({
    control: d.control,
    name: "displayHeader"
  }), L = rt({
    control: d.control,
    name: "displayDescription"
  }), F = (V, B) => {
    const Z = B !== "" && r?.internationalizationEnabled ? `\${profile.attribute-group.${B}}` : "", X = B !== "" && r?.internationalizationEnabled ? `\${profile.attribute-group-description.${B}}` : "";
    f(B), b(Z), y(X);
  }, R = P.test(
    E || L
  ), M = E?.substring(
    2,
    E.length - 1
  ), U = L?.substring(
    2,
    L.length - 1
  ), K = (V) => {
    T((B) => ({
      ...B,
      displayHeader: V
    }));
  }, G = (V) => {
    T((B) => ({
      ...B,
      displayDescription: V
    }));
  }, N = () => {
    S();
  }, $ = w === "displayHeader" ? M : `profile.attribute-group.${m}`, q = w === "displayDescription" ? U : `profile.attribute-group-description.${m}`;
  return /* @__PURE__ */ x(te, { children: [
    C && /* @__PURE__ */ a(
      fI,
      {
        translationKey: w === "displayHeader" ? $ : q,
        type: w === "displayHeader" ? "displayHeader" : "displayDescription",
        translations: w === "displayHeader" ? k.displayHeader : k.displayDescription,
        onTranslationsAdded: w === "displayHeader" ? K : G,
        toggleDialog: N,
        onCancel: () => {
          S();
        }
      }
    ),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: O ? "editGroupText" : "createGroupText",
        divider: !0
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", onSubmit: d.handleSubmit(_), children: /* @__PURE__ */ a(je, { isHorizontal: !0, role: "manage-realm", children: /* @__PURE__ */ x(He, { ...d, children: [
      /* @__PURE__ */ a(
        ve,
        {
          name: "name",
          label: t("nameField"),
          labelIcon: t("nameHintHelp"),
          isDisabled: !!O || p,
          rules: {
            required: t("required"),
            onChange: (V) => {
              F(V, V.target.value);
            }
          }
        }
      ),
      !!O && /* @__PURE__ */ a("input", { type: "hidden", ...d.register("name") }),
      /* @__PURE__ */ a(
        re,
        {
          label: t("displayHeaderField"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: t("displayHeaderHintHelp"),
              fieldLabelId: "displayHeaderField"
            }
          ),
          fieldId: "kc-attributes-group-display-header",
          children: /* @__PURE__ */ x(Ha, { hasGutter: !0, children: [
            /* @__PURE__ */ x(Wt, { span: r?.internationalizationEnabled ? 11 : 12, children: [
              /* @__PURE__ */ a(
                gt,
                {
                  id: "kc-attributes-group-display-header",
                  "data-testid": "attributes-group-display-header",
                  isDisabled: r?.internationalizationEnabled && m !== "" || p && R,
                  value: p ? E : r?.internationalizationEnabled ? g : void 0,
                  ...d.register("displayHeader")
                }
              ),
              g && /* @__PURE__ */ a(
                En,
                {
                  className: "pf-v5-u-mt-sm",
                  variant: "info",
                  isInline: !0,
                  isPlain: !0,
                  title: t("addAttributesGroupTranslationInfo")
                }
              )
            ] }),
            r?.internationalizationEnabled && /* @__PURE__ */ a(Wt, { span: 1, children: /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                className: "pf-m-plain",
                "data-testid": "addAttributeDisplayNameTranslationBtn",
                "aria-label": t("addAttributeDisplayNameTranslation"),
                isDisabled: !m && !p,
                onClick: () => {
                  A("displayHeader"), S();
                },
                icon: /* @__PURE__ */ a(kf, {})
              }
            ) })
          ] })
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: t("displayDescriptionField"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: t("displayDescriptionHintHelp"),
              fieldLabelId: "displayDescriptionField"
            }
          ),
          fieldId: "kc-attributes-group-display-description",
          children: /* @__PURE__ */ x(Ha, { hasGutter: !0, children: [
            /* @__PURE__ */ x(Wt, { span: r?.internationalizationEnabled ? 11 : 12, children: [
              /* @__PURE__ */ a(
                gt,
                {
                  id: "kc-attributes-group-display-description",
                  "data-testid": "attributes-group-display-description",
                  isDisabled: r?.internationalizationEnabled && m !== "" || p && R,
                  value: p ? L : r?.internationalizationEnabled ? v : void 0,
                  ...d.register("displayDescription")
                }
              ),
              v && /* @__PURE__ */ a(
                En,
                {
                  className: "pf-v5-u-mt-sm",
                  variant: "info",
                  isInline: !0,
                  isPlain: !0,
                  title: t("addAttributesGroupTranslationInfo")
                }
              )
            ] }),
            r?.internationalizationEnabled && /* @__PURE__ */ a(Wt, { span: 1, children: /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                className: "pf-m-plain",
                "data-testid": "addAttributeDisplayDescriptionTranslationBtn",
                "aria-label": t(
                  "addAttributeDisplayDescriptionTranslation"
                ),
                isDisabled: !m && !p,
                onClick: () => {
                  A("displayDescription"), S();
                },
                icon: /* @__PURE__ */ a(kf, {})
              }
            ) })
          ] })
        }
      ),
      /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ a(tt, { component: "h2", children: t("annotationsText") }) }),
      /* @__PURE__ */ a(re, { label: t("annotationsText"), fieldId: "kc-annotations", children: /* @__PURE__ */ a(ad, { label: t("annotationsText"), name: "annotations" }) }),
      /* @__PURE__ */ x(ot, { children: [
        /* @__PURE__ */ a(
          z,
          {
            variant: "primary",
            type: "submit",
            "data-testid": "saveGroupBtn",
            children: t("save")
          }
        ),
        /* @__PURE__ */ a(
          z,
          {
            variant: "link",
            component: (V) => /* @__PURE__ */ a(
              Ae,
              {
                ...V,
                to: Yo({
                  realm: n,
                  tab: "attributes-group"
                })
              }
            ),
            children: t("cancel")
          }
        )
      ] })
    ] }) }) })
  ] });
}
const vee = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: vI
}, Symbol.toStringTag, { value: "Module" })), EZ = () => /* @__PURE__ */ a(_p, { children: /* @__PURE__ */ a(vI, {}) }), yI = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: EZ
}, Symbol.toStringTag, { value: "Module" })), PZ = ({
  setTableData: e
}) => {
  const { adminClient: t } = de(), { config: n, save: r } = Rp(), { t: i } = H(), s = xl(), o = Xe(), { realm: l } = ye(), [c, d] = D(0), [u, p] = D();
  ze(() => d((v) => v + 1), [n]);
  async function m() {
    return n?.groups ?? [];
  }
  const [f, g] = Ve({
    titleKey: "deleteDialogTitle",
    children: /* @__PURE__ */ x(as, { i18nKey: "deleteDialogDescription", children: [
      " ",
      /* @__PURE__ */ a("strong", { children: { group: u?.name } }),
      "."
    ] }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      const v = (n?.groups ?? []).filter(
        (S) => S !== u
      ), y = u?.displayHeader?.substring(
        2,
        u?.displayHeader.length - 1
      ), C = u?.displayDescription?.substring(
        2,
        u?.displayDescription.length - 1
      );
      try {
        await Promise.all(
          s.map(async (S) => {
            try {
              if (await t.realms.getRealmLocalizationTexts({
                realm: l,
                selectedLocale: S
              })) {
                await t.realms.deleteRealmLocalizationTexts({
                  realm: l,
                  selectedLocale: S,
                  key: y
                }), await t.realms.deleteRealmLocalizationTexts({
                  realm: l,
                  selectedLocale: S,
                  key: C
                });
                const w = await t.realms.getRealmLocalizationTexts({
                  realm: l,
                  selectedLocale: S
                });
                e([w]);
              }
            } catch {
              console.error(`Error removing translations for ${S}`);
            }
          })
        ), r(
          { ...n, groups: v },
          {
            successMessageKey: "deleteSuccess",
            errorMessageKey: "deleteAttributeGroupError"
          }
        );
      } catch (S) {
        console.error(
          `Error removing translations or updating attributes group: ${S}`
        );
      }
    }
  });
  function b(v) {
    p(v), f();
  }
  return /* @__PURE__ */ x(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
    /* @__PURE__ */ a(g, {}),
    /* @__PURE__ */ a(
      xt,
      {
        loader: m,
        ariaLabelKey: "tableTitle",
        toolbarItem: /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
          z,
          {
            component: (v) => /* @__PURE__ */ a(
              Ae,
              {
                "data-testid": "create-attributes-groups-action",
                ...v,
                to: Ox({ realm: l })
              }
            ),
            children: i("createGroupText")
          }
        ) }),
        columns: [
          {
            name: "name",
            displayKey: "columnName",
            cellRenderer: (v) => /* @__PURE__ */ a(
              Ae,
              {
                to: ZX({
                  realm: l,
                  name: v.name
                }),
                children: v.name
              }
            )
          },
          {
            name: "displayHeader",
            displayKey: "columnDisplayName"
          },
          {
            name: "displayDescription",
            displayKey: "columnDisplayDescription"
          }
        ],
        actions: [
          {
            title: i("delete"),
            onRowClick: b
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: i("emptyStateMessage"),
            instructions: i("emptyStateInstructions"),
            primaryActionText: i("createGroupText"),
            onPrimaryAction: () => o(Ox({ realm: l }))
          }
        )
      },
      c
    )
  ] });
}, _Z = ["username", "email"], RZ = ({ setTableData: e }) => {
  const { adminClient: t } = de(), { config: n, save: r } = Rp(), { realm: i } = ye(), { t: s } = H(), o = xl(), l = Xe(), [c, d] = D("allGroups"), [u, p] = st(), [m, f] = D(n?.attributes), [g, b] = D(""), [v, y] = Ve({
    titleKey: s("deleteAttributeConfirmTitle"),
    messageKey: s("deleteAttributeConfirm", {
      attributeName: g
    }),
    continueButtonLabel: s("delete"),
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      if (!n?.attributes) return;
      const A = n.attributes.find(
        (T) => T.name === g
      )?.displayName, k = A?.substring(
        2,
        A.length - 1
      );
      try {
        await Promise.all(
          o.map(async (O) => {
            try {
              if (await t.realms.getRealmLocalizationTexts({
                realm: i,
                selectedLocale: O
              })) {
                await t.realms.deleteRealmLocalizationTexts({
                  realm: i,
                  selectedLocale: O,
                  key: k
                });
                const _ = await t.realms.getRealmLocalizationTexts({
                  realm: i,
                  selectedLocale: O
                });
                e([_]);
              }
            } catch {
              console.error(`Error removing translations for ${O}`);
            }
          })
        );
        const T = n.attributes.filter(
          (O) => O.name !== g
        );
        r(
          { ...n, attributes: T, groups: n.groups },
          {
            successMessageKey: "deleteAttributeSuccess",
            errorMessageKey: "deleteAttributeError"
          }
        ), b("");
      } catch (T) {
        console.error(
          `Error removing translations or updating attributes: ${T}`
        );
      }
    }
  });
  if (!n)
    return /* @__PURE__ */ a(bt, {});
  const C = n.attributes ?? [], S = n.groups ?? [], P = async (A, k) => {
    const T = C.findIndex((I) => I.name === A.name);
    let O = {};
    O = C[T], C.splice(T, 1), C.splice(k, 0, O), r(
      { attributes: C, groups: S },
      {
        successMessageKey: "updatedUserProfileSuccess",
        errorMessageKey: "updatedUserProfileError"
      }
    );
  }, w = (A) => /* @__PURE__ */ a(
    Ae,
    {
      to: wx({
        realm: i,
        attributeName: A.name
      }),
      children: A.name
    },
    A.name
  );
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(Ta, { children: /* @__PURE__ */ x(cr, { children: [
      /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
        ht,
        {
          toggleId: "kc-group-filter",
          width: 200,
          "data-testid": "filter-select",
          isOpen: u,
          variant: mt.single,
          onToggle: p,
          toggleIcon: /* @__PURE__ */ a(ls, {}),
          onSelect: (A) => {
            const k = A.toString();
            d(k), f(
              k === "allGroups" ? C : C.filter((T) => T.group === k)
            ), p();
          },
          selections: c === "allGroups" ? s(c) : c,
          children: [
            /* @__PURE__ */ a(
              Re,
              {
                "data-testid": "all-groups",
                value: "allGroups",
                children: s("allGroups")
              },
              "allGroups"
            ),
            ...lp(
              C.filter((A) => !!A.group),
              "group"
            ).map((A) => /* @__PURE__ */ a(Re, { value: A.group, children: A.group }, A.group))
          ]
        }
      ) }),
      /* @__PURE__ */ a(Le, { className: "kc-toolbar-attributesTab", children: /* @__PURE__ */ a(
        z,
        {
          "data-testid": "createAttributeBtn",
          variant: "primary",
          component: (A) => /* @__PURE__ */ a(Ae, { ...A, to: GX({ realm: i }) }),
          children: s("createAttribute")
        }
      ) })
    ] }) }),
    /* @__PURE__ */ a(Pt, {}),
    /* @__PURE__ */ a(y, {}),
    /* @__PURE__ */ a(
      jg,
      {
        keyField: "name",
        onDragFinish: async (A, k) => {
          const T = C.map((E) => E.name), O = k.indexOf(A), I = T.indexOf(A), _ = C[I];
          _.name && P(_, O);
        },
        actions: [
          {
            title: s("edit"),
            onClick: (A, k, T) => {
              l(
                wx({
                  realm: i,
                  attributeName: T.name
                })
              );
            }
          },
          {
            title: s("delete"),
            isActionable: ({ name: A }) => !_Z.includes(A),
            onClick: (A, k, T) => {
              b(T.name), v();
            }
          }
        ],
        columns: [
          {
            name: "name",
            displayKey: s("attributeName"),
            cellRenderer: w
          },
          {
            name: "displayName",
            displayKey: s("attributeDisplayName")
          },
          {
            name: "group",
            displayKey: s("attributeGroup")
          }
        ],
        data: m ?? C
      }
    )
  ] });
}, AZ = () => {
  const { config: e, save: t, isSaving: n } = Rp(), { t: r } = H(), { addError: i } = we(), [s, o] = D();
  ze(() => l(), [e, s]);
  function l() {
    s?.setValue(e ? ja(e) : "");
  }
  async function c() {
    const d = s?.getValue();
    if (d)
      try {
        await t(JSON.parse(d));
      } catch (u) {
        i("invalidJsonError", u);
        return;
      }
  }
  return /* @__PURE__ */ x(Te, { variant: "light", children: [
    /* @__PURE__ */ a(
      fr,
      {
        language: Ln.json,
        height: "30rem",
        onEditorDidMount: (d) => o(d),
        isLanguageLabelVisible: !0
      }
    ),
    /* @__PURE__ */ a(St, { children: /* @__PURE__ */ x(ot, { children: [
      /* @__PURE__ */ a(
        z,
        {
          "data-testid": "save",
          variant: "primary",
          onClick: c,
          isDisabled: n,
          children: r("save")
        }
      ),
      /* @__PURE__ */ a(z, { variant: "link", onClick: l, isDisabled: n, children: r("revert") })
    ] }) })
  ] });
}, LZ = ({ setTableData: e }) => {
  const { realm: t } = ye(), { t: n } = H(), r = (l) => Kn(Yo({ realm: t, tab: l })), i = r("attributes"), s = r("attributes-group"), o = r("json-editor");
  return /* @__PURE__ */ a(_p, { children: /* @__PURE__ */ x(
    Vn,
    {
      defaultLocation: Yo({ realm: t, tab: "attributes" }),
      mountOnEnter: !0,
      children: [
        /* @__PURE__ */ a(
          Ee,
          {
            title: /* @__PURE__ */ a(Pe, { children: n("attributes") }),
            "data-testid": "attributesTab",
            ...i,
            children: /* @__PURE__ */ a(RZ, { setTableData: e })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            title: /* @__PURE__ */ a(Pe, { children: n("attributesGroup") }),
            "data-testid": "attributesGroupTab",
            ...s,
            children: /* @__PURE__ */ a(PZ, { setTableData: e })
          }
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            title: /* @__PURE__ */ a(Pe, { children: n("jsonEditor") }),
            "data-testid": "jsonEditorTab",
            ...o,
            children: /* @__PURE__ */ a(AZ, {})
          }
        )
      ]
    }
  ) });
}, NZ = ({ name: e, global: t }) => {
  const { t: n } = H();
  return /* @__PURE__ */ x(te, { children: [
    e,
    " ",
    t && /* @__PURE__ */ a(pn, { color: "blue", children: n("global") })
  ] });
}, DZ = (e) => {
  const { adminClient: t } = de(), { t: n } = H(), [r, i] = D([]), [s, o] = D();
  _e(
    () => t.clientPolicies.listProfiles({
      includeGlobalProfiles: !0
    }),
    (c) => {
      const d = c.globalProfiles?.map(
        (p) => ({
          ...p,
          global: !0
        })
      ), u = c.profiles?.map((p) => ({
        ...p,
        global: !1
      }));
      o([...d ?? [], ...u ?? []]);
    },
    []
  );
  const l = async () => s?.filter((c) => !e.allProfiles.includes(c.name)) ?? [];
  return s ? /* @__PURE__ */ a(
    ft,
    {
      "data-testid": "addClientProfile",
      title: n("addClientProfile"),
      isOpen: e.open,
      onClose: e.toggleDialog,
      variant: Et.large,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "add-client-profile-button",
            variant: "primary",
            isDisabled: !r.length,
            onClick: () => {
              e.toggleDialog(), e.onConfirm(r);
            },
            children: n("add")
          },
          "add"
        ),
        /* @__PURE__ */ a(
          z,
          {
            variant: "link",
            onClick: () => {
              e.toggleDialog();
            },
            children: n("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        xt,
        {
          loader: l,
          ariaLabelKey: "profilesList",
          searchPlaceholderKey: "searchProfile",
          canSelectAll: !0,
          onSelect: (c) => {
            i([...c]);
          },
          columns: [
            {
              name: "name",
              displayKey: "clientProfileName",
              cellRenderer: NZ
            },
            {
              name: "description",
              cellFormatters: [Vi(n)]
            }
          ],
          emptyState: /* @__PURE__ */ a(
            ct,
            {
              hasIcon: !0,
              message: n("noRoles"),
              instructions: n("noRolesInstructions"),
              primaryActionText: n("createRole")
            }
          )
        }
      )
    }
  ) : /* @__PURE__ */ a(bt, {});
}, MZ = {
  name: "",
  description: "",
  executors: []
};
function FZ() {
  const { adminClient: e } = de(), { t } = H(), n = Xe(), r = Ke({
    defaultValues: MZ,
    mode: "onChange"
  }), {
    handleSubmit: i,
    setValue: s,
    getValues: o,
    formState: { isDirty: l },
    control: c
  } = r, { fields: d, remove: u } = ig({
    name: "executors",
    control: c
  }), { addAlert: p, addError: m } = we(), [f, g] = D(), [b, v] = D(!1), { realm: y, profileName: C } = zt(), S = Tt(), P = nt(
    () => S.componentTypes?.["org.keycloak.services.clientpolicy.executor.ClientPolicyExecutorProvider"],
    []
  ), [w, A] = D(), k = !!C, [T, O] = D(0), I = () => O(T + 1);
  _e(
    () => e.clientPolicies.listProfiles({ includeGlobalProfiles: !0 }),
    (F) => {
      g({
        globalProfiles: F.globalProfiles,
        profiles: F.profiles?.filter((U) => U.name !== C)
      });
      const R = F.globalProfiles?.find(
        (U) => U.name === C
      ), M = F.profiles?.find((U) => U.name === C);
      v(R !== void 0), s("name", R?.name ?? M?.name ?? ""), s(
        "description",
        R?.description ?? M?.description ?? ""
      ), s(
        "executors",
        R?.executors ?? M?.executors ?? []
      );
    },
    [T]
  );
  const _ = async (F) => {
    const R = F;
    try {
      await e.clientPolicies.createProfiles({
        ...f,
        profiles: [...f?.profiles || [], R]
      }), p(
        t(k ? "updateClientProfileSuccess" : "createClientProfileSuccess"),
        pe.success
      ), n(Nu({ realm: y, profileName: F.name }));
    } catch (M) {
      m(
        k ? "updateClientProfileError" : "createClientProfileError",
        M
      );
    }
  }, [E, L] = Ve({
    titleKey: w?.name ? t("deleteExecutorProfileConfirmTitle") : t("deleteClientProfileConfirmTitle"),
    messageKey: w?.name ? t("deleteExecutorProfileConfirm", {
      executorName: w.name
    }) : t("deleteClientProfileConfirm", {
      profileName: C
    }),
    continueButtonLabel: t("delete"),
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      if (w?.name) {
        u(w.idx);
        try {
          await e.clientPolicies.createProfiles({
            ...f,
            profiles: [...f.profiles || [], o()]
          }), p(t("deleteExecutorSuccess"), pe.success), n(Nu({ realm: y, profileName: C }));
        } catch (F) {
          m("deleteExecutorError", F);
        }
      } else
        try {
          await e.clientPolicies.createProfiles(f), p(t("deleteClientSuccess"), pe.success), n(zr({ realm: y, tab: "profiles" }));
        } catch (F) {
          m("deleteClientError", F);
        }
    }
  });
  return f ? /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(L, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: k ? C : t("newClientProfile"),
        badges: [
          {
            id: "global-client-profile-badge",
            text: b ? /* @__PURE__ */ a(pn, { color: "blue", children: t("global") }) : ""
          }
        ],
        divider: !0,
        dropdownItems: k && !b ? [
          /* @__PURE__ */ a(
            Ue,
            {
              value: "delete",
              onClick: E,
              "data-testid": "deleteClientProfileDropdown",
              children: t("deleteClientProfile")
            },
            "delete"
          )
        ] : void 0
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(He, { ...r, children: /* @__PURE__ */ x(je, { isHorizontal: !0, role: "view-realm", className: "pf-v5-u-mt-lg", children: [
      /* @__PURE__ */ a(
        ve,
        {
          name: "name",
          label: t("newClientProfileName"),
          helperText: t("createClientProfileNameHelperText"),
          readOnly: b,
          rules: {
            required: t("required")
          }
        }
      ),
      /* @__PURE__ */ a(
        pr,
        {
          name: "description",
          label: t("description"),
          readOnly: b
        }
      ),
      /* @__PURE__ */ x(ot, { children: [
        !b && /* @__PURE__ */ a(
          z,
          {
            variant: "primary",
            onClick: () => i(_)(),
            "data-testid": "saveCreateProfile",
            isDisabled: !l,
            children: t("save")
          }
        ),
        k && !b && /* @__PURE__ */ a(
          z,
          {
            id: "reloadProfile",
            variant: "link",
            "data-testid": "reloadProfile",
            isDisabled: !l,
            onClick: I,
            children: t("reload")
          }
        ),
        !k && !b && /* @__PURE__ */ a(
          z,
          {
            id: "cancelCreateProfile",
            variant: "link",
            component: (F) => /* @__PURE__ */ a(
              Ae,
              {
                ...F,
                to: zr({ realm: y, tab: "profiles" })
              }
            ),
            "data-testid": "cancelCreateProfile",
            children: t("cancel")
          }
        )
      ] }),
      k && /* @__PURE__ */ x(te, { children: [
        /* @__PURE__ */ x(Qn, { children: [
          /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ x(tt, { className: "kc-executors", component: Qt.h1, children: [
            t("executors"),
            /* @__PURE__ */ a(
              le,
              {
                helpText: t("executorsHelpText"),
                fieldLabelId: "executors"
              }
            )
          ] }) }),
          !b && /* @__PURE__ */ a(Dt, { align: { default: "alignRight" }, children: /* @__PURE__ */ a(
            z,
            {
              id: "addExecutor",
              component: (F) => /* @__PURE__ */ a(
                Ae,
                {
                  ...F,
                  to: MX({
                    realm: y,
                    profileName: C
                  })
                }
              ),
              variant: "link",
              className: "kc-addExecutor",
              "data-testid": "addExecutor",
              icon: /* @__PURE__ */ a(_a, {}),
              children: t("addExecutor")
            }
          ) })
        ] }),
        d.length > 0 && /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(Er, { "aria-label": t("executors"), isCompact: !0, children: d.map((F, R) => /* @__PURE__ */ a(
            Pa,
            {
              "aria-labelledby": "executors-list-item",
              id: F.executor,
              children: /* @__PURE__ */ a(Va, { "data-testid": "executors-list-row", children: /* @__PURE__ */ a(
                Ua,
                {
                  dataListCells: [
                    /* @__PURE__ */ x(
                      oa,
                      {
                        "data-testid": "executor-type",
                        children: [
                          F.configuration ? /* @__PURE__ */ a(
                            z,
                            {
                              component: (M) => /* @__PURE__ */ a(
                                Ae,
                                {
                                  ...M,
                                  to: $X({
                                    realm: y,
                                    profileName: C,
                                    executorName: F.executor
                                  })
                                }
                              ),
                              variant: "link",
                              "data-testid": "editExecutor",
                              children: F.executor
                            }
                          ) : /* @__PURE__ */ a("span", { className: "kc-unclickable-executor", children: F.executor }),
                          P?.filter(
                            (M) => M.id === F.executor
                          ).map((M) => /* @__PURE__ */ x(Ea, { children: [
                            /* @__PURE__ */ a(
                              le,
                              {
                                helpText: M.helpText,
                                fieldLabelId: "executorTypeTextHelpText"
                              },
                              M.id
                            ),
                            !b && /* @__PURE__ */ a(
                              z,
                              {
                                variant: "link",
                                isInline: !0,
                                icon: /* @__PURE__ */ a(
                                  lu,
                                  {
                                    className: "kc-executor-trash-icon",
                                    "data-testid": "deleteExecutor"
                                  },
                                  `executorType-trash-icon-${M.id}`
                                ),
                                onClick: () => {
                                  E(), A({
                                    idx: R,
                                    name: M.id
                                  });
                                },
                                "aria-label": t("remove")
                              }
                            )
                          ] }, M.id))
                        ]
                      },
                      "executor"
                    )
                  ]
                }
              ) })
            },
            F.executor
          )) }),
          b && /* @__PURE__ */ a(
            z,
            {
              id: "backToClientPolicies",
              component: (F) => /* @__PURE__ */ a(
                Ae,
                {
                  ...F,
                  to: zr({ realm: y, tab: "profiles" })
                }
              ),
              variant: "primary",
              className: "kc-backToPolicies",
              "data-testid": "backToClientPolicies",
              children: t("back")
            }
          )
        ] }),
        d.length === 0 && /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(Pt, {}),
          /* @__PURE__ */ a(
            tt,
            {
              className: "kc-emptyExecutors",
              component: Qt.h2,
              children: t("emptyExecutors")
            }
          )
        ] })
      ] })
    ] }) }) })
  ] }) : /* @__PURE__ */ a(bt, {});
}
const CI = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: FZ
}, Symbol.toStringTag, { value: "Module" })), xI = () => {
  const { adminClient: e } = de(), { t } = H(), [n, r] = st(), [i, s] = st(), [o, l] = D(), [c, d] = D([]), [u, p] = D(0), [m, f] = D(0), g = () => f(m + 1), { realm: b } = ye(), { addAlert: v, addError: y } = we(), { enabled: C } = Dr(), { hasAccess: S } = Nt(), P = S("view-users", "manage-realm");
  _e(
    () => e.realms.getDefaultGroups({ realm: b }),
    (I) => {
      l(I), p(u + 1);
    },
    [m]
  );
  const w = () => Promise.resolve(o), A = async () => {
    try {
      await Promise.all(
        c.map(
          (I) => e.realms.removeDefaultGroup({
            realm: b,
            id: I.id
          })
        )
      ), v(
        t("groupRemove", { count: c.length }),
        pe.success
      ), d([]);
    } catch (I) {
      y("groupRemoveError", I);
    }
    g();
  }, k = async (I) => {
    try {
      await Promise.all(
        I.map(
          (_) => e.realms.addDefaultGroup({
            realm: b,
            id: _.id
          })
        )
      ), v(
        t("defaultGroupAdded", { count: I.length }),
        pe.success
      );
    } catch (_) {
      y("defaultGroupAddedError", _);
    }
    g();
  }, [T, O] = Ve({
    titleKey: t("removeConfirmTitle", { count: c.length }),
    messageKey: t("removeConfirm", { count: c.length }),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: A
  });
  return o ? /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(O, {}),
    i && /* @__PURE__ */ a(
      bl,
      {
        type: "selectMany",
        text: {
          title: "addDefaultGroups",
          ok: "add"
        },
        onConfirm: (I) => {
          k(I || []), s();
        },
        onClose: s
      }
    ),
    C && /* @__PURE__ */ a(
      Rr,
      {
        bodyContent: /* @__PURE__ */ x(as, { i18nKey: "defaultGroupsHelp", children: [
          " ",
          /* @__PURE__ */ a(Ae, { to: cs({ realm: b }) }),
          "."
        ] }),
        children: /* @__PURE__ */ a(
          Rt,
          {
            className: "keycloak__section_intro__help",
            style: {
              paddingLeft: "var(--pf-v5-c-page__main-section--PaddingLeft)"
            },
            children: /* @__PURE__ */ x(tt, { children: [
              /* @__PURE__ */ a(zc, {}),
              " ",
              t("whatIsDefaultGroups")
            ] })
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      xt,
      {
        canSelectAll: !0,
        onSelect: (I) => d([...I]),
        loader: w,
        ariaLabelKey: "defaultGroups",
        searchPlaceholderKey: "searchForGroups",
        toolbarItem: P && /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            z,
            {
              "data-testid": "openCreateGroupModal",
              variant: "primary",
              onClick: s,
              children: t("addGroups")
            }
          ) }),
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            Kt,
            {
              onOpenChange: r,
              toggle: (I) => /* @__PURE__ */ a(
                ut,
                {
                  ref: I,
                  isExpanded: n,
                  variant: "plain",
                  onClick: r,
                  isDisabled: c.length === 0,
                  children: /* @__PURE__ */ a(hr, {})
                }
              ),
              isOpen: n,
              shouldFocusToggleOnSelect: !0,
              children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
                Ue,
                {
                  component: "button",
                  onClick: () => {
                    T(), r();
                  },
                  children: t("remove")
                },
                "action"
              ) })
            }
          ) })
        ] }),
        actions: P ? [
          {
            title: t("remove"),
            onRowClick: (I) => (d([I]), T(), Promise.resolve(!1))
          }
        ] : [],
        columns: [
          {
            name: "name",
            displayKey: "groupName"
          },
          {
            name: "path",
            displayKey: "path"
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            hasIcon: !0,
            message: t("noDefaultGroups"),
            instructions: /* @__PURE__ */ x(as, { i18nKey: "noDefaultGroupsInstructions", children: [
              " ",
              /* @__PURE__ */ a(
                Ae,
                {
                  className: "pf-v5-u-font-weight-light",
                  to: cs({ realm: b }),
                  role: "navigation",
                  "aria-label": t("identityBrokeringLink")
                }
              ),
              "Add groups..."
            ] }),
            primaryActionText: P ? t("addGroups") : "",
            onPrimaryAction: s
          }
        )
      },
      u
    )
  ] }) : /* @__PURE__ */ a(bt, {});
}, yee = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  DefaultsGroupsTab: xI
}, Symbol.toStringTag, { value: "Module" }));
function $Z() {
  const { adminClient: e } = de(), { whoAmI: t } = ga(), [n, r] = D(), i = t.getUserId();
  return _e(() => e.users.findOne({ id: i }), r, [
    i
  ]), { ...n, realm: t.getRealm() };
}
const jZ = ({
  realm: e,
  save: t
}) => {
  const { adminClient: n } = de(), { t: r } = H(), { addAlert: i, addError: s } = we(), o = $Z(), l = Ke({ defaultValues: e }), { control: c, handleSubmit: d, watch: u, reset: p, getValues: m } = l, f = () => p(e), g = u("smtpServer.from", ""), b = u("smtpServer.host", ""), [v, y] = st(), C = rt({
    control: c,
    name: "smtpServer.auth",
    defaultValue: ""
  }), S = async () => {
    const P = (T) => Number(T), w = (T) => T === "true", A = /* @__PURE__ */ new Map([
      ["port", P],
      ["ssl", w],
      ["starttls", w],
      ["auth", w]
    ]), k = { ...m().smtpServer };
    for (const [T, O] of A.entries())
      k[T] = O(k[T]);
    k.port === 0 && (k.port = null);
    try {
      y(), await n.realms.testSMTPConnection(
        { realm: e.realm },
        k
      ), i(r("testConnectionSuccess"), pe.success);
    } catch (T) {
      s("testConnectionError", T);
    }
    y();
  };
  return /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ x(He, { ...l, children: [
    /* @__PURE__ */ a(Zn, { title: r("template"), className: "kc-email-template", children: /* @__PURE__ */ x(
      je,
      {
        isHorizontal: !0,
        role: "manage-realm",
        className: "pf-v5-u-mt-lg",
        onSubmit: d(t),
        children: [
          /* @__PURE__ */ a(
            ve,
            {
              name: "smtpServer.from",
              label: r("from"),
              type: "email",
              placeholder: r("smtpFromPlaceholder"),
              rules: {
                pattern: {
                  value: $d,
                  message: r("emailInvalid")
                },
                required: r("required")
              }
            }
          ),
          /* @__PURE__ */ a(
            ve,
            {
              name: "smtpServer.fromDisplayName",
              label: r("fromDisplayName"),
              labelIcon: r("fromDisplayNameHelp"),
              placeholder: r("smtpFromDisplayPlaceholder")
            }
          ),
          /* @__PURE__ */ a(
            ve,
            {
              name: "smtpServer.replyTo",
              label: r("replyTo"),
              type: "email",
              placeholder: r("replyToEmailPlaceholder"),
              rules: {
                pattern: {
                  value: $d,
                  message: r("emailInvalid")
                }
              }
            }
          ),
          /* @__PURE__ */ a(
            ve,
            {
              name: "smtpServer.replyToDisplayName",
              label: r("replyToDisplayName"),
              labelIcon: r("replyToDisplayNameHelp"),
              placeholder: r("replyToDisplayPlaceholder")
            }
          ),
          /* @__PURE__ */ a(
            ve,
            {
              name: "smtpServer.envelopeFrom",
              label: r("envelopeFrom"),
              labelIcon: r("envelopeFromHelp"),
              placeholder: r("senderEnvelopePlaceholder")
            }
          )
        ]
      }
    ) }),
    /* @__PURE__ */ a(
      Zn,
      {
        className: "kc-email-connection",
        title: r("connectionAndAuthentication"),
        children: /* @__PURE__ */ x(
          je,
          {
            isHorizontal: !0,
            role: "manage-realm",
            className: "pf-v5-u-mt-lg",
            onSubmit: d(t),
            children: [
              /* @__PURE__ */ a(
                ve,
                {
                  name: "smtpServer.host",
                  label: r("host"),
                  rules: {
                    required: r("required")
                  }
                }
              ),
              /* @__PURE__ */ a(
                ve,
                {
                  name: "smtpServer.port",
                  label: r("port"),
                  placeholder: r("smtpPortPlaceholder")
                }
              ),
              /* @__PURE__ */ x(re, { label: r("encryption"), fieldId: "kc-html-display-name", children: [
                /* @__PURE__ */ a(
                  be,
                  {
                    name: "smtpServer.ssl",
                    control: c,
                    defaultValue: "false",
                    render: ({ field: P }) => /* @__PURE__ */ a(
                      Zt,
                      {
                        id: "kc-enable-ssl",
                        "data-testid": "enable-ssl",
                        label: r("enableSSL"),
                        isChecked: P.value === "true",
                        onChange: (w, A) => P.onChange("" + A)
                      }
                    )
                  }
                ),
                /* @__PURE__ */ a(
                  be,
                  {
                    name: "smtpServer.starttls",
                    control: c,
                    defaultValue: "false",
                    render: ({ field: P }) => /* @__PURE__ */ a(
                      Zt,
                      {
                        id: "kc-enable-start-tls",
                        "data-testid": "enable-start-tls",
                        label: r("enableStartTLS"),
                        isChecked: P.value === "true",
                        onChange: (w, A) => P.onChange("" + A)
                      }
                    )
                  }
                )
              ] }),
              /* @__PURE__ */ a(
                ro,
                {
                  name: "smtpServer.auth",
                  label: r("authentication"),
                  defaultValue: "",
                  labelOn: r("enabled"),
                  labelOff: r("disabled"),
                  stringify: !0
                }
              ),
              C === "true" && /* @__PURE__ */ x(te, { children: [
                /* @__PURE__ */ a(
                  ve,
                  {
                    name: "smtpServer.user",
                    label: r("username"),
                    placeholder: r("loginUsernamePlaceholder"),
                    rules: {
                      required: r("required")
                    }
                  }
                ),
                /* @__PURE__ */ a(
                  zo,
                  {
                    name: "smtpServer.password",
                    label: r("password"),
                    labelIcon: r("passwordHelp"),
                    rules: {
                      required: r("required")
                    }
                  }
                )
              ] }),
              o && /* @__PURE__ */ a(re, { id: "descriptionTestConnection", children: o.email ? /* @__PURE__ */ a(
                En,
                {
                  variant: "info",
                  component: "h2",
                  isInline: !0,
                  title: r("testConnectionHint.withEmail", {
                    email: o.email
                  })
                }
              ) : /* @__PURE__ */ a(
                En,
                {
                  variant: "warning",
                  component: "h2",
                  isInline: !0,
                  title: r("testConnectionHint.withoutEmail", {
                    userName: o.username
                  }),
                  actionLinks: /* @__PURE__ */ a(
                    wh,
                    {
                      component: (P) => /* @__PURE__ */ a(
                        Ae,
                        {
                          ...P,
                          to: ri({
                            realm: o.realm,
                            id: o.id,
                            tab: "settings"
                          })
                        }
                      ),
                      children: r("testConnectionHint.withoutEmailAction")
                    }
                  )
                }
              ) }),
              /* @__PURE__ */ x(ot, { children: [
                /* @__PURE__ */ a(xi, { children: /* @__PURE__ */ a(
                  z,
                  {
                    variant: "primary",
                    type: "submit",
                    "data-testid": "email-tab-save",
                    children: r("save")
                  }
                ) }),
                /* @__PURE__ */ a(xi, { children: /* @__PURE__ */ a(
                  z,
                  {
                    variant: "secondary",
                    onClick: () => S(),
                    "data-testid": "test-connection-button",
                    isDisabled: !($d.test(g) && b) || !o?.email,
                    "aria-describedby": "descriptionTestConnection",
                    isLoading: v,
                    spinnerAriaValueText: r("testingConnection"),
                    children: r("testConnection")
                  }
                ) }),
                /* @__PURE__ */ a(xi, { children: /* @__PURE__ */ a(
                  z,
                  {
                    variant: "link",
                    onClick: f,
                    "data-testid": "email-tab-revert",
                    children: r("revert")
                  }
                ) })
              ] })
            ]
          }
        )
      }
    )
  ] }) });
};
var Ji;
(function(e) {
  e.Disabled = "DISABLED", e.Enabled = "ENABLED", e.AdminView = "ADMIN_VIEW", e.AdminEdit = "ADMIN_EDIT";
})(Ji || (Ji = {}));
const BZ = ({
  realm: e,
  save: t
}) => {
  const { adminClient: n } = de(), { realm: r } = ye(), [i, s] = D();
  return _e(
    () => n.users.getProfile({ realm: r }),
    (o) => s(o),
    []
  ), i ? /* @__PURE__ */ a(
    VZ,
    {
      realm: e,
      save: t,
      userProfileConfig: i
    }
  ) : /* @__PURE__ */ a(bt, {});
}, UZ = ["all", "external", "none"], qm = [
  Ji.Disabled,
  Ji.Enabled,
  Ji.AdminView,
  Ji.AdminEdit
];
function VZ({
  realm: e,
  save: t,
  userProfileConfig: n
}) {
  const {
    environment: { serverBaseUrl: r }
  } = La(), { t: i } = H(), { realm: s } = ye(), o = Ke(), {
    control: l,
    handleSubmit: c,
    setValue: d,
    formState: { errors: u }
  } = o, p = aa(), m = p(Fn.Organizations), f = p(Fn.OpenId4VCI), g = () => {
    if (Pn(e, d), d(
      "unmanagedAttributePolicy",
      n.unmanagedAttributePolicy || qm[0]
    ), e.attributes?.["acr.loa.map"]) {
      const v = Object.entries(
        JSON.parse(e.attributes["acr.loa.map"])
      ).flatMap(([y, C]) => ({ key: y, value: C }));
      v.concat({ key: "", value: "" }), d(
        Fe("attributes.acr.loa.map"),
        v
      );
    }
  };
  ze(g, []);
  const b = c(
    async ({ unmanagedAttributePolicy: v, ...y }) => {
      const C = { ...n };
      v === Ji.Disabled ? delete C.unmanagedAttributePolicy : C.unmanagedAttributePolicy = v, await t({ ...y, upConfig: C });
    }
  );
  return /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(He, { ...o, children: /* @__PURE__ */ x(
    je,
    {
      isHorizontal: !0,
      role: "manage-realm",
      className: "pf-u-mt-lg",
      onSubmit: b,
      children: [
        /* @__PURE__ */ x(re, { label: i("realmName"), fieldId: "kc-realm-id", isRequired: !0, children: [
          /* @__PURE__ */ a(
            be,
            {
              name: "realm",
              control: l,
              rules: {
                required: { value: !0, message: i("required") }
              },
              defaultValue: "",
              render: ({ field: v }) => /* @__PURE__ */ a(
                ni,
                {
                  "data-testid": "realmName",
                  onChange: v.onChange,
                  children: v.value
                }
              )
            }
          ),
          u.realm && /* @__PURE__ */ a(
            kn,
            {
              "data-testid": "realm-id-error",
              message: u.realm.message
            }
          )
        ] }),
        /* @__PURE__ */ a(ve, { name: "displayName", label: i("displayName") }),
        /* @__PURE__ */ a(ve, { name: "displayNameHtml", label: i("htmlDisplayName") }),
        /* @__PURE__ */ a(
          ve,
          {
            name: Fe("attributes.frontendUrl"),
            type: "url",
            label: i("frontendUrl"),
            labelIcon: i("frontendUrlHelp")
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: "sslRequired",
            label: i("requireSsl"),
            labelIcon: i("requireSslHelp"),
            controller: {
              defaultValue: "none"
            },
            options: UZ.map((v) => ({
              key: v,
              value: i(`sslType.${v}`)
            }))
          }
        ),
        /* @__PURE__ */ a(
          re,
          {
            label: i("acrToLoAMapping"),
            fieldId: "acrToLoAMapping",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: i("acrToLoAMappingHelp"),
                fieldLabelId: "acrToLoAMapping"
              }
            ),
            children: /* @__PURE__ */ a(
              ad,
              {
                label: i("acrToLoAMapping"),
                name: Fe("attributes.acr.loa.map")
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          vt,
          {
            name: "userManagedAccessAllowed",
            label: i("userManagedAccess"),
            labelIcon: i("userManagedAccessHelp")
          }
        ),
        m && /* @__PURE__ */ a(
          vt,
          {
            name: "organizationsEnabled",
            label: i("organizationsEnabled"),
            labelIcon: i("organizationsEnabledHelp")
          }
        ),
        /* @__PURE__ */ a(
          at,
          {
            name: "unmanagedAttributePolicy",
            label: i("unmanagedAttributes"),
            labelIcon: i("unmanagedAttributesHelpText"),
            controller: {
              defaultValue: qm[0]
            },
            options: qm.map((v) => ({
              key: v,
              value: i(`unmanagedAttributePolicy.${v}`)
            }))
          }
        ),
        /* @__PURE__ */ a(
          re,
          {
            label: i("endpoints"),
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: i("endpointsHelp"),
                fieldLabelId: "endpoints"
              }
            ),
            fieldId: "kc-endpoints",
            children: /* @__PURE__ */ x(Xs, { children: [
              /* @__PURE__ */ a(Jn, { children: /* @__PURE__ */ a(
                ki,
                {
                  href: `${wi(
                    r
                  )}realms/${s}/.well-known/openid-configuration`,
                  title: i("openIDEndpointConfiguration")
                }
              ) }),
              /* @__PURE__ */ a(Jn, { children: /* @__PURE__ */ a(
                ki,
                {
                  href: `${wi(
                    r
                  )}realms/${s}/protocol/saml/descriptor`,
                  title: i("samlIdentityProviderMetadata")
                }
              ) }),
              f && /* @__PURE__ */ a(Jn, { children: /* @__PURE__ */ a(
                ki,
                {
                  href: `${wi(
                    r
                  )}realms/${s}/.well-known/openid-credential-issuer`,
                  title: i("oid4vcIssuerMetadata")
                }
              ) })
            ] })
          }
        ),
        /* @__PURE__ */ a(
          Mr,
          {
            name: "realmSettingsGeneralTab",
            reset: g,
            isSubmit: !0
          }
        )
      ]
    }
  ) }) });
}
const KZ = ({
  realm: e,
  refresh: t
}) => {
  const { adminClient: n } = de(), { t: r } = H(), { addAlert: i, addError: s } = we(), { realm: o } = ye(), l = async (c) => {
    const d = Array.isArray(c) ? Object.keys(c[0])[0] : Object.keys(c)[0];
    try {
      await n.realms.update(
        {
          realm: o
        },
        Array.isArray(c) ? c.reduce((u, p) => Object.assign(u, p), e) : Object.assign(e, c)
      ), i(r("enableSwitchSuccess", { switch: r(d) })), t();
    } catch (u) {
      s("enableSwitchError", u);
    }
  };
  return /* @__PURE__ */ x(Te, { variant: "light", children: [
    /* @__PURE__ */ a(
      Zn,
      {
        className: "kc-login-screen",
        title: r("loginScreenCustomization"),
        children: /* @__PURE__ */ x(je, { isHorizontal: !0, role: "manage-realm", children: [
          /* @__PURE__ */ a(
            re,
            {
              label: r("registrationAllowed"),
              fieldId: "kc-user-reg",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: r("userRegistrationHelpText"),
                  fieldLabelId: "registrationAllowed"
                }
              ),
              hasNoPaddingTop: !0,
              children: /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-user-reg-switch",
                  "data-testid": "user-reg-switch",
                  value: e.registrationAllowed ? "on" : "off",
                  label: r("on"),
                  labelOff: r("off"),
                  isChecked: e.registrationAllowed,
                  onChange: (c, d) => {
                    l({ registrationAllowed: d });
                  },
                  "aria-label": r("registrationAllowed")
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            re,
            {
              label: r("resetPasswordAllowed"),
              fieldId: "kc-forgot-pw",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: r("forgotPasswordHelpText"),
                  fieldLabelId: "resetPasswordAllowed"
                }
              ),
              hasNoPaddingTop: !0,
              children: /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-forgot-pw-switch",
                  "data-testid": "forgot-pw-switch",
                  name: "resetPasswordAllowed",
                  value: e.resetPasswordAllowed ? "on" : "off",
                  label: r("on"),
                  labelOff: r("off"),
                  isChecked: e.resetPasswordAllowed,
                  onChange: (c, d) => {
                    l({ resetPasswordAllowed: d });
                  },
                  "aria-label": r("resetPasswordAllowed")
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            re,
            {
              label: r("rememberMe"),
              fieldId: "kc-remember-me",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: r("rememberMeHelpText"),
                  fieldLabelId: "rememberMe"
                }
              ),
              hasNoPaddingTop: !0,
              children: /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-remember-me-switch",
                  "data-testid": "remember-me-switch",
                  value: e.rememberMe ? "on" : "off",
                  label: r("on"),
                  labelOff: r("off"),
                  isChecked: e.rememberMe,
                  onChange: (c, d) => {
                    l({ rememberMe: d });
                  },
                  "aria-label": r("rememberMe")
                }
              )
            }
          )
        ] })
      }
    ),
    /* @__PURE__ */ a(Zn, { className: "kc-email-settings", title: r("emailSettings"), children: /* @__PURE__ */ x(je, { isHorizontal: !0, role: "manage-realm", children: [
      /* @__PURE__ */ a(
        re,
        {
          label: r("registrationEmailAsUsername"),
          fieldId: "kc-email-as-username",
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("emailAsUsernameHelpText"),
              fieldLabelId: "registrationEmailAsUsername"
            }
          ),
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            Je,
            {
              id: "kc-email-as-username-switch",
              "data-testid": "email-as-username-switch",
              value: e.registrationEmailAsUsername ? "on" : "off",
              label: r("on"),
              labelOff: r("off"),
              isChecked: e.registrationEmailAsUsername,
              onChange: (c, d) => {
                l([
                  {
                    registrationEmailAsUsername: d
                  },
                  {
                    duplicateEmailsAllowed: !1
                  }
                ]);
              },
              "aria-label": r("registrationEmailAsUsername")
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: r("loginWithEmailAllowed"),
          fieldId: "kc-login-with-email",
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("loginWithEmailHelpText"),
              fieldLabelId: "loginWithEmailAllowed"
            }
          ),
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            Je,
            {
              id: "kc-login-with-email-switch",
              "data-testid": "login-with-email-switch",
              value: e.loginWithEmailAllowed ? "on" : "off",
              label: r("on"),
              labelOff: r("off"),
              isChecked: e.loginWithEmailAllowed,
              onChange: (c, d) => {
                l([
                  {
                    loginWithEmailAllowed: d
                  },
                  { duplicateEmailsAllowed: !1 }
                ]);
              },
              "aria-label": r("loginWithEmailAllowed")
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: r("duplicateEmailsAllowed"),
          fieldId: "kc-duplicate-emails",
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("duplicateEmailsHelpText"),
              fieldLabelId: "duplicateEmailsAllowed"
            }
          ),
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            Je,
            {
              id: "kc-duplicate-emails-switch",
              "data-testid": "duplicate-emails-switch",
              label: r("on"),
              labelOff: r("off"),
              isChecked: e.duplicateEmailsAllowed,
              onChange: (c, d) => {
                l({
                  duplicateEmailsAllowed: d
                });
              },
              isDisabled: e.loginWithEmailAllowed || e.registrationEmailAsUsername,
              "aria-label": r("duplicateEmailsAllowed")
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: r("verifyEmail"),
          fieldId: "kc-verify-email",
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("verifyEmailHelpText"),
              fieldLabelId: "verifyEmail"
            }
          ),
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            Je,
            {
              id: "kc-verify-email-switch",
              "data-testid": "verify-email-switch",
              name: "verifyEmail",
              value: e.verifyEmail ? "on" : "off",
              label: r("on"),
              labelOff: r("off"),
              isChecked: e.verifyEmail,
              onChange: (c, d) => {
                l({ verifyEmail: d });
              },
              "aria-label": r("verifyEmail")
            }
          )
        }
      )
    ] }) }),
    /* @__PURE__ */ a(
      Zn,
      {
        className: "kc-user-info-settings",
        title: r("userInfoSettings"),
        children: /* @__PURE__ */ a(je, { isHorizontal: !0, role: "manage-realm", children: /* @__PURE__ */ a(
          re,
          {
            label: r("editUsernameAllowed"),
            fieldId: "kc-edit-username",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: r("editUsernameHelp"),
                fieldLabelId: "editUsernameAllowed"
              }
            ),
            hasNoPaddingTop: !0,
            children: /* @__PURE__ */ a(
              Je,
              {
                id: "kc-edit-username-switch",
                "data-testid": "edit-username-switch",
                value: e.editUsernameAllowed ? "on" : "off",
                label: r("on"),
                labelOff: r("off"),
                isChecked: e.editUsernameAllowed,
                onChange: (c, d) => {
                  l({ editUsernameAllowed: d });
                },
                "aria-label": r("editUsernameAllowed")
              }
            )
          }
        ) })
      }
    )
  ] });
}, HZ = {
  name: "",
  description: "",
  conditions: [],
  enabled: !0,
  profiles: []
};
function zZ() {
  const { adminClient: e } = de(), { t } = H(), { realm: n } = ye(), { addAlert: r, addError: i } = we(), [s, o] = D(!1), [l, c] = D(), [d, u] = D(), [p, m] = D(), [f, g] = D([]), [b, v] = D(), [
    y,
    C
  ] = D(!1), [S, P] = D(), [w, A] = D(!1), [k, T] = D(), { policyName: O } = zt(), I = Xe(), _ = Ke({
    mode: "onChange",
    defaultValues: HZ
  }), { handleSubmit: E } = _, L = _.getValues();
  _e(
    async () => {
      const [ae, Oe] = await Promise.all([
        e.clientPolicies.listPolicies({
          includeGlobalPolicies: !0
        }),
        e.clientPolicies.listProfiles({
          includeGlobalProfiles: !0
        })
      ]);
      return { policies: ae, profiles: Oe };
    },
    ({ policies: ae, profiles: Oe }) => {
      let Ie = ae.policies?.find(
        (Se) => Se.name === O
      );
      Ie === void 0 && (Ie = ae.globalPolicies?.find(
        (Se) => Se.name === O
      ), o(Ie !== void 0));
      const Me = [
        ...Oe.globalProfiles ?? [],
        ...Oe.profiles ?? []
      ], ge = [
        ...ae.globalPolicies ?? [],
        ...ae.policies ?? []
      ];
      c(ae.policies ?? []), u(ae.globalPolicies ?? []), m(ge), Ie && (F(Ie), g(Me), v(Ie), C(!0));
    },
    []
  );
  const F = (ae) => {
    _.reset(ae);
  }, R = (p || []).filter(
    (ae) => ae.name === O
  ), M = R[0]?.conditions || [], U = R[0]?.profiles || [], G = Tt().componentTypes?.["org.keycloak.services.clientpolicy.condition.ClientPolicyConditionProvider"], N = async () => {
    const ae = _.getValues(), Oe = {
      ...ae
    }, Ie = () => l?.some(
      (ge) => ge.name === Oe.name
    ) ? l?.map(
      (ge) => ge.name === Oe.name ? Oe : ge
    ) : ae.name !== O ? l?.filter((ge) => ge.name !== O).concat(ae) : l?.concat(ae);
    try {
      await e.clientPolicies.updatePolicy({
        policies: Ie()
      }), r(
        t(O ? "updateClientPolicySuccess" : "createClientPolicySuccess"),
        pe.success
      ), I(Yi({ realm: n, policyName: ae.name })), C(!0);
    } catch (Me) {
      i("createClientPolicyError", Me);
    }
  }, [$, q] = Ve({
    titleKey: t("deleteClientPolicyConfirmTitle"),
    messageKey: t("deleteClientPolicyConfirm", {
      policyName: O
    }),
    continueButtonLabel: t("delete"),
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      const ae = l?.filter(
        (Oe) => Oe.name !== O
      );
      try {
        await e.clientPolicies.updatePolicy({
          policies: ae
        }), r(t("deleteClientPolicySuccess"), pe.success), I(
          zr({
            realm: n,
            tab: "policies"
          })
        );
      } catch (Oe) {
        i("deleteClientPolicyError", Oe);
      }
    }
  }), [V, B] = Ve({
    titleKey: t("deleteClientPolicyConditionConfirmTitle"),
    messageKey: t("deleteClientPolicyConditionConfirm", {
      condition: S?.name
    }),
    continueButtonLabel: t("delete"),
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      if (S?.name) {
        b?.conditions?.splice(S.idx, 1);
        try {
          await e.clientPolicies.updatePolicy({
            policies: l
          }), r(t("deleteConditionSuccess"), pe.success), I(
            Yi({ realm: n, policyName: L.name })
          );
        } catch (ae) {
          i("deleteConditionError", ae);
        }
      } else {
        const ae = l?.filter(
          (Oe) => Oe.name !== O
        );
        try {
          await e.clientPolicies.updatePolicy({
            policies: ae
          }), r(t("deleteClientSuccess"), pe.success), I(
            zr({
              realm: n,
              tab: "policies"
            })
          );
        } catch (Oe) {
          i("deleteClientError", Oe);
        }
      }
    }
  }), [Z, X] = Ve({
    titleKey: t("deleteClientPolicyProfileConfirmTitle"),
    messageKey: t("deleteClientPolicyProfileConfirm", {
      profileName: k?.name,
      policyName: O
    }),
    continueButtonLabel: t("delete"),
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      if (k?.name) {
        b?.profiles?.splice(k.idx, 1);
        try {
          await e.clientPolicies.updatePolicy({
            policies: l
          }), r(t("deleteClientPolicyProfileSuccess"), pe.success), _.setValue("profiles", b?.profiles || []), I(Yi({ realm: n, policyName: L.name }));
        } catch (ae) {
          i("deleteClientPolicyProfileError", ae);
        }
      } else {
        const ae = l?.filter(
          (Oe) => Oe.name !== O
        );
        try {
          await e.clientPolicies.updatePolicy({
            policies: ae
          }), r(t("deleteClientSuccess"), pe.success), I(
            zr({
              realm: n,
              tab: "policies"
            })
          );
        } catch (Oe) {
          i("deleteClientError", Oe);
        }
      }
    }
  }), Q = () => {
    b?.name !== void 0 && _.setValue("name", b.name), b?.description !== void 0 && _.setValue("description", b.description);
  }, ie = () => {
    A(!w);
  }, me = async (ae) => {
    const Oe = {
      ...b,
      profiles: U.concat(ae),
      conditions: b?.conditions
    }, Ie = l?.findIndex(
      (ge) => Oe.name === ge.name
    );
    if (Ie === void 0 || Ie === -1)
      return;
    const Me = [
      ...(l || []).slice(0, Ie),
      Oe,
      ...(l || []).slice(Ie + 1)
    ];
    try {
      await e.clientPolicies.updatePolicy({
        policies: Me
      }), c(Me);
      const ge = [...d || [], ...Me];
      m(ge), v(Oe), _.setValue("profiles", Oe.profiles), I(Yi({ realm: n, policyName: L.name })), r(t("addClientProfileSuccess"), pe.success);
    } catch (ge) {
      i("addClientProfileError", ge);
    }
  }, [ee, ce] = Ve({
    titleKey: "disablePolicyConfirmTitle",
    messageKey: "disablePolicyConfirm",
    continueButtonLabel: "disable",
    onConfirm: () => {
      _.setValue("enabled", !_.getValues().enabled), N();
    }
  });
  return l ? /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(B, {}),
    /* @__PURE__ */ a(X, {}),
    /* @__PURE__ */ a(
      DZ,
      {
        onConfirm: (ae) => {
          me(ae.map((Oe) => Oe.name));
        },
        allProfiles: U,
        open: w,
        toggleDialog: ie
      }
    ),
    /* @__PURE__ */ a(
      be,
      {
        name: "enabled",
        defaultValue: !0,
        control: _.control,
        render: ({ field: ae }) => /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(ce, {}),
          /* @__PURE__ */ a(q, {}),
          /* @__PURE__ */ a(
            wt,
            {
              titleKey: y || O ? O : "createPolicy",
              badges: [
                {
                  id: "global-client-policy-badge",
                  text: s ? /* @__PURE__ */ a(pn, { color: "blue", children: t("global") }) : ""
                }
              ],
              divider: !0,
              dropdownItems: (y || O) && !s ? [
                /* @__PURE__ */ a(
                  Ue,
                  {
                    value: "delete",
                    onClick: () => {
                      $();
                    },
                    "data-testid": "deleteClientPolicyDropdown",
                    children: t("deleteClientPolicy")
                  },
                  "delete"
                )
              ] : void 0,
              isReadOnly: s,
              isEnabled: ae.value,
              onToggle: (Oe) => {
                Oe ? (ae.onChange(Oe), N()) : ee();
              }
            }
          )
        ] })
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(
      je,
      {
        onSubmit: E(N),
        isHorizontal: !0,
        role: "view-realm",
        className: "pf-v5-u-mt-lg",
        children: /* @__PURE__ */ x(He, { ..._, children: [
          /* @__PURE__ */ a(
            ve,
            {
              name: "name",
              label: t("name"),
              rules: {
                required: { value: !0, message: t("required") },
                validate: (ae) => l.some((Oe) => Oe.name === ae) ? t("createClientProfileNameHelperText").toString() : !0
              }
            }
          ),
          /* @__PURE__ */ a(re, { label: t("description"), fieldId: "kc-description", children: /* @__PURE__ */ a(
            Rg,
            {
              "aria-label": t("description"),
              id: "kc-client-policy-description",
              "data-testid": "client-policy-description",
              ..._.register("description")
            }
          ) }),
          /* @__PURE__ */ x(ot, { children: [
            /* @__PURE__ */ a(
              z,
              {
                variant: "primary",
                type: "submit",
                "data-testid": "saveCreatePolicy",
                isDisabled: !_.formState.isValid || s,
                children: t("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                id: "cancelCreatePolicy",
                variant: "link",
                onClick: () => (y || O) && !s ? Q() : I(
                  zr({
                    realm: n,
                    tab: "policies"
                  })
                ),
                "data-testid": "cancelCreatePolicy",
                children: t(y && !s ? "reload" : "cancel")
              }
            )
          ] }),
          (y || _.formState.isSubmitted) && /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ x(Qn, { children: [
              /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ x(tt, { className: "kc-conditions", component: Qt.h1, children: [
                t("conditions"),
                /* @__PURE__ */ a(
                  le,
                  {
                    helpText: t("conditionsHelp"),
                    fieldLabelId: "conditions"
                  }
                )
              ] }) }),
              !s && /* @__PURE__ */ a(Dt, { align: { default: "alignRight" }, children: /* @__PURE__ */ a(
                z,
                {
                  id: "addCondition",
                  component: (ae) => /* @__PURE__ */ a(
                    Ae,
                    {
                      ...ae,
                      to: VX({
                        realm: n,
                        policyName: O
                      })
                    }
                  ),
                  variant: "link",
                  className: "kc-addCondition",
                  "data-testid": "addCondition",
                  icon: /* @__PURE__ */ a(_a, {}),
                  children: t("addCondition")
                }
              ) })
            ] }),
            M.length > 0 ? /* @__PURE__ */ a(Er, { "aria-label": t("conditions"), isCompact: !0, children: M.map((ae, Oe) => /* @__PURE__ */ a(
              Pa,
              {
                "aria-labelledby": "conditions-list-item",
                id: ae.condition,
                "data-testid": "conditions-list-item",
                children: /* @__PURE__ */ a(Va, { "data-testid": "conditions-list-row", children: /* @__PURE__ */ a(
                  Ua,
                  {
                    dataListCells: [
                      /* @__PURE__ */ x(
                        oa,
                        {
                          "data-testid": "condition-type",
                          children: [
                            Object.keys(ae.configuration).length !== 0 ? /* @__PURE__ */ a(
                              Ae,
                              {
                                "data-testid": `${ae.condition}-condition-link`,
                                to: HX({
                                  realm: n,
                                  conditionName: ae.condition,
                                  policyName: O
                                }),
                                className: "kc-condition-link",
                                children: ae.condition
                              },
                              ae.condition
                            ) : ae.condition,
                            G?.map(
                              (Ie) => Ie.id === ae.condition && /* @__PURE__ */ x(te, { children: [
                                /* @__PURE__ */ a(
                                  le,
                                  {
                                    helpText: Ie.helpText,
                                    fieldLabelId: ae.condition
                                  }
                                ),
                                !s && /* @__PURE__ */ a(
                                  z,
                                  {
                                    variant: "link",
                                    "aria-label": "remove-condition",
                                    isInline: !0,
                                    icon: /* @__PURE__ */ a(
                                      lu,
                                      {
                                        className: "kc-conditionType-trash-icon",
                                        "data-testid": `delete-${ae.condition}-condition`,
                                        onClick: () => {
                                          V(), P({
                                            idx: Oe,
                                            name: Ie.id
                                          });
                                        }
                                      }
                                    )
                                  }
                                )
                              ] })
                            )
                          ]
                        },
                        `name-${Oe}`
                      )
                    ]
                  }
                ) })
              },
              `list-item-${Oe}`
            )) }) : /* @__PURE__ */ x(te, { children: [
              /* @__PURE__ */ a(Pt, {}),
              /* @__PURE__ */ a(
                tt,
                {
                  className: "kc-emptyConditions",
                  component: Qt.h2,
                  children: t("emptyConditions")
                }
              )
            ] })
          ] }),
          (y || _.formState.isSubmitted) && /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ x(Qn, { children: [
              /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ x(
                tt,
                {
                  className: "kc-client-profiles",
                  component: Qt.h1,
                  children: [
                    t("clientProfiles"),
                    /* @__PURE__ */ a(
                      le,
                      {
                        helpText: t("clientProfilesHelp"),
                        fieldLabelId: "clientProfiles"
                      }
                    )
                  ]
                }
              ) }),
              !s && /* @__PURE__ */ a(Dt, { align: { default: "alignRight" }, children: /* @__PURE__ */ a(
                z,
                {
                  id: "addClientProfile",
                  variant: "link",
                  className: "kc-addClientProfile",
                  "data-testid": "addClientProfile",
                  icon: /* @__PURE__ */ a(_a, {}),
                  onClick: ie,
                  children: t("addClientProfile")
                }
              ) })
            ] }),
            U.length > 0 ? /* @__PURE__ */ a(Er, { "aria-label": t("profiles"), isCompact: !0, children: U.map((ae, Oe) => /* @__PURE__ */ a(
              Pa,
              {
                "aria-labelledby": `${ae}-profile-list-item`,
                id: `${ae}-profile-list-item`,
                "data-testid": "profile-list-item",
                children: /* @__PURE__ */ a(Va, { "data-testid": "profile-list-row", children: /* @__PURE__ */ a(
                  Ua,
                  {
                    dataListCells: [
                      /* @__PURE__ */ x(
                        oa,
                        {
                          "data-testid": "profile-name",
                          children: [
                            ae && /* @__PURE__ */ a(
                              Ae,
                              {
                                "data-testid": "profile-name-link",
                                to: Nu({
                                  realm: n,
                                  profileName: ae
                                }),
                                className: "kc-profile-link",
                                children: ae
                              },
                              ae
                            ),
                            U.filter((Ie) => Ie === ae).map((Ie) => /* @__PURE__ */ x(te, { children: [
                              /* @__PURE__ */ a(
                                le,
                                {
                                  helpText: f.find(
                                    (Me) => Ie === Me.name
                                  )?.description,
                                  fieldLabelId: ae
                                }
                              ),
                              !s && /* @__PURE__ */ a(
                                z,
                                {
                                  variant: "link",
                                  "aria-label": "remove-client-profile",
                                  isInline: !0,
                                  icon: /* @__PURE__ */ a(
                                    lu,
                                    {
                                      className: "kc-conditionType-trash-icon",
                                      "data-testid": "deleteClientProfileDropdown",
                                      onClick: () => {
                                        Z(), T({
                                          idx: Oe,
                                          name: Ie
                                        });
                                      }
                                    }
                                  )
                                }
                              )
                            ] }))
                          ]
                        },
                        "name"
                      )
                    ]
                  }
                ) })
              },
              ae
            )) }) : /* @__PURE__ */ x(te, { children: [
              /* @__PURE__ */ a(Pt, {}),
              /* @__PURE__ */ a(
                tt,
                {
                  className: "kc-emptyClientProfiles",
                  component: Qt.h2,
                  children: t("emptyProfiles")
                }
              )
            ] })
          ] })
        ] })
      }
    ) })
  ] }) : /* @__PURE__ */ a(bt, {});
}
const SI = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: zZ
}, Symbol.toStringTag, { value: "Module" }));
function qZ() {
  const { adminClient: e } = de(), { t } = H(), { addAlert: n, addError: r } = we(), i = Xe(), { realm: s } = ye(), [o, l] = D(!1), [c, d] = D(!1), [u, p] = D([]), [m, f] = D([]), [g, b] = D(), [v, y] = D(""), [C, S] = D([]), { policyName: P, conditionName: w } = na(), A = Tt(), k = Ke(), T = A.componentTypes?.["org.keycloak.services.clientpolicy.condition.ClientPolicyConditionProvider"], O = (_) => {
    k.reset({ config: _.configuration || {} });
  };
  _e(
    () => e.clientPolicies.listPolicies({
      includeGlobalPolicies: !0
    }),
    (_) => {
      if (p(_.policies ?? []), w) {
        let E = _.policies?.find(
          (R) => R.name === P
        );
        E === void 0 && (E = _.globalPolicies?.find(
          (R) => R.name === P
        ), d(E !== void 0));
        const L = E?.conditions?.find(
          (R) => R.condition === w
        ), F = T?.find(
          (R) => R.id === w
        );
        b(L), S(F?.properties), O(L);
      }
    },
    []
  );
  const I = async (_) => {
    const E = _.config, L = () => C.reduce((R, M) => (R[M.name] = E[M.name], R), {}), F = u.map((R) => {
      if (R.name !== P)
        return R;
      let M = R.conditions ?? [];
      if (w) {
        const U = {
          condition: g?.condition,
          configuration: L()
        }, K = M.findIndex(
          (N) => w === N.condition
        );
        if (K === -1)
          return;
        const G = [
          ...M.slice(0, K),
          U,
          ...M.slice(K + 1)
        ];
        return {
          ...R,
          conditions: G
        };
      }
      return M = M.concat({
        condition: m[0].condition,
        configuration: L()
      }), {
        ...R,
        conditions: M
      };
    });
    try {
      await e.clientPolicies.updatePolicy({
        policies: F
      }), p(F), i(Yi({ realm: s, policyName: P })), n(
        t(w ? "updateClientConditionSuccess" : "createClientConditionSuccess"),
        pe.success
      );
    } catch (R) {
      r("createClientConditionError", R);
    }
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: t(w ? c ? "viewCondition" : "editCondition" : "addCondition"),
        divider: !0
      }
    ),
    /* @__PURE__ */ x(Te, { variant: "light", children: [
      /* @__PURE__ */ x(
        je,
        {
          isHorizontal: !0,
          role: "manage-realm",
          isReadOnly: c,
          className: "pf-v5-u-mt-lg",
          onSubmit: k.handleSubmit(I),
          children: [
            /* @__PURE__ */ a(
              re,
              {
                label: t("conditionType"),
                fieldId: "conditionType",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: v ? `${Rf(v.replace(/-/g, " "))}Help` : "conditionsHelp",
                    fieldLabelId: "conditionType"
                  }
                ),
                children: /* @__PURE__ */ a(
                  be,
                  {
                    name: "conditions",
                    defaultValue: "any-client",
                    control: k.control,
                    render: ({ field: _ }) => /* @__PURE__ */ a(
                      ht,
                      {
                        placeholderText: t("selectACondition"),
                        className: "kc-conditionType-select",
                        "data-testid": "conditionType-select",
                        toggleId: "provider",
                        isDisabled: !!w,
                        onToggle: (E) => l(E),
                        onSelect: (E) => {
                          _.onChange(E), S(
                            E.properties
                          ), y(E.id), f([
                            {
                              condition: E.id
                            }
                          ]), l(!1);
                        },
                        selections: w || v,
                        variant: mt.single,
                        "aria-label": t("conditionType"),
                        isOpen: o,
                        children: T?.map((E) => /* @__PURE__ */ a(
                          Re,
                          {
                            selected: E.id === _.value,
                            description: t(
                              Rf(E.id.replace(/-/g, " "))
                            ),
                            value: E,
                            children: E.id
                          },
                          E.id
                        ))
                      }
                    )
                  }
                )
              }
            ),
            /* @__PURE__ */ a(He, { ...k, children: /* @__PURE__ */ a(gr, { properties: C }) }),
            !c && /* @__PURE__ */ x(ot, { children: [
              /* @__PURE__ */ a(
                z,
                {
                  variant: "primary",
                  type: "submit",
                  "data-testid": "addCondition-saveBtn",
                  isDisabled: v === "" && !w && c,
                  children: t(w ? "save" : "add")
                }
              ),
              /* @__PURE__ */ a(
                z,
                {
                  variant: "link",
                  "data-testid": "addCondition-cancelBtn",
                  onClick: () => i(
                    Yi({ realm: s, policyName: P })
                  ),
                  children: t("cancel")
                }
              )
            ] })
          ]
        }
      ),
      c && /* @__PURE__ */ a("div", { className: "kc-backToProfile", children: /* @__PURE__ */ a(
        z,
        {
          component: (_) => /* @__PURE__ */ a(
            Ae,
            {
              ..._,
              to: Yi({ realm: s, policyName: P })
            }
          ),
          variant: "primary",
          children: t("back")
        }
      ) })
    ] })
  ] });
}
const wI = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: qZ
}, Symbol.toStringTag, { value: "Module" })), GZ = ({
  isOpen: e,
  onClose: t
}) => {
  const { adminClient: n } = de(), { t: r } = H(), { realm: i } = ye(), { addAlert: s, addError: o } = we(), [l, c] = D(!1), [d, u] = D(!1), [p, m] = D(!1), f = l || d;
  async function g() {
    m(!0);
    try {
      const b = await n.realms.export({
        realm: i,
        exportClients: d,
        exportGroupsAndRoles: l
      });
      gs.saveAs(
        new Blob([ja(b)], {
          type: "application/json"
        }),
        "realm-export.json"
      ), s(r("exportSuccess"), pe.success), t();
    } catch (b) {
      o("exportFail", b);
    }
    m(!1);
  }
  return /* @__PURE__ */ x(
    ft,
    {
      variant: Et.small,
      title: r("partialExport"),
      isOpen: e,
      onClose: t,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "export-button",
            isDisabled: p,
            onClick: g,
            children: r("export")
          },
          "export"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel-button",
            variant: xe.link,
            onClick: t,
            children: r("cancel")
          },
          "cancel"
        )
      ],
      children: [
        /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ a(tt, { children: r("partialExportHeaderText") }) }),
        /* @__PURE__ */ x(
          St,
          {
            isHorizontal: !0,
            className: "keycloak__realm-settings__partial-import_form",
            children: [
              /* @__PURE__ */ a(
                re,
                {
                  label: r("includeGroupsAndRoles"),
                  fieldId: "include-groups-and-roles-check",
                  hasNoPaddingTop: !0,
                  children: /* @__PURE__ */ a(
                    Je,
                    {
                      id: "include-groups-and-roles-check",
                      "data-testid": "include-groups-and-roles-check",
                      isChecked: l,
                      onChange: (b, v) => c(v),
                      label: r("on"),
                      labelOff: r("off"),
                      "aria-label": r("includeGroupsAndRoles")
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                re,
                {
                  label: r("includeClients"),
                  fieldId: "include-clients-check",
                  hasNoPaddingTop: !0,
                  children: /* @__PURE__ */ a(
                    Je,
                    {
                      id: "include-clients-check",
                      "data-testid": "include-clients-check",
                      onChange: (b, v) => u(v),
                      isChecked: d,
                      label: r("on"),
                      labelOff: r("off"),
                      "aria-label": r("includeClients")
                    }
                  )
                }
              )
            ]
          }
        ),
        f && /* @__PURE__ */ a(
          En,
          {
            "data-testid": "warning-message",
            variant: "warning",
            component: "p",
            title: r("exportWarningTitle"),
            isInline: !0,
            children: r("exportWarningDescription")
          }
        )
      ]
    }
  );
}, zx = {
  users: !1,
  clients: !1,
  groups: !1,
  identityProviders: !1,
  realmRoles: !1,
  clientRoles: !1
}, WZ = (e) => {
  const { adminClient: t } = de(), { t: n } = H(), { realm: r } = ye(), [i, s] = D(), o = !!i, [l, c] = D(!1), [d, u] = D(!1), [p, m] = D(!1), [f, g] = D("FAIL"), [b, v] = D({}), [y, C] = D(), { addError: S } = we(), [P, w] = D(zx), A = Object.values(P).some(
    (ee) => ee
  ), k = () => {
    w(zx);
  }, T = () => {
    s(void 0), v({}), g("FAIL"), k();
  };
  ze(() => {
    m(!1), C(void 0), T();
  }, [e.open]);
  const O = (ee) => {
    T(), s(ee), Array.isArray(ee) ? ee.length > 0 && v(ee[0]) : v(ee);
  }, I = (ee) => {
    v(ee), c(!1), k();
  }, _ = (ee, ce) => {
    const ae = ce.currentTarget.name;
    w({
      ...P,
      [ae]: ee
    });
  }, E = (ee) => ee.map((ce) => /* @__PURE__ */ a(
    Re,
    {
      value: ce,
      "data-testid": ce.id + "-select-option",
      children: ce.realm || ce.id
    },
    ce.id
  )), L = (ee) => {
    g(ee), u(!1);
  }, F = () => [
    /* @__PURE__ */ a(Re, { value: "FAIL", children: n("FAIL") }, "fail"),
    /* @__PURE__ */ a(Re, { value: "SKIP", children: n("SKIP") }, "skip"),
    /* @__PURE__ */ a(Re, { value: "OVERWRITE", children: n("OVERWRITE") }, "overwrite")
  ], R = () => M("users") || M("groups") || M("clients") || M("identityProviders") || U() || K(), M = (ee) => {
    const ce = b[ee];
    return ce !== void 0 && ce.length > 0;
  }, U = () => {
    const ee = b.roles?.realm;
    return ee !== void 0 && ee.length > 0;
  }, K = () => {
    const ee = b.roles?.client;
    return ee !== void 0 && Object.keys(ee).length > 0;
  }, G = (ee) => o ? ee === "realmRoles" ? b.roles?.realm?.length ?? 0 : ee === "clientRoles" ? K() ? N(b.roles.client) : 0 : b[ee]?.length ?? 0 : 0, N = (ee) => Object.values(ee).reduce((ce, ae) => ce + ae.length, 0), $ = (ee, ce) => /* @__PURE__ */ a(Pa, { "aria-labelledby": `${ee}-list-item`, children: /* @__PURE__ */ a(Va, { children: /* @__PURE__ */ a(
    Ua,
    {
      dataListCells: [
        /* @__PURE__ */ a(oa, { children: /* @__PURE__ */ a(
          Zt,
          {
            id: `${ee}-checkbox`,
            label: `${G(ee)} ${ce}`,
            "aria-labelledby": `${ee}-checkbox`,
            name: ee,
            isChecked: P[ee],
            onChange: (ae, Oe) => _(Oe, ae),
            "data-testid": ee + "-checkbox"
          }
        ) }, ee)
      ]
    }
  ) }) }), q = () => {
    const ee = {
      ifResourceExists: f,
      id: b.id,
      realm: b.realm
    };
    return P.users && (ee.users = b.users), P.groups && (ee.groups = b.groups), P.identityProviders && (ee.identityProviders = b.identityProviders), P.clients && (ee.clients = b.clients), (P.realmRoles || P.clientRoles) && (ee.roles = b.roles, P.realmRoles || delete ee.roles?.realm, P.clientRoles || delete ee.roles?.client), ee;
  };
  async function V() {
    if (!p) {
      m(!0);
      try {
        const ee = await t.realms.partialImport({
          realm: r,
          rep: q()
        });
        C(ee);
      } catch (ee) {
        S("importFail", ee);
      }
      m(!1);
    }
  }
  const B = () => /* @__PURE__ */ a(
    ft,
    {
      variant: Et.medium,
      title: n("partialImport"),
      isOpen: e.open,
      onClose: e.toggleDialog,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-import",
            "data-testid": "import-button",
            isDisabled: !A,
            onClick: () => {
              V();
            },
            children: n("import")
          },
          "import"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel-button",
            variant: xe.link,
            onClick: () => {
              e.toggleDialog();
            },
            children: n("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ x(Xs, { hasGutter: !0, children: [
        /* @__PURE__ */ a(Jn, { children: /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ a(tt, { children: n("partialImportHeaderText") }) }) }),
        /* @__PURE__ */ a(Jn, { children: /* @__PURE__ */ a(
          Op,
          {
            id: "partial-import-file",
            allowEditingUploadedText: !0,
            onChange: O
          }
        ) }),
        o && R() && /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(Jn, { children: /* @__PURE__ */ a(Pt, {}) }),
          Array.isArray(i) && i.length > 1 && /* @__PURE__ */ x(Jn, { children: [
            /* @__PURE__ */ x(tt, { children: [
              n("selectRealm"),
              ":"
            ] }),
            /* @__PURE__ */ a(
              ht,
              {
                toggleId: "realm-selector",
                isOpen: l,
                typeAheadAriaLabel: n("realmSelector"),
                "aria-label": n("realmSelector"),
                onToggle: () => c(!l),
                selections: b.id,
                onSelect: (ee) => I(ee),
                placeholderText: b.realm || b.id,
                children: E(i)
              }
            )
          ] }),
          /* @__PURE__ */ x(Jn, { children: [
            /* @__PURE__ */ x(tt, { children: [
              n("chooseResources"),
              ":"
            ] }),
            /* @__PURE__ */ x(Er, { "aria-label": n("resourcesToImport"), isCompact: !0, children: [
              M("users") && $("users", n("users")),
              M("groups") && $("groups", n("groups")),
              M("clients") && $("clients", n("clients")),
              M("identityProviders") && $(
                "identityProviders",
                n("identityProviders")
              ),
              U() && $("realmRoles", n("realmRoles")),
              K() && $("clientRoles", n("clientRoles"))
            ] })
          ] }),
          /* @__PURE__ */ x(Jn, { children: [
            /* @__PURE__ */ x(tt, { children: [
              n("selectIfResourceExists"),
              ":"
            ] }),
            /* @__PURE__ */ a(
              ht,
              {
                isOpen: d,
                direction: "up",
                onToggle: () => {
                  u(!d);
                },
                selections: f,
                onSelect: L,
                placeholderText: n(f),
                children: F()
              }
            )
          ] })
        ] })
      ] })
    }
  ), Z = () => `${n("importAdded", {
    count: y?.added
  })}  ${n("importSkipped", {
    count: y?.skipped
  })} ${n("importOverwritten", {
    count: y?.overwritten
  })}`, X = async (ee = 0, ce = 15) => {
    if (!y)
      return [];
    const ae = Math.min(ee + ce, y.results.length);
    return y.results.slice(ee, ae);
  }, Q = (ee) => {
    switch (ee.action) {
      case "ADDED":
        return /* @__PURE__ */ a(pn, { color: "green", children: n("added") }, ee.id);
      case "SKIPPED":
        return /* @__PURE__ */ a(pn, { color: "orange", children: n("skipped") }, ee.id);
      case "OVERWRITTEN":
        return /* @__PURE__ */ a(pn, { color: "purple", children: n("overwritten") }, ee.id);
      default:
        return "";
    }
  }, ie = (ee) => {
    const ce = /* @__PURE__ */ new Map([
      ["CLIENT", n("clients")],
      ["REALM_ROLE", n("realmRoles")],
      ["USER", n("users")],
      ["CLIENT_ROLE", n("clientRoles")],
      ["IDP", n("identityProviders")],
      ["GROUP", n("groups")]
    ]);
    return /* @__PURE__ */ a("span", { children: ce.get(ee.resourceType) });
  }, me = () => /* @__PURE__ */ x(
    ft,
    {
      variant: Et.medium,
      title: n("partialImport"),
      isOpen: e.open,
      onClose: e.toggleDialog,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-close",
            "data-testid": "close-button",
            variant: xe.primary,
            onClick: () => {
              e.toggleDialog();
            },
            children: n("close")
          },
          "close"
        )
      ],
      children: [
        /* @__PURE__ */ a(
          En,
          {
            variant: "success",
            component: "p",
            isInline: !0,
            title: Z()
          }
        ),
        /* @__PURE__ */ a(
          xt,
          {
            loader: X,
            isPaginated: !0,
            ariaLabelKey: "partialImport",
            columns: [
              {
                name: "action",
                displayKey: "action",
                cellRenderer: Q
              },
              {
                name: "resourceType",
                displayKey: "type",
                cellRenderer: ie
              },
              {
                name: "resourceName",
                displayKey: "name"
              },
              {
                name: "id",
                displayKey: "id"
              }
            ]
          }
        )
      ]
    }
  );
  return y ? me() : B();
}, XZ = () => {
  const { adminClient: e } = de(), { t } = H(), { addAlert: n, addError: r } = we(), { realm: i } = ye(), s = Xe(), [o, l] = D(!1), [c, d] = D(), [u, p] = D(), [m, f] = D(0), [g, b] = D(), [v, y] = D(), C = () => f(m + 1), S = Ke({ mode: "onChange" });
  _e(
    () => e.clientPolicies.listPolicies({
      includeGlobalPolicies: !0
    }),
    (I) => {
      const _ = I.globalPolicies?.map(
        (F) => ({
          ...F,
          global: !0
        })
      ), E = I.policies?.map((F) => ({
        ...F,
        global: !1
      })), L = _?.concat(E ?? []);
      d(L), y(L || []), b(ja(L));
    },
    [m]
  );
  const P = async () => c ?? [], w = async () => {
    const I = S.getValues(), _ = c?.filter((E) => !E.global).map((E) => {
      const L = I[E.name], F = {
        ...E,
        enabled: L
      };
      return delete F.global, F;
    });
    try {
      await e.clientPolicies.updatePolicy({
        policies: _
      }), s(zr({ realm: i, tab: "policies" })), n(t("updateClientPolicySuccess"), pe.success);
    } catch (E) {
      r("updateClientPolicyError", E);
    }
  }, A = (I) => x1(I, "global"), k = async () => {
    if (g)
      try {
        const I = JSON.parse(g), _ = I.filter((L) => !L.global).map((L) => A(L)), E = I.filter((L) => L.global).map((L) => A(L));
        try {
          await e.clientPolicies.updatePolicy({
            policies: _,
            globalPolicies: E
          }), n(t("updateClientPoliciesSuccess"), pe.success), C();
        } catch (L) {
          r("updateClientPoliciesError", L);
        }
      } catch (I) {
        console.warn("Invalid json, ignoring value using {}"), r("invalidJsonClientPoliciesError", I);
      }
  }, [T, O] = Ve({
    titleKey: t("deleteClientPolicyConfirmTitle"),
    messageKey: t("deleteClientPolicyConfirm", {
      policyName: u?.name
    }),
    continueButtonLabel: t("delete"),
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      const I = c?.filter((_) => !_.global && _.name !== u?.name).map((_) => {
        const E = { ..._ };
        return delete E.global, E;
      });
      try {
        await e.clientPolicies.updatePolicy({
          policies: I
        }), n(t("deleteClientPolicySuccess"), pe.success), C();
      } catch (_) {
        r("deleteClientPolicyError", _);
      }
    }
  });
  return c ? /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(O, {}),
    /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ x(Qn, { className: "kc-policies-config-section", children: [
      /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(lr, { headingLevel: "h1", size: "md", children: t("policiesConfigType") }) }),
      /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
        sn,
        {
          isChecked: !o,
          name: "policiesView",
          onChange: () => l(!1),
          label: t("policiesConfigTypes.formView"),
          id: "formView-policiesView",
          "data-testid": "formView-policiesView",
          className: "kc-form-radio-btn pf-v5-u-mr-sm pf-v5-u-ml-sm"
        }
      ) }),
      /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
        sn,
        {
          isChecked: o,
          name: "policiesView",
          onChange: () => l(!0),
          label: t("policiesConfigTypes.jsonEditor"),
          id: "jsonEditor-policiesView",
          "data-testid": "jsonEditor-policiesView",
          className: "kc-editor-radio-btn"
        }
      ) })
    ] }) }),
    /* @__PURE__ */ a(Pt, {}),
    o ? /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a("div", { className: "pf-v5-u-mt-md pf-v5-u-ml-lg", children: /* @__PURE__ */ a(
        fr,
        {
          isLineNumbersVisible: !0,
          isLanguageLabelVisible: !0,
          isReadOnly: !1,
          code: g,
          language: Ln.json,
          height: "30rem",
          onChange: b
        }
      ) }),
      /* @__PURE__ */ x("div", { className: "pf-v5-u-mt-md", children: [
        /* @__PURE__ */ a(
          z,
          {
            variant: xe.primary,
            className: "pf-v5-u-mr-md pf-v5-u-ml-lg",
            "data-testid": "jsonEditor-policies-saveBtn",
            onClick: k,
            children: t("save")
          }
        ),
        /* @__PURE__ */ a(
          z,
          {
            variant: xe.link,
            "data-testid": "jsonEditor-reloadBtn",
            onClick: () => {
              b(ja(v));
            },
            children: t("reload")
          }
        )
      ] })
    ] }) : /* @__PURE__ */ a(
      xt,
      {
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: t("noClientPolicies"),
            instructions: t("noClientPoliciesInstructions"),
            primaryActionText: t("createClientPolicy"),
            onPrimaryAction: () => s(Sx({ realm: i }))
          }
        ),
        ariaLabelKey: "clientPolicies",
        searchPlaceholderKey: "clientPolicySearch",
        loader: P,
        toolbarItem: /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
          z,
          {
            id: "createPolicy",
            component: (I) => /* @__PURE__ */ a(Ae, { ...I, to: Sx({ realm: i }) }),
            "data-testid": "createPolicy",
            children: t("createClientPolicy")
          }
        ) }),
        isRowDisabled: (I) => !!I.global,
        actions: [
          {
            title: t("delete"),
            onRowClick: (I) => {
              T(), p(I);
            }
          }
        ],
        columns: [
          {
            name: "name",
            cellRenderer: ({ name: I }) => /* @__PURE__ */ a(Ae, { to: Yi({ realm: i, policyName: I }), children: I })
          },
          {
            name: "enabled",
            displayKey: "status",
            cellRenderer: (I) => /* @__PURE__ */ a(
              YZ,
              {
                clientPolicy: I,
                form: S,
                saveStatus: w,
                onConfirm: () => {
                  S.setValue(I.name, !1), w();
                }
              }
            )
          },
          {
            name: "description",
            cellFormatters: [Vi(t)]
          }
        ]
      },
      c.length
    )
  ] }) : /* @__PURE__ */ a(bt, {});
}, YZ = ({
  clientPolicy: e,
  form: t,
  saveStatus: n,
  onConfirm: r
}) => {
  const { t: i } = H(), [s, o] = Ve({
    titleKey: "disablePolicyConfirmTitle",
    messageKey: "disablePolicyConfirm",
    continueButtonLabel: "disable",
    onConfirm: r
  });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(o, {}),
    /* @__PURE__ */ a(
      be,
      {
        name: e.name,
        "data-testid": `${e.name}-switch`,
        defaultValue: e.enabled,
        control: t.control,
        render: ({ field: l }) => /* @__PURE__ */ a(
          Je,
          {
            label: i("enabled"),
            labelOff: i("disabled"),
            isChecked: l.value,
            isDisabled: e.global,
            onChange: (c, d) => {
              d ? (l.onChange(d), n()) : s();
            },
            "aria-label": e.name
          }
        )
      }
    )
  ] });
};
function JZ() {
  const { adminClient: e } = de(), { t } = H(), { realm: n } = ye(), { addAlert: r, addError: i } = we(), [s, o] = D(), [l, c] = D(), [d, u] = D(), [p, m] = D(!1), [f, g] = D(), [b, v] = D(0);
  _e(
    () => e.clientPolicies.listProfiles({
      includeGlobalProfiles: !0
    }),
    (k) => {
      c(k.globalProfiles);
      const T = k.globalProfiles?.map(
        (_) => ({
          ..._,
          global: !0
        })
      ), O = k.profiles?.map((_) => ({
        ..._,
        global: !1
      })), I = T?.concat(O ?? []);
      o(I || []), g(JSON.stringify(I, null, 2));
    },
    [b]
  );
  const y = async () => s ?? [], C = (k) => x1(k, "global"), [S, P] = Ve({
    titleKey: t("deleteClientProfileConfirmTitle"),
    messageKey: t("deleteClientProfileConfirm", {
      profileName: d?.name
    }),
    continueButtonLabel: t("delete"),
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      const k = s?.filter(
        (T) => T.name !== d?.name && !T.global
      ).map(
        (T) => C(T)
      );
      try {
        await e.clientPolicies.createProfiles({
          profiles: k,
          globalProfiles: l
        }), r(t("deleteClientSuccess"), pe.success), v(b + 1);
      } catch (T) {
        i("deleteClientError", T);
      }
    }
  }), w = (k) => /* @__PURE__ */ x(
    Ae,
    {
      to: Nu({
        realm: n,
        profileName: k.name
      }),
      children: [
        k.name,
        " ",
        k.global && /* @__PURE__ */ a(pn, { color: "blue", children: t("global") })
      ]
    },
    k.name
  );
  if (!s)
    return /* @__PURE__ */ a(bt, {});
  const A = async () => {
    if (f)
      try {
        const k = JSON.parse(f), T = k.filter((I) => !I.global).map((I) => C(I)), O = k.filter((I) => I.global).map((I) => C(I));
        try {
          await e.clientPolicies.createProfiles({
            profiles: T,
            globalProfiles: O
          }), r(t("updateClientProfilesSuccess"), pe.success), v(b + 1);
        } catch (I) {
          i("updateClientProfilesError", I);
        }
      } catch (k) {
        i("invalidJsonClientProfilesError", k);
      }
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(P, {}),
    /* @__PURE__ */ a(Te, { children: /* @__PURE__ */ x(Qn, { className: "kc-profiles-config-section", children: [
      /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(lr, { headingLevel: "h1", size: "md", children: t("profilesConfigType") }) }),
      /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
        sn,
        {
          isChecked: !p,
          name: "profilesView",
          onChange: () => m(!1),
          label: t("profilesConfigTypes.formView"),
          id: "formView-profilesView",
          className: "kc-form-radio-btn pf-v5-u-mr-sm pf-v5-u-ml-sm",
          "data-testid": "formView-profilesView"
        }
      ) }),
      /* @__PURE__ */ a(Dt, { children: /* @__PURE__ */ a(
        sn,
        {
          isChecked: p,
          name: "profilesView",
          onChange: () => m(!0),
          label: t("profilesConfigTypes.jsonEditor"),
          id: "jsonEditor-profilesView",
          className: "kc-editor-radio-btn",
          "data-testid": "jsonEditor-profilesView"
        }
      ) })
    ] }) }),
    /* @__PURE__ */ a(Pt, {}),
    p ? /* @__PURE__ */ x(re, { fieldId: "jsonEditor", children: [
      /* @__PURE__ */ a("div", { className: "pf-v5-u-mt-md pf-v5-u-ml-lg", children: /* @__PURE__ */ a(
        fr,
        {
          isLineNumbersVisible: !0,
          isLanguageLabelVisible: !0,
          isReadOnly: !1,
          code: f,
          language: Ln.json,
          height: "30rem",
          onChange: (k) => {
            g(k ?? "");
          }
        }
      ) }),
      /* @__PURE__ */ a(ot, { children: /* @__PURE__ */ x("div", { className: "pf-v5-u-mt-md", children: [
        /* @__PURE__ */ a(
          z,
          {
            variant: xe.primary,
            className: "pf-v5-u-mr-md pf-v5-u-ml-lg",
            onClick: A,
            "data-testid": "jsonEditor-saveBtn",
            children: t("save")
          }
        ),
        /* @__PURE__ */ a(
          z,
          {
            variant: xe.link,
            onClick: () => {
              g(ja(s));
            },
            "data-testid": "jsonEditor-reloadBtn",
            children: t("reload")
          }
        )
      ] }) })
    ] }) : /* @__PURE__ */ a(
      xt,
      {
        ariaLabelKey: "profiles",
        searchPlaceholderKey: "clientProfileSearch",
        loader: y,
        toolbarItem: /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
          z,
          {
            id: "createProfile",
            component: (k) => /* @__PURE__ */ a(
              Ae,
              {
                ...k,
                to: LX({ realm: n, tab: "profiles" })
              }
            ),
            "data-testid": "createProfile",
            children: t("createClientProfile")
          }
        ) }),
        isRowDisabled: (k) => k.global,
        actions: [
          {
            title: t("delete"),
            onRowClick: (k) => {
              u(k), S();
            }
          }
        ],
        columns: [
          {
            name: "name",
            displayKey: t("name"),
            cellRenderer: w
          },
          {
            name: "description",
            displayKey: t("clientProfileDescription")
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: t("emptyClientProfiles"),
            instructions: t("emptyClientProfilesInstructions")
          }
        )
      },
      s.length
    )
  ] });
}
const ZZ = ({
  realm: e,
  save: t
}) => {
  const { t: n } = H(), { setValue: r, control: i, handleSubmit: s, formState: o } = Ke(), l = rt({
    control: i,
    name: "offlineSessionMaxLifespanEnabled"
  }), c = () => {
    Pn(e, r);
  };
  return ze(c, []), /* @__PURE__ */ x(Te, { variant: "light", children: [
    /* @__PURE__ */ a(
      Zn,
      {
        title: n("SSOSessionSettings"),
        className: "kc-sso-session-template",
        children: /* @__PURE__ */ x(
          je,
          {
            isHorizontal: !0,
            role: "manage-realm",
            onSubmit: s(t),
            children: [
              /* @__PURE__ */ a(
                re,
                {
                  label: n("SSOSessionIdle"),
                  fieldId: "SSOSessionIdle",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("ssoSessionIdle"),
                      fieldLabelId: "SSOSessionIdle"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "ssoSessionIdleTimeout",
                      defaultValue: e.ssoSessionIdleTimeout,
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-sso-session-idle",
                          "data-testid": "sso-session-idle-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                re,
                {
                  label: n("SSOSessionMax"),
                  fieldId: "SSOSessionMax",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("ssoSessionMax"),
                      fieldLabelId: "SSOSessionMax"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "ssoSessionMaxLifespan",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-sso-session-max",
                          "data-testid": "sso-session-max-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                re,
                {
                  label: n("SSOSessionIdleRememberMe"),
                  fieldId: "SSOSessionIdleRememberMe",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("ssoSessionIdleRememberMe"),
                      fieldLabelId: "SSOSessionIdleRememberMe"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "ssoSessionIdleTimeoutRememberMe",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-sso-session-idle-remember-me",
                          "data-testid": "sso-session-idle-remember-me-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                re,
                {
                  label: n("SSOSessionMaxRememberMe"),
                  fieldId: "SSOSessionMaxRememberMe",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("ssoSessionMaxRememberMe"),
                      fieldLabelId: "SSOSessionMaxRememberMe"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "ssoSessionMaxLifespanRememberMe",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-sso-session-max-remember-me",
                          "data-testid": "sso-session-max-remember-me-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              )
            ]
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      Zn,
      {
        title: n("clientSessionSettings"),
        className: "kc-client-session-template",
        children: /* @__PURE__ */ x(
          je,
          {
            isHorizontal: !0,
            role: "manage-realm",
            className: "pf-v5-u-mt-lg",
            onSubmit: s(t),
            children: [
              /* @__PURE__ */ a(
                re,
                {
                  label: n("clientSessionIdle"),
                  fieldId: "clientSessionIdle",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("clientSessionIdleHelp"),
                      fieldLabelId: "clientSessionIdle"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "clientSessionIdleTimeout",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-client-session-idle",
                          "data-testid": "client-session-idle-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                re,
                {
                  label: n("clientSessionMax"),
                  fieldId: "clientSessionMax",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("clientSessionMaxHelp"),
                      fieldLabelId: "clientSessionMax"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "clientSessionMaxLifespan",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-client-session-max",
                          "data-testid": "client-session-max-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              )
            ]
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      Zn,
      {
        title: n("offlineSessionSettings"),
        className: "kc-offline-session-template",
        children: /* @__PURE__ */ x(
          je,
          {
            isHorizontal: !0,
            role: "manage-realm",
            className: "pf-v5-u-mt-lg",
            onSubmit: s(t),
            children: [
              /* @__PURE__ */ a(
                re,
                {
                  label: n("offlineSessionIdle"),
                  fieldId: "offlineSessionIdle",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("offlineSessionIdleHelp"),
                      fieldLabelId: "offlineSessionIdle"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "offlineSessionIdleTimeout",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-offline-session-idle",
                          "data-testid": "offline-session-idle-input",
                          "aria-label": "offline-session-idle-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                re,
                {
                  hasNoPaddingTop: !0,
                  label: n("offlineSessionMaxLimited"),
                  fieldId: "kc-offlineSessionMaxLimited",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("offlineSessionMaxLimitedHelp"),
                      fieldLabelId: "offlineSessionMaxLimited"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "offlineSessionMaxLifespanEnabled",
                      control: i,
                      defaultValue: !1,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        Je,
                        {
                          id: "kc-offline-session-max",
                          "data-testid": "offline-session-max-switch",
                          "aria-label": n("offlineSessionMaxLimited"),
                          label: n("enabled"),
                          labelOff: n("disabled"),
                          isChecked: d.value,
                          onChange: d.onChange
                        }
                      )
                    }
                  )
                }
              ),
              l && /* @__PURE__ */ a(
                re,
                {
                  label: n("offlineSessionMax"),
                  fieldId: "offlineSessionMax",
                  id: "offline-session-max-label",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("offlineSessionMaxHelp"),
                      fieldLabelId: "offlineSessionMax"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "offlineSessionMaxLifespan",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-offline-session-max",
                          "data-testid": "offline-session-max-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              )
            ]
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      Zn,
      {
        className: "kc-login-settings-template",
        title: n("loginSettings"),
        children: /* @__PURE__ */ x(
          je,
          {
            isHorizontal: !0,
            role: "manage-realm",
            className: "pf-v5-u-mt-lg",
            onSubmit: s(t),
            children: [
              /* @__PURE__ */ a(
                re,
                {
                  label: n("loginTimeout"),
                  id: "kc-login-timeout-label",
                  fieldId: "offlineSessionIdle",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("loginTimeoutHelp"),
                      fieldLabelId: "loginTimeout"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "accessCodeLifespanLogin",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-login-timeout",
                          "data-testid": "login-timeout-input",
                          "aria-label": "login-timeout-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                re,
                {
                  label: n("loginActionTimeout"),
                  fieldId: "loginActionTimeout",
                  id: "login-action-timeout-label",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: n("loginActionTimeoutHelp"),
                      fieldLabelId: "loginActionTimeout"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "accessCodeLifespanUserAction",
                      control: i,
                      render: ({ field: d }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-login-action-timeout",
                          "data-testid": "login-action-timeout-input",
                          value: d.value,
                          onChange: d.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ x(ot, { children: [
                /* @__PURE__ */ a(
                  z,
                  {
                    variant: "primary",
                    type: "submit",
                    "data-testid": "sessions-tab-save",
                    isDisabled: !o.isDirty,
                    children: n("save")
                  }
                ),
                /* @__PURE__ */ a(z, { variant: "link", onClick: c, children: n("revert") })
              ] })
            ]
          }
        )
      }
    )
  ] });
}, QZ = ({
  realm: e,
  save: t
}) => {
  const { t: n } = H(), [r, i] = D(!1), [s, o] = D(!1), [l, c] = D(!1), [d, u] = D(!1), { control: p, handleSubmit: m, setValue: f } = Ke(), g = Tt().themes, b = () => {
    Pn(e, f);
  };
  return ze(b, []), /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ x(
    je,
    {
      isHorizontal: !0,
      role: "manage-realm",
      className: "pf-v5-u-mt-lg",
      onSubmit: m(t),
      children: [
        /* @__PURE__ */ a(
          re,
          {
            label: n("loginTheme"),
            fieldId: "kc-login-theme",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: n("loginThemeHelp"),
                fieldLabelId: "loginTheme"
              }
            ),
            children: /* @__PURE__ */ a(
              be,
              {
                name: "loginTheme",
                control: p,
                defaultValue: "",
                render: ({ field: v }) => /* @__PURE__ */ a(
                  ht,
                  {
                    toggleId: "kc-login-theme",
                    onToggle: () => i(!r),
                    onSelect: (y) => {
                      v.onChange(y), i(!1);
                    },
                    selections: v.value,
                    variant: mt.single,
                    isOpen: r,
                    placeholderText: n("selectATheme"),
                    "data-testid": "select-login-theme",
                    "aria-label": n("selectLoginTheme"),
                    children: g.login.map((y, C) => /* @__PURE__ */ a(
                      Re,
                      {
                        selected: y.name === v.value,
                        value: y.name,
                        children: y.name
                      },
                      `login-theme-${C}`
                    ))
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          re,
          {
            label: n("accountTheme"),
            fieldId: "kc-account-theme",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: n("accountThemeHelp"),
                fieldLabelId: "accountTheme"
              }
            ),
            children: /* @__PURE__ */ a(
              be,
              {
                name: "accountTheme",
                control: p,
                defaultValue: "",
                render: ({ field: v }) => /* @__PURE__ */ a(
                  ht,
                  {
                    toggleId: "kc-account-theme",
                    onToggle: () => o(!s),
                    onSelect: (y) => {
                      v.onChange(y), o(!1);
                    },
                    selections: v.value,
                    variant: mt.single,
                    "aria-label": n("selectAccountTheme"),
                    isOpen: s,
                    placeholderText: n("selectATheme"),
                    "data-testid": "select-account-theme",
                    children: g.account.filter((y) => y.name !== "base").map((y, C) => /* @__PURE__ */ a(
                      Re,
                      {
                        selected: y.name === v.value,
                        value: y.name,
                        children: n(y.name)
                      },
                      `account-theme-${C}`
                    ))
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          re,
          {
            label: n("adminTheme"),
            fieldId: "kc-admin-ui-theme",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: n("adminThemeHelp"),
                fieldLabelId: "adminTheme"
              }
            ),
            children: /* @__PURE__ */ a(
              be,
              {
                name: "adminTheme",
                control: p,
                defaultValue: "",
                render: ({ field: v }) => /* @__PURE__ */ a(
                  ht,
                  {
                    toggleId: "kc-admin-ui-theme",
                    onToggle: () => c(!l),
                    onSelect: (y) => {
                      v.onChange(y), c(!1);
                    },
                    selections: v.value,
                    variant: mt.single,
                    isOpen: l,
                    placeholderText: n("selectATheme"),
                    "data-testid": "select-admin-theme",
                    "aria-label": n("selectAdminTheme"),
                    children: g.admin.filter((y) => y.name !== "base").map((y, C) => /* @__PURE__ */ a(
                      Re,
                      {
                        selected: y.name === v.value,
                        value: y.name,
                        children: n(y.name)
                      },
                      `admin-theme-${C}`
                    ))
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ a(
          re,
          {
            label: n("emailTheme"),
            fieldId: "kc-email-theme",
            labelIcon: /* @__PURE__ */ a(
              le,
              {
                helpText: n("emailThemeHelp"),
                fieldLabelId: "emailTheme"
              }
            ),
            children: /* @__PURE__ */ a(
              be,
              {
                name: "emailTheme",
                control: p,
                defaultValue: "",
                render: ({ field: v }) => /* @__PURE__ */ a(
                  ht,
                  {
                    toggleId: "kc-email-theme",
                    onToggle: () => u(!d),
                    onSelect: (y) => {
                      v.onChange(y), u(!1);
                    },
                    selections: v.value,
                    variant: mt.single,
                    isOpen: d,
                    placeholderText: n("selectATheme"),
                    "data-testid": "select-email-theme",
                    "aria-label": n("selectEmailTheme"),
                    children: g.email.map((y, C) => /* @__PURE__ */ a(
                      Re,
                      {
                        selected: y.name === v.value,
                        value: y.name,
                        children: n(y.name)
                      },
                      `email-theme-${C}`
                    ))
                  }
                )
              }
            )
          }
        ),
        /* @__PURE__ */ x(ot, { children: [
          /* @__PURE__ */ a(z, { variant: "primary", type: "submit", "data-testid": "themes-tab-save", children: n("save") }),
          /* @__PURE__ */ a(z, { variant: "link", onClick: b, children: n("revert") })
        ] })
      ]
    }
  ) });
}, eQ = ({
  realm: e,
  reset: t,
  save: n
}) => {
  const { t: r } = H(), i = Tt(), s = aa(), { whoAmI: o } = ga(), [l, c] = D(!1), d = gp(
    i.providers.signature.providers
  ), u = Ke(), { setValue: p, control: m } = u, f = rt({
    control: m,
    name: "offlineSessionMaxLifespanEnabled",
    defaultValue: e.offlineSessionMaxLifespanEnabled
  }), g = rt({
    control: m,
    name: "ssoSessionIdleTimeout",
    defaultValue: 36e3
  }), b = rt({
    control: m,
    name: "revokeRefreshToken",
    defaultValue: !1
  });
  return ze(() => {
    Pn(e, p);
  }, []), /* @__PURE__ */ x(Te, { variant: "light", children: [
    /* @__PURE__ */ a(Zn, { title: r("general"), className: "kc-sso-session-template", children: /* @__PURE__ */ x(
      je,
      {
        isHorizontal: !0,
        role: "manage-realm",
        onSubmit: u.handleSubmit(n),
        children: [
          /* @__PURE__ */ a(
            re,
            {
              label: r("defaultSigAlg"),
              fieldId: "kc-default-signature-algorithm",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: r("defaultSigAlgHelp"),
                  fieldLabelId: "algorithm"
                }
              ),
              children: /* @__PURE__ */ a(
                be,
                {
                  name: "defaultSignatureAlgorithm",
                  defaultValue: "RS256",
                  control: u.control,
                  render: ({ field: v }) => /* @__PURE__ */ a(
                    ht,
                    {
                      toggleId: "kc-default-sig-alg",
                      onToggle: () => c(!l),
                      onSelect: (y) => {
                        v.onChange(y.toString()), c(!1);
                      },
                      selections: v.value?.toString(),
                      variant: mt.single,
                      "aria-label": r("defaultSigAlg"),
                      isOpen: l,
                      "data-testid": "select-default-sig-alg",
                      children: d.map((y, C) => /* @__PURE__ */ a(
                        Re,
                        {
                          selected: y === v.value,
                          value: y,
                          children: y
                        },
                        `default-sig-alg-${C}`
                      ))
                    }
                  )
                }
              )
            }
          ),
          s(Fn.DeviceFlow) && /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(
              re,
              {
                label: r("oAuthDeviceCodeLifespan"),
                fieldId: "oAuthDeviceCodeLifespan",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: r("oAuthDeviceCodeLifespanHelp"),
                    fieldLabelId: "oAuthDeviceCodeLifespan"
                  }
                ),
                children: /* @__PURE__ */ a(
                  be,
                  {
                    name: "oauth2DeviceCodeLifespan",
                    defaultValue: 0,
                    control: u.control,
                    render: ({ field: v }) => /* @__PURE__ */ a(
                      ln,
                      {
                        id: "oAuthDeviceCodeLifespan",
                        "data-testid": "oAuthDeviceCodeLifespan",
                        value: v.value || 0,
                        onChange: v.onChange,
                        units: ["minute", "hour", "day"]
                      }
                    )
                  }
                )
              }
            ),
            /* @__PURE__ */ a(
              re,
              {
                label: r("oAuthDevicePollingInterval"),
                fieldId: "oAuthDevicePollingInterval",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: r("oAuthDevicePollingIntervalHelp"),
                    fieldLabelId: "oAuthDevicePollingInterval"
                  }
                ),
                children: /* @__PURE__ */ a(
                  be,
                  {
                    name: "oauth2DevicePollingInterval",
                    defaultValue: 0,
                    control: u.control,
                    render: ({ field: v }) => /* @__PURE__ */ a(
                      os,
                      {
                        id: "oAuthDevicePollingInterval",
                        value: v.value,
                        min: 0,
                        onPlus: () => v.onChange(Number(v?.value) + 1),
                        onMinus: () => v.onChange(
                          Number(v?.value) > 0 ? Number(v?.value) - 1 : 0
                        ),
                        onChange: (y) => {
                          const C = Number(y.currentTarget.value);
                          v.onChange(isNaN(C) ? 0 : C);
                        },
                        placeholder: r("oAuthDevicePollingInterval")
                      }
                    )
                  }
                )
              }
            ),
            /* @__PURE__ */ a(
              re,
              {
                label: r("shortVerificationUri"),
                fieldId: "shortVerificationUri",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: r("shortVerificationUriTooltipHelp"),
                    fieldLabelId: "shortVerificationUri"
                  }
                ),
                children: /* @__PURE__ */ a(
                  gt,
                  {
                    id: "shortVerificationUri",
                    placeholder: r("shortVerificationUri"),
                    ...u.register("attributes.shortVerificationUri")
                  }
                )
              }
            ),
            /* @__PURE__ */ a(
              re,
              {
                label: r("parRequestUriLifespan"),
                fieldId: "parRequestUriLifespan",
                labelIcon: /* @__PURE__ */ a(
                  le,
                  {
                    helpText: r("parRequestUriLifespanHelp"),
                    fieldLabelId: "parRequestUriLifespan"
                  }
                ),
                children: /* @__PURE__ */ a(
                  be,
                  {
                    name: "attributes.parRequestUriLifespan",
                    control: u.control,
                    render: ({ field: v }) => /* @__PURE__ */ a(
                      ln,
                      {
                        id: "parRequestUriLifespan",
                        className: "par-request-uri-lifespan",
                        "data-testid": "par-request-uri-lifespan-input",
                        "aria-label": "par-request-uri-lifespan",
                        value: v.value,
                        onChange: v.onChange
                      }
                    )
                  }
                )
              }
            )
          ] })
        ]
      }
    ) }),
    /* @__PURE__ */ a(
      Zn,
      {
        title: r("refreshTokens"),
        className: "kc-client-session-template",
        children: /* @__PURE__ */ x(
          je,
          {
            isHorizontal: !0,
            role: "manage-realm",
            className: "pf-v5-u-mt-lg",
            onSubmit: u.handleSubmit(n),
            children: [
              /* @__PURE__ */ a(
                re,
                {
                  hasNoPaddingTop: !0,
                  label: r("revokeRefreshToken"),
                  fieldId: "kc-revoke-refresh-token",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("revokeRefreshTokenHelp"),
                      fieldLabelId: "revokeRefreshToken"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "revokeRefreshToken",
                      control: u.control,
                      defaultValue: !1,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        Je,
                        {
                          id: "kc-revoke-refresh-token",
                          "data-testid": "revoke-refresh-token-switch",
                          "aria-label": r("revokeRefreshToken"),
                          label: r("enabled"),
                          labelOff: r("disabled"),
                          isChecked: v.value,
                          onChange: v.onChange
                        }
                      )
                    }
                  )
                }
              ),
              b && /* @__PURE__ */ a(
                re,
                {
                  label: r("refreshTokenMaxReuse"),
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("refreshTokenMaxReuseHelp"),
                      fieldLabelId: "refreshTokenMaxReuse"
                    }
                  ),
                  fieldId: "refreshTokenMaxReuse",
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "refreshTokenMaxReuse",
                      defaultValue: 0,
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        os,
                        {
                          type: "text",
                          id: "refreshTokenMaxReuseMs",
                          value: v.value,
                          onPlus: () => v.onChange(v.value + 1),
                          onMinus: () => v.onChange(v.value - 1),
                          onChange: (y) => v.onChange(
                            Number(y.target.value)
                          )
                        }
                      )
                    }
                  )
                }
              )
            ]
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      Zn,
      {
        title: r("accessTokens"),
        className: "kc-offline-session-template",
        children: /* @__PURE__ */ x(
          je,
          {
            isHorizontal: !0,
            role: "manage-realm",
            className: "pf-v5-u-mt-lg",
            onSubmit: u.handleSubmit(n),
            children: [
              /* @__PURE__ */ x(
                re,
                {
                  label: r("accessTokenLifespan"),
                  fieldId: "accessTokenLifespan",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("accessTokenLifespanHelp"),
                      fieldLabelId: "accessTokenLifespan"
                    }
                  ),
                  children: [
                    /* @__PURE__ */ a(
                      be,
                      {
                        name: "accessTokenLifespan",
                        control: u.control,
                        render: ({ field: v }) => /* @__PURE__ */ a(
                          ln,
                          {
                            validated: v.value > g ? "warning" : "default",
                            className: "kc-access-token-lifespan",
                            "data-testid": "access-token-lifespan-input",
                            "aria-label": "access-token-lifespan",
                            value: v.value,
                            onChange: v.onChange,
                            units: ["minute", "hour", "day"]
                          }
                        )
                      }
                    ),
                    /* @__PURE__ */ a(sl, { children: /* @__PURE__ */ a(Yr, { children: /* @__PURE__ */ a(Jr, { children: r("recommendedSsoTimeout", {
                      time: az(
                        g,
                        o.getLocale()
                      )
                    }) }) }) })
                  ]
                }
              ),
              /* @__PURE__ */ a(
                re,
                {
                  label: r("accessTokenLifespanImplicitFlow"),
                  fieldId: "accessTokenLifespanImplicitFlow",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("accessTokenLifespanImplicitFlow"),
                      fieldLabelId: "accessTokenLifespanImplicitFlow"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "accessTokenLifespanForImplicitFlow",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-access-token-lifespan-implicit",
                          "data-testid": "access-token-lifespan-implicit-input",
                          value: v.value,
                          onChange: v.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                re,
                {
                  label: r("clientLoginTimeout"),
                  fieldId: "clientLoginTimeout",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("clientLoginTimeoutHelp"),
                      fieldLabelId: "clientLoginTimeout"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "accessCodeLifespan",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-client-login-timeout",
                          "data-testid": "client-login-timeout-input",
                          "aria-label": "client-login-timeout",
                          value: v.value,
                          onChange: v.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              f && /* @__PURE__ */ a(
                re,
                {
                  label: r("offlineSessionMax"),
                  fieldId: "offlineSessionMax",
                  id: "offline-session-max-label",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("offlineSessionMaxHelp"),
                      fieldLabelId: "offlineSessionMax"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "offlineSessionMaxLifespan",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-offline-session-max",
                          "data-testid": "offline-session-max-input",
                          value: v.value,
                          onChange: v.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              )
            ]
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      Zn,
      {
        className: "kc-login-settings-template",
        title: r("actionTokens"),
        children: /* @__PURE__ */ x(
          je,
          {
            isHorizontal: !0,
            role: "manage-realm",
            className: "pf-v5-u-mt-lg",
            onSubmit: u.handleSubmit(n),
            children: [
              /* @__PURE__ */ a(
                re,
                {
                  label: r("userInitiatedActionLifespan"),
                  id: "kc-user-initiated-action-lifespan",
                  fieldId: "userInitiatedActionLifespan",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("userInitiatedActionLifespanHelp"),
                      fieldLabelId: "userInitiatedActionLifespan"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "actionTokenGeneratedByUserLifespan",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-user-initiated-action-lifespan",
                          "data-testid": "user-initiated-action-lifespan",
                          "aria-label": "user-initiated-action-lifespan",
                          value: v.value,
                          onChange: v.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                re,
                {
                  label: r("defaultAdminInitiated"),
                  fieldId: "defaultAdminInitiated",
                  id: "default-admin-initiated-label",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("defaultAdminInitiatedActionLifespanHelp"),
                      fieldLabelId: "defaultAdminInitiated"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: "actionTokenGeneratedByAdminLifespan",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-default-admin-initiated",
                          "data-testid": "default-admin-initated-input",
                          "aria-label": "default-admin-initated-input",
                          value: v.value,
                          onChange: v.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                tt,
                {
                  className: "kc-override-action-tokens-subtitle",
                  component: Qt.h1,
                  children: r("overrideActionTokens")
                }
              ),
              /* @__PURE__ */ a(
                re,
                {
                  label: r("emailVerification"),
                  fieldId: "emailVerification",
                  id: "email-verification",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("emailVerificationHelp"),
                      fieldLabelId: "emailVerification"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: `attributes.${Is(
                        "actionTokenGeneratedByUserLifespan.verify-email"
                      )}`,
                      defaultValue: "",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-email-verification",
                          "data-testid": "email-verification-input",
                          value: v.value,
                          onChange: (y) => v.onChange(y.toString()),
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                re,
                {
                  label: r("idpAccountEmailVerification"),
                  fieldId: "idpAccountEmailVerification",
                  id: "idp-acct-label",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("idpAccountEmailVerificationHelp"),
                      fieldLabelId: "idpAccountEmailVerification"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: `attributes.${Is(
                        "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email"
                      )}`,
                      defaultValue: "",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-idp-email-verification",
                          "data-testid": "idp-email-verification-input",
                          value: v.value,
                          onChange: v.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                re,
                {
                  label: r("forgotPassword"),
                  fieldId: "forgotPassword",
                  id: "forgot-password-label",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("forgotPasswordHelp"),
                      fieldLabelId: "forgotPassword"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: `attributes.${Is(
                        "actionTokenGeneratedByUserLifespan.reset-credentials"
                      )}`,
                      defaultValue: "",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-forgot-pw",
                          "data-testid": "forgot-pw-input",
                          value: v.value,
                          onChange: v.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ a(
                re,
                {
                  label: r("executeActions"),
                  fieldId: "executeActions",
                  id: "execute-actions",
                  labelIcon: /* @__PURE__ */ a(
                    le,
                    {
                      helpText: r("executeActionsHelp"),
                      fieldLabelId: "executeActions"
                    }
                  ),
                  children: /* @__PURE__ */ a(
                    be,
                    {
                      name: `attributes.${Is(
                        "actionTokenGeneratedByUserLifespan.execute-actions"
                      )}`,
                      defaultValue: "",
                      control: u.control,
                      render: ({ field: v }) => /* @__PURE__ */ a(
                        ln,
                        {
                          className: "kc-execute-actions",
                          "data-testid": "execute-actions-input",
                          value: v.value,
                          onChange: v.onChange,
                          units: ["minute", "hour", "day"]
                        }
                      )
                    }
                  )
                }
              ),
              /* @__PURE__ */ x(ot, { children: [
                /* @__PURE__ */ a(
                  z,
                  {
                    variant: "primary",
                    type: "submit",
                    "data-testid": "tokens-tab-save",
                    isDisabled: !u.formState.isDirty,
                    children: r("save")
                  }
                ),
                /* @__PURE__ */ a(z, { variant: "link", onClick: t, children: r("revert") })
              ] })
            ]
          }
        )
      }
    )
  ] });
}, tQ = () => {
  const { adminClient: e } = de(), { t } = H(), [n, r] = D(10), { realmRepresentation: i } = ye(), [s, o] = D(0), { addAlert: l, addError: c } = we(), { realm: d } = ye(), u = async (p) => {
    const m = p;
    try {
      await e.roles.createComposite(
        { roleId: i?.defaultRole.id, realm: d },
        m
      ), o(s + 1), l(t("addAssociatedRolesSuccess"), pe.success);
    } catch (f) {
      c("addAssociatedRolesError", f);
    }
  };
  return /* @__PURE__ */ x(
    Ka,
    {
      activeKey: n,
      onSelect: (p, m) => r(m),
      children: [
        /* @__PURE__ */ a(
          Ee,
          {
            id: "roles",
            eventKey: 10,
            title: /* @__PURE__ */ a(Pe, { children: t("defaultRoles") }),
            "data-testid": "default-roles-tab",
            children: /* @__PURE__ */ a(
              oo,
              {
                name: i?.defaultRole.name,
                id: i?.defaultRole.id,
                type: "roles",
                isManager: !0,
                save: (p) => u(p.map((m) => m.role))
              }
            )
          },
          s
        ),
        /* @__PURE__ */ a(
          Ee,
          {
            id: "groups",
            eventKey: 20,
            title: /* @__PURE__ */ a(Pe, { children: t("defaultGroups") }),
            "data-testid": "default-groups-tab",
            children: /* @__PURE__ */ a(xI, {})
          }
        )
      ]
    }
  );
}, nQ = ({
  save: e,
  onChange: t,
  value: n,
  realmName: r,
  refresh: i
}) => {
  const { adminClient: s } = de(), { environment: o } = La(), { t: l } = H(), { addAlert: c, addError: d } = we(), u = Xe(), [p, m] = D(!1), [f, g] = D(!1), { hasAccess: b } = Nt(), v = b("manage-realm"), [y, C] = Ve({
    titleKey: "disableConfirmTitle",
    messageKey: "disableConfirmRealm",
    continueButtonLabel: "disable",
    onConfirm: () => {
      t(!n), e();
    }
  }), [S, P] = Ve({
    titleKey: "deleteConfirmTitle",
    messageKey: "deleteConfirmRealmSetting",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await s.realms.del({ realm: r }), c(l("deletedSuccessRealmSetting"), pe.success), u(Ms({ realm: o.masterRealm })), i();
      } catch (w) {
        d("deleteErrorRealmSetting", w);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(C, {}),
    /* @__PURE__ */ a(P, {}),
    /* @__PURE__ */ a(
      WZ,
      {
        open: p,
        toggleDialog: () => m(!p)
      }
    ),
    /* @__PURE__ */ a(
      GZ,
      {
        isOpen: f,
        onClose: () => g(!1)
      }
    ),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: r,
        subKey: "realmSettingsExplain",
        helpUrl: sa.realmSettingsUrl,
        divider: !1,
        dropdownItems: [
          /* @__PURE__ */ a(
            Ue,
            {
              "data-testid": "openPartialImportModal",
              isDisabled: !v,
              onClick: () => {
                m(!0);
              },
              children: l("partialImport")
            },
            "import"
          ),
          /* @__PURE__ */ a(
            Ue,
            {
              "data-testid": "openPartialExportModal",
              isDisabled: !v,
              onClick: () => g(!0),
              children: l("partialExport")
            },
            "export"
          ),
          /* @__PURE__ */ a(Pt, {}, "separator"),
          /* @__PURE__ */ a(
            Ue,
            {
              isDisabled: !v,
              onClick: S,
              children: l("delete")
            },
            "delete"
          )
        ],
        isEnabled: n,
        isReadOnly: !v,
        onToggle: (w) => {
          w ? (t(w), e()) : y();
        }
      }
    )
  ] });
}, aQ = () => {
  const { adminClient: e } = de(), { t } = H(), { addAlert: n, addError: r } = we(), { realm: i, realmRepresentation: s, refresh: o } = ye(), l = xl(), c = Xe(), d = aa(), [u, p] = D(void 0), { control: m, setValue: f, getValues: g } = Ke({
    mode: "onChange"
  }), [b, v] = D(0), y = () => {
    v(b + 1);
  }, C = (Z = s) => {
    Pn(Z, f);
  };
  ze(() => {
    C(), (async () => {
      try {
        await Promise.all(
          l.map(async (X) => {
            try {
              const Q = await e.realms.getRealmLocalizationTexts({
                realm: i,
                selectedLocale: X
              });
              Q && p([Q]);
            } catch {
              return [];
            }
          })
        );
      } catch {
        return [];
      }
    })();
  }, [f, s]);
  const S = async (Z) => {
    Z = ta(Z), Z.attributes?.["acr.loa.map"] && typeof Z.attributes["acr.loa.map"] != "string" && (Z.attributes["acr.loa.map"] = JSON.stringify(
      Object.fromEntries(
        Z.attributes["acr.loa.map"].filter(({ key: Q }) => Q !== "").map(({ key: Q, value: ie }) => [Q, ie])
      )
    ));
    try {
      const Q = {
        ...s,
        ...Z,
        id: Z.realm
      };
      Q.smtpServer?.port === "" && (Q.smtpServer = { ...Q.smtpServer, port: null });
      const ie = await Ai(
        Ro(e.baseUrl, `admin/realms/${i}/ui-ext`),
        {
          method: "PUT",
          body: JSON.stringify(Q),
          headers: {
            "Content-Type": "application/json",
            ...so(await e.getAccessToken())
          }
        }
      );
      if (!ie.ok) throw new Error(ie.statusText);
      n(t("realmSaveSuccess"), pe.success);
    } catch (Q) {
      r("realmSaveError", Q);
    }
    i !== (Z.realm || s?.realm) && c(ac({ realm: Z.realm, tab: "general" })), o();
  }, P = (Z) => Kn(ac({ realm: i, tab: Z })), w = P("general"), A = P("login"), k = P("email"), T = P("themes"), O = P("keys"), I = P("events"), _ = P("localization"), E = P("security-defenses"), L = P("sessions"), F = P("tokens"), R = P("client-policies"), M = P("user-profile"), U = P("user-registration"), { hasAccess: K, hasSomeAccess: G } = Nt(), N = K("view-realm") && G("view-events", "manage-events"), $ = K("view-realm") && G("view-clients", "manage-clients"), q = (Z) => Kn(
    zr({
      realm: i,
      tab: Z
    })
  ), V = q("profiles"), B = q("policies");
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      be,
      {
        name: "enabled",
        defaultValue: !0,
        control: m,
        render: ({ field: Z }) => /* @__PURE__ */ a(
          nQ,
          {
            value: Z.value,
            onChange: Z.onChange,
            realmName: i,
            refresh: y,
            save: () => S(g())
          }
        )
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ x(
      Vn,
      {
        isBox: !0,
        mountOnEnter: !0,
        "aria-label": "realm-settings-tabs",
        defaultLocation: ac({
          realm: i,
          tab: "general"
        }),
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("general") }),
              "data-testid": "rs-general-tab",
              ...w,
              children: /* @__PURE__ */ a(BZ, { realm: s, save: S })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("login") }),
              "data-testid": "rs-login-tab",
              ...A,
              children: /* @__PURE__ */ a(KZ, { refresh: o, realm: s })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("email") }),
              "data-testid": "rs-email-tab",
              ...k,
              children: /* @__PURE__ */ a(jZ, { realm: s, save: S })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("themes") }),
              "data-testid": "rs-themes-tab",
              ...T,
              children: /* @__PURE__ */ a(QZ, { realm: s, save: S })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("keys") }),
              "data-testid": "rs-keys-tab",
              ...O,
              children: /* @__PURE__ */ a(dZ, {})
            }
          ),
          N && /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("events") }),
              "data-testid": "rs-realm-events-tab",
              ...I,
              children: /* @__PURE__ */ a(QJ, { realm: s })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("localization") }),
              "data-testid": "rs-localization-tab",
              ..._,
              children: /* @__PURE__ */ a(
                fZ,
                {
                  save: S,
                  realm: s,
                  tableData: u
                },
                b
              )
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("securityDefences") }),
              "data-testid": "rs-security-defenses-tab",
              ...E,
              children: /* @__PURE__ */ a(bZ, { realm: s, save: S })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("sessions") }),
              "data-testid": "rs-sessions-tab",
              ...L,
              children: /* @__PURE__ */ a(ZZ, { realm: s, save: S }, b)
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("tokens") }),
              "data-testid": "rs-tokens-tab",
              ...F,
              children: /* @__PURE__ */ a(eQ, { save: S, realm: s })
            }
          ),
          d(Fn.ClientPolicies) && /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("clientPolicies") }),
              "data-testid": "rs-clientPolicies-tab",
              ...R,
              children: /* @__PURE__ */ x(
                Vn,
                {
                  mountOnEnter: !0,
                  defaultLocation: zr({
                    realm: i,
                    tab: "profiles"
                  }),
                  children: [
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "profiles",
                        "data-testid": "rs-policies-clientProfiles-tab",
                        "aria-label": t("clientProfilesSubTab"),
                        title: /* @__PURE__ */ a(Pe, { children: t("profiles") }),
                        tooltip: /* @__PURE__ */ a(Ht, { content: t("clientPoliciesProfilesHelpText") }),
                        ...V,
                        children: /* @__PURE__ */ a(JZ, {})
                      }
                    ),
                    /* @__PURE__ */ a(
                      Ee,
                      {
                        id: "policies",
                        "data-testid": "rs-policies-clientPolicies-tab",
                        "aria-label": t("clientPoliciesSubTab"),
                        ...B,
                        title: /* @__PURE__ */ a(Pe, { children: t("policies") }),
                        tooltip: /* @__PURE__ */ a(Ht, { content: t("clientPoliciesPoliciesHelpText") }),
                        children: /* @__PURE__ */ a(XZ, {})
                      }
                    )
                  ]
                }
              )
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("userProfile") }),
              "data-testid": "rs-user-profile-tab",
              ...M,
              children: /* @__PURE__ */ a(LZ, { setTableData: p })
            }
          ),
          $ && /* @__PURE__ */ a(
            Ee,
            {
              title: /* @__PURE__ */ a(Pe, { children: t("userRegistration") }),
              "data-testid": "rs-userRegistration-tab",
              ...U,
              children: /* @__PURE__ */ a(tQ, {})
            }
          )
        ]
      }
    ) })
  ] });
};
function rQ() {
  return /* @__PURE__ */ a(aQ, {});
}
const Ap = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: rQ
}, Symbol.toStringTag, { value: "Module" })), iQ = ({
  handleModalToggle: e,
  save: t
}) => {
  const { adminClient: n } = de(), { t: r } = H(), { addAlert: i, addError: s } = we(), { realm: o, realmRepresentation: l, refresh: c } = ye(), { register: d, handleSubmit: u } = Ke(), p = (b, v) => {
    const y = b.successRequests?.length || 0, C = b.failedRequests?.length || 0;
    y === 0 && C === 0 ? i(r("noAdminUrlSet"), pe.warning) : C > 0 ? (i(
      r("" + v + "Success", {
        successNodes: b.successRequests
      }),
      pe.success
    ), i(
      r("" + v + "Fail", {
        failedNodes: b.failedRequests
      }),
      pe.danger
    )) : i(
      r("" + v + "Success", {
        successNodes: b.successRequests
      }),
      pe.success
    );
  }, m = async () => {
    try {
      await n.realms.update(
        { realm: o },
        {
          realm: o,
          notBefore: Date.now() / 1e3
        }
      ), i(r("notBeforeSuccess"), pe.success);
    } catch (b) {
      s("setToNowError", b);
    }
  }, f = async () => {
    try {
      await n.realms.update(
        { realm: o },
        {
          realm: o,
          notBefore: 0
        }
      ), i(r("notBeforeClearedSuccess"), pe.success), c();
    } catch (b) {
      s("notBeforeError", b);
    }
  }, g = async () => {
    const b = await n.realms.pushRevocation({
      realm: o
    });
    p(b, "notBeforePush"), c();
  };
  return /* @__PURE__ */ x(
    ft,
    {
      variant: Et.small,
      title: r("revocation"),
      isOpen: !0,
      onClose: e,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "set-to-now-button",
            variant: "tertiary",
            onClick: () => {
              m(), e();
            },
            form: "revocation-modal-form",
            children: r("setToNow")
          },
          "set-to-now"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "clear-not-before-button",
            variant: "tertiary",
            onClick: () => {
              f(), e();
            },
            form: "revocation-modal-form",
            children: r("clear")
          },
          "clear"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "modal-test-connection-button",
            variant: "secondary",
            onClick: () => {
              g(), e();
            },
            form: "revocation-modal-form",
            children: r("push")
          },
          "push"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            "data-testid": "cancel",
            variant: xe.link,
            onClick: () => {
              e();
            },
            children: r("cancel")
          },
          "cancel"
        )
      ],
      children: [
        /* @__PURE__ */ a(Rt, { className: "kc-revocation-description-text", children: r("revocationDescription") }),
        /* @__PURE__ */ a(
          St,
          {
            id: "revocation-modal-form",
            isHorizontal: !0,
            onSubmit: u(t),
            children: /* @__PURE__ */ a(
              re,
              {
                className: "kc-revocation-modal-form-group",
                label: r("notBefore"),
                name: "notBefore",
                fieldId: "not-before",
                children: /* @__PURE__ */ a(
                  gt,
                  {
                    "data-testid": "not-before-input",
                    autoFocus: !0,
                    readOnly: !0,
                    value: l?.notBefore === 0 ? r("none") : new Date(l?.notBefore * 1e3).toString(),
                    type: "text",
                    id: "not-before",
                    ...d("notBefore")
                  }
                )
              }
            )
          }
        )
      ]
    }
  );
}, sQ = ({ filterType: e, onChange: t }) => {
  const { t: n } = H(), [r, i] = st();
  return /* @__PURE__ */ x(
    ht,
    {
      "data-testid": "filter-session-type-select",
      isOpen: r,
      onToggle: i,
      toggleIcon: /* @__PURE__ */ a(ls, {}),
      onSelect: (s) => {
        t(s), i();
      },
      selections: e,
      children: [
        /* @__PURE__ */ a(Re, { "data-testid": "all-sessions-option", value: "ALL", children: n("sessionsType.allSessions") }),
        /* @__PURE__ */ a(Re, { "data-testid": "regular-sso-option", value: "REGULAR", children: n("sessionsType.regularSSO") }),
        /* @__PURE__ */ a(Re, { "data-testid": "offline-option", value: "OFFLINE", children: n("sessionsType.offline") })
      ]
    }
  );
};
function oQ() {
  const { adminClient: e } = de(), { t } = H(), [n, r] = D(0), i = () => r(n + 1), { addError: s } = we(), { realm: o } = ye(), [l, c] = D(!1), [d, u] = D("ALL"), [p, m] = D(!1), f = () => {
    c(!l);
  }, g = async (y, C, S) => {
    const P = await $s(
      e,
      "ui-ext/sessions",
      {
        first: `${y}`,
        max: `${C}`,
        type: d,
        search: S || ""
      }
    );
    return m(P.length === 0), P;
  }, [b, v] = Ve({
    titleKey: "logoutAllSessions",
    messageKey: "logoutAllDescription",
    continueButtonLabel: "confirm",
    onConfirm: async () => {
      try {
        await e.realms.logoutAll({ realm: o }), i();
      } catch (y) {
        s("logoutAllSessionsError", y);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(v, {}),
    /* @__PURE__ */ a(
      wt,
      {
        dropdownItems: [
          /* @__PURE__ */ a(
            Ue,
            {
              "data-testid": "revocation",
              component: "button",
              onClick: () => f(),
              children: t("revocation")
            },
            "toggle-modal"
          ),
          /* @__PURE__ */ a(
            Ue,
            {
              "data-testid": "logout-all",
              component: "button",
              isDisabled: p,
              onClick: b,
              children: t("signOutAllActiveSessions")
            },
            "delete-role"
          )
        ],
        titleKey: "titleSessions",
        subKey: "sessionExplain",
        helpUrl: sa.sessionsUrl
      }
    ),
    /* @__PURE__ */ x(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
      l && /* @__PURE__ */ a(
        iQ,
        {
          handleModalToggle: f,
          save: () => {
            f();
          }
        }
      ),
      /* @__PURE__ */ a(
        Tp,
        {
          loader: g,
          isSearching: d !== "ALL",
          isPaginated: !0,
          filter: /* @__PURE__ */ a(
            sQ,
            {
              filterType: d,
              onChange: (y) => {
                u(y), i();
              }
            }
          )
        },
        n
      )
    ] })
  ] });
}
const lQ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: oQ
}, Symbol.toStringTag, { value: "Module" })), cQ = ({
  credentialData: e,
  onClose: t
}) => {
  const { t: n } = H();
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.medium,
      title: n("passwordDataTitle"),
      "data-testid": "passwordDataDialog",
      isOpen: !0,
      onClose: t,
      children: /* @__PURE__ */ x(
        Cn,
        {
          "aria-label": n("passwordDataTitle"),
          "data-testid": "password-data-dialog",
          variant: Tc.compact,
          children: [
            /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
              /* @__PURE__ */ a(Ne, { children: n("showPasswordDataName") }),
              /* @__PURE__ */ a(Ne, { children: n("showPasswordDataValue") })
            ] }) }),
            /* @__PURE__ */ a(yn, { children: e.map((r, i) => /* @__PURE__ */ x(it, { children: [
              /* @__PURE__ */ a(ke, { children: r[0] }),
              /* @__PURE__ */ a(ke, { children: r[1] })
            ] }, i)) })
          ]
        }
      )
    }
  );
}, dQ = ({
  credential: e,
  resetPassword: t,
  toggleDelete: n,
  children: r
}) => {
  const i = ai(), { t: s } = H(), [o, l] = st(), [c, d] = st(), u = ba(), p = nt(() => {
    if (!e.credentialData)
      return [];
    const m = JSON.parse(
      e.credentialData
    );
    return u(Object.entries(m), ([f]) => f).map(([f, g]) => typeof g == "string" ? [f, g] : [f, JSON.stringify(g)]);
  }, [e.credentialData]);
  return /* @__PURE__ */ x(te, { children: [
    o && Object.keys(e).length !== 0 && /* @__PURE__ */ a(
      cQ,
      {
        credentialData: p,
        onClose: () => {
          l();
        }
      }
    ),
    /* @__PURE__ */ a(ke, { children: r }),
    /* @__PURE__ */ a(ke, { children: i(new Date(e.createdDate)) }),
    /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(
      z,
      {
        className: "kc-showData-btn",
        variant: "link",
        "data-testid": "showDataBtn",
        onClick: l,
        children: s("showDataBtn")
      }
    ) }),
    e.type === "password" ? /* @__PURE__ */ a(ke, { isActionCell: !0, children: /* @__PURE__ */ a(
      z,
      {
        variant: "secondary",
        "data-testid": "resetPasswordBtn",
        onClick: t,
        children: s("resetPasswordBtn")
      }
    ) }) : /* @__PURE__ */ a(ke, {}),
    /* @__PURE__ */ a(ke, { isActionCell: !0, children: /* @__PURE__ */ a(
      Kt,
      {
        popperProps: {
          position: "right"
        },
        onOpenChange: d,
        toggle: (m) => /* @__PURE__ */ a(
          ut,
          {
            ref: m,
            isExpanded: c,
            onClick: d,
            variant: "plain",
            "aria-label": "Kebab toggle",
            children: /* @__PURE__ */ a(hr, {})
          }
        ),
        isOpen: c,
        children: /* @__PURE__ */ a(Xt, { children: /* @__PURE__ */ a(
          Ue,
          {
            "data-testid": "deleteDropdownItem",
            component: "button",
            onClick: () => {
              n(), d();
            },
            children: s("deleteBtn")
          },
          e.id
        ) })
      }
    ) })
  ] });
}, uQ = ({
  userId: e,
  credential: t,
  isEditable: n,
  toggle: r
}) => {
  const { adminClient: i } = de(), { t: s } = H(), { register: o, handleSubmit: l } = Ke(), { addAlert: c, addError: d } = we();
  return /* @__PURE__ */ a(
    St,
    {
      isHorizontal: !0,
      className: "kc-form-userLabel",
      onSubmit: l(async (p) => {
        try {
          await i.users.updateCredentialLabel(
            {
              id: e,
              credentialId: t.id
            },
            p.userLabel || ""
          ), c(s("updateCredentialUserLabelSuccess"), pe.success), r();
        } catch (m) {
          d("updateCredentialUserLabelError", m);
        }
      }),
      children: /* @__PURE__ */ a(re, { fieldId: "kc-userLabel", className: "kc-userLabel-row", children: /* @__PURE__ */ a("div", { className: "kc-form-group-userLabel", children: n ? /* @__PURE__ */ x(te, { children: [
        /* @__PURE__ */ a(
          gt,
          {
            "data-testid": "userLabelFld",
            defaultValue: t.userLabel,
            className: "kc-userLabel",
            "aria-label": s("userLabel"),
            ...o("userLabel")
          }
        ),
        /* @__PURE__ */ x("div", { className: "kc-userLabel-actionBtns", children: [
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "editUserLabelAcceptBtn",
              variant: "link",
              className: "kc-editUserLabelAcceptBtn",
              "aria-label": s("acceptBtn"),
              type: "submit",
              icon: /* @__PURE__ */ a(Rs, {})
            }
          ),
          /* @__PURE__ */ a(
            z,
            {
              "data-testid": "editUserLabelCancelBtn",
              variant: "link",
              className: "kc-editUserLabel-cancelBtn",
              "aria-label": s("cancelBtn"),
              onClick: r,
              icon: /* @__PURE__ */ a(fa, {})
            }
          )
        ] })
      ] }) : /* @__PURE__ */ x(te, { children: [
        t.userLabel,
        /* @__PURE__ */ a(
          z,
          {
            "aria-label": s("editUserLabel"),
            variant: "link",
            className: "kc-editUserLabel-btn",
            onClick: r,
            "data-testid": "editUserLabelBtn",
            icon: /* @__PURE__ */ a(mw, {})
          }
        )
      ] }) }) })
    }
  );
}, pQ = () => {
  const { t: e } = H();
  return /* @__PURE__ */ a(
    vl,
    {
      name: "lifespan",
      label: e("lifespan"),
      labelIcon: e("lifespanHelp"),
      units: ["minute", "hour", "day"],
      menuAppendTo: "parent",
      controller: {}
    }
  );
}, OI = ({
  name: e,
  label: t,
  help: n
}) => {
  const { adminClient: r } = de(), { t: i } = H(), [s, o] = D([]);
  return _e(
    () => r.authenticationManagement.getRequiredActions(),
    (l) => {
      const c = l.filter((d) => d.enabled);
      o(c);
    },
    []
  ), /* @__PURE__ */ a(
    at,
    {
      name: e,
      label: i(t),
      labelIcon: i(n),
      controller: { defaultValue: [] },
      isScrollable: !0,
      maxMenuHeight: "375px",
      variant: mt.typeaheadMulti,
      chipGroupProps: {
        numChips: 3
      },
      placeholderText: i("requiredActionPlaceholder"),
      menuAppendTo: "parent",
      options: s.map(({ alias: l, name: c }) => ({
        key: l,
        value: c || l
      }))
    }
  );
}, mQ = ({
  userId: e,
  onClose: t
}) => {
  const { adminClient: n } = de(), { realmRepresentation: r } = ye(), { t: i } = H(), s = Ke({
    defaultValues: {
      actions: [],
      lifespan: r?.actionTokenGeneratedByAdminLifespan
    }
  }), { handleSubmit: o, control: l } = s, c = rt({
    control: l,
    name: "actions"
  }), d = !Iy(c), { addAlert: u, addError: p } = we(), m = async ({
    actions: f,
    lifespan: g
  }) => {
    if (!Iy(f))
      try {
        await n.users.executeActionsEmail({
          id: e,
          actions: f,
          lifespan: g
        }), u(i("credentialResetEmailSuccess"), pe.success), t();
      } catch (b) {
        p("credentialResetEmailError", b);
      }
  };
  return /* @__PURE__ */ a(
    hs,
    {
      variant: Et.medium,
      titleKey: "credentialReset",
      open: !0,
      onCancel: t,
      toggleDialog: t,
      continueButtonLabel: "credentialResetConfirm",
      onConfirm: () => {
        o(m)();
      },
      confirmButtonDisabled: !d,
      children: /* @__PURE__ */ a(
        St,
        {
          id: "userCredentialsReset-form",
          isHorizontal: !0,
          "data-testid": "credential-reset-modal",
          children: /* @__PURE__ */ x(He, { ...s, children: [
            /* @__PURE__ */ a(
              OI,
              {
                name: "actions",
                label: "resetAction",
                help: "resetActions"
              }
            ),
            /* @__PURE__ */ a(pQ, {})
          ] })
        }
      )
    }
  );
}, fQ = {
  password: "",
  passwordConfirmation: "",
  temporaryPassword: !0
}, hQ = ({
  user: e,
  isResetPassword: t,
  onAddRequiredActions: n,
  refresh: r,
  onClose: i
}) => {
  const { adminClient: s } = de(), { t: o } = H(), l = Ke({
    defaultValues: fQ,
    mode: "onChange"
  }), {
    register: c,
    formState: { isValid: d, errors: u },
    watch: p,
    handleSubmit: m,
    clearErrors: f,
    setError: g
  } = l, [b, v] = st(!0), y = p("password", ""), C = p("passwordConfirmation", ""), { addAlert: S, addError: P } = we(), [w, A] = Ve({
    titleKey: t ? "resetPasswordConfirm" : "setPasswordConfirm",
    messageKey: t ? o("resetPasswordConfirmText", { username: e.username }) : o("setPasswordConfirmText", { username: e.username }),
    continueButtonLabel: t ? "resetPassword" : "savePassword",
    continueButtonVariant: xe.danger,
    onConfirm: () => m(k)()
  }), k = async ({
    password: I,
    temporaryPassword: _
  }) => {
    try {
      await s.users.resetPassword({
        id: e.id,
        credential: {
          temporary: _,
          type: "password",
          value: I
        }
      }), _ && n?.([Wm.UPDATE_PASSWORD]);
      const L = (await s.users.getCredentials({
        id: e.id
      })).find((F) => F.type === "password");
      L && await s.users.updateCredentialLabel(
        {
          id: e.id,
          credentialId: L.id
        },
        o("defaultPasswordLabel")
      ), S(
        o(t ? "resetCredentialsSuccess" : "savePasswordSuccess"),
        pe.success
      ), r();
    } catch (E) {
      P(
        t ? "resetPasswordError" : "savePasswordError",
        E
      );
    }
    i();
  }, { onChange: T, ...O } = c("password", { required: !0 });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(A, {}),
    /* @__PURE__ */ a(
      hs,
      {
        titleKey: t ? o("resetPasswordFor", { username: e.username }) : o("setPasswordFor", { username: e.username }),
        open: b,
        onCancel: i,
        toggleDialog: v,
        onConfirm: w,
        confirmButtonDisabled: !d,
        continueButtonLabel: "save",
        children: /* @__PURE__ */ x(
          St,
          {
            id: "userCredentials-form",
            isHorizontal: !0,
            className: "keycloak__user-credentials__reset-form",
            children: [
              /* @__PURE__ */ x(
                re,
                {
                  name: "password",
                  label: o("password"),
                  fieldId: "password",
                  isRequired: !0,
                  children: [
                    /* @__PURE__ */ a(
                      Ic,
                      {
                        "data-testid": "passwordField",
                        id: "password",
                        onChange: (I) => {
                          T(I), C !== I.currentTarget.value ? g("passwordConfirmation", {
                            message: o("confirmPasswordDoesNotMatch").toString()
                          }) : f("passwordConfirmation");
                        },
                        ...O
                      }
                    ),
                    u.password && /* @__PURE__ */ a(kn, { message: o("required") })
                  ]
                }
              ),
              /* @__PURE__ */ x(
                re,
                {
                  name: "passwordConfirmation",
                  label: o(t ? "resetPasswordConfirmation" : "passwordConfirmation"),
                  fieldId: "passwordConfirmation",
                  isRequired: !0,
                  children: [
                    /* @__PURE__ */ a(
                      Ic,
                      {
                        "data-testid": "passwordConfirmationField",
                        id: "passwordConfirmation",
                        ...c("passwordConfirmation", {
                          required: !0,
                          validate: (I) => I === y || o("confirmPasswordDoesNotMatch").toString()
                        })
                      }
                    ),
                    u.passwordConfirmation && /* @__PURE__ */ a(
                      kn,
                      {
                        message: u.passwordConfirmation.message
                      }
                    )
                  ]
                }
              ),
              /* @__PURE__ */ a(He, { ...l, children: /* @__PURE__ */ a(
                vt,
                {
                  name: "temporaryPassword",
                  label: o("temporaryPassword"),
                  labelIcon: o("temporaryPasswordHelpText"),
                  defaultValue: "true"
                }
              ) })
            ]
          }
        )
      }
    )
  ] });
}, kI = ({ user: e }) => {
  const { adminClient: t } = de(), n = Nt(), { realm: r } = ye(), [i, s] = D();
  return _e(
    () => n.hasAccess("view-realm") ? t.components.findOne({
      id: e.federationLink
    }) : t.userStorageProvider.name({
      id: e.federationLink
    }),
    s,
    []
  ), i ? n.hasAccess("view-realm") ? /* @__PURE__ */ a(
    z,
    {
      variant: "link",
      component: (o) => /* @__PURE__ */ a(
        Ae,
        {
          ...o,
          to: $T({
            id: i.id,
            providerId: i.providerId,
            realm: r
          })
        }
      ),
      children: i.name
    }
  ) : /* @__PURE__ */ a("span", { children: i.name }) : null;
};
function ic(e) {
  const t = {};
  Object.entries(e.attributes || {}).forEach(
    ([r, i]) => t[Is(r)] = i
  );
  const n = Ec(e.unmanagedAttributes);
  return { ...e, attributes: t, unmanagedAttributes: n };
}
function TI(e) {
  const t = e.username?.trim(), n = Array.isArray(e.attributes) ? qo(e.attributes) : Object.fromEntries(
    Object.entries(e.attributes || {}).map(([i, s]) => [
      bO(i),
      s
    ])
  ), r = Array.isArray(e.unmanagedAttributes) ? qo(e.unmanagedAttributes) : e.unmanagedAttributes;
  for (const i in r)
    if (n && Object.hasOwn(n, i))
      throw Error(
        `Attribute ${i} is a managed attribute and is already available from the user details.`
      );
  return {
    ...e,
    username: t,
    attributes: { ...r, ...n },
    unmanagedAttributes: void 0
  };
}
function gQ(e = {}, t = {}) {
  return Object.fromEntries(
    Object.entries(e).filter(
      ([n]) => !Object.hasOwn(t, n)
    )
  );
}
const II = ({
  form: e,
  realm: t,
  user: n,
  bruteForce: { isBruteForceProtected: r, isLocked: i } = {
    isBruteForceProtected: !1,
    isLocked: !1
  },
  userProfileMetadata: s,
  save: o,
  refresh: l,
  onGroupsUpdate: c
}) => {
  const { adminClient: d } = de(), { t: u } = H(), p = ai(), { addAlert: m, addError: f } = we(), { hasAccess: g } = Nt(), b = g("manage-users"), v = g("view-realm"), { whoAmI: y } = ga(), C = y.getLocale(), { handleSubmit: S, setValue: P, control: w, reset: A, formState: k } = e, { errors: T } = k, [O, I] = D(
    []
  ), [_, E] = D(!1), [L, F] = D(i), R = Xe();
  ze(() => {
    P("requiredActions", n?.requiredActions || []);
  }, [n, P]);
  const M = async () => {
    try {
      await d.users.update({ id: n.id }, { enabled: !0 }), m(u("unlockSuccess"), pe.success), l && l();
    } catch (V) {
      f("unlockError", V);
    }
  }, U = (V) => {
    I(O.filter((B) => B.name !== V)), c?.(O);
  }, K = async (V) => {
    I([...O, ...V]), c?.([...O, ...V]);
  }, G = async (V) => {
    V.forEach(async (Z) => {
      try {
        await d.users.addToGroup({
          id: n.id,
          groupId: Z.id
        }), m(u("addedGroupMembership"), pe.success);
      } catch (X) {
        f("addedGroupMembershipError", X);
      }
    });
  }, N = () => {
    E(!_);
  }, $ = () => {
    n?.id ? A(ic(n)) : R(Vs({ realm: t.realm }));
  }, q = () => n?.userProfileMetadata?.attributes && !n?.userProfileMetadata?.attributes?.map((V) => V.readOnly).reduce((V, B) => V && B, !0);
  return /* @__PURE__ */ x(
    je,
    {
      isHorizontal: !0,
      onSubmit: S(o),
      role: "query-users",
      fineGrainedAccess: n?.access?.manage,
      className: "pf-v5-u-mt-lg",
      children: [
        /* @__PURE__ */ x(He, { ...e, children: [
          _ && /* @__PURE__ */ a(
            bl,
            {
              type: "selectMany",
              text: {
                title: "selectGroups",
                ok: "join"
              },
              canBrowse: b,
              onConfirm: (V) => {
                n?.id ? G(V || []) : K(V || []), E(!1);
              },
              onClose: () => E(!1),
              filterGroups: O
            }
          ),
          n?.id && /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(re, { label: u("id"), fieldId: "kc-id", isRequired: !0, children: /* @__PURE__ */ a(
              gt,
              {
                id: n.id,
                "aria-label": u("userID"),
                value: n.id,
                readOnly: !0
              }
            ) }),
            /* @__PURE__ */ a(
              re,
              {
                label: u("createdAt"),
                fieldId: "kc-created-at",
                isRequired: !0,
                children: /* @__PURE__ */ a(
                  gt,
                  {
                    value: p(new Date(n.createdTimestamp)),
                    id: "kc-created-at",
                    readOnly: !0
                  }
                )
              }
            )
          ] }),
          /* @__PURE__ */ a(
            OI,
            {
              name: "requiredActions",
              label: "requiredUserActions",
              help: "requiredUserActionsHelp"
            }
          ),
          n?.federationLink && v && /* @__PURE__ */ a(
            re,
            {
              label: u("federationLink"),
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: u("federationLinkHelp"),
                  fieldLabelId: "federationLink"
                }
              ),
              children: /* @__PURE__ */ a(kI, { user: n })
            }
          ),
          s ? /* @__PURE__ */ x(te, { children: [
            /* @__PURE__ */ a(
              vt,
              {
                name: "emailVerified",
                label: u("emailVerified"),
                labelIcon: u("emailVerifiedHelp")
              }
            ),
            /* @__PURE__ */ a(
              qU,
              {
                form: e,
                userProfileMetadata: s,
                hideReadOnly: !n,
                supportedLocales: t.supportedLocales || [],
                currentLocale: C,
                t: (V, B) => u(V, B)
              }
            )
          ] }) : /* @__PURE__ */ x(te, { children: [
            !t.registrationEmailAsUsername && /* @__PURE__ */ a(
              ve,
              {
                name: "username",
                label: u("username"),
                readOnly: !!n?.id && !t.editUsernameAllowed && t.editUsernameAllowed !== void 0,
                rules: {
                  required: u("required")
                }
              }
            ),
            /* @__PURE__ */ a(
              ve,
              {
                name: "email",
                label: u("email"),
                type: "email",
                rules: {
                  pattern: {
                    value: $d,
                    message: u("emailInvalid")
                  }
                }
              }
            ),
            /* @__PURE__ */ a(
              ro,
              {
                name: "emailVerified",
                label: u("emailVerified"),
                labelIcon: u("emailVerifiedHelp"),
                labelOn: u("yes"),
                labelOff: u("no")
              }
            ),
            /* @__PURE__ */ a(ve, { name: "firstName", label: u("firstName") }),
            /* @__PURE__ */ a(ve, { name: "lastName", label: u("lastName") })
          ] }),
          r && /* @__PURE__ */ a(
            re,
            {
              label: u("temporaryLocked"),
              fieldId: "temporaryLocked",
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: u("temporaryLockedHelp"),
                  fieldLabelId: "temporaryLocked"
                }
              ),
              children: /* @__PURE__ */ a(
                Je,
                {
                  "data-testid": "user-locked-switch",
                  id: "temporaryLocked",
                  onChange: (V, B) => {
                    M(), F(B);
                  },
                  isChecked: L,
                  isDisabled: !L,
                  label: u("on"),
                  labelOff: u("off")
                }
              )
            }
          ),
          !n?.id && /* @__PURE__ */ x(
            re,
            {
              label: u("groups"),
              fieldId: "kc-groups",
              labelIcon: /* @__PURE__ */ a(le, { helpText: u("groupsHelp"), fieldLabelId: "groups" }),
              children: [
                /* @__PURE__ */ a(
                  be,
                  {
                    name: "groups",
                    defaultValue: [],
                    control: w,
                    render: () => /* @__PURE__ */ x(nn, { children: [
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(vn, { categoryName: " ", children: O.map((V) => /* @__PURE__ */ a(
                        Vt,
                        {
                          onClick: () => U(V.name),
                          children: V.path
                        },
                        V.id
                      )) }) }),
                      /* @__PURE__ */ a(dt, { children: /* @__PURE__ */ a(
                        z,
                        {
                          id: "kc-join-groups-button",
                          onClick: N,
                          variant: "secondary",
                          "data-testid": "join-groups-button",
                          children: u("joinGroups")
                        }
                      ) })
                    ] })
                  }
                ),
                T.requiredActions && /* @__PURE__ */ a(kn, { message: u("required") })
              ]
            }
          )
        ] }),
        /* @__PURE__ */ a(
          Mr,
          {
            name: "user-creation",
            saveText: n?.id ? u("save") : u("create"),
            reset: $,
            resetText: n?.id ? u("revert") : u("cancel"),
            isDisabled: q(),
            isSubmit: !0
          }
        )
      ]
    }
  );
};
function bQ() {
  const { adminClient: e } = de(), { t } = H(), { addAlert: n, addError: r } = we(), i = Xe(), { realm: s, realmRepresentation: o } = ye(), l = Ke({ mode: "onChange" }), [c, d] = D([]), [u, p] = D();
  _e(
    () => e.users.getProfileMetadata({ realm: s }),
    (f) => {
      if (!f)
        throw new Error(t("notFound"));
      l.setValue("attributes.locale", o?.defaultLocale || ""), p(f);
    },
    []
  );
  const m = async (f) => {
    try {
      const g = await e.users.create({
        ...TI(f),
        groups: c.map((b) => b.path),
        enabled: !0
      });
      n(t("userCreated"), pe.success), i(
        ri({ id: g.id, realm: s, tab: "settings" })
      );
    } catch (g) {
      cO(g) ? Kf(g, l.setError, (b, v) => t(b, v)) : r("userCreateError", g);
    }
  };
  return !o || !u ? /* @__PURE__ */ a(bt, {}) : /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: t("createUser"),
        className: "kc-username-view-header"
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(
      II,
      {
        form: l,
        realm: o,
        userProfileMetadata: u,
        onGroupsUpdate: d,
        save: m
      }
    ) })
  ] });
}
const vQ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: bQ
}, Symbol.toStringTag, { value: "Module" })), yQ = ({
  isJoin: e = !0,
  existingOrgs: t,
  onAdd: n,
  onClose: r
}) => {
  const { adminClient: i } = de(), { t: s } = H(), [o, l] = D([]), c = async (d, u, p) => {
    const m = {
      first: d,
      search: p,
      max: u + t.length
    }, f = await i.organizations.find(m);
    return xg(f, t, "id");
  };
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.small,
      title: s(e ? "joinOrganization" : "sendInvitation"),
      isOpen: !0,
      onClose: r,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "join",
            variant: "primary",
            onClick: async () => {
              await n(o), r();
            },
            children: s(e ? "join" : "send")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel",
            variant: "link",
            onClick: r,
            children: s("cancel")
          },
          "cancel"
        )
      ],
      children: /* @__PURE__ */ a(
        xt,
        {
          loader: c,
          isPaginated: !0,
          ariaLabelKey: "organizationsList",
          searchPlaceholderKey: "searchOrganization",
          canSelectAll: !0,
          onSelect: (d) => l([...d]),
          columns: [
            {
              name: "name",
              displayKey: "organizationName"
            },
            {
              name: "description",
              cellRenderer: (d) => /* @__PURE__ */ a(Oa, { wrapModifier: "truncate", children: d.description })
            }
          ]
        }
      )
    }
  );
}, CQ = ({ user: e }) => {
  const { adminClient: t } = de(), { t: n } = H(), { id: r } = na(), i = Xe(), { addAlert: s, addError: o } = we(), { realm: l } = ye(), [c, d] = D(0), u = () => d(c + 1), [p, m, f] = st(), [g, b] = D(!0), [v, y] = D(!1), [C, S] = D([]), [P, w] = D([]), [A, k] = D(""), [T, O] = D(""), [I, _] = D([]), [E, L] = D(!1), F = [
    { value: "Managed", label: "Managed" },
    { value: "Unmanaged", label: "Unmanaged" }
  ], R = () => {
    L(!E);
  }, M = (q, V) => {
    I.includes(V) ? _(
      I.filter((B) => B !== V)
    ) : _([...I, V]), L(!1), u();
  };
  _e(
    async () => {
      const q = await t.organizations.memberOrganizations({ userId: r });
      let B = await Promise.all(
        q.map(async (Z) => {
          const X = Z.id, me = (await t.organizations.listMembers({
            orgId: X
          })).filter(
            (ee) => ee.username === e.username
          ).map((ee) => dV()(
            ee.membershipType
          ));
          return { ...Z, membershipType: me };
        })
      );
      return I.length > 0 && (B = B.filter(
        (Z) => Z.membershipType?.some(
          (X) => I.includes(X)
        )
      )), T && (B = B.filter(
        (Z) => Z.name?.toLowerCase().includes(T.toLowerCase())
      )), B;
    },
    S,
    [c, I, T]
  );
  const U = (q) => {
    k(q);
  }, K = () => {
    O(A), u();
  }, G = () => {
    k(""), O(""), u();
  }, [N, $] = Ve({
    titleKey: "removeConfirmOrganizationTitle",
    messageKey: n("organizationRemoveConfirm", { count: P.length }),
    continueButtonLabel: "remove",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await Promise.all(
          P.map(
            (V) => t.organizations.delMember({
              orgId: V.id,
              userId: r
            })
          )
        ), s(n("organizationRemovedSuccess")), await t.users.findOne({ id: r }) || i(Vs({ realm: l })), w([]), u();
      } catch (q) {
        o("organizationRemoveError", q);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    v && /* @__PURE__ */ a(
      yQ,
      {
        isJoin: g,
        existingOrgs: C,
        onClose: () => y(!1),
        onAdd: async (q) => {
          try {
            await Promise.all(
              q.map((V) => {
                const B = new FormData();
                return B.append("id", r), g ? t.organizations.addMember({
                  orgId: V.id,
                  userId: r
                }) : t.organizations.inviteExistingUser(
                  { orgId: V.id },
                  B
                );
              })
            ), s(
              n(
                g ? "userAddedOrganization" : "userInvitedOrganization",
                { count: q.length }
              )
            ), u();
          } catch (V) {
            o(
              g ? "userAddedOrganizationError" : "userInvitedError",
              V
            );
          }
        }
      }
    ),
    /* @__PURE__ */ a($, {}),
    /* @__PURE__ */ a(
      pO,
      {
        link: ({ organization: q, children: V }) => /* @__PURE__ */ a(
          Ae,
          {
            to: Nc({
              realm: l,
              id: q.id,
              tab: "settings"
            }),
            children: V
          },
          q.id
        ),
        loader: C,
        isSearching: T.length > 0 || I.length > 0,
        onSelect: (q) => w(q),
        deleteLabel: "remove",
        onDelete: (q) => {
          w([q]), N();
        },
        toolbarItem: /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            uI,
            {
              value: A,
              placeholder: n("searchMembers"),
              onChange: U,
              onSearch: K,
              onClear: G,
              "aria-label": n("searchMembers")
            }
          ) }),
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            Kt,
            {
              onOpenChange: f,
              toggle: (q) => /* @__PURE__ */ a(
                ut,
                {
                  ref: q,
                  id: "toggle-id",
                  onClick: m,
                  variant: "primary",
                  children: n("joinOrganization")
                }
              ),
              isOpen: p,
              children: /* @__PURE__ */ x(Xt, { children: [
                /* @__PURE__ */ a(
                  Ue,
                  {
                    onClick: () => {
                      b(!0), y(!0);
                    },
                    children: n("joinOrganization")
                  },
                  "join"
                ),
                /* @__PURE__ */ a(
                  Ue,
                  {
                    onClick: () => {
                      b(!1), y(!0);
                    },
                    children: n("sendInvite")
                  },
                  "invite"
                )
              ] })
            }
          ) }),
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            z,
            {
              "data-testid": "removeOrganization",
              variant: "secondary",
              isDisabled: P.length === 0,
              onClick: () => N(),
              children: n("remove")
            }
          ) }),
          /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
            dI,
            {
              filterPlaceholderText: n("filterByMembershipType"),
              isOpen: E,
              options: F,
              onOpenChange: (q) => L(q),
              onToggleClick: R,
              onSelect: M,
              selectedItems: I,
              width: "260px"
            }
          ) })
        ] }),
        children: /* @__PURE__ */ a(
          ct,
          {
            message: n("emptyUserOrganizations"),
            instructions: n("emptyUserOrganizationsInstructions"),
            secondaryActions: [
              {
                text: n("joinOrganization"),
                onClick: () => {
                  b(!0), y(!0);
                }
              },
              {
                text: n("sendInvitation"),
                onClick: () => {
                  b(!1), y(!0);
                }
              }
            ]
          }
        )
      }
    )
  ] });
}, xQ = ({
  user: e,
  save: t,
  upConfig: n
}) => {
  const r = De();
  return /* @__PURE__ */ a(Te, { variant: Cr.light, children: /* @__PURE__ */ a(
    vb,
    {
      form: r,
      save: t,
      fineGrainedAccess: e.access?.manage,
      reset: () => r.reset({
        ...r.getValues(),
        attributes: ic(e).attributes
      }),
      name: "unmanagedAttributes",
      isDisabled: Ji.AdminView == n?.unmanagedAttributePolicy
    }
  ) });
}, SQ = () => {
  const { adminClient: e } = de(), [t, n] = D(), { t: r } = H(), { addAlert: i, addError: s } = we(), o = ai(), [l, c] = D(0), { id: d } = zt(), u = (v) => wr(v, (y) => y.clientId?.toUpperCase()), p = () => c((/* @__PURE__ */ new Date()).getTime()), m = async () => {
    const v = await e.users.listConsents({ id: d });
    return u(v);
  }, f = ({
    grantedClientScopes: v
  }) => /* @__PURE__ */ a(vn, { className: "kc-consents-chip-group", children: v.map((y) => /* @__PURE__ */ a(Vt, { isReadOnly: !0, className: "kc-consents-chip", children: y }, y)) }), [g, b] = Ve({
    titleKey: "revokeClientScopesTitle",
    messageKey: r("revokeClientScopes", {
      clientId: t?.clientId
    }),
    continueButtonLabel: "revoke",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.users.revokeConsent({
          id: d,
          clientId: t.clientId
        }), p(), i(r("deleteGrantsSuccess"), pe.success);
      } catch (v) {
        s("deleteGrantsError", v);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(b, {}),
    /* @__PURE__ */ a(
      xt,
      {
        loader: m,
        ariaLabelKey: "roleList",
        searchPlaceholderKey: " ",
        columns: [
          {
            name: "clientId",
            displayKey: "Client",
            cellFormatters: [un()],
            transforms: [Ft(20)]
          },
          {
            name: "grantedClientScopes",
            displayKey: "grantedClientScopes",
            cellRenderer: f,
            transforms: [Ft(30)]
          },
          {
            name: "createdDate",
            displayKey: "created",
            transforms: [Ft(20)],
            cellRenderer: ({ createdDate: v }) => v ? o(new Date(v)) : "—"
          },
          {
            name: "lastUpdatedDate",
            displayKey: "lastUpdated",
            transforms: [Ft(10)],
            cellRenderer: ({ lastUpdatedDate: v }) => v ? o(new Date(v)) : "—"
          }
        ],
        actions: [
          {
            title: r("revoke"),
            onRowClick: (v) => {
              n(v), g();
            }
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            hasIcon: !0,
            icon: pw,
            message: r("noConsents"),
            instructions: r("noConsentsText")
          }
        )
      },
      l
    )
  ] });
}, qx = ({
  credential: e,
  userId: t,
  toggleDelete: n,
  resetPassword: r,
  isUserLabelEdit: i,
  setIsUserLabelEdit: s,
  refresh: o
}) => /* @__PURE__ */ a(
  dQ,
  {
    credential: e,
    toggleDelete: () => n(e),
    resetPassword: r,
    children: /* @__PURE__ */ a(
      uQ,
      {
        credential: e,
        userId: t,
        isEditable: i?.status && i.rowKey === e.id || !1,
        toggle: () => {
          s({
            status: !i?.status,
            rowKey: e.id
          }), i?.status && o();
        }
      }
    )
  },
  e.id
), wQ = ({ user: e, setUser: t }) => {
  const { adminClient: n } = de(), { t: r } = H(), { addAlert: i, addError: s } = we(), [o, l] = D(0), c = () => l(o + 1), [d, u] = D(!1), [p, m] = D(!1), [f, g] = D([]), [b, v] = D([]), [y, C] = D({}), [S, P] = D(!1), [w, A] = D(), k = Ct(null), [T, O] = D({
    draggedItemId: "",
    draggingToItemIndex: -1,
    dragging: !1,
    tempItemOrder: [""]
  });
  _e(
    () => n.users.getCredentials({ id: e.id }),
    (ge) => {
      g(ge);
      const Se = ge.reduce((W, Y) => (W[Y.type] = W[Y.type] || [], W[Y.type].push(Y), W), /* @__PURE__ */ Object.create(null)), J = Object.keys(Se).map(
        (W) => ({ key: W, value: Se[W] })
      );
      v(
        J.map((W) => ({
          ...W,
          isExpanded: !1
        }))
      );
    },
    [o]
  );
  const I = f.find(
    (ge) => ge.type === "password"
  ), _ = () => u(!d), E = () => {
    m(!p);
  }, L = () => {
    P(!0), _();
  }, [F, R] = Ve({
    titleKey: r("deleteCredentialsConfirmTitle"),
    messageKey: r("deleteCredentialsConfirm"),
    continueButtonLabel: r("delete"),
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await n.users.deleteCredential({
          id: e.id,
          credentialId: y.id
        }), i(r("deleteCredentialsSuccess"), pe.success), l((ge) => ge + 1);
      } catch (ge) {
        s("deleteCredentialsError", ge);
      }
    }
  }), M = nt(
    () => b.flatMap((ge) => [
      ge.value.map(({ id: Se }) => Se).toString(),
      ...ge.isExpanded ? ge.value.map((Se) => Se.id) : []
    ]),
    [b]
  ), U = (ge) => {
    ge.dataTransfer.effectAllowed = "move", ge.dataTransfer.setData("text/plain", ge.currentTarget.id);
    const Se = ge.currentTarget.id;
    ge.currentTarget.classList.add(Ze.modifiers.ghostRow), ge.currentTarget.setAttribute("aria-pressed", "true"), O({ ...T, draggedItemId: Se, dragging: !0 });
  }, K = (ge, Se, J) => {
    const W = ge.indexOf(Se);
    if (W === J)
      return ge;
    const Y = [...ge];
    return Y.splice(J, 0, Y.splice(W, 1)[0]), Y;
  }, G = (ge) => {
    if (!k.current) return;
    const Se = k.current, J = Array.from(Se.children);
    J.every(({ id: W }, Y) => W === ge[Y]) || (Se.replaceChildren(), ge.forEach((W) => {
      Se.appendChild(J.find(({ id: Y }) => Y === W));
    }));
  }, N = () => {
    k.current && (Array.from(k.current.children).forEach((ge) => {
      ge.classList.remove(Ze.modifiers.ghostRow), ge.setAttribute("aria-pressed", "false");
    }), O({
      ...T,
      draggedItemId: "",
      draggingToItemIndex: -1,
      dragging: !1
    }));
  }, $ = (ge) => {
    q(ge) || (G(M), O({ ...T, draggingToItemIndex: -1 }));
  }, q = (ge) => {
    if (!k.current) return !1;
    const Se = k.current.getBoundingClientRect();
    return ge.clientX > Se.x && ge.clientX < Se.x + Se.width && ge.clientY > Se.y && ge.clientY < Se.y + Se.height;
  }, V = (ge) => {
    q(ge) ? Q(T.draggedItemId, T.tempItemOrder) : N();
  }, B = (ge) => {
    ge.preventDefault();
    const J = ge.target.closest("tr");
    if (!(!J || k.current && !k.current.contains(J) || J.id === T.draggedItemId)) {
      const W = J.id, Y = Array.from(
        k.current?.children || []
      ).findIndex((he) => he.id === W);
      if (Y === T.draggingToItemIndex)
        return;
      const oe = K(
        M,
        T.draggedItemId,
        Y
      );
      G(oe), O({
        ...T,
        draggingToItemIndex: Y,
        tempItemOrder: oe
      });
    }
  }, Z = (ge) => {
    t({
      ...e,
      requiredActions: [...e.requiredActions ?? [], ...ge]
    });
  }, X = ({ target: ge }) => {
    ge instanceof HTMLTableRowElement && (ge.classList.remove(Ze.modifiers.ghostRow), ge.setAttribute("aria-pressed", "false"), O({
      ...T,
      draggedItemId: "",
      draggingToItemIndex: -1,
      dragging: !1
    }));
  }, Q = async (ge, Se) => {
    const J = M.findIndex((he) => he === ge), W = Se.findIndex((he) => he === ge), Y = W - J, oe = ge.split(",");
    try {
      for (const he of oe)
        for (let ue = 0; ue < Math.abs(Y); ue++)
          Y > 0 ? await n.users.moveCredentialPositionDown({
            id: e.id,
            credentialId: he,
            newPreviousCredentialId: M[W]
          }) : await n.users.moveCredentialPositionUp({
            id: e.id,
            credentialId: he
          });
      c(), i(r("updatedCredentialMoveSuccess"), pe.success);
    } catch (he) {
      s("updatedCredentialMoveError", he);
    }
  }, ie = (ge) => {
    C(ge), F();
  }, me = e.federationLink, [ee, ce] = D([]);
  if (_e(
    () => n.users.getUserStorageCredentialTypes({ id: e.id }),
    ce,
    []
  ), !ee)
    return /* @__PURE__ */ a(bt, {});
  const ae = ee.length > 0, Oe = b.length === 0, Ie = !e.credentials || e.credentials.length === 0, Me = Oe && Ie && !ae;
  return /* @__PURE__ */ x(te, { children: [
    d && /* @__PURE__ */ a(
      hQ,
      {
        user: e,
        isResetPassword: S,
        onAddRequiredActions: Z,
        refresh: c,
        onClose: () => u(!1)
      }
    ),
    p && /* @__PURE__ */ a(
      mQ,
      {
        userId: e.id,
        onClose: () => m(!1)
      }
    ),
    /* @__PURE__ */ a(R, {}),
    e.email && !Me && /* @__PURE__ */ a(
      z,
      {
        className: "kc-resetCredentialBtn-header",
        variant: "primary",
        "data-testid": "credentialResetBtn",
        onClick: () => m(!0),
        children: r("credentialResetBtn")
      }
    ),
    f.length !== 0 && I === void 0 && /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a(
        z,
        {
          className: "kc-setPasswordBtn-tbl",
          "data-testid": "setPasswordBtn-table",
          variant: "primary",
          form: "userCredentials-form",
          onClick: () => {
            u(!0);
          },
          children: r("setPassword")
        }
      ),
      /* @__PURE__ */ a(Pt, {})
    ] }),
    b.length !== 0 && /* @__PURE__ */ a(Te, { variant: Cr.light, children: /* @__PURE__ */ x(Cn, { variant: "compact", children: [
      /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { className: "kc-table-header", children: [
        /* @__PURE__ */ a(Ne, { children: /* @__PURE__ */ a(
          le,
          {
            helpText: r("userCredentialsHelpText"),
            fieldLabelId: "userCredentialsHelpTextLabel"
          }
        ) }),
        /* @__PURE__ */ a(Ne, { "aria-hidden": "true" }),
        /* @__PURE__ */ a(Ne, { children: r("type") }),
        /* @__PURE__ */ a(Ne, { children: r("userLabel") }),
        /* @__PURE__ */ a(Ne, { children: r("createdAt") }),
        /* @__PURE__ */ a(Ne, { children: r("data") }),
        /* @__PURE__ */ a(Ne, { "aria-hidden": "true" }),
        /* @__PURE__ */ a(Ne, { "aria-hidden": "true" })
      ] }) }),
      /* @__PURE__ */ a(
        yn,
        {
          ref: k,
          onDragOver: B,
          onDrop: B,
          onDragLeave: $,
          children: b.map((ge, Se) => /* @__PURE__ */ x(Ea, { children: [
            /* @__PURE__ */ x(
              it,
              {
                id: ge.value.map(({ id: J }) => J).toString(),
                draggable: b.length > 1,
                onDrop: V,
                onDragEnd: X,
                onDragStart: U,
                children: [
                  /* @__PURE__ */ a(
                    ke,
                    {
                      className: b.length === 1 ? "one-row" : "",
                      draggableRow: {
                        id: `draggable-row-${ge.value.map(
                          ({ id: J }) => J
                        )}`
                      }
                    }
                  ),
                  ge.value.length > 1 ? /* @__PURE__ */ a(
                    ke,
                    {
                      className: "kc-expandRow-btn",
                      expand: {
                        rowIndex: Se,
                        isExpanded: ge.isExpanded,
                        onToggle: (J, W) => {
                          const Y = b.map(
                            (oe, he) => he === W ? {
                              ...oe,
                              isExpanded: !oe.isExpanded
                            } : oe
                          );
                          v(Y);
                        }
                      }
                    }
                  ) : /* @__PURE__ */ a(ke, {}),
                  /* @__PURE__ */ a(
                    ke,
                    {
                      dataLabel: `columns-${ge.key}`,
                      className: "kc-notExpandableRow-credentialType",
                      "data-testid": "credentialType",
                      children: Ia(ge.key)
                    }
                  ),
                  ge.value.length <= 1 && ge.value.map((J) => /* @__PURE__ */ a(
                    qx,
                    {
                      credential: J,
                      userId: e.id,
                      toggleDelete: ie,
                      resetPassword: L,
                      isUserLabelEdit: w,
                      setIsUserLabelEdit: A,
                      refresh: c
                    },
                    J.id
                  ))
                ]
              }
            ),
            ge.isExpanded && ge.value.map((J) => /* @__PURE__ */ x(
              it,
              {
                id: J.id,
                draggable: !0,
                onDrop: V,
                onDragEnd: X,
                onDragStart: U,
                children: [
                  /* @__PURE__ */ a(ke, {}),
                  /* @__PURE__ */ a(
                    ke,
                    {
                      className: "kc-draggable-dropdown-type-icon",
                      draggableRow: {
                        id: `draggable-row-${ge.value.map(
                          ({ id: W }) => W
                        )}`
                      }
                    }
                  ),
                  /* @__PURE__ */ a(
                    ke,
                    {
                      dataLabel: `child-columns-${J.id}`,
                      className: "kc-expandableRow-credentialType",
                      children: Ia(J.type)
                    }
                  ),
                  /* @__PURE__ */ a(
                    qx,
                    {
                      credential: J,
                      userId: e.id,
                      toggleDelete: ie,
                      resetPassword: L,
                      isUserLabelEdit: w,
                      setIsUserLabelEdit: A,
                      refresh: c
                    }
                  )
                ]
              },
              J.id
            ))
          ] }, ge.key))
        }
      )
    ] }) }),
    me && ae && /* @__PURE__ */ a(Te, { variant: Cr.light, children: /* @__PURE__ */ x(Cn, { variant: "compact", children: [
      /* @__PURE__ */ a(On, { children: /* @__PURE__ */ x(it, { children: [
        /* @__PURE__ */ a(Ne, { children: r("type") }),
        /* @__PURE__ */ a(Ne, { children: r("providedBy") }),
        /* @__PURE__ */ a(Ne, { "aria-hidden": "true" })
      ] }) }),
      /* @__PURE__ */ a(yn, { children: ee.map((ge) => /* @__PURE__ */ x(it, { children: [
        /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a("b", { children: ge }) }),
        /* @__PURE__ */ a(ke, { children: /* @__PURE__ */ a(kI, { user: e }) }),
        ge === "password" && /* @__PURE__ */ a(ke, { modifier: "fitContent", children: /* @__PURE__ */ a(z, { variant: "secondary", onClick: _, children: r("setPassword") }) })
      ] }, ge)) })
    ] }) }),
    Me && /* @__PURE__ */ a(
      ct,
      {
        hasIcon: !0,
        message: r("noCredentials"),
        instructions: r("noCredentialsText"),
        primaryActionText: r("setPassword"),
        onPrimaryAction: _,
        secondaryActions: e.email ? [
          {
            text: r("credentialResetBtn"),
            onClick: E,
            type: xe.link
          }
        ] : void 0
      }
    )
  ] });
}, OQ = ({ user: e }) => {
  const { adminClient: t } = de(), { t: n } = H(), { addAlert: r, addError: i } = we(), [s, o] = D(0), l = () => o(s + 1), [c, d] = D(
    []
  ), [u, p] = D(!0), [m, f] = D([]), [g, b] = D(!1), { enabled: v } = Dr(), { hasAccess: y } = Nt(), C = y("manage-users"), S = (I) => wr(I, (_) => _.path?.toUpperCase()), P = async (I, _, E) => {
    const L = {
      first: I,
      max: _
    }, F = E || "";
    F && (L.search = F);
    const R = await t.users.listGroups({
      ...L,
      id: e.id
    });
    f([...R]);
    const M = [];
    return u || R.forEach((U) => {
      const K = (U.path?.substring(1).match(/((~\/)|[^/])+/g) || []).slice(0, -1);
      M.push(
        ...K.map((G) => ({
          name: G,
          path: U.path?.substring(0, U.path.indexOf(G) + G.length)
        }))
      );
    }), S(lp([...R, ...M], "path"));
  }, w = () => {
    b(!g);
  }, [A, k] = Ve({
    titleKey: n("leaveGroup", {
      count: c.length,
      name: c[0]?.name
    }),
    messageKey: n("leaveGroupConfirmDialog", {
      count: c.length,
      groupname: c[0]?.name,
      username: e.username
    }),
    continueButtonLabel: "leave",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await Promise.all(
          c.map(
            (I) => t.users.delFromGroup({
              id: e.id,
              groupId: I.id
            })
          )
        ), d([]), r(n("removedGroupMembership"), pe.success);
      } catch (I) {
        i("removedGroupMembershipError", I);
      }
      l();
    }
  }), T = (I) => {
    d(I), A();
  }, O = async (I) => {
    try {
      await Promise.all(
        I.map(
          (_) => t.users.addToGroup({
            id: e.id,
            groupId: _.id
          })
        )
      ), r(n("addedGroupMembership"), pe.success);
    } catch (_) {
      i("addedGroupMembershipError", _);
    }
    l();
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(k, {}),
    g && /* @__PURE__ */ a(
      bl,
      {
        id: e.id,
        type: "selectMany",
        text: {
          title: n("joinGroupsFor", { username: e.username }),
          ok: "join"
        },
        canBrowse: C,
        onClose: () => b(!1),
        onConfirm: async (I = []) => {
          await O(I), b(!1);
        }
      }
    ),
    /* @__PURE__ */ a(
      xt,
      {
        loader: P,
        className: "keycloak_user-section_groups-table",
        isPaginated: !0,
        ariaLabelKey: "roleList",
        searchPlaceholderKey: "searchGroup",
        canSelectAll: !0,
        onSelect: (I) => d(u ? I : W6(I, m, "id")),
        isRowDisabled: (I) => !u && m.every((_) => _.id !== I.id),
        toolbarItem: /* @__PURE__ */ x(te, { children: [
          /* @__PURE__ */ a(
            z,
            {
              className: "kc-join-group-button",
              onClick: w,
              "data-testid": "add-group-button",
              isDisabled: !e.access?.manageGroupMembership,
              children: n("joinGroup")
            }
          ),
          /* @__PURE__ */ a(
            Zt,
            {
              label: n("directMembership"),
              id: "kc-direct-membership-checkbox",
              onChange: () => {
                p(!u), l();
              },
              isChecked: u,
              className: "direct-membership-check"
            },
            "direct-membership-check"
          ),
          /* @__PURE__ */ a(
            z,
            {
              onClick: () => T(c),
              "data-testid": "leave-group-button",
              variant: "link",
              isDisabled: c.length === 0,
              children: n("leave")
            }
          ),
          v && /* @__PURE__ */ a(
            Rr,
            {
              "aria-label": "Basic popover",
              position: "bottom",
              bodyContent: /* @__PURE__ */ a("div", { children: n("whoWillAppearPopoverTextUsers") }),
              children: /* @__PURE__ */ a(
                z,
                {
                  variant: "link",
                  className: "kc-who-will-appear-button",
                  icon: /* @__PURE__ */ a(zc, {}),
                  children: n("whoWillAppearLinkTextUsers")
                },
                "who-will-appear-button"
              )
            }
          )
        ] }),
        columns: [
          {
            name: "groupMembership",
            displayKey: "groupMembership",
            cellRenderer: (I) => I.name || "-",
            transforms: [Ft(40)]
          },
          {
            name: "path",
            displayKey: "path",
            cellRenderer: (I) => /* @__PURE__ */ a(xO, { group: I }),
            transforms: [Ft(45)]
          },
          {
            name: "",
            cellRenderer: (I) => m.some((E) => E.id === I.id) || m.length === 0 || u ? /* @__PURE__ */ a(
              z,
              {
                "data-testid": `leave-${I.name}`,
                onClick: () => T([I]),
                variant: "link",
                isDisabled: !e.access?.manageGroupMembership,
                children: n("leave")
              }
            ) : "-",
            transforms: [Ft(20)]
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            hasIcon: !0,
            message: n("noGroups"),
            instructions: n("noGroupsText"),
            primaryActionText: n("joinGroup"),
            onPrimaryAction: w
          }
        )
      },
      s
    )
  ] });
}, kQ = ({
  userId: e,
  federatedId: t,
  onClose: n,
  onRefresh: r
}) => {
  const { adminClient: i } = de(), { t: s } = H(), { addAlert: o, addError: l } = we(), c = Ke({
    mode: "onChange"
  }), {
    handleSubmit: d,
    formState: { isValid: u }
  } = c, p = async (m) => {
    try {
      await i.users.addToFederatedIdentity({
        id: e,
        federatedIdentityId: t,
        federatedIdentity: m
      }), o(s("idpLinkSuccess"), pe.success), n(), r();
    } catch (f) {
      l("couldNotLinkIdP", f);
    }
  };
  return /* @__PURE__ */ a(
    ft,
    {
      variant: Et.small,
      title: s("linkAccountTitle", {
        provider: ks(t)
      }),
      onClose: n,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "confirm",
            variant: "primary",
            type: "submit",
            form: "group-form",
            isDisabled: !u,
            children: s("link")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            "data-testid": "cancel",
            variant: xe.link,
            onClick: n,
            children: s("cancel")
          },
          "cancel"
        )
      ],
      isOpen: !0,
      children: /* @__PURE__ */ a(St, { id: "group-form", onSubmit: d(p), children: /* @__PURE__ */ x(He, { ...c, children: [
        /* @__PURE__ */ a(re, { label: s("identityProvider"), fieldId: "identityProvider", children: /* @__PURE__ */ a(
          gt,
          {
            id: "identityProvider",
            "data-testid": "idpNameInput",
            value: ks(t),
            readOnly: !0
          }
        ) }),
        /* @__PURE__ */ a(
          ve,
          {
            name: "userId",
            label: s("userID"),
            helperText: s("userIdHelperText"),
            autoFocus: !0,
            rules: {
              required: s("required")
            }
          }
        ),
        /* @__PURE__ */ a(
          ve,
          {
            name: "userName",
            label: s("username"),
            helperText: s("usernameHelperText"),
            rules: {
              required: s("required")
            }
          }
        )
      ] }) })
    }
  );
}, TQ = ({
  userId: e
}) => {
  const { adminClient: t } = de(), [n, r] = D(0), [i, s] = D(""), [o, l] = D(!1), { realm: c } = ye(), { addAlert: d, addError: u } = we(), { t: p } = H(), { hasAccess: m, hasSomeAccess: f } = Nt(), g = f(
    "manage-identity-providers",
    "view-identity-providers"
  ), b = () => r((/* @__PURE__ */ new Date()).getTime()), v = Tt().identityProviders, y = async () => {
    const L = await t.users.listFederatedIdentities({
      id: e
    });
    if (g) {
      const F = await t.identityProviders.find();
      for (const R of L)
        R.providerId = F.find(
          (M) => M.alias === R.identityProvider
        )?.providerId;
    }
    return L;
  }, C = async () => t.identityProviders.find(), S = async () => y(), P = async () => {
    const L = (await y()).map(
      (F) => F.identityProvider
    );
    return (await C())?.filter(
      (F) => !L.includes(F.alias)
    );
  }, [w, A] = Ve({
    titleKey: p("unlinkAccountTitle", {
      provider: ks(i)
    }),
    messageKey: p("unlinkAccountConfirm", {
      provider: ks(i)
    }),
    continueButtonLabel: "unlink",
    continueButtonVariant: xe.primary,
    onConfirm: async () => {
      try {
        await t.users.delFromFederatedIdentity({
          id: e,
          federatedIdentityId: i
        }), d(p("idpUnlinkSuccess"), pe.success), b();
      } catch (L) {
        u("mappingDeletedError", L);
      }
    }
  }), k = (L) => g ? /* @__PURE__ */ a(
    Ae,
    {
      to: Ri({
        realm: c,
        providerId: L.providerId,
        alias: L.identityProvider,
        tab: "settings"
      }),
      children: ks(L.identityProvider)
    }
  ) : /* @__PURE__ */ a("span", { children: ks(L.identityProvider) }), T = (L) => {
    const F = v?.find(
      (R) => R.id === L.identityProvider
    )?.groupName;
    return /* @__PURE__ */ a(pn, { color: F === "Social" ? "blue" : "orange", children: p(F === "Social" ? "idpType.social" : "idpType.custom") });
  }, O = (L) => {
    const F = v?.find(
      (R) => R.id === L.providerId
    )?.groupName;
    return /* @__PURE__ */ a(pn, { color: F === "User-defined" ? "orange" : "blue", children: F === "User-defined" ? "Custom" : F === "Social" ? p("idpType.social") : F });
  }, I = (L) => m("manage-users") ? /* @__PURE__ */ a(
    z,
    {
      variant: "link",
      onClick: () => {
        s(L.identityProvider), w();
      },
      children: p("unlinkAccount")
    }
  ) : /* @__PURE__ */ a("span", {}), _ = (L) => /* @__PURE__ */ a(
    z,
    {
      variant: "link",
      onClick: () => {
        s(L.alias), l(!0);
      },
      children: p("linkAccount")
    }
  ), E = () => {
    const L = [
      {
        name: "identityProvider",
        displayKey: "name",
        cellRenderer: k,
        transforms: [Ft(20)]
      },
      {
        name: "userId",
        displayKey: "userID",
        cellFormatters: [un()],
        transforms: [Ft(30)]
      },
      {
        name: "userName",
        displayKey: "username",
        cellFormatters: [un()],
        transforms: [Ft(20)]
      },
      {
        name: "",
        cellRenderer: I,
        transforms: [Ft(20)]
      }
    ];
    return g && L.splice(1, 0, {
      name: "type",
      displayKey: "type",
      cellRenderer: T,
      transforms: [Ft(10)]
    }), L;
  };
  return /* @__PURE__ */ x(te, { children: [
    o && /* @__PURE__ */ a(
      kQ,
      {
        userId: e,
        federatedId: i,
        onClose: () => l(!1),
        onRefresh: b
      }
    ),
    /* @__PURE__ */ a(A, {}),
    /* @__PURE__ */ x(Te, { variant: "light", className: "pf-v5-u-p-0", children: [
      /* @__PURE__ */ x(Zn, { title: p("linkedIdPs"), className: "kc-linked-idps", children: [
        /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ a(tt, { className: "kc-available-idps-text", children: p("linkedIdPsText") }) }),
        /* @__PURE__ */ a(
          xt,
          {
            loader: S,
            isPaginated: !1,
            ariaLabelKey: "LinkedIdPs",
            className: "kc-linked-IdPs-table",
            columns: E(),
            emptyState: /* @__PURE__ */ a(Rt, { className: "kc-no-providers-text", children: /* @__PURE__ */ a(tt, { children: p("noProvidersLinked") }) })
          },
          n
        )
      ] }),
      m("manage-users") && g && /* @__PURE__ */ x(Zn, { className: "kc-available-idps", title: p("availableIdPs"), children: [
        /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ a(tt, { className: "kc-available-idps-text", children: p("availableIdPsText") }) }),
        /* @__PURE__ */ a(
          xt,
          {
            loader: P,
            isPaginated: !1,
            ariaLabelKey: "LinkedIdPs",
            className: "kc-linked-IdPs-table",
            columns: [
              {
                name: "alias",
                displayKey: "name",
                cellFormatters: [un(), ed()],
                transforms: [Ft(20)]
              },
              {
                name: "type",
                displayKey: "type",
                cellRenderer: O,
                transforms: [Ft(60)]
              },
              {
                name: "",
                cellRenderer: _
              }
            ],
            emptyState: /* @__PURE__ */ a(Rt, { className: "kc-no-providers-text", children: /* @__PURE__ */ a(tt, { children: p("noAvailableIdentityProviders") }) })
          },
          n
        )
      ] })
    ] })
  ] });
}, IQ = ({ id: e, name: t }) => {
  const { adminClient: n } = de(), { t: r } = H(), { addAlert: i, addError: s } = we();
  return /* @__PURE__ */ a(oo, { name: t, id: e, type: "users", save: async (l) => {
    try {
      const c = l.filter((d) => d.client === void 0).map((d) => d.role).flat();
      await n.users.addRealmRoleMappings({
        id: e,
        roles: c
      }), await Promise.all(
        l.filter((d) => d.client !== void 0).map(
          (d) => n.users.addClientRoleMappings({
            id: e,
            clientUniqueId: d.client.id,
            roles: [d.role]
          })
        )
      ), i(r("userRoleMappingUpdatedSuccess"), pe.success);
    } catch (c) {
      s("roleMappingUpdatedError", c);
    }
  } });
}, EQ = () => {
  const { adminClient: e } = de(), { id: t } = zt(), { realm: n } = ye(), { t: r } = H();
  return /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(
    Tp,
    {
      loader: () => e.users.listSessions({ id: t, realm: n }),
      hiddenColumns: ["username", "type"],
      emptyInstructions: r("noSessionsForUser"),
      logoutUser: t
    }
  ) });
};
function PQ() {
  const { adminClient: e } = de(), { t } = H(), { addAlert: n, addError: r } = we(), i = Xe(), { hasAccess: s } = Nt(), { id: o } = zt(), { realm: l, realmRepresentation: c } = ye(), u = Ke({
    mode: "onChange",
    resolver: async (ce) => ({
      values: ce,
      errors: {}
    })
  }), [p, m] = D(), [f, g] = D(), [b, v] = D(), [y, C] = D(), [S, P] = D(0), w = () => P((ce) => ce + 1), A = th(p?.id), [k, T] = D(), [O, I] = D(!1), E = aa()(Fn.Organizations) && c?.organizationsEnabled, L = (ce) => ri({
    realm: l,
    id: p?.id || "",
    tab: ce
  }), F = (ce) => Kn(L(ce)), R = F("settings"), M = F("attributes"), U = F("credentials"), K = F("role-mapping"), G = F("groups"), N = F("organizations"), $ = F("consents"), q = F("identity-provider-links"), V = F("sessions");
  _e(
    async () => Promise.all([
      e.users.findOne({
        id: o,
        userProfileMetadata: !0
      }),
      e.attackDetection.findOne({ id: o }),
      e.users.getUnmanagedAttributes({ id: o }),
      e.users.getProfile({ realm: l }),
      E ? e.organizations.find({ first: 0, max: 1 }) : []
    ]),
    ([
      ce,
      ae,
      Oe,
      Ie,
      Me
    ]) => {
      if (!ce || !c || !ae)
        throw new Error(t("notFound"));
      const { userProfileMetadata: ge, ...Se } = ce;
      C(ge), Se.unmanagedAttributes = Oe, Se.attributes = gQ(
        Se.attributes,
        Oe
      ), Ie.unmanagedAttributePolicy !== void 0 && v(!0), m(Se), T(Ie);
      const J = c.bruteForceProtected, W = J && ae.disabled;
      g({ isBruteForceProtected: J, isLocked: W }), I(Me.length === 1), u.reset(ic(Se));
    },
    [S]
  );
  const B = async (ce) => {
    try {
      await e.users.update(
        { id: p.id },
        TI(ce)
      ), n(t("userSaved"), pe.success), w();
    } catch (ae) {
      if (cO(ae)) {
        if (b && Array.isArray(ce.unmanagedAttributes)) {
          const Oe = new Array(
            ce.unmanagedAttributes.length
          );
          let Ie = !1;
          Kf(
            ae,
            (Me, ge) => {
              if (Me.startsWith("attributes.")) {
                const Se = Me.substring(11);
                ce.unmanagedAttributes.forEach(
                  (J, W) => {
                    J.key === Se && (Oe[W] = ge, Ie = !0);
                  }
                );
              } else
                u.setError(Me, ge);
            },
            (Me, ge) => t(Me, ge)
          ), Ie && u.setError(
            "unmanagedAttributes",
            Oe
          );
        } else
          Kf(ae, u.setError, (Oe, Ie) => t(Oe, Ie));
        r("userNotSaved", "");
      } else
        r("userCreateError", ae);
    }
  }, [Z, X] = Ve({
    titleKey: "disableConfirmUserTitle",
    messageKey: "disableConfirmUser",
    continueButtonLabel: "disable",
    onConfirm: () => {
      B({
        ...ic(p),
        enabled: !1
      });
    }
  }), [Q, ie] = Ve({
    titleKey: "deleteConfirm",
    messageKey: "deleteConfirmCurrentUser",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        A ? await e.users.logout({ id: p.id }) : await e.users.del({ id: p.id }), n(t("userDeletedSuccess"), pe.success), i(Vs({ realm: l }));
      } catch (ce) {
        r("userDeletedError", ce);
      }
    }
  }), [me, ee] = Ve({
    titleKey: "impersonateConfirm",
    messageKey: "impersonateConfirmDialog",
    continueButtonLabel: "impersonate",
    onConfirm: async () => {
      try {
        const ce = await e.users.impersonation(
          { id: p.id },
          { user: p.id, realm: l }
        );
        ce.sameRealm ? window.location = ce.redirect : window.open(ce.redirect, "_blank");
      } catch (ce) {
        r("impersonateError", ce);
      }
    }
  });
  return !p || !f ? /* @__PURE__ */ a(bt, {}) : /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(ee, {}),
    /* @__PURE__ */ a(ie, {}),
    /* @__PURE__ */ a(X, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: p.username,
        className: "kc-username-view-header",
        divider: !1,
        badges: A ? [
          {
            text: /* @__PURE__ */ a(Ht, { content: t("transientUserTooltip"), children: /* @__PURE__ */ a(
              pn,
              {
                "data-testid": "user-details-label-transient-user",
                icon: /* @__PURE__ */ a(Ni, {}),
                children: t("transientUser")
              }
            ) })
          }
        ] : [],
        dropdownItems: [
          /* @__PURE__ */ a(
            Ue,
            {
              isDisabled: !p.access?.impersonate,
              onClick: () => me(),
              children: t("impersonate")
            },
            "impersonate"
          ),
          /* @__PURE__ */ a(
            Ue,
            {
              isDisabled: !p.access?.manage,
              onClick: () => Q(),
              children: t("delete")
            },
            "delete"
          )
        ],
        onToggle: (ce) => {
          ce ? B({
            ...ic(p),
            enabled: ce
          }) : Z();
        },
        isEnabled: p.enabled
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(_p, { children: /* @__PURE__ */ a(He, { ...u, children: /* @__PURE__ */ x(
      Vn,
      {
        isBox: !0,
        mountOnEnter: !0,
        defaultLocation: L("settings"),
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "user-details-tab",
              title: /* @__PURE__ */ a(Pe, { children: t("details") }),
              ...R,
              children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(
                II,
                {
                  form: u,
                  realm: c,
                  user: p,
                  bruteForce: f,
                  userProfileMetadata: y,
                  refresh: w,
                  save: B
                }
              ) })
            }
          ),
          b && /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "attributes",
              title: /* @__PURE__ */ a(Pe, { children: t("attributes") }),
              ...M,
              children: /* @__PURE__ */ a(xQ, { user: p, save: B, upConfig: k })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "credentials",
              isHidden: !p.access?.view,
              title: /* @__PURE__ */ a(Pe, { children: t("credentials") }),
              ...U,
              children: /* @__PURE__ */ a(wQ, { user: p, setUser: m })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "role-mapping-tab",
              isHidden: !p.access?.view,
              title: /* @__PURE__ */ a(Pe, { children: t("roleMapping") }),
              ...K,
              children: /* @__PURE__ */ a(IQ, { id: p.id, name: p.username })
            }
          ),
          s("query-groups") && /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "user-groups-tab",
              title: /* @__PURE__ */ a(Pe, { children: t("groups") }),
              ...G,
              children: /* @__PURE__ */ a(OQ, { user: p })
            }
          ),
          E && O && /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "user-organizations-tab",
              title: /* @__PURE__ */ a(Pe, { children: t("organizations") }),
              ...N,
              children: /* @__PURE__ */ a(CQ, { user: p })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "user-consents-tab",
              title: /* @__PURE__ */ a(Pe, { children: t("consents") }),
              ...$,
              children: /* @__PURE__ */ a(SQ, {})
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "identity-provider-links-tab",
              title: /* @__PURE__ */ a(Pe, { children: t("identityProviderLinks") }),
              ...q,
              children: /* @__PURE__ */ a(TQ, { userId: p.id })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              "data-testid": "user-sessions-tab",
              title: /* @__PURE__ */ a(Pe, { children: t("sessions") }),
              ...V,
              children: /* @__PURE__ */ a(EQ, {})
            }
          )
        ]
      }
    ) }) }) })
  ] });
}
const _Q = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: PQ
}, Symbol.toStringTag, { value: "Module" }));
function RQ() {
  const { t: e } = H(), { realm: t } = ye(), { hasAccess: n } = Nt(), i = aa()(Fn.AdminFineGrainedAuthz) && n("manage-authorization", "manage-users", "manage-clients"), s = (c) => Kn(
    Vs({
      realm: t,
      tab: c
    })
  ), o = s("list"), l = s("permissions");
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "titleUsers",
        subKey: "usersExplain",
        helpUrl: sa.usersUrl,
        divider: !1
      }
    ),
    /* @__PURE__ */ a(
      Te,
      {
        "data-testid": "users-page",
        variant: "light",
        className: "pf-v5-u-p-0",
        children: /* @__PURE__ */ x(
          Vn,
          {
            "data-testid": "user-tabs",
            defaultLocation: Vs({
              realm: t,
              tab: "list"
            }),
            isBox: !0,
            mountOnEnter: !0,
            children: [
              /* @__PURE__ */ a(
                Ee,
                {
                  id: "list",
                  "data-testid": "listTab",
                  title: /* @__PURE__ */ a(Pe, { children: e("userList") }),
                  ...o,
                  children: /* @__PURE__ */ a(RY, {})
                }
              ),
              i && /* @__PURE__ */ a(
                Ee,
                {
                  id: "permissions",
                  "data-testid": "permissionsTab",
                  title: /* @__PURE__ */ a(Pe, { children: e("permissions") }),
                  ...l,
                  children: /* @__PURE__ */ a(id, { type: "users" })
                }
              )
            ]
          }
        )
      }
    )
  ] });
}
const AQ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: RQ
}, Symbol.toStringTag, { value: "Module" })), EI = ({
  provider: e,
  save: t,
  noDivider: n = !1,
  dropdownItems: r = []
}) => {
  const { adminClient: i } = de(), { t: s } = H(), { id: o } = na(), l = Xe(), { addAlert: c, addError: d } = we(), { realm: u } = ye(), { control: p, setValue: m } = De(), [f, g] = Ve({
    titleKey: "userFedDisableConfirmTitle",
    messageKey: "userFedDisableConfirm",
    continueButtonLabel: "disable",
    onConfirm: () => {
      m("config.enabled[0]", "false"), t();
    }
  }), [b, v] = Ve({
    titleKey: "userFedDeleteConfirmTitle",
    messageKey: "userFedDeleteConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await i.components.del({ id: o }), c(s("userFedDeletedSuccess"), pe.success), l(cs({ realm: u }), { replace: !0 });
      } catch (y) {
        d("userFedDeleteError", y);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(g, {}),
    /* @__PURE__ */ a(v, {}),
    /* @__PURE__ */ a(
      be,
      {
        name: "config.enabled",
        defaultValue: ["true"],
        control: p,
        render: ({ field: y }) => o ? /* @__PURE__ */ a(
          wt,
          {
            divider: !n,
            titleKey: e,
            dropdownItems: [
              ...r,
              /* @__PURE__ */ a(
                Ue,
                {
                  onClick: () => b(),
                  "data-testid": "delete-cmd",
                  children: s("deleteProvider")
                },
                "delete"
              )
            ],
            isEnabled: y.value?.[0] === "true" || y.value === "true",
            onToggle: (C) => {
              C ? (y.onChange([C.toString()]), t()) : f();
            }
          }
        ) : /* @__PURE__ */ a(
          wt,
          {
            titleKey: s("addProvider", {
              provider: e,
              count: 1
            })
          }
        )
      }
    )
  ] });
}, wb = ({
  provider: e,
  editMode: t,
  save: n,
  noDivider: r = !1
}) => {
  const { adminClient: i } = de(), { t: s } = H(), { id: o } = na(), { addAlert: l, addError: c } = we(), { control: d } = De(), u = rt({
    name: "config.importEnabled",
    control: d,
    defaultValue: ["true"]
  })[0], [p, m] = Ve({
    titleKey: "userFedUnlinkUsersConfirmTitle",
    messageKey: "userFedUnlinkUsersConfirm",
    continueButtonLabel: "unlinkUsers",
    onConfirm: () => C()
  }), [f, g] = Ve({
    titleKey: s("removeImportedUsers"),
    messageKey: s("removeImportedUsersMessage"),
    continueButtonLabel: "remove",
    onConfirm: async () => {
      try {
        b(), l(s("removeImportedUsersSuccess"), pe.success);
      } catch (S) {
        c("removeImportedUsersError", S);
      }
    }
  }), b = async () => {
    try {
      o && await i.userStorageProvider.removeImportedUsers({ id: o }), l(s("removeImportedUsersSuccess"), pe.success);
    } catch (S) {
      c("removeImportedUsersError", S);
    }
  }, v = async () => {
    try {
      if (o) {
        const S = await i.userStorageProvider.sync({
          id: o,
          action: "triggerChangedUsersSync"
        });
        S.ignored ? l(`${S.status}.`, pe.warning) : l(
          s("syncUsersSuccess") + `${S.added} users added, ${S.updated} users updated, ${S.removed} users removed, ${S.failed} users failed.`,
          pe.success
        );
      }
    } catch (S) {
      c("syncUsersError", S);
    }
  }, y = async () => {
    try {
      if (o) {
        const S = await i.userStorageProvider.sync({
          id: o,
          action: "triggerFullSync"
        });
        S.ignored ? l(`${S.status}.`, pe.warning) : l(
          s("syncUsersSuccess") + `${S.added} users added, ${S.updated} users updated, ${S.removed} users removed, ${S.failed} users failed.`,
          pe.success
        );
      }
    } catch (S) {
      c("syncUsersError", S);
    }
  }, C = async () => {
    try {
      o && await i.userStorageProvider.unlinkUsers({ id: o }), l(s("unlinkUsersSuccess"), pe.success);
    } catch (S) {
      c("unlinkUsersError", S);
    }
  };
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(m, {}),
    /* @__PURE__ */ a(g, {}),
    /* @__PURE__ */ a(
      EI,
      {
        provider: e,
        noDivider: r,
        save: n,
        dropdownItems: [
          /* @__PURE__ */ a(
            Ue,
            {
              onClick: v,
              isDisabled: u === "false",
              children: s("syncChangedUsers")
            },
            "sync"
          ),
          /* @__PURE__ */ a(
            Ue,
            {
              onClick: y,
              isDisabled: u === "false",
              children: s("syncAllUsers")
            },
            "syncall"
          ),
          /* @__PURE__ */ a(
            Ue,
            {
              isDisabled: t ? t.includes("UNSYNCED") : !1,
              onClick: p,
              children: s("unlinkUsers")
            },
            "unlink"
          ),
          /* @__PURE__ */ a(Ue, { onClick: f, children: s("removeImported") }, "remove"),
          /* @__PURE__ */ a(Pt, {}, "separator")
        ]
      }
    )
  ] });
}, Gx = ({ form: e }) => {
  const { t } = H(), [n, r] = st(), [i, s] = st(), [o, l] = st(), c = rt({
    control: e.control,
    name: "config.cachePolicy"
  }), d = [
    /* @__PURE__ */ a(Re, { value: ["0"], children: ["00"] }, 0)
  ];
  let u = "";
  for (let f = 1; f < 24; f++)
    f < 10 ? u = `0${f}` : u = `${f}`, d.push(
      /* @__PURE__ */ a(Re, { value: [`${f}`], children: u }, f)
    );
  const p = [
    /* @__PURE__ */ a(Re, { value: ["0"], children: ["00"] }, 0)
  ];
  let m = "";
  for (let f = 1; f < 60; f++)
    f < 10 ? m = `0${f}` : m = `${f}`, p.push(
      /* @__PURE__ */ a(Re, { value: [`${f}`], children: m }, f)
    );
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      re,
      {
        label: t("cachePolicy"),
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: t("cachePolicyHelp"),
            fieldLabelId: "cachePolicy"
          }
        ),
        fieldId: "kc-cache-policy",
        children: /* @__PURE__ */ a(
          be,
          {
            name: "config.cachePolicy",
            defaultValue: ["DEFAULT"],
            control: e.control,
            render: ({ field: f }) => /* @__PURE__ */ x(
              ht,
              {
                toggleId: "kc-cache-policy",
                onToggle: r,
                isOpen: n,
                onSelect: (g) => {
                  f.onChange(g), r();
                },
                selections: f.value,
                variant: mt.single,
                "data-testid": "kerberos-cache-policy",
                "aria-label": t("selectCachePolicy"),
                children: [
                  /* @__PURE__ */ a(Re, { value: ["DEFAULT"], children: "DEFAULT" }, 0),
                  /* @__PURE__ */ a(Re, { value: ["EVICT_DAILY"], children: "EVICT_DAILY" }, 1),
                  /* @__PURE__ */ a(Re, { value: ["EVICT_WEEKLY"], children: "EVICT_WEEKLY" }, 2),
                  /* @__PURE__ */ a(Re, { value: ["MAX_LIFESPAN"], children: "MAX_LIFESPAN" }, 3),
                  /* @__PURE__ */ a(Re, { value: ["NO_CACHE"], children: "NO_CACHE" }, 4)
                ]
              }
            )
          }
        )
      }
    ),
    yi(c, ["EVICT_WEEKLY"]) ? /* @__PURE__ */ a(
      at,
      {
        id: "kc-eviction-day",
        name: "config.evictionDay[0]",
        label: t("evictionDay"),
        labelIcon: t("evictionDayHelp"),
        controller: {
          defaultValue: "1"
        },
        "aria-label": t("selectEvictionDay"),
        options: [
          { key: "1", value: t("Sunday") },
          { key: "2", value: t("Monday") },
          { key: "3", value: t("Tuesday") },
          { key: "4", value: t("Wednesday") },
          { key: "5", value: t("Thursday") },
          { key: "6", value: t("Friday") },
          { key: "7", value: t("Saturday") }
        ]
      }
    ) : null,
    yi(c, ["EVICT_DAILY"]) || yi(c, ["EVICT_WEEKLY"]) ? /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a(
        re,
        {
          label: t("evictionHour"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: t("evictionHourHelp"),
              fieldLabelId: "evictionHour"
            }
          ),
          isRequired: !0,
          fieldId: "kc-eviction-hour",
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.evictionHour",
              defaultValue: ["0"],
              control: e.control,
              render: ({ field: f }) => /* @__PURE__ */ a(
                ht,
                {
                  toggleId: "kc-eviction-hour",
                  onToggle: s,
                  isOpen: i,
                  onSelect: (g) => {
                    f.onChange(g), s();
                  },
                  selections: f.value,
                  variant: mt.single,
                  "aria-label": t("selectEvictionHour"),
                  children: d
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: t("evictionMinute"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: t("evictionMinuteHelp"),
              fieldLabelId: "evictionMinute"
            }
          ),
          isRequired: !0,
          fieldId: "kc-eviction-minute",
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.evictionMinute",
              defaultValue: ["0"],
              control: e.control,
              render: ({ field: f }) => /* @__PURE__ */ a(
                ht,
                {
                  toggleId: "kc-eviction-minute",
                  onToggle: l,
                  isOpen: o,
                  onSelect: (g) => {
                    f.onChange(g), l();
                  },
                  selections: f.value,
                  variant: mt.single,
                  "aria-label": t("selectEvictionMinute"),
                  children: p
                }
              )
            }
          )
        }
      )
    ] }) : null,
    yi(c, ["MAX_LIFESPAN"]) ? /* @__PURE__ */ a(
      re,
      {
        label: t("maxLifespan"),
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: t("maxLifespanHelp"),
            fieldLabelId: "maxLifespan"
          }
        ),
        fieldId: "kc-max-lifespan",
        children: /* @__PURE__ */ a(
          be,
          {
            name: "config.maxLifespan[0]",
            defaultValue: 0,
            control: e.control,
            render: ({ field: f }) => {
              const b = (v) => f.onChange(Math.max(v, 0));
              return /* @__PURE__ */ a(
                os,
                {
                  id: "kc-max-lifespan",
                  "data-testid": "kerberos-cache-lifespan",
                  value: f.value,
                  min: 0,
                  unit: t("ms"),
                  type: "text",
                  onPlus: () => f.onChange(Number(f.value) + 1),
                  onMinus: () => f.onChange(Number(f.value) - 1),
                  onChange: (v) => {
                    const y = Number(v.currentTarget.value);
                    b(isNaN(y) ? 0 : y);
                  }
                }
              );
            }
          }
        )
      }
    ) : null
  ] });
}, od = ({
  form: e,
  showSectionHeading: t = !1,
  showSectionDescription: n = !1,
  unWrap: r = !1
}) => {
  const { t: i } = H();
  return /* @__PURE__ */ x(te, { children: [
    t && /* @__PURE__ */ a(
      bs,
      {
        title: i("cacheSettings"),
        description: i("cacheSettingsDescription"),
        showDescription: n
      }
    ),
    r ? /* @__PURE__ */ a(Gx, { form: e }) : /* @__PURE__ */ a(je, { role: "manage-realm", isHorizontal: !0, children: /* @__PURE__ */ a(Gx, { form: e }) })
  ] });
}, LQ = () => {
  const { t: e } = H(), t = De(), { control: n, watch: r } = t, i = r("config.fullSyncPeriod", "-1"), s = r("config.changedSyncPeriod", "-1");
  return /* @__PURE__ */ x(He, { ...t, children: [
    /* @__PURE__ */ a(
      re,
      {
        label: e("periodicFullSync"),
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: e("periodicFullSyncHelp"),
            fieldLabelId: "periodicFullSync"
          }
        ),
        fieldId: "kc-periodic-full-sync",
        hasNoPaddingTop: !0,
        children: /* @__PURE__ */ a(
          be,
          {
            name: "config.fullSyncPeriod",
            defaultValue: "-1",
            control: n,
            render: ({ field: o }) => /* @__PURE__ */ a(
              Je,
              {
                id: "kc-periodic-full-sync",
                "data-testid": "periodic-full-sync",
                onChange: (l, c) => {
                  o.onChange(c ? "604800" : "-1");
                },
                isChecked: o.value !== "-1",
                label: e("on"),
                labelOff: e("off"),
                "aria-label": e("periodicFullSync")
              }
            )
          }
        )
      }
    ),
    i !== "-1" && /* @__PURE__ */ a(
      ve,
      {
        name: "config.fullSyncPeriod",
        label: e("fullSyncPeriod"),
        labelIcon: e("fullSyncPeriodHelp"),
        type: "number",
        min: -1,
        defaultValue: "604800"
      }
    ),
    /* @__PURE__ */ a(
      re,
      {
        label: e("periodicChangedUsersSync"),
        labelIcon: /* @__PURE__ */ a(
          le,
          {
            helpText: e("periodicChangedUsersSyncHelp"),
            fieldLabelId: "periodicChangedUsersSync"
          }
        ),
        fieldId: "kc-periodic-changed-users-sync",
        hasNoPaddingTop: !0,
        children: /* @__PURE__ */ a(
          be,
          {
            name: "config.changedSyncPeriod",
            defaultValue: "-1",
            control: n,
            render: ({ field: o }) => /* @__PURE__ */ a(
              Je,
              {
                id: "kc-periodic-changed-users-sync",
                "data-testid": "periodic-changed-users-sync",
                onChange: (l, c) => {
                  o.onChange(c ? "86400" : "-1");
                },
                isChecked: o.value !== "-1",
                label: e("on"),
                labelOff: e("off"),
                "aria-label": e("periodicChangedUsersSync")
              }
            )
          }
        )
      }
    ),
    s !== "-1" && /* @__PURE__ */ a(
      ve,
      {
        name: "config.changedSyncPeriod",
        label: e("changedUsersSyncPeriod"),
        labelIcon: e("changedUsersSyncHelp"),
        type: "number",
        min: -1,
        defaultValue: "86400"
      }
    )
  ] });
};
function NQ() {
  const { adminClient: e } = de(), { t } = H(), { id: n, providerId: r } = zt(), i = Xe(), s = Ke({
    mode: "onChange"
  }), {
    reset: o,
    setValue: l,
    handleSubmit: c,
    formState: { isDirty: d }
  } = s, { addAlert: u, addError: p } = we(), { realm: m, realmRepresentation: f } = ye(), g = (Tt().componentTypes?.["org.keycloak.storage.UserStorageProvider"] || []).find((v) => v.id === r);
  _e(
    async () => {
      if (n)
        return await e.components.findOne({ id: n });
    },
    (v) => {
      if (v)
        Pn(v, l);
      else if (n)
        throw new Error(t("notFound"));
    },
    []
  );
  const b = async (v) => {
    const y = ta({
      ...v,
      config: Object.fromEntries(
        Object.entries(v.config || {}).map(([C, S]) => [
          C,
          Array.isArray(S) ? S : [S]
        ])
      ),
      providerId: r,
      providerType: "org.keycloak.storage.UserStorageProvider",
      parentId: f?.id
    });
    try {
      n ? await e.components.update({ id: n }, y) : (await e.components.create(y), i(cs({ realm: m }))), o({ ...v }), u(
        t(n ? "userProviderSaveSuccess" : "createUserProviderSuccess"),
        pe.success
      );
    } catch (C) {
      p(
        n ? "userProviderSaveError" : "createUserProviderError",
        C
      );
    }
  };
  return /* @__PURE__ */ x(He, { ...s, children: [
    /* @__PURE__ */ a(wb, { provider: r, save: () => c(b)() }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ x(
      je,
      {
        role: "manage-realm",
        isHorizontal: !0,
        className: "keycloak__user-federation__custom-form",
        onSubmit: c(b),
        children: [
          /* @__PURE__ */ a(
            ve,
            {
              name: "name",
              label: t("uiDisplayName"),
              labelIcon: t("uiDisplayNameHelp"),
              rules: {
                required: t("validateName")
              }
            }
          ),
          /* @__PURE__ */ a(gr, { properties: g?.properties || [] }),
          g?.metadata.synchronizable && /* @__PURE__ */ a(LQ, {}),
          /* @__PURE__ */ a(od, { form: s, unWrap: !0 }),
          /* @__PURE__ */ x(ot, { children: [
            /* @__PURE__ */ a(
              z,
              {
                isDisabled: !d,
                variant: "primary",
                type: "submit",
                "data-testid": "custom-save",
                children: t("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                component: (v) => /* @__PURE__ */ a(Ae, { ...v, to: cs({ realm: m }) }),
                "data-testid": "custom-cancel",
                children: t("cancel")
              }
            )
          ] })
        ]
      }
    ) })
  ] });
}
const PI = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: NQ
}, Symbol.toStringTag, { value: "Module" })), _I = ({
  form: e,
  showSectionHeading: t = !1,
  showSectionDescription: n = !1
}) => {
  const { t: r } = H(), { realm: i, realmRepresentation: s } = ye(), o = rt({
    control: e.control,
    name: "config.allowPasswordAuthentication"
  });
  return ze(() => e.setValue("parentId", s?.id), []), /* @__PURE__ */ x(He, { ...e, children: [
    t && /* @__PURE__ */ a(
      bs,
      {
        title: r("requiredSettings"),
        description: r("kerberosRequiredSettingsDescription"),
        showDescription: n
      }
    ),
    /* @__PURE__ */ x(je, { role: "manage-realm", isHorizontal: !0, children: [
      /* @__PURE__ */ a(
        "input",
        {
          type: "hidden",
          defaultValue: "kerberos",
          ...e.register("providerId")
        }
      ),
      /* @__PURE__ */ a(
        "input",
        {
          type: "hidden",
          defaultValue: "org.keycloak.storage.UserStorageProvider",
          ...e.register("providerType")
        }
      ),
      /* @__PURE__ */ a(
        "input",
        {
          type: "hidden",
          defaultValue: i,
          ...e.register("parentId")
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "name",
          label: r("uiDisplayName"),
          labelIcon: r("uiDisplayNameHelp"),
          rules: {
            required: r("validateName")
          }
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.kerberosRealm.0",
          label: r("kerberosRealm"),
          labelIcon: r("kerberosRealmHelp"),
          rules: {
            required: r("validateRealm")
          }
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.serverPrincipal.0",
          label: r("serverPrincipal"),
          labelIcon: r("serverPrincipalHelp"),
          rules: {
            required: r("validateServerPrincipal")
          }
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.keyTab.0",
          label: r("keyTab"),
          labelIcon: r("keyTabHelp"),
          rules: {
            required: r("validateKeyTab")
          }
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: r("debug"),
          labelIcon: /* @__PURE__ */ a(le, { helpText: r("debugHelp"), fieldLabelId: "debug" }),
          fieldId: "kc-debug",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.debug",
              defaultValue: ["false"],
              control: e.control,
              render: ({ field: l }) => /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-debug",
                  "data-testid": "debug",
                  onChange: (c, d) => l.onChange([`${d}`]),
                  isChecked: l.value?.[0] === "true",
                  label: r("on"),
                  labelOff: r("off"),
                  "aria-label": r("debug")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: r("allowPasswordAuthentication"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("allowPasswordAuthenticationHelp"),
              fieldLabelId: "allowPasswordAuthentication"
            }
          ),
          fieldId: "kc-allow-password-authentication",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.allowPasswordAuthentication",
              defaultValue: ["false"],
              control: e.control,
              render: ({ field: l }) => /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-allow-password-authentication",
                  "data-testid": "allow-password-authentication",
                  onChange: (c, d) => l.onChange([`${d}`]),
                  isChecked: l.value?.[0] === "true",
                  label: r("on"),
                  labelOff: r("off"),
                  "aria-label": r("allowPasswordAuthentication")
                }
              )
            }
          )
        }
      ),
      yi(o, ["true"]) ? /* @__PURE__ */ a(
        at,
        {
          name: "config.editMode[0]",
          label: r("editMode"),
          labelIcon: r("editModeKerberosHelp"),
          controller: {
            rules: { required: r("required") },
            defaultValue: "READ_ONLY"
          },
          options: ["READ_ONLY", "UNSYNCED"]
        }
      ) : null,
      /* @__PURE__ */ a(
        re,
        {
          label: r("updateFirstLogin"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("updateFirstLoginHelp"),
              fieldLabelId: "updateFirstLogin"
            }
          ),
          fieldId: "kc-update-first-login",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.updateProfileFirstLogin",
              defaultValue: ["false"],
              control: e.control,
              render: ({ field: l }) => /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-update-first-login",
                  "data-testid": "update-first-login",
                  onChange: (c, d) => l.onChange([`${d}`]),
                  isChecked: l.value?.[0] === "true",
                  label: r("on"),
                  labelOff: r("off"),
                  "aria-label": r("updateFirstLogin")
                }
              )
            }
          )
        }
      )
    ] })
  ] });
};
function DQ() {
  const { adminClient: e } = de(), t = Ke(), [n, r] = D(), [i, s] = D(), { id: o, mapperId: l } = zt(), c = Xe(), { realm: d } = ye(), { t: u } = H(), { addAlert: p, addError: m } = we(), [f, g] = D(!1), [b, v] = D(0), y = () => v(b + 1);
  _e(
    async () => {
      const I = await e.components.listSubComponents({
        id: o,
        type: "org.keycloak.storage.ldap.mappers.LDAPStorageMapper"
      });
      if (l && l !== "new") {
        const _ = await e.components.findOne({
          id: l
        });
        return { components: I, fetchedMapper: _ };
      }
      return { components: I };
    },
    ({ components: I, fetchedMapper: _ }) => {
      if (r(_), s(I), l !== "new" && !_) throw new Error(u("notFound"));
      _ && C(_);
    },
    []
  );
  const C = (I) => {
    Pn(I, t.setValue);
  }, S = async (I) => {
    const _ = ta(I), E = {
      ..._,
      config: Object.entries(_.config || {}).reduce(
        (L, [F, R]) => (L[F] = Array.isArray(R) ? R : [R], L),
        {}
      )
    };
    try {
      l === "new" ? (await e.components.create(E), c(
        Dc({ realm: d, id: I.parentId, tab: "mappers" })
      )) : await e.components.update({ id: l }, E), C(E), p(
        u(
          l === "new" ? "mappingCreatedSuccess" : "mappingUpdatedSuccess"
        ),
        pe.success
      );
    } catch (L) {
      m(
        l === "new" ? "mappingCreatedError" : "mappingUpdatedError",
        L
      );
    }
  }, P = async (I) => {
    try {
      const _ = await e.userStorageProvider.mappersSync({
        parentId: n?.parentId || "",
        id: l,
        direction: I
      });
      p(
        u("syncLDAPGroupsSuccessful", {
          result: _.status
        })
      );
    } catch (_) {
      m("syncLDAPGroupsError", _);
    }
    y();
  }, [w, A] = Ve({
    titleKey: "deleteMappingTitle",
    messageKey: "deleteMappingConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.components.del({
          id: n.id
        }), p(u("mappingDeletedSuccess"), pe.success), c(Dc({ id: o, realm: d, tab: "mappers" }));
      } catch (I) {
        m("mappingDeletedError", I);
      }
    }
  }), k = rt({
    control: t.control,
    name: "providerId"
  });
  if (!i)
    return /* @__PURE__ */ a(bt, {});
  const T = l === "new", O = i.find((I) => I.id === k);
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(A, {}),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: n ? n.name : u("createNewMapper"),
        dropdownItems: T ? void 0 : [
          /* @__PURE__ */ a(Ue, { onClick: w, children: u("delete") }, "delete"),
          ...O?.metadata.fedToKeycloakSyncSupported ? [
            /* @__PURE__ */ a(
              Ue,
              {
                onClick: () => P("fedToKeycloak"),
                children: u(O.metadata.fedToKeycloakSyncMessage)
              },
              "fedSync"
            )
          ] : [],
          ...O?.metadata.keycloakToFedSyncSupported ? [
            /* @__PURE__ */ a(
              Ue,
              {
                onClick: () => {
                  P("keycloakToFed");
                },
                children: u(O.metadata.keycloakToFedSyncMessage)
              },
              "ldapSync"
            )
          ] : []
        ]
      },
      b
    ),
    /* @__PURE__ */ a(Te, { variant: "light", isFilled: !0, children: /* @__PURE__ */ a(He, { ...t, children: /* @__PURE__ */ x(
      je,
      {
        role: "manage-realm",
        isHorizontal: !0,
        onSubmit: t.handleSubmit(() => S(t.getValues())),
        children: [
          !T && /* @__PURE__ */ a(ve, { name: "id", label: u("id"), isDisabled: !0 }),
          /* @__PURE__ */ a(
            ve,
            {
              name: "name",
              label: u("name"),
              labelIcon: u("mapperNameHelp"),
              isDisabled: !T,
              rules: { required: u("required") }
            }
          ),
          /* @__PURE__ */ a(
            "input",
            {
              type: "hidden",
              defaultValue: T ? o : n ? n.parentId : "",
              "data-testid": "ldap-mapper-parentId",
              ...t.register("parentId")
            }
          ),
          /* @__PURE__ */ a(
            "input",
            {
              type: "hidden",
              defaultValue: "org.keycloak.storage.ldap.mappers.LDAPStorageMapper",
              "data-testid": "ldap-mapper-provider-type",
              ...t.register("providerType")
            }
          ),
          T ? /* @__PURE__ */ a(
            re,
            {
              label: u("mapperType"),
              labelIcon: /* @__PURE__ */ a(
                le,
                {
                  helpText: O?.helpText ? O.helpText : u("mapperTypeHelp"),
                  fieldLabelId: "mapperType"
                }
              ),
              fieldId: "kc-providerId",
              isRequired: !0,
              children: /* @__PURE__ */ a(
                be,
                {
                  name: "providerId",
                  defaultValue: "",
                  control: t.control,
                  "data-testid": "ldap-mapper-type-select",
                  render: ({ field: I }) => /* @__PURE__ */ a(
                    ht,
                    {
                      toggleId: "kc-providerId",
                      typeAheadAriaLabel: u("mapperType"),
                      onToggle: () => g(!f),
                      isOpen: f,
                      onSelect: (_) => {
                        C({
                          providerId: _,
                          ...Object.fromEntries(
                            i.find((E) => E.id === _)?.properties.filter((E) => E.type === "List").map((E) => [
                              va(E.name),
                              E.options?.[0]
                            ]) || []
                          )
                        }), g(!1);
                      },
                      selections: I.value,
                      variant: mt.typeahead,
                      "aria-label": u("selectMapperType"),
                      children: i.map((_) => /* @__PURE__ */ a(Re, { value: _.id, children: _.id }, _.id))
                    }
                  )
                }
              )
            }
          ) : /* @__PURE__ */ a(
            ve,
            {
              name: "providerId",
              label: u("mapperType"),
              labelIcon: O?.helpText ? O.helpText : u("mapperTypeHelp"),
              rules: { required: u("required") },
              isDisabled: !T
            }
          ),
          !!k && /* @__PURE__ */ a(gr, { properties: O?.properties }),
          /* @__PURE__ */ x(ot, { children: [
            /* @__PURE__ */ a(
              z,
              {
                isDisabled: !t.formState.isDirty,
                variant: "primary",
                type: "submit",
                "data-testid": "ldap-mapper-save",
                children: u("save")
              }
            ),
            /* @__PURE__ */ a(
              z,
              {
                variant: "link",
                onClick: () => c(T ? -1 : `/${d}/user-federation/ldap/${n.parentId}/mappers`),
                "data-testid": "ldap-mapper-cancel",
                children: u("cancel")
              }
            )
          ] })
        ]
      }
    ) }) })
  ] });
}
const MQ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: DQ
}, Symbol.toStringTag, { value: "Module" })), FQ = ({ toDetail: e, ...t }) => /* @__PURE__ */ a(Ae, { to: e(t.id), children: t.name }), $Q = ({ toCreate: e, toDetail: t }) => {
  const { adminClient: n } = de(), r = Xe(), { t: i } = H(), { addAlert: s, addError: o } = we(), [l, c] = D(0), d = () => c(l + 1), [u, p] = D([]), m = ba(), { id: f } = na(), [g, b] = D();
  _e(
    () => n.components.find({
      parent: f,
      type: "org.keycloak.storage.ldap.mappers.LDAPStorageMapper"
    }),
    (C) => {
      p(
        m(
          C.map((S) => ({
            ...S,
            name: S.name,
            type: S.providerId
          })),
          mr("name")
        )
      );
    },
    [l]
  );
  const [v, y] = Ve({
    titleKey: i("deleteMappingTitle", { mapperId: g?.id }),
    messageKey: "deleteMappingConfirm",
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await n.components.del({
          id: g.id
        }), d(), s(i("mappingDeletedSuccess"), pe.success), b(void 0);
      } catch (C) {
        o("mappingDeletedError", C);
      }
    }
  });
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(y, {}),
    /* @__PURE__ */ a(
      xt,
      {
        loader: u,
        ariaLabelKey: "ldapMappersList",
        searchPlaceholderKey: "searchForMapper",
        toolbarItem: /* @__PURE__ */ a(Le, { children: /* @__PURE__ */ a(
          z,
          {
            "data-testid": "add-mapper-btn",
            variant: "primary",
            component: (C) => /* @__PURE__ */ a(Ae, { ...C, to: e }),
            children: i("addMapper")
          }
        ) }),
        actions: [
          {
            title: i("delete"),
            onRowClick: (C) => {
              b(C), v();
            }
          }
        ],
        columns: [
          {
            name: "name",
            cellRenderer: (C) => /* @__PURE__ */ a(FQ, { ...C, toDetail: t })
          },
          {
            name: "type"
          }
        ],
        emptyState: /* @__PURE__ */ a(
          ct,
          {
            message: i("emptyMappers"),
            instructions: i("emptyMappersInstructions"),
            primaryActionText: i("emptyPrimaryAction"),
            onPrimaryAction: () => r(e)
          }
        )
      },
      l
    )
  ] });
}, jQ = [
  "connectionUrl",
  "bindDn",
  "bindCredential",
  "useTruststoreSpi",
  "connectionTimeout",
  "startTls",
  "authType"
], RI = (e) => {
  const t = {};
  return jQ.forEach((n) => {
    const r = Un(e.getValues(), `config.${n}`);
    t[n] = Array.isArray(r) ? r[0] : "";
  }), t;
}, AI = ({
  form: e,
  id: t,
  showSectionHeading: n = !1,
  showSectionDescription: r = !1
}) => {
  const { adminClient: i } = de(), { t: s } = H(), { realm: o } = ye(), { addAlert: l, addError: c } = we(), d = !!t, u = async (g) => {
    try {
      const b = RI(e);
      await i.realms.testLDAPConnection(
        { realm: o },
        { ...b, action: g, componentId: t }
      ), l(s("testSuccess"), pe.success);
    } catch (b) {
      c("testError", b);
    }
  }, [p, m] = D(!1), f = rt({
    control: e.control,
    name: "config.authType",
    defaultValue: ["simple"]
  });
  return /* @__PURE__ */ x(He, { ...e, children: [
    n && /* @__PURE__ */ a(
      bs,
      {
        title: s("connectionAndAuthenticationSettings"),
        description: s("ldapConnectionAndAuthorizationSettingsDescription"),
        showDescription: r
      }
    ),
    /* @__PURE__ */ x(je, { role: "manage-realm", isHorizontal: !0, children: [
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.connectionUrl.0",
          label: s("connectionURL"),
          labelIcon: s("consoleDisplayConnectionUrlHelp"),
          type: "url",
          rules: {
            required: s("validateConnectionUrl")
          }
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: s("enableStartTls"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: s("enableStartTlsHelp"),
              fieldLabelId: "enableStartTls"
            }
          ),
          fieldId: "kc-enable-start-tls",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.startTls",
              defaultValue: ["false"],
              control: e.control,
              render: ({ field: g }) => /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-enable-start-tls",
                  "data-testid": "enable-start-tls",
                  isDisabled: !1,
                  onChange: (b, v) => g.onChange([`${v}`]),
                  isChecked: g.value[0] === "true",
                  label: s("on"),
                  labelOff: s("off"),
                  "aria-label": s("enableStartTls")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        at,
        {
          id: "useTruststoreSpi",
          name: "config.useTruststoreSpi[0]",
          label: s("useTruststoreSpi"),
          labelIcon: s("useTruststoreSpiHelp"),
          controller: {
            defaultValue: "always"
          },
          options: [
            { key: "always", value: s("always") },
            { key: "never", value: s("never") }
          ]
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: s("connectionPooling"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: s("connectionPoolingHelp"),
              fieldLabelId: "connectionPooling"
            }
          ),
          fieldId: "kc-connection-pooling",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.connectionPooling",
              defaultValue: ["false"],
              control: e.control,
              render: ({ field: g }) => /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-connection-pooling",
                  "data-testid": "connection-pooling",
                  isDisabled: !1,
                  onChange: (b, v) => g.onChange([`${v}`]),
                  isChecked: g.value[0] === "true",
                  label: s("on"),
                  labelOff: s("off"),
                  "aria-label": s("connectionPooling")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.connectionTimeout.0",
          label: s("connectionTimeout"),
          labelIcon: s("connectionTimeoutHelp"),
          type: "number",
          min: 0
        }
      ),
      /* @__PURE__ */ a(re, { fieldId: "kc-test-connection-button", children: /* @__PURE__ */ a(
        z,
        {
          variant: "secondary",
          id: "kc-test-connection-button",
          "data-testid": "test-connection-button",
          onClick: () => u("testConnection"),
          children: s("testConnection")
        }
      ) }),
      /* @__PURE__ */ a(
        re,
        {
          label: s("bindType"),
          labelIcon: /* @__PURE__ */ a(le, { helpText: s("bindTypeHelp"), fieldLabelId: "bindType" }),
          fieldId: "kc-bind-type",
          isRequired: !0,
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.authType[0]",
              defaultValue: "simple",
              control: e.control,
              render: ({ field: g }) => /* @__PURE__ */ x(
                ht,
                {
                  toggleId: "kc-bind-type",
                  onToggle: () => m(!p),
                  isOpen: p,
                  onSelect: (b) => {
                    g.onChange(b), m(!1);
                  },
                  selections: g.value,
                  variant: mt.single,
                  "data-testid": "ldap-bind-type",
                  "aria-label": s("selectBindType"),
                  children: [
                    /* @__PURE__ */ a(Re, { value: "simple", children: "simple" }),
                    /* @__PURE__ */ a(Re, { value: "none", children: "none" })
                  ]
                }
              )
            }
          )
        }
      ),
      yi(f, ["simple"]) && /* @__PURE__ */ x(te, { children: [
        /* @__PURE__ */ a(
          ve,
          {
            name: "config.bindDn.0",
            label: s("bindDn"),
            labelIcon: s("bindDnHelp"),
            rules: {
              required: s("validateBindDn")
            }
          }
        ),
        /* @__PURE__ */ a(
          zo,
          {
            name: "config.bindCredential.0",
            label: s("bindCredentials"),
            labelIcon: s("bindCredentialsHelp"),
            hasReveal: !d,
            rules: {
              required: s("validateBindCredentials")
            }
          }
        )
      ] }),
      /* @__PURE__ */ a(re, { fieldId: "kc-test-auth-button", children: /* @__PURE__ */ a(
        z,
        {
          variant: "secondary",
          id: "kc-test-auth-button",
          "data-testid": "test-auth-button",
          onClick: () => u("testAuthentication"),
          children: s("testAuthentication")
        }
      ) })
    ] })
  ] });
}, BQ = "1.3.6.1.4.1.4203.1.11.1", LI = ({
  id: e,
  form: t,
  showSectionHeading: n = !1,
  showSectionDescription: r = !1
}) => {
  const { adminClient: i } = de(), { t: s } = H(), { realm: o } = ye(), { addAlert: l, addError: c } = we(), d = async () => {
    if (await t.trigger())
      try {
        const u = RI(t), p = await i.realms.ldapServerCapabilities(
          { realm: o },
          { ...u, componentId: e }
        );
        l(s("testSuccess"));
        const m = p.filter(
          (f) => f.oid === BQ
        );
        t.setValue("config.usePasswordModifyExtendedOp", [
          (m.length > 0).toString()
        ]);
      } catch (u) {
        c("testError", u);
      }
  };
  return /* @__PURE__ */ x(te, { children: [
    n && /* @__PURE__ */ a(
      bs,
      {
        title: s("advancedSettings"),
        description: s("ldapAdvancedSettingsDescription"),
        showDescription: r
      }
    ),
    /* @__PURE__ */ x(je, { role: "manage-realm", isHorizontal: !0, children: [
      /* @__PURE__ */ a(
        re,
        {
          label: s("enableLdapv3Password"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: s("enableLdapv3PasswordHelp"),
              fieldLabelId: "enableLdapv3Password"
            }
          ),
          fieldId: "kc-enable-ldapv3-password",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.usePasswordModifyExtendedOp",
              defaultValue: ["false"],
              control: t.control,
              render: ({ field: u }) => /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-enable-ldapv3-password",
                  "data-testid": "ldapv3-password",
                  isDisabled: !1,
                  onChange: (p, m) => u.onChange([`${m}`]),
                  isChecked: u.value[0] === "true",
                  label: s("on"),
                  labelOff: s("off"),
                  "aria-label": s("enableLdapv3Password")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: s("validatePasswordPolicy"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: s("validatePasswordPolicyHelp"),
              fieldLabelId: "validatePasswordPolicy"
            }
          ),
          fieldId: "kc-validate-password-policy",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.validatePasswordPolicy",
              defaultValue: ["false"],
              control: t.control,
              render: ({ field: u }) => /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-validate-password-policy",
                  "data-testid": "password-policy",
                  isDisabled: !1,
                  onChange: (p, m) => u.onChange([`${m}`]),
                  isChecked: u.value[0] === "true",
                  label: s("on"),
                  labelOff: s("off"),
                  "aria-label": s("validatePasswordPolicy")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: s("trustEmail"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: s("trustEmailHelp"),
              fieldLabelId: "trustEmail"
            }
          ),
          fieldId: "kc-trust-email",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.trustEmail",
              defaultValue: ["false"],
              control: t.control,
              render: ({ field: u }) => /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-trust-email",
                  "data-testid": "trust-email",
                  isDisabled: !1,
                  onChange: (p, m) => u.onChange([`${m}`]),
                  isChecked: u.value[0] === "true",
                  label: s("on"),
                  labelOff: s("off"),
                  "aria-label": s("trustEmail")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(re, { fieldId: "query-extensions", children: /* @__PURE__ */ a(
        z,
        {
          variant: "secondary",
          id: "query-extensions",
          "data-testid": "query-extensions",
          onClick: d,
          children: s("queryExtensions")
        }
      ) })
    ] })
  ] });
}, NI = ({
  form: e,
  showSectionHeading: t = !1,
  showSectionDescription: n = !1,
  vendorEdit: r = !1
}) => {
  const { t: i } = H(), { realm: s, realmRepresentation: o } = ye();
  ze(() => e.setValue("parentId", o?.id), []);
  const [l, c] = D(!1), d = () => {
    switch (e.getValues("config.vendor[0]")) {
      case "ad":
        e.setValue("config.usernameLDAPAttribute[0]", "cn"), e.setValue("config.rdnLDAPAttribute[0]", "cn"), e.setValue("config.uuidLDAPAttribute[0]", "objectGUID"), e.setValue("config.krbPrincipalAttribute[0]", "userPrincipalName"), e.setValue(
          "config.userObjectClasses[0]",
          "person, organizationalPerson, user"
        );
        break;
      case "rhds":
        e.setValue("config.usernameLDAPAttribute[0]", "uid"), e.setValue("config.rdnLDAPAttribute[0]", "uid"), e.setValue("config.uuidLDAPAttribute[0]", "nsuniqueid"), e.setValue("config.krbPrincipalAttribute[0]", "krbPrincipalName"), e.setValue(
          "config.userObjectClasses[0]",
          "inetOrgPerson, organizationalPerson"
        );
        break;
      case "tivoli":
        e.setValue("config.usernameLDAPAttribute[0]", "uid"), e.setValue("config.rdnLDAPAttribute[0]", "uid"), e.setValue("config.uuidLDAPAttribute[0]", "uniqueidentifier"), e.setValue("config.krbPrincipalAttribute[0]", "krb5PrincipalName"), e.setValue(
          "config.userObjectClasses[0]",
          "inetOrgPerson, organizationalPerson"
        );
        break;
      case "edirectory":
        e.setValue("config.usernameLDAPAttribute[0]", "uid"), e.setValue("config.rdnLDAPAttribute[0]", "uid"), e.setValue("config.uuidLDAPAttribute[0]", "guid"), e.setValue("config.krbPrincipalAttribute[0]", "krb5PrincipalName"), e.setValue(
          "config.userObjectClasses[0]",
          "inetOrgPerson, organizationalPerson"
        );
        break;
      case "other":
        e.setValue("config.usernameLDAPAttribute[0]", "uid"), e.setValue("config.rdnLDAPAttribute[0]", "uid"), e.setValue("config.uuidLDAPAttribute[0]", "entryUUID"), e.setValue("config.krbPrincipalAttribute[0]", "krb5PrincipalName"), e.setValue(
          "config.userObjectClasses[0]",
          "inetOrgPerson, organizationalPerson"
        );
        break;
      default:
        return "";
    }
  };
  return /* @__PURE__ */ x(He, { ...e, children: [
    t && /* @__PURE__ */ a(
      bs,
      {
        title: i("generalOptions"),
        description: i("ldapGeneralOptionsSettingsDescription"),
        showDescription: n
      }
    ),
    /* @__PURE__ */ x(je, { role: "manage-realm", isHorizontal: !0, children: [
      /* @__PURE__ */ a(
        "input",
        {
          type: "hidden",
          defaultValue: "ldap",
          ...e.register("providerId")
        }
      ),
      /* @__PURE__ */ a(
        "input",
        {
          type: "hidden",
          defaultValue: "org.keycloak.storage.UserStorageProvider",
          ...e.register("providerType")
        }
      ),
      /* @__PURE__ */ a(
        "input",
        {
          type: "hidden",
          defaultValue: s,
          ...e.register("parentId")
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "name",
          label: i("uiDisplayName"),
          labelIcon: i("uiDisplayNameHelp"),
          defaultValue: "ldap",
          rules: {
            required: i("validateName")
          }
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: i("vendor"),
          labelIcon: /* @__PURE__ */ a(le, { helpText: i("vendorHelp"), fieldLabelId: "vendor" }),
          fieldId: "kc-vendor",
          isRequired: !0,
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.vendor[0]",
              defaultValue: "ad",
              control: e.control,
              render: ({ field: u }) => /* @__PURE__ */ x(
                ht,
                {
                  isDisabled: !!r,
                  toggleId: "kc-vendor",
                  onToggle: () => c(!l),
                  isOpen: l,
                  onSelect: (p) => {
                    u.onChange(p), c(!1), d();
                  },
                  selections: u.value,
                  variant: mt.single,
                  "aria-label": i("selectVendor"),
                  children: [
                    /* @__PURE__ */ a(Re, { value: "ad", children: "Active Directory" }, 0),
                    /* @__PURE__ */ a(Re, { value: "rhds", children: "Red Hat Directory Server" }, 1),
                    /* @__PURE__ */ a(Re, { value: "tivoli", children: "Tivoli" }, 2),
                    /* @__PURE__ */ a(Re, { value: "edirectory", children: "Novell eDirectory" }, 3),
                    /* @__PURE__ */ a(Re, { value: "other", children: "Other" }, 4)
                  ]
                }
              )
            }
          )
        }
      )
    ] })
  ] });
}, DI = ({
  form: e,
  showSectionHeading: t = !1,
  showSectionDescription: n = !1
}) => {
  const { t: r } = H(), i = rt({
    control: e.control,
    name: "config.allowKerberosAuthentication",
    defaultValue: ["false"]
  });
  return /* @__PURE__ */ x(He, { ...e, children: [
    t && /* @__PURE__ */ a(
      bs,
      {
        title: r("kerberosIntegration"),
        description: r("ldapKerberosSettingsDescription"),
        showDescription: n
      }
    ),
    /* @__PURE__ */ x(je, { role: "manage-realm", isHorizontal: !0, children: [
      /* @__PURE__ */ a(
        re,
        {
          label: r("allowKerberosAuthentication"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("allowKerberosAuthenticationHelp"),
              fieldLabelId: "allowKerberosAuthentication"
            }
          ),
          fieldId: "kc-allow-kerberos-authentication",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.allowKerberosAuthentication",
              defaultValue: ["false"],
              control: e.control,
              render: ({ field: s }) => /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-allow-kerberos-authentication",
                  "data-testid": "allow-kerberos-auth",
                  isDisabled: !1,
                  onChange: (o, l) => s.onChange([`${l}`]),
                  isChecked: s.value[0] === "true",
                  label: r("on"),
                  labelOff: r("off"),
                  "aria-label": r("allowKerberosAuthentication")
                }
              )
            }
          )
        }
      ),
      i[0] === "true" && /* @__PURE__ */ x(te, { children: [
        /* @__PURE__ */ a(
          ve,
          {
            name: "config.kerberosRealm.0",
            label: r("kerberosRealm"),
            labelIcon: r("kerberosRealmHelp"),
            rules: {
              required: r("validateRealm")
            }
          }
        ),
        /* @__PURE__ */ a(
          ve,
          {
            name: "config.serverPrincipal.0",
            label: r("serverPrincipal"),
            labelIcon: r("serverPrincipalHelp"),
            rules: {
              required: r("validateServerPrincipal")
            }
          }
        ),
        /* @__PURE__ */ a(
          ve,
          {
            name: "config.keyTab.0",
            label: r("keyTab"),
            labelIcon: r("keyTabHelp"),
            rules: {
              required: r("validateKeyTab")
            }
          }
        ),
        /* @__PURE__ */ a(
          ve,
          {
            name: "config.krbPrincipalAttribute.0",
            label: r("krbPrincipalAttribute"),
            labelIcon: r("krbPrincipalAttributeHelp")
          }
        ),
        /* @__PURE__ */ a(
          re,
          {
            label: r("debug"),
            labelIcon: /* @__PURE__ */ a(le, { helpText: r("debugHelp"), fieldLabelId: "debug" }),
            fieldId: "kc-debug",
            hasNoPaddingTop: !0,
            children: /* @__PURE__ */ a(
              be,
              {
                name: "config.debug",
                defaultValue: ["false"],
                control: e.control,
                render: ({ field: s }) => /* @__PURE__ */ a(
                  Je,
                  {
                    id: "kc-debug",
                    "data-testid": "debug",
                    isDisabled: !1,
                    onChange: (o, l) => s.onChange([`${l}`]),
                    isChecked: s.value[0] === "true",
                    label: r("on"),
                    labelOff: r("off"),
                    "aria-label": r("debug")
                  }
                )
              }
            )
          }
        )
      ] }),
      /* @__PURE__ */ a(
        re,
        {
          label: r("useKerberosForPasswordAuthentication"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("useKerberosForPasswordAuthenticationHelp"),
              fieldLabelId: "useKerberosForPasswordAuthentication"
            }
          ),
          fieldId: "kc-use-kerberos-password-authentication",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.useKerberosForPasswordAuthentication",
              defaultValue: ["false"],
              control: e.control,
              render: ({ field: s }) => /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-use-kerberos-password-authentication",
                  "data-testid": "use-kerberos-pw-auth",
                  isDisabled: !1,
                  onChange: (o, l) => s.onChange([`${l}`]),
                  isChecked: s.value[0] === "true",
                  label: r("on"),
                  labelOff: r("off"),
                  "aria-label": r("useKerberosForPasswordAuthentication")
                }
              )
            }
          )
        }
      )
    ] })
  ] });
}, MI = ({
  form: e,
  showSectionHeading: t = !1,
  showSectionDescription: n = !1
}) => {
  const { t: r } = H();
  return /* @__PURE__ */ x(He, { ...e, children: [
    t && /* @__PURE__ */ a(
      bs,
      {
        title: r("ldapSearchingAndUpdatingSettings"),
        description: r("ldapSearchingAndUpdatingSettingsDescription"),
        showDescription: n
      }
    ),
    /* @__PURE__ */ x(je, { role: "manage-realm", isHorizontal: !0, children: [
      /* @__PURE__ */ a(
        at,
        {
          id: "editMode",
          name: "config.editMode[0]",
          label: r("editMode"),
          labelIcon: r("editModeLdapHelp"),
          controller: {
            defaultValue: "",
            rules: {
              required: { value: !0, message: r("validateEditMode") }
            }
          },
          options: ["", "READ_ONLY", "WRITABLE", "UNSYNCED"]
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.usersDn.0",
          label: r("usersDN"),
          labelIcon: r("usersDNHelp"),
          rules: {
            required: r("validateUsersDn")
          }
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.usernameLDAPAttribute.0",
          label: r("usernameLdapAttribute"),
          labelIcon: r("usernameLdapAttributeHelp"),
          defaultValue: "cn",
          rules: {
            required: r("validateUsernameLDAPAttribute")
          }
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.rdnLDAPAttribute.0",
          label: r("rdnLdapAttribute"),
          labelIcon: r("rdnLdapAttributeHelp"),
          defaultValue: "cn",
          rules: {
            required: r("validateRdnLdapAttribute")
          }
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.uuidLDAPAttribute.0",
          label: r("uuidLdapAttribute"),
          labelIcon: r("uuidLdapAttributeHelp"),
          defaultValue: "objectGUID",
          rules: {
            required: r("validateUuidLDAPAttribute")
          }
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.userObjectClasses.0",
          label: r("userObjectClasses"),
          labelIcon: r("userObjectClassesHelp"),
          defaultValue: "person, organizationalPerson, user",
          rules: {
            required: r("validateUserObjectClasses")
          }
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.customUserSearchFilter.0",
          label: r("userLdapFilter"),
          labelIcon: r("userLdapFilterHelp"),
          rules: {
            pattern: {
              value: /(\(.*\))$/,
              message: r("validateCustomUserSearchFilter")
            }
          }
        }
      ),
      /* @__PURE__ */ a(
        at,
        {
          id: "kc-search-scope",
          name: "config.searchScope[0]",
          label: r("searchScope"),
          labelIcon: r("searchScopeHelp"),
          controller: {
            defaultValue: "1"
          },
          options: [
            { key: "1", value: r("oneLevel") },
            { key: "2", value: r("subtree") }
          ]
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.readTimeout.0",
          label: r("readTimeout"),
          labelIcon: r("readTimeoutHelp"),
          type: "number",
          min: 0
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: r("pagination"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("paginationHelp"),
              fieldLabelId: "pagination"
            }
          ),
          fieldId: "kc-ui-pagination",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.pagination",
              defaultValue: ["false"],
              control: e.control,
              render: ({ field: i }) => /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-ui-pagination",
                  "data-testid": "ui-pagination",
                  isDisabled: !1,
                  onChange: (s, o) => i.onChange([`${o}`]),
                  isChecked: i.value[0] === "true",
                  label: r("on"),
                  labelOff: r("off"),
                  "aria-label": r("pagination")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        at,
        {
          name: "config.referral.0",
          label: r("referral"),
          labelIcon: r("referralHelp"),
          controller: {
            defaultValue: ""
          },
          options: ["ignore", "follow"]
        }
      )
    ] })
  ] });
}, FI = ({
  form: e,
  showSectionHeading: t = !1,
  showSectionDescription: n = !1
}) => {
  const { t: r } = H(), i = e.watch("config.periodicFullSync", !1), s = e.watch("config.periodicChangedUsersSync", !1);
  return /* @__PURE__ */ x(He, { ...e, children: [
    t && /* @__PURE__ */ a(
      bs,
      {
        title: r("synchronizationSettings"),
        description: r("ldapSynchronizationSettingsDescription"),
        showDescription: n
      }
    ),
    /* @__PURE__ */ x(je, { role: "manage-realm", isHorizontal: !0, children: [
      /* @__PURE__ */ a(
        re,
        {
          hasNoPaddingTop: !0,
          label: r("importUsers"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("importUsersHelp"),
              fieldLabelId: "importUsers"
            }
          ),
          fieldId: "kc-import-users",
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.importEnabled",
              defaultValue: ["true"],
              control: e.control,
              render: ({ field: o }) => /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-import-users",
                  "data-testid": "import-users",
                  name: "importEnabled",
                  label: r("on"),
                  labelOff: r("off"),
                  onChange: (l, c) => o.onChange([`${c}`]),
                  isChecked: o.value[0] === "true",
                  isDisabled: !1,
                  "aria-label": r("importUsers")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          hasNoPaddingTop: !0,
          label: r("syncRegistrations"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("syncRegistrations"),
              fieldLabelId: "syncRegistrations"
            }
          ),
          fieldId: "syncRegistrations",
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.syncRegistrations",
              defaultValue: ["true"],
              control: e.control,
              render: ({ field: o }) => /* @__PURE__ */ a(
                Je,
                {
                  id: "syncRegistrations",
                  "data-testid": "syncRegistrations",
                  label: r("on"),
                  labelOff: r("off"),
                  onChange: (l, c) => o.onChange([`${c}`]),
                  isChecked: o.value[0] === "true",
                  "aria-label": r("syncRegistrations")
                }
              )
            }
          )
        }
      ),
      /* @__PURE__ */ a(
        ve,
        {
          name: "config.batchSizeForSync.0",
          type: "number",
          min: 0,
          label: r("batchSize"),
          labelIcon: r("batchSizeHelp")
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: r("periodicFullSync"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("periodicFullSyncHelp"),
              fieldLabelId: "periodicFullSync"
            }
          ),
          fieldId: "kc-periodic-full-sync",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.periodicFullSync",
              defaultValue: !1,
              control: e.control,
              render: ({ field: o }) => /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-periodic-full-sync",
                  "data-testid": "periodic-full-sync",
                  isDisabled: !1,
                  onChange: (l, c) => o.onChange(c),
                  isChecked: o.value === !0,
                  label: r("on"),
                  labelOff: r("off"),
                  "aria-label": r("periodicFullSync")
                }
              )
            }
          )
        }
      ),
      i && /* @__PURE__ */ a(
        ve,
        {
          name: "config.fullSyncPeriod.0",
          label: r("fullSyncPeriod"),
          labelIcon: r("fullSyncPeriodHelp"),
          type: "number",
          min: -1,
          defaultValue: 604800
        }
      ),
      /* @__PURE__ */ a(
        re,
        {
          label: r("periodicChangedUsersSync"),
          labelIcon: /* @__PURE__ */ a(
            le,
            {
              helpText: r("periodicChangedUsersSyncHelp"),
              fieldLabelId: "periodicChangedUsersSync"
            }
          ),
          fieldId: "kc-periodic-changed-users-sync",
          hasNoPaddingTop: !0,
          children: /* @__PURE__ */ a(
            be,
            {
              name: "config.periodicChangedUsersSync",
              defaultValue: !1,
              control: e.control,
              render: ({ field: o }) => /* @__PURE__ */ a(
                Je,
                {
                  id: "kc-periodic-changed-users-sync",
                  "data-testid": "periodic-changed-users-sync",
                  isDisabled: !1,
                  onChange: (l, c) => o.onChange(c),
                  isChecked: o.value === !0,
                  label: r("on"),
                  labelOff: r("off"),
                  "aria-label": r("periodicChangedUsersSync")
                }
              )
            }
          )
        }
      ),
      s && /* @__PURE__ */ a(
        ve,
        {
          name: "config.changedSyncPeriod.0",
          label: r("changedUsersSyncPeriod"),
          labelIcon: r("changedUsersSyncHelp"),
          type: "number",
          min: -1,
          defaultValue: 86400
        }
      )
    ] })
  ] });
}, $I = ({
  id: e,
  onSubmit: t
}) => {
  const { t: n } = H(), r = De(), i = Xe(), { realm: s } = ye(), o = aa();
  return /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(
      gl,
      {
        label: n("jumpToSection"),
        sections: [
          {
            title: n("generalOptions"),
            panel: /* @__PURE__ */ a(NI, { form: r, vendorEdit: !!e })
          },
          {
            title: n("connectionAndAuthenticationSettings"),
            panel: /* @__PURE__ */ a(AI, { form: r, id: e })
          },
          {
            title: n("ldapSearchingAndUpdatingSettings"),
            panel: /* @__PURE__ */ a(MI, { form: r })
          },
          {
            title: n("synchronizationSettings"),
            panel: /* @__PURE__ */ a(FI, { form: r })
          },
          {
            title: n("kerberosIntegration"),
            panel: /* @__PURE__ */ a(DI, { form: r }),
            isHidden: !o(Fn.Kerberos)
          },
          { title: n("cacheSettings"), panel: /* @__PURE__ */ a(od, { form: r }) },
          {
            title: n("advancedSettings"),
            panel: /* @__PURE__ */ a(LI, { form: r, id: e })
          }
        ]
      }
    ),
    /* @__PURE__ */ a(St, { onSubmit: r.handleSubmit(t), children: /* @__PURE__ */ a(
      Mr,
      {
        name: "ldap",
        isDisabled: !r.formState.isDirty,
        isSubmit: !0,
        children: /* @__PURE__ */ a(
          z,
          {
            variant: "link",
            onClick: () => i(cs({ realm: s })),
            "data-testid": "ldap-cancel",
            children: n("cancel")
          }
        )
      }
    ) })
  ] });
};
function jI(e) {
  const { config: t } = e;
  return t?.periodicChangedUsersSync !== void 0 && (t.periodicChangedUsersSync === !1 && (t.changedSyncPeriod = ["-1"]), delete t.periodicChangedUsersSync), t?.periodicFullSync !== void 0 && (t.periodicFullSync === !1 && (t.fullSyncPeriod = ["-1"]), delete t.periodicFullSync), e;
}
function UQ() {
  const { adminClient: e } = de(), { t } = H(), n = Ke({ mode: "onChange" }), r = Xe(), { realm: i } = ye(), { addAlert: s, addError: o } = we(), l = async (c) => {
    try {
      await e.components.create(jI(c)), s(t("createUserProviderSuccess"), pe.success), r(cs({ realm: i }));
    } catch (d) {
      o("createUserProviderError", d);
    }
  };
  return /* @__PURE__ */ x(He, { ...n, children: [
    /* @__PURE__ */ a(
      wb,
      {
        provider: "LDAP",
        noDivider: !0,
        save: () => n.handleSubmit(l)()
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a($I, { onSubmit: l }) }) })
  ] });
}
const VQ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: UQ
}, Symbol.toStringTag, { value: "Module" })), KQ = ({
  components: e,
  onClose: t
}) => {
  const { adminClient: n } = de(), { t: r } = H(), { addAlert: i, addError: s } = we(), [o, l] = D(""), [c, d] = D(
    wr(e, "config.priority", "name").map(
      (f) => f.name
    )
  ), u = ({ index: f }) => (l(r("onDragStart", { item: c[f] })), !0), p = ({ index: f }) => {
    l(r("onDragMove", { item: c[f] }));
  }, m = (f, g) => {
    if (g) {
      const b = [...c], [v] = b.splice(f.index, 1);
      return b.splice(g.index, 0, v), l(r("onDragFinish", { list: b })), d(b), !0;
    } else
      return l(r("onDragCancel")), !1;
  };
  return /* @__PURE__ */ x(
    ft,
    {
      variant: Et.small,
      title: r("managePriorityOrder"),
      isOpen: !0,
      onClose: t,
      actions: [
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-confirm",
            onClick: async () => {
              const f = c.map((g, b) => {
                const v = e.find((y) => y.name === g);
                return v.config.priority = [b.toString()], n.components.update(
                  { id: v.id },
                  v
                );
              });
              try {
                await Promise.all(f), i(r("orderChangeSuccessUserFed"));
              } catch (g) {
                s("orderChangeErrorUserFed", g);
              }
              t();
            },
            children: r("save")
          },
          "confirm"
        ),
        /* @__PURE__ */ a(
          z,
          {
            id: "modal-cancel",
            variant: xe.link,
            onClick: t,
            children: r("cancel")
          },
          "cancel"
        )
      ],
      children: [
        /* @__PURE__ */ a(Rt, { className: "pf-v5-u-pb-lg", children: /* @__PURE__ */ a(tt, { children: r("managePriorityInfo") }) }),
        /* @__PURE__ */ a(
          _h,
          {
            onDrag: u,
            onDragMove: p,
            onDrop: m,
            children: /* @__PURE__ */ a(Ah, { hasNoWrapper: !0, children: /* @__PURE__ */ a(
              Er,
              {
                "aria-label": r("manageOrderTableAria"),
                "data-testid": "manageOrderDataList",
                isCompact: !0,
                children: c.map((f) => /* @__PURE__ */ a(Rh, { hasNoWrapper: !0, children: /* @__PURE__ */ a(Pa, { "aria-label": f, id: f, children: /* @__PURE__ */ x(Va, { children: [
                  /* @__PURE__ */ a(Eh, { children: /* @__PURE__ */ a(Ph, { "aria-label": r("dragHelp") }) }),
                  /* @__PURE__ */ a(
                    Ua,
                    {
                      dataListCells: [
                        /* @__PURE__ */ a(oa, { "data-testid": f, children: f }, f)
                      ]
                    }
                  )
                ] }) }) }, f))
              }
            ) })
          }
        ),
        /* @__PURE__ */ a("div", { className: "pf-v5-screen-reader", "aria-live": "assertive", children: o })
      ]
    }
  );
};
function HQ() {
  const { adminClient: e } = de(), { t } = H(), n = Ke({ mode: "onChange" }), r = Xe(), { realm: i } = ye(), { id: s } = zt(), { addAlert: o, addError: l } = we();
  _e(
    async () => {
      if (s)
        return e.components.findOne({ id: s });
    },
    (u) => {
      if (u)
        c(u);
      else if (s)
        throw new Error(t("notFound"));
    },
    []
  );
  const c = (u) => {
    n.reset({ ...u });
  }, d = async (u) => {
    try {
      s ? await e.components.update({ id: s }, u) : (await e.components.create(u), r(`/${i}/user-federation`)), c(u), o(
        t(s ? "userProviderSaveSuccess" : "createUserProviderSuccess"),
        pe.success
      );
    } catch (p) {
      l(
        s ? "userProviderSaveError" : "createUserProviderError",
        p
      );
    }
  };
  return /* @__PURE__ */ x(He, { ...n, children: [
    /* @__PURE__ */ a(EI, { provider: "Kerberos", save: () => n.handleSubmit(d)() }),
    /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a(_I, { form: n, showSectionHeading: !0 }) }),
    /* @__PURE__ */ x(Te, { variant: "light", isFilled: !0, children: [
      /* @__PURE__ */ a(od, { form: n, showSectionHeading: !0 }),
      /* @__PURE__ */ a(St, { onSubmit: n.handleSubmit(d), children: /* @__PURE__ */ x(ot, { children: [
        /* @__PURE__ */ a(
          z,
          {
            isDisabled: !n.formState.isDirty,
            variant: "primary",
            type: "submit",
            "data-testid": "kerberos-save",
            children: t("save")
          }
        ),
        /* @__PURE__ */ a(
          z,
          {
            variant: "link",
            onClick: () => r(cs({ realm: i })),
            "data-testid": "kerberos-cancel",
            children: t("cancel")
          }
        )
      ] }) })
    ] })
  ] });
}
const BI = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: HQ
}, Symbol.toStringTag, { value: "Module" })), zQ = () => {
  const { t: e } = H(), { activeStep: t, goToNextStep: n, goToPrevStep: r, close: i } = Ws();
  return /* @__PURE__ */ a(
    Hc,
    {
      activeStep: t,
      onNext: n,
      onBack: r,
      onClose: i,
      isBackDisabled: t.index === 1,
      backButtonText: e("back"),
      nextButtonText: e("next"),
      cancelButtonText: e("cancel")
    }
  );
}, Cee = () => {
  const { t: e } = H(), t = Ke({ mode: "onChange" });
  return /* @__PURE__ */ x(Xu, { height: "100%", footer: /* @__PURE__ */ a(zQ, {}), children: [
    /* @__PURE__ */ a(
      pa,
      {
        name: e("requiredSettings"),
        id: "kerberosRequiredSettingsStep",
        children: /* @__PURE__ */ a(
          _I,
          {
            form: t,
            showSectionHeading: !0,
            showSectionDescription: !0
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      pa,
      {
        name: e("cacheSettings"),
        id: "cacheSettingsStep",
        footer: {
          backButtonText: e("back"),
          nextButtonText: e("finish"),
          cancelButtonText: e("cancel")
        },
        children: /* @__PURE__ */ a(od, { form: t, showSectionHeading: !0, showSectionDescription: !0 })
      }
    )
  ] });
};
function qQ() {
  const { adminClient: e } = de(), { t } = H(), n = Ke({ mode: "onChange" }), { realm: r } = ye(), { id: i } = na(), { addAlert: s, addError: o } = we(), [l, c] = D(), [d, u] = D(0), p = () => u((y) => y + 1);
  _e(
    () => e.components.findOne({ id: i }),
    (y) => {
      if (!y)
        throw new Error(t("notFound"));
      c(y), b(y);
    },
    [i, d]
  );
  const m = (y) => Kn(Dc({ realm: r, id: i, tab: y })), f = m("settings"), g = m("mappers"), b = (y) => {
    n.reset(y), n.setValue(
      "config.periodicChangedUsersSync",
      y.config?.changedSyncPeriod?.[0] !== "-1"
    ), n.setValue(
      "config.periodicFullSync",
      y.config?.fullSyncPeriod?.[0] !== "-1"
    );
  }, v = async (y) => {
    try {
      await e.components.update(
        { id: i },
        jI(y)
      ), s(t("userProviderSaveSuccess"), pe.success), p();
    } catch (C) {
      o("userProviderSaveError", C);
    }
  };
  return l ? /* @__PURE__ */ x(He, { ...n, children: [
    /* @__PURE__ */ a(
      wb,
      {
        provider: "LDAP",
        noDivider: !0,
        editMode: l.config?.editMode,
        save: () => n.handleSubmit(v)()
      }
    ),
    /* @__PURE__ */ a(Te, { variant: "light", className: "pf-v5-u-p-0", children: /* @__PURE__ */ x(
      Vn,
      {
        defaultLocation: Dc({
          realm: r,
          id: i,
          tab: "settings"
        }),
        isBox: !0,
        children: [
          /* @__PURE__ */ a(
            Ee,
            {
              id: "settings",
              title: /* @__PURE__ */ a(Pe, { children: t("settings") }),
              ...f,
              children: /* @__PURE__ */ a(Te, { variant: "light", children: /* @__PURE__ */ a($I, { id: i, onSubmit: v }) })
            }
          ),
          /* @__PURE__ */ a(
            Ee,
            {
              id: "mappers",
              title: /* @__PURE__ */ a(Pe, { children: t("mappers") }),
              "data-testid": "ldap-mappers-tab",
              ...g,
              children: /* @__PURE__ */ a(
                $Q,
                {
                  toCreate: Tx({
                    realm: r,
                    id: i,
                    mapperId: "new"
                  }),
                  toDetail: (y) => Tx({
                    realm: r,
                    id: i,
                    mapperId: y
                  })
                }
              )
            }
          )
        ]
      }
    ) })
  ] }) : /* @__PURE__ */ a(bt, {});
}
const GQ = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: qQ
}, Symbol.toStringTag, { value: "Module" })), WQ = () => {
  const { t: e } = H(), { activeStep: t, goToNextStep: n, goToPrevStep: r, close: i } = Ws();
  return /* @__PURE__ */ a(
    Hc,
    {
      activeStep: t,
      onNext: n,
      onBack: r,
      onClose: i,
      isBackDisabled: t.index === 1,
      backButtonText: e("back"),
      nextButtonText: e("next"),
      cancelButtonText: e("cancel")
    }
  );
}, Gm = () => {
  const { goToNextStep: e, goToPrevStep: t, close: n } = Ws(), { t: r } = H();
  return /* @__PURE__ */ x(Qh, { children: [
    /* @__PURE__ */ a(z, { variant: "secondary", onClick: t, children: r("back") }),
    /* @__PURE__ */ a(z, { variant: "primary", type: "submit", onClick: e, children: r("next") }),
    /* @__PURE__ */ a(z, { variant: "link", children: r("skipCustomizationAndFinish") }),
    /* @__PURE__ */ a(z, { variant: "link", onClick: n, children: r("cancel") })
  ] });
}, xee = () => {
  const e = Ke(), { t } = H(), n = aa();
  return /* @__PURE__ */ x(Xu, { height: "100%", footer: /* @__PURE__ */ a(WQ, {}), children: [
    /* @__PURE__ */ a(pa, { name: t("requiredSettings"), id: "ldapRequiredSettingsStep", children: /* @__PURE__ */ a(
      NI,
      {
        form: e,
        showSectionHeading: !0,
        showSectionDescription: !0
      }
    ) }),
    /* @__PURE__ */ a(
      pa,
      {
        name: t("connectionAndAuthenticationSettings"),
        id: "ldapConnectionSettingsStep",
        children: /* @__PURE__ */ a(
          AI,
          {
            form: e,
            showSectionHeading: !0,
            showSectionDescription: !0
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      pa,
      {
        name: t("ldapSearchingAndUpdatingSettings"),
        id: "ldapSearchingSettingsStep",
        children: /* @__PURE__ */ a(
          MI,
          {
            form: e,
            showSectionHeading: !0,
            showSectionDescription: !0
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      pa,
      {
        name: t("synchronizationSettings"),
        id: "ldapSynchronizationSettingsStep",
        footer: /* @__PURE__ */ a(Gm, {}),
        children: /* @__PURE__ */ a(
          FI,
          {
            form: e,
            showSectionHeading: !0,
            showSectionDescription: !0
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      pa,
      {
        name: t("kerberosIntegration"),
        id: "ldapKerberosIntegrationSettingsStep",
        isDisabled: !n(Fn.Kerberos),
        footer: /* @__PURE__ */ a(Gm, {}),
        children: /* @__PURE__ */ a(
          DI,
          {
            form: e,
            showSectionHeading: !0,
            showSectionDescription: !0
          }
        )
      }
    ),
    /* @__PURE__ */ a(
      pa,
      {
        name: t("cacheSettings"),
        id: "ldapCacheSettingsStep",
        footer: /* @__PURE__ */ a(Gm, {}),
        children: /* @__PURE__ */ a(od, { form: e, showSectionHeading: !0, showSectionDescription: !0 })
      }
    ),
    /* @__PURE__ */ a(
      pa,
      {
        name: t("advancedSettings"),
        id: "ldapAdvancedSettingsStep",
        footer: {
          backButtonText: t("back"),
          nextButtonText: t("finish"),
          cancelButtonText: t("cancel")
        },
        children: /* @__PURE__ */ a(
          LI,
          {
            form: e,
            showSectionHeading: !0,
            showSectionDescription: !0
          }
        )
      }
    )
  ] });
};
function XQ() {
  const { adminClient: e } = de(), [t, n] = D(), { addAlert: r, addError: i } = we(), { t: s } = H(), { realm: o, realmRepresentation: l } = ye(), [c, d] = D(0), u = () => d((/* @__PURE__ */ new Date()).getTime()), p = Xe(), [m, f] = D(!1), g = Tt().componentTypes?.["org.keycloak.storage.UserStorageProvider"] || [];
  _e(
    async () => {
      const O = {
        parentId: l.id,
        type: "org.keycloak.storage.UserStorageProvider"
      };
      return e.components.find(O);
    },
    (O) => {
      n(O);
    },
    [c]
  );
  const b = nt(
    () => g.map((O) => /* @__PURE__ */ a(
      Ue,
      {
        onClick: () => p(kx({ realm: o, providerId: O.id })),
        children: O.id.toUpperCase() == "LDAP" ? O.id.toUpperCase() : Ia(O.id)
      },
      O.id
    )),
    []
  ), v = {
    variant: "link",
    onClick: () => f(!0),
    lowerButtonTitle: s("managePriorities")
  };
  let y;
  const [C, S] = D(""), [P, w] = Ve({
    titleKey: s("userFedDeleteConfirmTitle"),
    messageKey: s("userFedDeleteConfirm"),
    continueButtonLabel: "delete",
    continueButtonVariant: xe.danger,
    onConfirm: async () => {
      try {
        await e.components.del({ id: C }), u(), r(s("userFedDeletedSuccess"), pe.success);
      } catch (O) {
        i("userFedDeleteError", O);
      }
    }
  }), A = (O) => {
    S(O), P();
  }, k = (O, I) => {
    const _ = `${O.name}`, E = `${I.name}`;
    return _ < E ? -1 : 1;
  }, T = (O, I) => {
    switch (O) {
      case "ldap":
        return Dc({ realm: o, id: I });
      case "kerberos":
        return pY({ realm: o, id: I });
      default:
        return $T({ realm: o, providerId: O, id: I });
    }
  };
  return t && (y = t.sort(k).map((O, I) => /* @__PURE__ */ a(
    cw,
    {
      className: "keycloak-admin--user-federation__gallery-item",
      children: /* @__PURE__ */ a(
        kY,
        {
          to: T(O.providerId, O.id),
          dropdownItems: [
            /* @__PURE__ */ a(
              Ue,
              {
                onClick: () => {
                  A(O.id);
                },
                "data-testid": "card-delete",
                children: s("delete")
              },
              `${I}-cardDelete`
            )
          ],
          title: O.name,
          footerText: Ia(O.providerId),
          labelText: O.config?.enabled?.[0] !== "false" ? s("enabled") : s("disabled"),
          labelColor: O.config?.enabled?.[0] !== "false" ? "blue" : "gray"
        }
      )
    },
    I
  ))), /* @__PURE__ */ x(te, { children: [
    /* @__PURE__ */ a(w, {}),
    m && t && /* @__PURE__ */ a(
      KQ,
      {
        onClose: () => f(!1),
        components: t.filter((O) => O.config?.enabled)
      }
    ),
    /* @__PURE__ */ a(
      wt,
      {
        titleKey: "userFederation",
        subKey: "userFederationExplain",
        helpUrl: sa.userFederationUrl,
        ...t && t.length > 0 ? {
          lowerDropdownItems: b,
          lowerDropdownMenuTitle: "addNewProvider",
          lowerButton: v
        } : {}
      }
    ),
    /* @__PURE__ */ a(Te, { children: t && t.length > 0 ? /* @__PURE__ */ a(iu, { hasGutter: !0, children: y }) : /* @__PURE__ */ x(te, { children: [
      /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ a(tt, { component: Qt.p, children: s("getStarted") }) }),
      /* @__PURE__ */ a(Rt, { children: /* @__PURE__ */ a(tt, { className: "pf-v5-u-mt-lg", component: Qt.h2, children: s("providers") }) }),
      /* @__PURE__ */ a("hr", { className: "pf-v5-u-mb-lg" }),
      /* @__PURE__ */ a(iu, { hasGutter: !0, children: g.map((O) => /* @__PURE__ */ a(
        qT,
        {
          onClick: () => p(
            kx({ realm: o, providerId: O.id })
          ),
          "data-testid": `${O.id}-card`,
          children: /* @__PURE__ */ a(Sr, { children: /* @__PURE__ */ x(ca, { hasGutter: !0, children: [
            /* @__PURE__ */ a($t, { children: /* @__PURE__ */ a(Ii, { size: "lg", children: /* @__PURE__ */ a(lL, {}) }) }),
            /* @__PURE__ */ a($t, { isFilled: !0, children: s("addProvider", {
              provider: Ia(O.id),
              count: 4
            }) })
          ] }) })
        },
        O.id
      )) })
    ] }) })
  ] });
}
const Ob = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: XQ
}, Symbol.toStringTag, { value: "Module" }));
export {
  we as $,
  ot as A,
  z as B,
  Ks as C,
  Ig as D,
  wj as E,
  He as F,
  Y1 as G,
  j1 as H,
  K1 as I,
  kg as J,
  pl as K,
  pn as L,
  ft as M,
  zH as N,
  M1 as O,
  Te as P,
  ve as Q,
  sn as R,
  pp as S,
  lr as T,
  K$ as U,
  wt as V,
  at as W,
  io as X,
  j7 as Y,
  N1 as Z,
  se as _,
  ye as a,
  Ta as a$,
  V7 as a0,
  Zc as a1,
  fj as a2,
  mj as a3,
  S7 as a4,
  yj as a5,
  N7 as a6,
  H7 as a7,
  r9 as a8,
  z1 as a9,
  Ua as aA,
  oa as aB,
  Ht as aC,
  Kt as aD,
  ut as aE,
  Xt as aF,
  Ue as aG,
  st as aH,
  mw as aI,
  pr as aJ,
  aL as aK,
  gr as aL,
  lu as aM,
  Pn as aN,
  ta as aO,
  Re as aP,
  Dn as aQ,
  ea as aR,
  ka as aS,
  ma as aT,
  tt as aU,
  Qt as aV,
  Rh as aW,
  Eh as aX,
  Ve as aY,
  HH as aZ,
  GH as a_,
  no as aa,
  L7 as ab,
  Z1 as ac,
  c7 as ad,
  F7 as ae,
  cp as af,
  G1 as ag,
  V1 as ah,
  X1 as ai,
  H1 as aj,
  G7 as ak,
  Og as al,
  GB as am,
  O9 as an,
  JV as ao,
  PB as ap,
  QB as aq,
  Tg as ar,
  aU as as,
  SB as at,
  EB as au,
  VB as av,
  Y0 as aw,
  Pa as ax,
  Va as ay,
  Ph as az,
  Ke as b,
  nq as b$,
  cr as b0,
  Le as b1,
  _h as b2,
  Ah as b3,
  Er as b4,
  De as b5,
  be as b6,
  ht as b7,
  mt as b8,
  zt as b9,
  gee as bA,
  Kn as bB,
  Nc as bC,
  Ec as bD,
  SX as bE,
  Tt as bF,
  Nu as bG,
  xz as bH,
  Sz as bI,
  tk as bJ,
  rk as bK,
  mk as bL,
  _u as bM,
  bk as bN,
  $z as bO,
  Bz as bP,
  Vz as bQ,
  Hz as bR,
  zz as bS,
  qg as bT,
  qz as bU,
  Ck as bV,
  Gz as bW,
  Wz as bX,
  Qz as bY,
  eq as bZ,
  tq as b_,
  Nt as ba,
  Ru as bb,
  rt as bc,
  bt as bd,
  Ia as be,
  re as bf,
  le as bg,
  Je as bh,
  Pq as bi,
  kn as bj,
  ox as bk,
  Bs as bl,
  En as bm,
  Or as bn,
  vt as bo,
  ad as bp,
  Jg as bq,
  wq as br,
  mee as bs,
  Vn as bt,
  Ee as bu,
  Pe as bv,
  bee as bw,
  vb as bx,
  hee as by,
  fee as bz,
  je as c,
  SV as c$,
  rq as c0,
  wk as c1,
  iq as c2,
  pq as c3,
  oq as c4,
  cq as c5,
  Dl as c6,
  xq as c7,
  Oq as c8,
  Kq as c9,
  NG as cA,
  Fk as cB,
  DG as cC,
  $G as cD,
  UG as cE,
  zm as cF,
  KG as cG,
  uq as cH,
  Gg as cI,
  pb as cJ,
  YG as cK,
  JG as cL,
  Qk as cM,
  hW as cN,
  OY as cO,
  Lg as cP,
  sk as cQ,
  hs as cR,
  HG as cS,
  dee as cT,
  pV as cU,
  mV as cV,
  hV as cW,
  gV as cX,
  bV as cY,
  vV as cZ,
  CV as c_,
  qq as ca,
  Qq as cb,
  tG as cc,
  aG as cd,
  sG as ce,
  rG as cf,
  iG as cg,
  cG as ch,
  dG as ci,
  pG as cj,
  oee as ck,
  ab as cl,
  gG as cm,
  hG as cn,
  bG as co,
  vG as cp,
  CG as cq,
  SG as cr,
  yG as cs,
  Bk as ct,
  wG as cu,
  IG as cv,
  fx as cw,
  PG as cx,
  AG as cy,
  Nk as cz,
  pe as d,
  eI as d$,
  wV as d0,
  IK as d1,
  NH as d2,
  DH as d3,
  MH as d4,
  FH as d5,
  $H as d6,
  XW as d7,
  ki as d8,
  Mr as d9,
  uV as dA,
  ga as dB,
  mK as dC,
  Ag as dD,
  ZU as dE,
  VW as dF,
  UW as dG,
  MY as dH,
  AY as dI,
  HY as dJ,
  XY as dK,
  UY as dL,
  pee as dM,
  yb as dN,
  YY as dO,
  nJ as dP,
  WT as dQ,
  aJ as dR,
  rJ as dS,
  No as dT,
  cJ as dU,
  Ax as dV,
  oJ as dW,
  JT as dX,
  Cl as dY,
  fW as dZ,
  uJ as d_,
  xO as da,
  bl as db,
  LW as dc,
  zg as dd,
  Op as de,
  KO as df,
  aq as dg,
  qT as dh,
  kY as di,
  id as dj,
  GW as dk,
  sb as dl,
  xp as dm,
  oo as dn,
  Gk as dp,
  ln as dq,
  vl as dr,
  sq as ds,
  RY as dt,
  TY as du,
  IY as dv,
  bs as dw,
  LO as dx,
  $s as dy,
  uK as dz,
  $g as e,
  PZ as e$,
  pJ as e0,
  sI as e1,
  vJ as e2,
  yJ as e3,
  oI as e4,
  TJ as e5,
  iI as e6,
  xJ as e7,
  QT as e8,
  tI as e9,
  Bx as eA,
  ZJ as eB,
  QJ as eC,
  mI as eD,
  Sb as eE,
  rZ as eF,
  iZ as eG,
  oZ as eH,
  lZ as eI,
  dZ as eJ,
  uZ as eK,
  fZ as eL,
  mZ as eM,
  hZ as eN,
  gZ as eO,
  qi as eP,
  bZ as eQ,
  Rd as eR,
  fI as eS,
  yZ as eT,
  CZ as eU,
  kZ as eV,
  xZ as eW,
  SZ as eX,
  vZ as eY,
  yI as eZ,
  vee as e_,
  nI as ea,
  fJ as eb,
  SJ as ec,
  gJ as ed,
  lI as ee,
  ZT as ef,
  rI as eg,
  Cb as eh,
  Mc as ei,
  xb as ej,
  Bn as ek,
  Mu as el,
  _J as em,
  cI as en,
  NJ as eo,
  AJ as ep,
  FJ as eq,
  jJ as er,
  XO as es,
  VJ as et,
  HJ as eu,
  qJ as ev,
  WJ as ew,
  pI as ex,
  XJ as ey,
  JJ as ez,
  j as f,
  KQ as f$,
  RZ as f0,
  AZ as f1,
  hI as f2,
  Rp as f3,
  LZ as f4,
  DZ as f5,
  pZ as f6,
  CI as f7,
  yee as f8,
  jZ as f9,
  vQ as fA,
  _Q as fB,
  kI as fC,
  xQ as fD,
  SQ as fE,
  wQ as fF,
  II as fG,
  OQ as fH,
  TQ as fI,
  kQ as fJ,
  IQ as fK,
  EQ as fL,
  AQ as fM,
  PI as fN,
  _I as fO,
  MQ as fP,
  $Q as fQ,
  LI as fR,
  AI as fS,
  NI as fT,
  DI as fU,
  MI as fV,
  FI as fW,
  wb as fX,
  EI as fY,
  od as fZ,
  VQ as f_,
  BZ as fa,
  KZ as fb,
  bI as fc,
  SI as fd,
  wI as fe,
  GZ as ff,
  WZ as fg,
  XZ as fh,
  Ap as fi,
  aQ as fj,
  ZZ as fk,
  QZ as fl,
  eQ as fm,
  tQ as fn,
  iQ as fo,
  lQ as fp,
  lee as fq,
  GT as fr,
  uee as fs,
  cQ as ft,
  dQ as fu,
  uQ as fv,
  pQ as fw,
  OI as fx,
  mQ as fy,
  hQ as fz,
  xe as g,
  BI as g0,
  Cee as g1,
  $I as g2,
  GQ as g3,
  xee as g4,
  Ob as g5,
  Mk as g6,
  jW as g7,
  WW as g8,
  _W as g9,
  cee as ga,
  see as gb,
  La as gc,
  Nn as h,
  et as i,
  Et as j,
  St as k,
  ba as l,
  _e as m,
  mr as n,
  ct as o,
  Qn as p,
  Dt as q,
  Wb as r,
  Lt as s,
  zC as t,
  de as u,
  Vh as v,
  Ui as w,
  X7 as x,
  B1 as y,
  $j as z
};
//# sourceMappingURL=index-D49mqW_n.js.map
